function Zk(e, t) {
  for (var r = 0; r < t.length; r++) {
    const a = t[r];
    if (typeof a != "string" && !Array.isArray(a)) {
      for (const c in a)
        if (c !== "default" && !(c in e)) {
          const h = Object.getOwnPropertyDescriptor(a, c);
          h &&
            Object.defineProperty(
              e,
              c,
              h.get ? h : { enumerable: !0, get: () => a[c] },
            );
        }
    }
  }
  return Object.freeze(
    Object.defineProperty(e, Symbol.toStringTag, { value: "Module" }),
  );
}
(function () {
  const t = document.createElement("link").relList;
  if (t && t.supports && t.supports("modulepreload")) return;
  for (const c of document.querySelectorAll('link[rel="modulepreload"]')) a(c);
  new MutationObserver((c) => {
    for (const h of c)
      if (h.type === "childList")
        for (const p of h.addedNodes)
          p.tagName === "LINK" && p.rel === "modulepreload" && a(p);
  }).observe(document, { childList: !0, subtree: !0 });
  function r(c) {
    const h = {};
    return (
      c.integrity && (h.integrity = c.integrity),
      c.referrerPolicy && (h.referrerPolicy = c.referrerPolicy),
      c.crossOrigin === "use-credentials"
        ? (h.credentials = "include")
        : c.crossOrigin === "anonymous"
        ? (h.credentials = "omit")
        : (h.credentials = "same-origin"),
      h
    );
  }
  function a(c) {
    if (c.ep) return;
    c.ep = !0;
    const h = r(c);
    fetch(c.href, h);
  }
})();
function J0(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default")
    ? e.default
    : e;
}
var ew = { exports: {} },
  Vu = {},
  tw = { exports: {} },
  He = {};
/**
 * @license React
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ss = Symbol.for("react.element"),
  Kk = Symbol.for("react.portal"),
  Qk = Symbol.for("react.fragment"),
  Jk = Symbol.for("react.strict_mode"),
  eA = Symbol.for("react.profiler"),
  tA = Symbol.for("react.provider"),
  rA = Symbol.for("react.context"),
  nA = Symbol.for("react.forward_ref"),
  iA = Symbol.for("react.suspense"),
  aA = Symbol.for("react.memo"),
  oA = Symbol.for("react.lazy"),
  hm = Symbol.iterator;
function sA(e) {
  return e === null || typeof e != "object"
    ? null
    : ((e = (hm && e[hm]) || e["@@iterator"]),
      typeof e == "function" ? e : null);
}
var rw = {
    isMounted: function () {
      return !1;
    },
    enqueueForceUpdate: function () {},
    enqueueReplaceState: function () {},
    enqueueSetState: function () {},
  },
  nw = Object.assign,
  iw = {};
function Xa(e, t, r) {
  (this.props = e),
    (this.context = t),
    (this.refs = iw),
    (this.updater = r || rw);
}
Xa.prototype.isReactComponent = {};
Xa.prototype.setState = function (e, t) {
  if (typeof e != "object" && typeof e != "function" && e != null)
    throw Error(
      "setState(...): takes an object of state variables to update or a function which returns an object of state variables.",
    );
  this.updater.enqueueSetState(this, e, t, "setState");
};
Xa.prototype.forceUpdate = function (e) {
  this.updater.enqueueForceUpdate(this, e, "forceUpdate");
};
function aw() {}
aw.prototype = Xa.prototype;
function cp(e, t, r) {
  (this.props = e),
    (this.context = t),
    (this.refs = iw),
    (this.updater = r || rw);
}
var up = (cp.prototype = new aw());
up.constructor = cp;
nw(up, Xa.prototype);
up.isPureReactComponent = !0;
var fm = Array.isArray,
  ow = Object.prototype.hasOwnProperty,
  dp = { current: null },
  sw = { key: !0, ref: !0, __self: !0, __source: !0 };
function lw(e, t, r) {
  var a,
    c = {},
    h = null,
    p = null;
  if (t != null)
    for (a in (t.ref !== void 0 && (p = t.ref),
    t.key !== void 0 && (h = "" + t.key),
    t))
      ow.call(t, a) && !sw.hasOwnProperty(a) && (c[a] = t[a]);
  var v = arguments.length - 2;
  if (v === 1) c.children = r;
  else if (1 < v) {
    for (var b = Array(v), P = 0; P < v; P++) b[P] = arguments[P + 2];
    c.children = b;
  }
  if (e && e.defaultProps)
    for (a in ((v = e.defaultProps), v)) c[a] === void 0 && (c[a] = v[a]);
  return {
    $$typeof: ss,
    type: e,
    key: h,
    ref: p,
    props: c,
    _owner: dp.current,
  };
}
function lA(e, t) {
  return {
    $$typeof: ss,
    type: e.type,
    key: t,
    ref: e.ref,
    props: e.props,
    _owner: e._owner,
  };
}
function hp(e) {
  return typeof e == "object" && e !== null && e.$$typeof === ss;
}
function cA(e) {
  var t = { "=": "=0", ":": "=2" };
  return (
    "$" +
    e.replace(/[=:]/g, function (r) {
      return t[r];
    })
  );
}
var pm = /\/+/g;
function Wd(e, t) {
  return typeof e == "object" && e !== null && e.key != null
    ? cA("" + e.key)
    : t.toString(36);
}
function hl(e, t, r, a, c) {
  var h = typeof e;
  (h === "undefined" || h === "boolean") && (e = null);
  var p = !1;
  if (e === null) p = !0;
  else
    switch (h) {
      case "string":
      case "number":
        p = !0;
        break;
      case "object":
        switch (e.$$typeof) {
          case ss:
          case Kk:
            p = !0;
        }
    }
  if (p)
    return (
      (p = e),
      (c = c(p)),
      (e = a === "" ? "." + Wd(p, 0) : a),
      fm(c)
        ? ((r = ""),
          e != null && (r = e.replace(pm, "$&/") + "/"),
          hl(c, t, r, "", function (P) {
            return P;
          }))
        : c != null &&
          (hp(c) &&
            (c = lA(
              c,
              r +
                (!c.key || (p && p.key === c.key)
                  ? ""
                  : ("" + c.key).replace(pm, "$&/") + "/") +
                e,
            )),
          t.push(c)),
      1
    );
  if (((p = 0), (a = a === "" ? "." : a + ":"), fm(e)))
    for (var v = 0; v < e.length; v++) {
      h = e[v];
      var b = a + Wd(h, v);
      p += hl(h, t, r, b, c);
    }
  else if (((b = sA(e)), typeof b == "function"))
    for (e = b.call(e), v = 0; !(h = e.next()).done; )
      (h = h.value), (b = a + Wd(h, v++)), (p += hl(h, t, r, b, c));
  else if (h === "object")
    throw (
      ((t = String(e)),
      Error(
        "Objects are not valid as a React child (found: " +
          (t === "[object Object]"
            ? "object with keys {" + Object.keys(e).join(", ") + "}"
            : t) +
          "). If you meant to render a collection of children, use an array instead.",
      ))
    );
  return p;
}
function Es(e, t, r) {
  if (e == null) return e;
  var a = [],
    c = 0;
  return (
    hl(e, a, "", "", function (h) {
      return t.call(r, h, c++);
    }),
    a
  );
}
function uA(e) {
  if (e._status === -1) {
    var t = e._result;
    (t = t()),
      t.then(
        function (r) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 1), (e._result = r));
        },
        function (r) {
          (e._status === 0 || e._status === -1) &&
            ((e._status = 2), (e._result = r));
        },
      ),
      e._status === -1 && ((e._status = 0), (e._result = t));
  }
  if (e._status === 1) return e._result.default;
  throw e._result;
}
var Zt = { current: null },
  fl = { transition: null },
  dA = {
    ReactCurrentDispatcher: Zt,
    ReactCurrentBatchConfig: fl,
    ReactCurrentOwner: dp,
  };
He.Children = {
  map: Es,
  forEach: function (e, t, r) {
    Es(
      e,
      function () {
        t.apply(this, arguments);
      },
      r,
    );
  },
  count: function (e) {
    var t = 0;
    return (
      Es(e, function () {
        t++;
      }),
      t
    );
  },
  toArray: function (e) {
    return (
      Es(e, function (t) {
        return t;
      }) || []
    );
  },
  only: function (e) {
    if (!hp(e))
      throw Error(
        "React.Children.only expected to receive a single React element child.",
      );
    return e;
  },
};
He.Component = Xa;
He.Fragment = Qk;
He.Profiler = eA;
He.PureComponent = cp;
He.StrictMode = Jk;
He.Suspense = iA;
He.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = dA;
He.cloneElement = function (e, t, r) {
  if (e == null)
    throw Error(
      "React.cloneElement(...): The argument must be a React element, but you passed " +
        e +
        ".",
    );
  var a = nw({}, e.props),
    c = e.key,
    h = e.ref,
    p = e._owner;
  if (t != null) {
    if (
      (t.ref !== void 0 && ((h = t.ref), (p = dp.current)),
      t.key !== void 0 && (c = "" + t.key),
      e.type && e.type.defaultProps)
    )
      var v = e.type.defaultProps;
    for (b in t)
      ow.call(t, b) &&
        !sw.hasOwnProperty(b) &&
        (a[b] = t[b] === void 0 && v !== void 0 ? v[b] : t[b]);
  }
  var b = arguments.length - 2;
  if (b === 1) a.children = r;
  else if (1 < b) {
    v = Array(b);
    for (var P = 0; P < b; P++) v[P] = arguments[P + 2];
    a.children = v;
  }
  return { $$typeof: ss, type: e.type, key: c, ref: h, props: a, _owner: p };
};
He.createContext = function (e) {
  return (
    (e = {
      $$typeof: rA,
      _currentValue: e,
      _currentValue2: e,
      _threadCount: 0,
      Provider: null,
      Consumer: null,
      _defaultValue: null,
      _globalName: null,
    }),
    (e.Provider = { $$typeof: tA, _context: e }),
    (e.Consumer = e)
  );
};
He.createElement = lw;
He.createFactory = function (e) {
  var t = lw.bind(null, e);
  return (t.type = e), t;
};
He.createRef = function () {
  return { current: null };
};
He.forwardRef = function (e) {
  return { $$typeof: nA, render: e };
};
He.isValidElement = hp;
He.lazy = function (e) {
  return { $$typeof: oA, _payload: { _status: -1, _result: e }, _init: uA };
};
He.memo = function (e, t) {
  return { $$typeof: aA, type: e, compare: t === void 0 ? null : t };
};
He.startTransition = function (e) {
  var t = fl.transition;
  fl.transition = {};
  try {
    e();
  } finally {
    fl.transition = t;
  }
};
He.unstable_act = function () {
  throw Error("act(...) is not supported in production builds of React.");
};
He.useCallback = function (e, t) {
  return Zt.current.useCallback(e, t);
};
He.useContext = function (e) {
  return Zt.current.useContext(e);
};
He.useDebugValue = function () {};
He.useDeferredValue = function (e) {
  return Zt.current.useDeferredValue(e);
};
He.useEffect = function (e, t) {
  return Zt.current.useEffect(e, t);
};
He.useId = function () {
  return Zt.current.useId();
};
He.useImperativeHandle = function (e, t, r) {
  return Zt.current.useImperativeHandle(e, t, r);
};
He.useInsertionEffect = function (e, t) {
  return Zt.current.useInsertionEffect(e, t);
};
He.useLayoutEffect = function (e, t) {
  return Zt.current.useLayoutEffect(e, t);
};
He.useMemo = function (e, t) {
  return Zt.current.useMemo(e, t);
};
He.useReducer = function (e, t, r) {
  return Zt.current.useReducer(e, t, r);
};
He.useRef = function (e) {
  return Zt.current.useRef(e);
};
He.useState = function (e) {
  return Zt.current.useState(e);
};
He.useSyncExternalStore = function (e, t, r) {
  return Zt.current.useSyncExternalStore(e, t, r);
};
He.useTransition = function () {
  return Zt.current.useTransition();
};
He.version = "18.2.0";
tw.exports = He;
var j = tw.exports;
const q = J0(j),
  fp = Zk({ __proto__: null, default: q }, [j]);
/**
 * @license React
 * react-jsx-runtime.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var hA = j,
  fA = Symbol.for("react.element"),
  pA = Symbol.for("react.fragment"),
  gA = Object.prototype.hasOwnProperty,
  mA = hA.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,
  vA = { key: !0, ref: !0, __self: !0, __source: !0 };
function cw(e, t, r) {
  var a,
    c = {},
    h = null,
    p = null;
  r !== void 0 && (h = "" + r),
    t.key !== void 0 && (h = "" + t.key),
    t.ref !== void 0 && (p = t.ref);
  for (a in t) gA.call(t, a) && !vA.hasOwnProperty(a) && (c[a] = t[a]);
  if (e && e.defaultProps)
    for (a in ((t = e.defaultProps), t)) c[a] === void 0 && (c[a] = t[a]);
  return {
    $$typeof: fA,
    type: e,
    key: h,
    ref: p,
    props: c,
    _owner: mA.current,
  };
}
Vu.Fragment = pA;
Vu.jsx = cw;
Vu.jsxs = cw;
ew.exports = Vu;
var Oe = ew.exports,
  Vh = {},
  uw = { exports: {} },
  pr = {},
  dw = { exports: {} },
  hw = {};
/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ (function (e) {
  function t(te, pe) {
    var Se = te.length;
    te.push(pe);
    e: for (; 0 < Se; ) {
      var ke = (Se - 1) >>> 1,
        Ce = te[ke];
      if (0 < c(Ce, pe)) (te[ke] = pe), (te[Se] = Ce), (Se = ke);
      else break e;
    }
  }
  function r(te) {
    return te.length === 0 ? null : te[0];
  }
  function a(te) {
    if (te.length === 0) return null;
    var pe = te[0],
      Se = te.pop();
    if (Se !== pe) {
      te[0] = Se;
      e: for (var ke = 0, Ce = te.length, ze = Ce >>> 1; ke < ze; ) {
        var $e = 2 * (ke + 1) - 1,
          Qe = te[$e],
          Be = $e + 1,
          Ue = te[Be];
        if (0 > c(Qe, Se))
          Be < Ce && 0 > c(Ue, Qe)
            ? ((te[ke] = Ue), (te[Be] = Se), (ke = Be))
            : ((te[ke] = Qe), (te[$e] = Se), (ke = $e));
        else if (Be < Ce && 0 > c(Ue, Se))
          (te[ke] = Ue), (te[Be] = Se), (ke = Be);
        else break e;
      }
    }
    return pe;
  }
  function c(te, pe) {
    var Se = te.sortIndex - pe.sortIndex;
    return Se !== 0 ? Se : te.id - pe.id;
  }
  if (typeof performance == "object" && typeof performance.now == "function") {
    var h = performance;
    e.unstable_now = function () {
      return h.now();
    };
  } else {
    var p = Date,
      v = p.now();
    e.unstable_now = function () {
      return p.now() - v;
    };
  }
  var b = [],
    P = [],
    k = 1,
    R = null,
    L = 3,
    z = !1,
    M = !1,
    F = !1,
    G = typeof setTimeout == "function" ? setTimeout : null,
    $ = typeof clearTimeout == "function" ? clearTimeout : null,
    O = typeof setImmediate < "u" ? setImmediate : null;
  typeof navigator < "u" &&
    navigator.scheduling !== void 0 &&
    navigator.scheduling.isInputPending !== void 0 &&
    navigator.scheduling.isInputPending.bind(navigator.scheduling);
  function X(te) {
    for (var pe = r(P); pe !== null; ) {
      if (pe.callback === null) a(P);
      else if (pe.startTime <= te)
        a(P), (pe.sortIndex = pe.expirationTime), t(b, pe);
      else break;
      pe = r(P);
    }
  }
  function N(te) {
    if (((F = !1), X(te), !M))
      if (r(b) !== null) (M = !0), ve(B);
      else {
        var pe = r(P);
        pe !== null && ye(N, pe.startTime - te);
      }
  }
  function B(te, pe) {
    (M = !1), F && ((F = !1), $(ee), (ee = -1)), (z = !0);
    var Se = L;
    try {
      for (
        X(pe), R = r(b);
        R !== null && (!(R.expirationTime > pe) || (te && !he()));

      ) {
        var ke = R.callback;
        if (typeof ke == "function") {
          (R.callback = null), (L = R.priorityLevel);
          var Ce = ke(R.expirationTime <= pe);
          (pe = e.unstable_now()),
            typeof Ce == "function" ? (R.callback = Ce) : R === r(b) && a(b),
            X(pe);
        } else a(b);
        R = r(b);
      }
      if (R !== null) var ze = !0;
      else {
        var $e = r(P);
        $e !== null && ye(N, $e.startTime - pe), (ze = !1);
      }
      return ze;
    } finally {
      (R = null), (L = Se), (z = !1);
    }
  }
  var U = !1,
    Q = null,
    ee = -1,
    ne = 5,
    le = -1;
  function he() {
    return !(e.unstable_now() - le < ne);
  }
  function me() {
    if (Q !== null) {
      var te = e.unstable_now();
      le = te;
      var pe = !0;
      try {
        pe = Q(!0, te);
      } finally {
        pe ? fe() : ((U = !1), (Q = null));
      }
    } else U = !1;
  }
  var fe;
  if (typeof O == "function")
    fe = function () {
      O(me);
    };
  else if (typeof MessageChannel < "u") {
    var ue = new MessageChannel(),
      oe = ue.port2;
    (ue.port1.onmessage = me),
      (fe = function () {
        oe.postMessage(null);
      });
  } else
    fe = function () {
      G(me, 0);
    };
  function ve(te) {
    (Q = te), U || ((U = !0), fe());
  }
  function ye(te, pe) {
    ee = G(function () {
      te(e.unstable_now());
    }, pe);
  }
  (e.unstable_IdlePriority = 5),
    (e.unstable_ImmediatePriority = 1),
    (e.unstable_LowPriority = 4),
    (e.unstable_NormalPriority = 3),
    (e.unstable_Profiling = null),
    (e.unstable_UserBlockingPriority = 2),
    (e.unstable_cancelCallback = function (te) {
      te.callback = null;
    }),
    (e.unstable_continueExecution = function () {
      M || z || ((M = !0), ve(B));
    }),
    (e.unstable_forceFrameRate = function (te) {
      0 > te || 125 < te
        ? console.error(
            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported",
          )
        : (ne = 0 < te ? Math.floor(1e3 / te) : 5);
    }),
    (e.unstable_getCurrentPriorityLevel = function () {
      return L;
    }),
    (e.unstable_getFirstCallbackNode = function () {
      return r(b);
    }),
    (e.unstable_next = function (te) {
      switch (L) {
        case 1:
        case 2:
        case 3:
          var pe = 3;
          break;
        default:
          pe = L;
      }
      var Se = L;
      L = pe;
      try {
        return te();
      } finally {
        L = Se;
      }
    }),
    (e.unstable_pauseExecution = function () {}),
    (e.unstable_requestPaint = function () {}),
    (e.unstable_runWithPriority = function (te, pe) {
      switch (te) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
          break;
        default:
          te = 3;
      }
      var Se = L;
      L = te;
      try {
        return pe();
      } finally {
        L = Se;
      }
    }),
    (e.unstable_scheduleCallback = function (te, pe, Se) {
      var ke = e.unstable_now();
      switch (
        (typeof Se == "object" && Se !== null
          ? ((Se = Se.delay),
            (Se = typeof Se == "number" && 0 < Se ? ke + Se : ke))
          : (Se = ke),
        te)
      ) {
        case 1:
          var Ce = -1;
          break;
        case 2:
          Ce = 250;
          break;
        case 5:
          Ce = 1073741823;
          break;
        case 4:
          Ce = 1e4;
          break;
        default:
          Ce = 5e3;
      }
      return (
        (Ce = Se + Ce),
        (te = {
          id: k++,
          callback: pe,
          priorityLevel: te,
          startTime: Se,
          expirationTime: Ce,
          sortIndex: -1,
        }),
        Se > ke
          ? ((te.sortIndex = Se),
            t(P, te),
            r(b) === null &&
              te === r(P) &&
              (F ? ($(ee), (ee = -1)) : (F = !0), ye(N, Se - ke)))
          : ((te.sortIndex = Ce), t(b, te), M || z || ((M = !0), ve(B))),
        te
      );
    }),
    (e.unstable_shouldYield = he),
    (e.unstable_wrapCallback = function (te) {
      var pe = L;
      return function () {
        var Se = L;
        L = pe;
        try {
          return te.apply(this, arguments);
        } finally {
          L = Se;
        }
      };
    });
})(hw);
dw.exports = hw;
var yA = dw.exports;
/**
 * @license React
 * react-dom.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var fw = j,
  fr = yA;
function ge(e) {
  for (
    var t = "https://reactjs.org/docs/error-decoder.html?invariant=" + e, r = 1;
    r < arguments.length;
    r++
  )
    t += "&args[]=" + encodeURIComponent(arguments[r]);
  return (
    "Minified React error #" +
    e +
    "; visit " +
    t +
    " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
  );
}
var pw = new Set(),
  Ho = {};
function Bi(e, t) {
  Ea(e, t), Ea(e + "Capture", t);
}
function Ea(e, t) {
  for (Ho[e] = t, e = 0; e < t.length; e++) pw.add(t[e]);
}
var Pn = !(
    typeof window > "u" ||
    typeof window.document > "u" ||
    typeof window.document.createElement > "u"
  ),
  Gh = Object.prototype.hasOwnProperty,
  xA =
    /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
  gm = {},
  mm = {};
function bA(e) {
  return Gh.call(mm, e)
    ? !0
    : Gh.call(gm, e)
    ? !1
    : xA.test(e)
    ? (mm[e] = !0)
    : ((gm[e] = !0), !1);
}
function wA(e, t, r, a) {
  if (r !== null && r.type === 0) return !1;
  switch (typeof t) {
    case "function":
    case "symbol":
      return !0;
    case "boolean":
      return a
        ? !1
        : r !== null
        ? !r.acceptsBooleans
        : ((e = e.toLowerCase().slice(0, 5)), e !== "data-" && e !== "aria-");
    default:
      return !1;
  }
}
function SA(e, t, r, a) {
  if (t === null || typeof t > "u" || wA(e, t, r, a)) return !0;
  if (a) return !1;
  if (r !== null)
    switch (r.type) {
      case 3:
        return !t;
      case 4:
        return t === !1;
      case 5:
        return isNaN(t);
      case 6:
        return isNaN(t) || 1 > t;
    }
  return !1;
}
function Kt(e, t, r, a, c, h, p) {
  (this.acceptsBooleans = t === 2 || t === 3 || t === 4),
    (this.attributeName = a),
    (this.attributeNamespace = c),
    (this.mustUseProperty = r),
    (this.propertyName = e),
    (this.type = t),
    (this.sanitizeURL = h),
    (this.removeEmptyString = p);
}
var Mt = {};
"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
  .split(" ")
  .forEach(function (e) {
    Mt[e] = new Kt(e, 0, !1, e, null, !1, !1);
  });
[
  ["acceptCharset", "accept-charset"],
  ["className", "class"],
  ["htmlFor", "for"],
  ["httpEquiv", "http-equiv"],
].forEach(function (e) {
  var t = e[0];
  Mt[t] = new Kt(t, 1, !1, e[1], null, !1, !1);
});
["contentEditable", "draggable", "spellCheck", "value"].forEach(function (e) {
  Mt[e] = new Kt(e, 2, !1, e.toLowerCase(), null, !1, !1);
});
[
  "autoReverse",
  "externalResourcesRequired",
  "focusable",
  "preserveAlpha",
].forEach(function (e) {
  Mt[e] = new Kt(e, 2, !1, e, null, !1, !1);
});
"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
  .split(" ")
  .forEach(function (e) {
    Mt[e] = new Kt(e, 3, !1, e.toLowerCase(), null, !1, !1);
  });
["checked", "multiple", "muted", "selected"].forEach(function (e) {
  Mt[e] = new Kt(e, 3, !0, e, null, !1, !1);
});
["capture", "download"].forEach(function (e) {
  Mt[e] = new Kt(e, 4, !1, e, null, !1, !1);
});
["cols", "rows", "size", "span"].forEach(function (e) {
  Mt[e] = new Kt(e, 6, !1, e, null, !1, !1);
});
["rowSpan", "start"].forEach(function (e) {
  Mt[e] = new Kt(e, 5, !1, e.toLowerCase(), null, !1, !1);
});
var pp = /[\-:]([a-z])/g;
function gp(e) {
  return e[1].toUpperCase();
}
"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
  .split(" ")
  .forEach(function (e) {
    var t = e.replace(pp, gp);
    Mt[t] = new Kt(t, 1, !1, e, null, !1, !1);
  });
"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
  .split(" ")
  .forEach(function (e) {
    var t = e.replace(pp, gp);
    Mt[t] = new Kt(t, 1, !1, e, "http://www.w3.org/1999/xlink", !1, !1);
  });
["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
  var t = e.replace(pp, gp);
  Mt[t] = new Kt(t, 1, !1, e, "http://www.w3.org/XML/1998/namespace", !1, !1);
});
["tabIndex", "crossOrigin"].forEach(function (e) {
  Mt[e] = new Kt(e, 1, !1, e.toLowerCase(), null, !1, !1);
});
Mt.xlinkHref = new Kt(
  "xlinkHref",
  1,
  !1,
  "xlink:href",
  "http://www.w3.org/1999/xlink",
  !0,
  !1,
);
["src", "href", "action", "formAction"].forEach(function (e) {
  Mt[e] = new Kt(e, 1, !1, e.toLowerCase(), null, !0, !0);
});
function mp(e, t, r, a) {
  var c = Mt.hasOwnProperty(t) ? Mt[t] : null;
  (c !== null
    ? c.type !== 0
    : a ||
      !(2 < t.length) ||
      (t[0] !== "o" && t[0] !== "O") ||
      (t[1] !== "n" && t[1] !== "N")) &&
    (SA(t, r, c, a) && (r = null),
    a || c === null
      ? bA(t) && (r === null ? e.removeAttribute(t) : e.setAttribute(t, "" + r))
      : c.mustUseProperty
      ? (e[c.propertyName] = r === null ? (c.type === 3 ? !1 : "") : r)
      : ((t = c.attributeName),
        (a = c.attributeNamespace),
        r === null
          ? e.removeAttribute(t)
          : ((c = c.type),
            (r = c === 3 || (c === 4 && r === !0) ? "" : "" + r),
            a ? e.setAttributeNS(a, t, r) : e.setAttribute(t, r))));
}
var En = fw.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
  Rs = Symbol.for("react.element"),
  aa = Symbol.for("react.portal"),
  oa = Symbol.for("react.fragment"),
  vp = Symbol.for("react.strict_mode"),
  Uh = Symbol.for("react.profiler"),
  gw = Symbol.for("react.provider"),
  mw = Symbol.for("react.context"),
  yp = Symbol.for("react.forward_ref"),
  qh = Symbol.for("react.suspense"),
  Zh = Symbol.for("react.suspense_list"),
  xp = Symbol.for("react.memo"),
  Hn = Symbol.for("react.lazy"),
  vw = Symbol.for("react.offscreen"),
  vm = Symbol.iterator;
function io(e) {
  return e === null || typeof e != "object"
    ? null
    : ((e = (vm && e[vm]) || e["@@iterator"]),
      typeof e == "function" ? e : null);
}
var dt = Object.assign,
  Vd;
function Po(e) {
  if (Vd === void 0)
    try {
      throw Error();
    } catch (r) {
      var t = r.stack.trim().match(/\n( *(at )?)/);
      Vd = (t && t[1]) || "";
    }
  return (
    `
` +
    Vd +
    e
  );
}
var Gd = !1;
function Ud(e, t) {
  if (!e || Gd) return "";
  Gd = !0;
  var r = Error.prepareStackTrace;
  Error.prepareStackTrace = void 0;
  try {
    if (t)
      if (
        ((t = function () {
          throw Error();
        }),
        Object.defineProperty(t.prototype, "props", {
          set: function () {
            throw Error();
          },
        }),
        typeof Reflect == "object" && Reflect.construct)
      ) {
        try {
          Reflect.construct(t, []);
        } catch (P) {
          var a = P;
        }
        Reflect.construct(e, [], t);
      } else {
        try {
          t.call();
        } catch (P) {
          a = P;
        }
        e.call(t.prototype);
      }
    else {
      try {
        throw Error();
      } catch (P) {
        a = P;
      }
      e();
    }
  } catch (P) {
    if (P && a && typeof P.stack == "string") {
      for (
        var c = P.stack.split(`
`),
          h = a.stack.split(`
`),
          p = c.length - 1,
          v = h.length - 1;
        1 <= p && 0 <= v && c[p] !== h[v];

      )
        v--;
      for (; 1 <= p && 0 <= v; p--, v--)
        if (c[p] !== h[v]) {
          if (p !== 1 || v !== 1)
            do
              if ((p--, v--, 0 > v || c[p] !== h[v])) {
                var b =
                  `
` + c[p].replace(" at new ", " at ");
                return (
                  e.displayName &&
                    b.includes("<anonymous>") &&
                    (b = b.replace("<anonymous>", e.displayName)),
                  b
                );
              }
            while (1 <= p && 0 <= v);
          break;
        }
    }
  } finally {
    (Gd = !1), (Error.prepareStackTrace = r);
  }
  return (e = e ? e.displayName || e.name : "") ? Po(e) : "";
}
function PA(e) {
  switch (e.tag) {
    case 5:
      return Po(e.type);
    case 16:
      return Po("Lazy");
    case 13:
      return Po("Suspense");
    case 19:
      return Po("SuspenseList");
    case 0:
    case 2:
    case 15:
      return (e = Ud(e.type, !1)), e;
    case 11:
      return (e = Ud(e.type.render, !1)), e;
    case 1:
      return (e = Ud(e.type, !0)), e;
    default:
      return "";
  }
}
function Kh(e) {
  if (e == null) return null;
  if (typeof e == "function") return e.displayName || e.name || null;
  if (typeof e == "string") return e;
  switch (e) {
    case oa:
      return "Fragment";
    case aa:
      return "Portal";
    case Uh:
      return "Profiler";
    case vp:
      return "StrictMode";
    case qh:
      return "Suspense";
    case Zh:
      return "SuspenseList";
  }
  if (typeof e == "object")
    switch (e.$$typeof) {
      case mw:
        return (e.displayName || "Context") + ".Consumer";
      case gw:
        return (e._context.displayName || "Context") + ".Provider";
      case yp:
        var t = e.render;
        return (
          (e = e.displayName),
          e ||
            ((e = t.displayName || t.name || ""),
            (e = e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef")),
          e
        );
      case xp:
        return (
          (t = e.displayName || null), t !== null ? t : Kh(e.type) || "Memo"
        );
      case Hn:
        (t = e._payload), (e = e._init);
        try {
          return Kh(e(t));
        } catch {}
    }
  return null;
}
function _A(e) {
  var t = e.type;
  switch (e.tag) {
    case 24:
      return "Cache";
    case 9:
      return (t.displayName || "Context") + ".Consumer";
    case 10:
      return (t._context.displayName || "Context") + ".Provider";
    case 18:
      return "DehydratedFragment";
    case 11:
      return (
        (e = t.render),
        (e = e.displayName || e.name || ""),
        t.displayName || (e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef")
      );
    case 7:
      return "Fragment";
    case 5:
      return t;
    case 4:
      return "Portal";
    case 3:
      return "Root";
    case 6:
      return "Text";
    case 16:
      return Kh(t);
    case 8:
      return t === vp ? "StrictMode" : "Mode";
    case 22:
      return "Offscreen";
    case 12:
      return "Profiler";
    case 21:
      return "Scope";
    case 13:
      return "Suspense";
    case 19:
      return "SuspenseList";
    case 25:
      return "TracingMarker";
    case 1:
    case 0:
    case 17:
    case 2:
    case 14:
    case 15:
      if (typeof t == "function") return t.displayName || t.name || null;
      if (typeof t == "string") return t;
  }
  return null;
}
function ni(e) {
  switch (typeof e) {
    case "boolean":
    case "number":
    case "string":
    case "undefined":
      return e;
    case "object":
      return e;
    default:
      return "";
  }
}
function yw(e) {
  var t = e.type;
  return (
    (e = e.nodeName) &&
    e.toLowerCase() === "input" &&
    (t === "checkbox" || t === "radio")
  );
}
function CA(e) {
  var t = yw(e) ? "checked" : "value",
    r = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
    a = "" + e[t];
  if (
    !e.hasOwnProperty(t) &&
    typeof r < "u" &&
    typeof r.get == "function" &&
    typeof r.set == "function"
  ) {
    var c = r.get,
      h = r.set;
    return (
      Object.defineProperty(e, t, {
        configurable: !0,
        get: function () {
          return c.call(this);
        },
        set: function (p) {
          (a = "" + p), h.call(this, p);
        },
      }),
      Object.defineProperty(e, t, { enumerable: r.enumerable }),
      {
        getValue: function () {
          return a;
        },
        setValue: function (p) {
          a = "" + p;
        },
        stopTracking: function () {
          (e._valueTracker = null), delete e[t];
        },
      }
    );
  }
}
function Ls(e) {
  e._valueTracker || (e._valueTracker = CA(e));
}
function xw(e) {
  if (!e) return !1;
  var t = e._valueTracker;
  if (!t) return !0;
  var r = t.getValue(),
    a = "";
  return (
    e && (a = yw(e) ? (e.checked ? "true" : "false") : e.value),
    (e = a),
    e !== r ? (t.setValue(e), !0) : !1
  );
}
function Rl(e) {
  if (((e = e || (typeof document < "u" ? document : void 0)), typeof e > "u"))
    return null;
  try {
    return e.activeElement || e.body;
  } catch {
    return e.body;
  }
}
function Qh(e, t) {
  var r = t.checked;
  return dt({}, t, {
    defaultChecked: void 0,
    defaultValue: void 0,
    value: void 0,
    checked: r ?? e._wrapperState.initialChecked,
  });
}
function ym(e, t) {
  var r = t.defaultValue == null ? "" : t.defaultValue,
    a = t.checked != null ? t.checked : t.defaultChecked;
  (r = ni(t.value != null ? t.value : r)),
    (e._wrapperState = {
      initialChecked: a,
      initialValue: r,
      controlled:
        t.type === "checkbox" || t.type === "radio"
          ? t.checked != null
          : t.value != null,
    });
}
function bw(e, t) {
  (t = t.checked), t != null && mp(e, "checked", t, !1);
}
function Jh(e, t) {
  bw(e, t);
  var r = ni(t.value),
    a = t.type;
  if (r != null)
    a === "number"
      ? ((r === 0 && e.value === "") || e.value != r) && (e.value = "" + r)
      : e.value !== "" + r && (e.value = "" + r);
  else if (a === "submit" || a === "reset") {
    e.removeAttribute("value");
    return;
  }
  t.hasOwnProperty("value")
    ? ef(e, t.type, r)
    : t.hasOwnProperty("defaultValue") && ef(e, t.type, ni(t.defaultValue)),
    t.checked == null &&
      t.defaultChecked != null &&
      (e.defaultChecked = !!t.defaultChecked);
}
function xm(e, t, r) {
  if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
    var a = t.type;
    if (
      !(
        (a !== "submit" && a !== "reset") ||
        (t.value !== void 0 && t.value !== null)
      )
    )
      return;
    (t = "" + e._wrapperState.initialValue),
      r || t === e.value || (e.value = t),
      (e.defaultValue = t);
  }
  (r = e.name),
    r !== "" && (e.name = ""),
    (e.defaultChecked = !!e._wrapperState.initialChecked),
    r !== "" && (e.name = r);
}
function ef(e, t, r) {
  (t !== "number" || Rl(e.ownerDocument) !== e) &&
    (r == null
      ? (e.defaultValue = "" + e._wrapperState.initialValue)
      : e.defaultValue !== "" + r && (e.defaultValue = "" + r));
}
var _o = Array.isArray;
function xa(e, t, r, a) {
  if (((e = e.options), t)) {
    t = {};
    for (var c = 0; c < r.length; c++) t["$" + r[c]] = !0;
    for (r = 0; r < e.length; r++)
      (c = t.hasOwnProperty("$" + e[r].value)),
        e[r].selected !== c && (e[r].selected = c),
        c && a && (e[r].defaultSelected = !0);
  } else {
    for (r = "" + ni(r), t = null, c = 0; c < e.length; c++) {
      if (e[c].value === r) {
        (e[c].selected = !0), a && (e[c].defaultSelected = !0);
        return;
      }
      t !== null || e[c].disabled || (t = e[c]);
    }
    t !== null && (t.selected = !0);
  }
}
function tf(e, t) {
  if (t.dangerouslySetInnerHTML != null) throw Error(ge(91));
  return dt({}, t, {
    value: void 0,
    defaultValue: void 0,
    children: "" + e._wrapperState.initialValue,
  });
}
function bm(e, t) {
  var r = t.value;
  if (r == null) {
    if (((r = t.children), (t = t.defaultValue), r != null)) {
      if (t != null) throw Error(ge(92));
      if (_o(r)) {
        if (1 < r.length) throw Error(ge(93));
        r = r[0];
      }
      t = r;
    }
    t == null && (t = ""), (r = t);
  }
  e._wrapperState = { initialValue: ni(r) };
}
function ww(e, t) {
  var r = ni(t.value),
    a = ni(t.defaultValue);
  r != null &&
    ((r = "" + r),
    r !== e.value && (e.value = r),
    t.defaultValue == null && e.defaultValue !== r && (e.defaultValue = r)),
    a != null && (e.defaultValue = "" + a);
}
function wm(e) {
  var t = e.textContent;
  t === e._wrapperState.initialValue && t !== "" && t !== null && (e.value = t);
}
function Sw(e) {
  switch (e) {
    case "svg":
      return "http://www.w3.org/2000/svg";
    case "math":
      return "http://www.w3.org/1998/Math/MathML";
    default:
      return "http://www.w3.org/1999/xhtml";
  }
}
function rf(e, t) {
  return e == null || e === "http://www.w3.org/1999/xhtml"
    ? Sw(t)
    : e === "http://www.w3.org/2000/svg" && t === "foreignObject"
    ? "http://www.w3.org/1999/xhtml"
    : e;
}
var Ts,
  Pw = (function (e) {
    return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
      ? function (t, r, a, c) {
          MSApp.execUnsafeLocalFunction(function () {
            return e(t, r, a, c);
          });
        }
      : e;
  })(function (e, t) {
    if (e.namespaceURI !== "http://www.w3.org/2000/svg" || "innerHTML" in e)
      e.innerHTML = t;
    else {
      for (
        Ts = Ts || document.createElement("div"),
          Ts.innerHTML = "<svg>" + t.valueOf().toString() + "</svg>",
          t = Ts.firstChild;
        e.firstChild;

      )
        e.removeChild(e.firstChild);
      for (; t.firstChild; ) e.appendChild(t.firstChild);
    }
  });
function Xo(e, t) {
  if (t) {
    var r = e.firstChild;
    if (r && r === e.lastChild && r.nodeType === 3) {
      r.nodeValue = t;
      return;
    }
  }
  e.textContent = t;
}
var Ao = {
    animationIterationCount: !0,
    aspectRatio: !0,
    borderImageOutset: !0,
    borderImageSlice: !0,
    borderImageWidth: !0,
    boxFlex: !0,
    boxFlexGroup: !0,
    boxOrdinalGroup: !0,
    columnCount: !0,
    columns: !0,
    flex: !0,
    flexGrow: !0,
    flexPositive: !0,
    flexShrink: !0,
    flexNegative: !0,
    flexOrder: !0,
    gridArea: !0,
    gridRow: !0,
    gridRowEnd: !0,
    gridRowSpan: !0,
    gridRowStart: !0,
    gridColumn: !0,
    gridColumnEnd: !0,
    gridColumnSpan: !0,
    gridColumnStart: !0,
    fontWeight: !0,
    lineClamp: !0,
    lineHeight: !0,
    opacity: !0,
    order: !0,
    orphans: !0,
    tabSize: !0,
    widows: !0,
    zIndex: !0,
    zoom: !0,
    fillOpacity: !0,
    floodOpacity: !0,
    stopOpacity: !0,
    strokeDasharray: !0,
    strokeDashoffset: !0,
    strokeMiterlimit: !0,
    strokeOpacity: !0,
    strokeWidth: !0,
  },
  OA = ["Webkit", "ms", "Moz", "O"];
Object.keys(Ao).forEach(function (e) {
  OA.forEach(function (t) {
    (t = t + e.charAt(0).toUpperCase() + e.substring(1)), (Ao[t] = Ao[e]);
  });
});
function _w(e, t, r) {
  return t == null || typeof t == "boolean" || t === ""
    ? ""
    : r || typeof t != "number" || t === 0 || (Ao.hasOwnProperty(e) && Ao[e])
    ? ("" + t).trim()
    : t + "px";
}
function Cw(e, t) {
  e = e.style;
  for (var r in t)
    if (t.hasOwnProperty(r)) {
      var a = r.indexOf("--") === 0,
        c = _w(r, t[r], a);
      r === "float" && (r = "cssFloat"), a ? e.setProperty(r, c) : (e[r] = c);
    }
}
var kA = dt(
  { menuitem: !0 },
  {
    area: !0,
    base: !0,
    br: !0,
    col: !0,
    embed: !0,
    hr: !0,
    img: !0,
    input: !0,
    keygen: !0,
    link: !0,
    meta: !0,
    param: !0,
    source: !0,
    track: !0,
    wbr: !0,
  },
);
function nf(e, t) {
  if (t) {
    if (kA[e] && (t.children != null || t.dangerouslySetInnerHTML != null))
      throw Error(ge(137, e));
    if (t.dangerouslySetInnerHTML != null) {
      if (t.children != null) throw Error(ge(60));
      if (
        typeof t.dangerouslySetInnerHTML != "object" ||
        !("__html" in t.dangerouslySetInnerHTML)
      )
        throw Error(ge(61));
    }
    if (t.style != null && typeof t.style != "object") throw Error(ge(62));
  }
}
function af(e, t) {
  if (e.indexOf("-") === -1) return typeof t.is == "string";
  switch (e) {
    case "annotation-xml":
    case "color-profile":
    case "font-face":
    case "font-face-src":
    case "font-face-uri":
    case "font-face-format":
    case "font-face-name":
    case "missing-glyph":
      return !1;
    default:
      return !0;
  }
}
var of = null;
function bp(e) {
  return (
    (e = e.target || e.srcElement || window),
    e.correspondingUseElement && (e = e.correspondingUseElement),
    e.nodeType === 3 ? e.parentNode : e
  );
}
var sf = null,
  ba = null,
  wa = null;
function Sm(e) {
  if ((e = us(e))) {
    if (typeof sf != "function") throw Error(ge(280));
    var t = e.stateNode;
    t && ((t = Ku(t)), sf(e.stateNode, e.type, t));
  }
}
function Ow(e) {
  ba ? (wa ? wa.push(e) : (wa = [e])) : (ba = e);
}
function kw() {
  if (ba) {
    var e = ba,
      t = wa;
    if (((wa = ba = null), Sm(e), t)) for (e = 0; e < t.length; e++) Sm(t[e]);
  }
}
function Aw(e, t) {
  return e(t);
}
function Ew() {}
var qd = !1;
function Rw(e, t, r) {
  if (qd) return e(t, r);
  qd = !0;
  try {
    return Aw(e, t, r);
  } finally {
    (qd = !1), (ba !== null || wa !== null) && (Ew(), kw());
  }
}
function Bo(e, t) {
  var r = e.stateNode;
  if (r === null) return null;
  var a = Ku(r);
  if (a === null) return null;
  r = a[t];
  e: switch (t) {
    case "onClick":
    case "onClickCapture":
    case "onDoubleClick":
    case "onDoubleClickCapture":
    case "onMouseDown":
    case "onMouseDownCapture":
    case "onMouseMove":
    case "onMouseMoveCapture":
    case "onMouseUp":
    case "onMouseUpCapture":
    case "onMouseEnter":
      (a = !a.disabled) ||
        ((e = e.type),
        (a = !(
          e === "button" ||
          e === "input" ||
          e === "select" ||
          e === "textarea"
        ))),
        (e = !a);
      break e;
    default:
      e = !1;
  }
  if (e) return null;
  if (r && typeof r != "function") throw Error(ge(231, t, typeof r));
  return r;
}
var lf = !1;
if (Pn)
  try {
    var ao = {};
    Object.defineProperty(ao, "passive", {
      get: function () {
        lf = !0;
      },
    }),
      window.addEventListener("test", ao, ao),
      window.removeEventListener("test", ao, ao);
  } catch {
    lf = !1;
  }
function AA(e, t, r, a, c, h, p, v, b) {
  var P = Array.prototype.slice.call(arguments, 3);
  try {
    t.apply(r, P);
  } catch (k) {
    this.onError(k);
  }
}
var Eo = !1,
  Ll = null,
  Tl = !1,
  cf = null,
  EA = {
    onError: function (e) {
      (Eo = !0), (Ll = e);
    },
  };
function RA(e, t, r, a, c, h, p, v, b) {
  (Eo = !1), (Ll = null), AA.apply(EA, arguments);
}
function LA(e, t, r, a, c, h, p, v, b) {
  if ((RA.apply(this, arguments), Eo)) {
    if (Eo) {
      var P = Ll;
      (Eo = !1), (Ll = null);
    } else throw Error(ge(198));
    Tl || ((Tl = !0), (cf = P));
  }
}
function Yi(e) {
  var t = e,
    r = e;
  if (e.alternate) for (; t.return; ) t = t.return;
  else {
    e = t;
    do (t = e), t.flags & 4098 && (r = t.return), (e = t.return);
    while (e);
  }
  return t.tag === 3 ? r : null;
}
function Lw(e) {
  if (e.tag === 13) {
    var t = e.memoizedState;
    if (
      (t === null && ((e = e.alternate), e !== null && (t = e.memoizedState)),
      t !== null)
    )
      return t.dehydrated;
  }
  return null;
}
function Pm(e) {
  if (Yi(e) !== e) throw Error(ge(188));
}
function TA(e) {
  var t = e.alternate;
  if (!t) {
    if (((t = Yi(e)), t === null)) throw Error(ge(188));
    return t !== e ? null : e;
  }
  for (var r = e, a = t; ; ) {
    var c = r.return;
    if (c === null) break;
    var h = c.alternate;
    if (h === null) {
      if (((a = c.return), a !== null)) {
        r = a;
        continue;
      }
      break;
    }
    if (c.child === h.child) {
      for (h = c.child; h; ) {
        if (h === r) return Pm(c), e;
        if (h === a) return Pm(c), t;
        h = h.sibling;
      }
      throw Error(ge(188));
    }
    if (r.return !== a.return) (r = c), (a = h);
    else {
      for (var p = !1, v = c.child; v; ) {
        if (v === r) {
          (p = !0), (r = c), (a = h);
          break;
        }
        if (v === a) {
          (p = !0), (a = c), (r = h);
          break;
        }
        v = v.sibling;
      }
      if (!p) {
        for (v = h.child; v; ) {
          if (v === r) {
            (p = !0), (r = h), (a = c);
            break;
          }
          if (v === a) {
            (p = !0), (a = h), (r = c);
            break;
          }
          v = v.sibling;
        }
        if (!p) throw Error(ge(189));
      }
    }
    if (r.alternate !== a) throw Error(ge(190));
  }
  if (r.tag !== 3) throw Error(ge(188));
  return r.stateNode.current === r ? e : t;
}
function Tw(e) {
  return (e = TA(e)), e !== null ? Iw(e) : null;
}
function Iw(e) {
  if (e.tag === 5 || e.tag === 6) return e;
  for (e = e.child; e !== null; ) {
    var t = Iw(e);
    if (t !== null) return t;
    e = e.sibling;
  }
  return null;
}
var Nw = fr.unstable_scheduleCallback,
  _m = fr.unstable_cancelCallback,
  IA = fr.unstable_shouldYield,
  NA = fr.unstable_requestPaint,
  bt = fr.unstable_now,
  MA = fr.unstable_getCurrentPriorityLevel,
  wp = fr.unstable_ImmediatePriority,
  Mw = fr.unstable_UserBlockingPriority,
  Il = fr.unstable_NormalPriority,
  $A = fr.unstable_LowPriority,
  $w = fr.unstable_IdlePriority,
  Gu = null,
  an = null;
function DA(e) {
  if (an && typeof an.onCommitFiberRoot == "function")
    try {
      an.onCommitFiberRoot(Gu, e, void 0, (e.current.flags & 128) === 128);
    } catch {}
}
var jr = Math.clz32 ? Math.clz32 : jA,
  zA = Math.log,
  FA = Math.LN2;
function jA(e) {
  return (e >>>= 0), e === 0 ? 32 : (31 - ((zA(e) / FA) | 0)) | 0;
}
var Is = 64,
  Ns = 4194304;
function Co(e) {
  switch (e & -e) {
    case 1:
      return 1;
    case 2:
      return 2;
    case 4:
      return 4;
    case 8:
      return 8;
    case 16:
      return 16;
    case 32:
      return 32;
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return e & 4194240;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return e & 130023424;
    case 134217728:
      return 134217728;
    case 268435456:
      return 268435456;
    case 536870912:
      return 536870912;
    case 1073741824:
      return 1073741824;
    default:
      return e;
  }
}
function Nl(e, t) {
  var r = e.pendingLanes;
  if (r === 0) return 0;
  var a = 0,
    c = e.suspendedLanes,
    h = e.pingedLanes,
    p = r & 268435455;
  if (p !== 0) {
    var v = p & ~c;
    v !== 0 ? (a = Co(v)) : ((h &= p), h !== 0 && (a = Co(h)));
  } else (p = r & ~c), p !== 0 ? (a = Co(p)) : h !== 0 && (a = Co(h));
  if (a === 0) return 0;
  if (
    t !== 0 &&
    t !== a &&
    !(t & c) &&
    ((c = a & -a), (h = t & -t), c >= h || (c === 16 && (h & 4194240) !== 0))
  )
    return t;
  if ((a & 4 && (a |= r & 16), (t = e.entangledLanes), t !== 0))
    for (e = e.entanglements, t &= a; 0 < t; )
      (r = 31 - jr(t)), (c = 1 << r), (a |= e[r]), (t &= ~c);
  return a;
}
function HA(e, t) {
  switch (e) {
    case 1:
    case 2:
    case 4:
      return t + 250;
    case 8:
    case 16:
    case 32:
    case 64:
    case 128:
    case 256:
    case 512:
    case 1024:
    case 2048:
    case 4096:
    case 8192:
    case 16384:
    case 32768:
    case 65536:
    case 131072:
    case 262144:
    case 524288:
    case 1048576:
    case 2097152:
      return t + 5e3;
    case 4194304:
    case 8388608:
    case 16777216:
    case 33554432:
    case 67108864:
      return -1;
    case 134217728:
    case 268435456:
    case 536870912:
    case 1073741824:
      return -1;
    default:
      return -1;
  }
}
function XA(e, t) {
  for (
    var r = e.suspendedLanes,
      a = e.pingedLanes,
      c = e.expirationTimes,
      h = e.pendingLanes;
    0 < h;

  ) {
    var p = 31 - jr(h),
      v = 1 << p,
      b = c[p];
    b === -1
      ? (!(v & r) || v & a) && (c[p] = HA(v, t))
      : b <= t && (e.expiredLanes |= v),
      (h &= ~v);
  }
}
function uf(e) {
  return (
    (e = e.pendingLanes & -1073741825),
    e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
  );
}
function Dw() {
  var e = Is;
  return (Is <<= 1), !(Is & 4194240) && (Is = 64), e;
}
function Zd(e) {
  for (var t = [], r = 0; 31 > r; r++) t.push(e);
  return t;
}
function ls(e, t, r) {
  (e.pendingLanes |= t),
    t !== 536870912 && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
    (e = e.eventTimes),
    (t = 31 - jr(t)),
    (e[t] = r);
}
function BA(e, t) {
  var r = e.pendingLanes & ~t;
  (e.pendingLanes = t),
    (e.suspendedLanes = 0),
    (e.pingedLanes = 0),
    (e.expiredLanes &= t),
    (e.mutableReadLanes &= t),
    (e.entangledLanes &= t),
    (t = e.entanglements);
  var a = e.eventTimes;
  for (e = e.expirationTimes; 0 < r; ) {
    var c = 31 - jr(r),
      h = 1 << c;
    (t[c] = 0), (a[c] = -1), (e[c] = -1), (r &= ~h);
  }
}
function Sp(e, t) {
  var r = (e.entangledLanes |= t);
  for (e = e.entanglements; r; ) {
    var a = 31 - jr(r),
      c = 1 << a;
    (c & t) | (e[a] & t) && (e[a] |= t), (r &= ~c);
  }
}
var Ze = 0;
function zw(e) {
  return (e &= -e), 1 < e ? (4 < e ? (e & 268435455 ? 16 : 536870912) : 4) : 1;
}
var Fw,
  Pp,
  jw,
  Hw,
  Xw,
  df = !1,
  Ms = [],
  qn = null,
  Zn = null,
  Kn = null,
  Yo = new Map(),
  Wo = new Map(),
  Yn = [],
  YA =
    "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
      " ",
    );
function Cm(e, t) {
  switch (e) {
    case "focusin":
    case "focusout":
      qn = null;
      break;
    case "dragenter":
    case "dragleave":
      Zn = null;
      break;
    case "mouseover":
    case "mouseout":
      Kn = null;
      break;
    case "pointerover":
    case "pointerout":
      Yo.delete(t.pointerId);
      break;
    case "gotpointercapture":
    case "lostpointercapture":
      Wo.delete(t.pointerId);
  }
}
function oo(e, t, r, a, c, h) {
  return e === null || e.nativeEvent !== h
    ? ((e = {
        blockedOn: t,
        domEventName: r,
        eventSystemFlags: a,
        nativeEvent: h,
        targetContainers: [c],
      }),
      t !== null && ((t = us(t)), t !== null && Pp(t)),
      e)
    : ((e.eventSystemFlags |= a),
      (t = e.targetContainers),
      c !== null && t.indexOf(c) === -1 && t.push(c),
      e);
}
function WA(e, t, r, a, c) {
  switch (t) {
    case "focusin":
      return (qn = oo(qn, e, t, r, a, c)), !0;
    case "dragenter":
      return (Zn = oo(Zn, e, t, r, a, c)), !0;
    case "mouseover":
      return (Kn = oo(Kn, e, t, r, a, c)), !0;
    case "pointerover":
      var h = c.pointerId;
      return Yo.set(h, oo(Yo.get(h) || null, e, t, r, a, c)), !0;
    case "gotpointercapture":
      return (
        (h = c.pointerId), Wo.set(h, oo(Wo.get(h) || null, e, t, r, a, c)), !0
      );
  }
  return !1;
}
function Bw(e) {
  var t = Pi(e.target);
  if (t !== null) {
    var r = Yi(t);
    if (r !== null) {
      if (((t = r.tag), t === 13)) {
        if (((t = Lw(r)), t !== null)) {
          (e.blockedOn = t),
            Xw(e.priority, function () {
              jw(r);
            });
          return;
        }
      } else if (t === 3 && r.stateNode.current.memoizedState.isDehydrated) {
        e.blockedOn = r.tag === 3 ? r.stateNode.containerInfo : null;
        return;
      }
    }
  }
  e.blockedOn = null;
}
function pl(e) {
  if (e.blockedOn !== null) return !1;
  for (var t = e.targetContainers; 0 < t.length; ) {
    var r = hf(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
    if (r === null) {
      r = e.nativeEvent;
      var a = new r.constructor(r.type, r);
      (of = a), r.target.dispatchEvent(a), (of = null);
    } else return (t = us(r)), t !== null && Pp(t), (e.blockedOn = r), !1;
    t.shift();
  }
  return !0;
}
function Om(e, t, r) {
  pl(e) && r.delete(t);
}
function VA() {
  (df = !1),
    qn !== null && pl(qn) && (qn = null),
    Zn !== null && pl(Zn) && (Zn = null),
    Kn !== null && pl(Kn) && (Kn = null),
    Yo.forEach(Om),
    Wo.forEach(Om);
}
function so(e, t) {
  e.blockedOn === t &&
    ((e.blockedOn = null),
    df ||
      ((df = !0),
      fr.unstable_scheduleCallback(fr.unstable_NormalPriority, VA)));
}
function Vo(e) {
  function t(c) {
    return so(c, e);
  }
  if (0 < Ms.length) {
    so(Ms[0], e);
    for (var r = 1; r < Ms.length; r++) {
      var a = Ms[r];
      a.blockedOn === e && (a.blockedOn = null);
    }
  }
  for (
    qn !== null && so(qn, e),
      Zn !== null && so(Zn, e),
      Kn !== null && so(Kn, e),
      Yo.forEach(t),
      Wo.forEach(t),
      r = 0;
    r < Yn.length;
    r++
  )
    (a = Yn[r]), a.blockedOn === e && (a.blockedOn = null);
  for (; 0 < Yn.length && ((r = Yn[0]), r.blockedOn === null); )
    Bw(r), r.blockedOn === null && Yn.shift();
}
var Sa = En.ReactCurrentBatchConfig,
  Ml = !0;
function GA(e, t, r, a) {
  var c = Ze,
    h = Sa.transition;
  Sa.transition = null;
  try {
    (Ze = 1), _p(e, t, r, a);
  } finally {
    (Ze = c), (Sa.transition = h);
  }
}
function UA(e, t, r, a) {
  var c = Ze,
    h = Sa.transition;
  Sa.transition = null;
  try {
    (Ze = 4), _p(e, t, r, a);
  } finally {
    (Ze = c), (Sa.transition = h);
  }
}
function _p(e, t, r, a) {
  if (Ml) {
    var c = hf(e, t, r, a);
    if (c === null) oh(e, t, a, $l, r), Cm(e, a);
    else if (WA(c, e, t, r, a)) a.stopPropagation();
    else if ((Cm(e, a), t & 4 && -1 < YA.indexOf(e))) {
      for (; c !== null; ) {
        var h = us(c);
        if (
          (h !== null && Fw(h),
          (h = hf(e, t, r, a)),
          h === null && oh(e, t, a, $l, r),
          h === c)
        )
          break;
        c = h;
      }
      c !== null && a.stopPropagation();
    } else oh(e, t, a, null, r);
  }
}
var $l = null;
function hf(e, t, r, a) {
  if ((($l = null), (e = bp(a)), (e = Pi(e)), e !== null))
    if (((t = Yi(e)), t === null)) e = null;
    else if (((r = t.tag), r === 13)) {
      if (((e = Lw(t)), e !== null)) return e;
      e = null;
    } else if (r === 3) {
      if (t.stateNode.current.memoizedState.isDehydrated)
        return t.tag === 3 ? t.stateNode.containerInfo : null;
      e = null;
    } else t !== e && (e = null);
  return ($l = e), null;
}
function Yw(e) {
  switch (e) {
    case "cancel":
    case "click":
    case "close":
    case "contextmenu":
    case "copy":
    case "cut":
    case "auxclick":
    case "dblclick":
    case "dragend":
    case "dragstart":
    case "drop":
    case "focusin":
    case "focusout":
    case "input":
    case "invalid":
    case "keydown":
    case "keypress":
    case "keyup":
    case "mousedown":
    case "mouseup":
    case "paste":
    case "pause":
    case "play":
    case "pointercancel":
    case "pointerdown":
    case "pointerup":
    case "ratechange":
    case "reset":
    case "resize":
    case "seeked":
    case "submit":
    case "touchcancel":
    case "touchend":
    case "touchstart":
    case "volumechange":
    case "change":
    case "selectionchange":
    case "textInput":
    case "compositionstart":
    case "compositionend":
    case "compositionupdate":
    case "beforeblur":
    case "afterblur":
    case "beforeinput":
    case "blur":
    case "fullscreenchange":
    case "focus":
    case "hashchange":
    case "popstate":
    case "select":
    case "selectstart":
      return 1;
    case "drag":
    case "dragenter":
    case "dragexit":
    case "dragleave":
    case "dragover":
    case "mousemove":
    case "mouseout":
    case "mouseover":
    case "pointermove":
    case "pointerout":
    case "pointerover":
    case "scroll":
    case "toggle":
    case "touchmove":
    case "wheel":
    case "mouseenter":
    case "mouseleave":
    case "pointerenter":
    case "pointerleave":
      return 4;
    case "message":
      switch (MA()) {
        case wp:
          return 1;
        case Mw:
          return 4;
        case Il:
        case $A:
          return 16;
        case $w:
          return 536870912;
        default:
          return 16;
      }
    default:
      return 16;
  }
}
var Vn = null,
  Cp = null,
  gl = null;
function Ww() {
  if (gl) return gl;
  var e,
    t = Cp,
    r = t.length,
    a,
    c = "value" in Vn ? Vn.value : Vn.textContent,
    h = c.length;
  for (e = 0; e < r && t[e] === c[e]; e++);
  var p = r - e;
  for (a = 1; a <= p && t[r - a] === c[h - a]; a++);
  return (gl = c.slice(e, 1 < a ? 1 - a : void 0));
}
function ml(e) {
  var t = e.keyCode;
  return (
    "charCode" in e
      ? ((e = e.charCode), e === 0 && t === 13 && (e = 13))
      : (e = t),
    e === 10 && (e = 13),
    32 <= e || e === 13 ? e : 0
  );
}
function $s() {
  return !0;
}
function km() {
  return !1;
}
function gr(e) {
  function t(r, a, c, h, p) {
    (this._reactName = r),
      (this._targetInst = c),
      (this.type = a),
      (this.nativeEvent = h),
      (this.target = p),
      (this.currentTarget = null);
    for (var v in e)
      e.hasOwnProperty(v) && ((r = e[v]), (this[v] = r ? r(h) : h[v]));
    return (
      (this.isDefaultPrevented = (
        h.defaultPrevented != null ? h.defaultPrevented : h.returnValue === !1
      )
        ? $s
        : km),
      (this.isPropagationStopped = km),
      this
    );
  }
  return (
    dt(t.prototype, {
      preventDefault: function () {
        this.defaultPrevented = !0;
        var r = this.nativeEvent;
        r &&
          (r.preventDefault
            ? r.preventDefault()
            : typeof r.returnValue != "unknown" && (r.returnValue = !1),
          (this.isDefaultPrevented = $s));
      },
      stopPropagation: function () {
        var r = this.nativeEvent;
        r &&
          (r.stopPropagation
            ? r.stopPropagation()
            : typeof r.cancelBubble != "unknown" && (r.cancelBubble = !0),
          (this.isPropagationStopped = $s));
      },
      persist: function () {},
      isPersistent: $s,
    }),
    t
  );
}
var Ba = {
    eventPhase: 0,
    bubbles: 0,
    cancelable: 0,
    timeStamp: function (e) {
      return e.timeStamp || Date.now();
    },
    defaultPrevented: 0,
    isTrusted: 0,
  },
  Op = gr(Ba),
  cs = dt({}, Ba, { view: 0, detail: 0 }),
  qA = gr(cs),
  Kd,
  Qd,
  lo,
  Uu = dt({}, cs, {
    screenX: 0,
    screenY: 0,
    clientX: 0,
    clientY: 0,
    pageX: 0,
    pageY: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    getModifierState: kp,
    button: 0,
    buttons: 0,
    relatedTarget: function (e) {
      return e.relatedTarget === void 0
        ? e.fromElement === e.srcElement
          ? e.toElement
          : e.fromElement
        : e.relatedTarget;
    },
    movementX: function (e) {
      return "movementX" in e
        ? e.movementX
        : (e !== lo &&
            (lo && e.type === "mousemove"
              ? ((Kd = e.screenX - lo.screenX), (Qd = e.screenY - lo.screenY))
              : (Qd = Kd = 0),
            (lo = e)),
          Kd);
    },
    movementY: function (e) {
      return "movementY" in e ? e.movementY : Qd;
    },
  }),
  Am = gr(Uu),
  ZA = dt({}, Uu, { dataTransfer: 0 }),
  KA = gr(ZA),
  QA = dt({}, cs, { relatedTarget: 0 }),
  Jd = gr(QA),
  JA = dt({}, Ba, { animationName: 0, elapsedTime: 0, pseudoElement: 0 }),
  eE = gr(JA),
  tE = dt({}, Ba, {
    clipboardData: function (e) {
      return "clipboardData" in e ? e.clipboardData : window.clipboardData;
    },
  }),
  rE = gr(tE),
  nE = dt({}, Ba, { data: 0 }),
  Em = gr(nE),
  iE = {
    Esc: "Escape",
    Spacebar: " ",
    Left: "ArrowLeft",
    Up: "ArrowUp",
    Right: "ArrowRight",
    Down: "ArrowDown",
    Del: "Delete",
    Win: "OS",
    Menu: "ContextMenu",
    Apps: "ContextMenu",
    Scroll: "ScrollLock",
    MozPrintableKey: "Unidentified",
  },
  aE = {
    8: "Backspace",
    9: "Tab",
    12: "Clear",
    13: "Enter",
    16: "Shift",
    17: "Control",
    18: "Alt",
    19: "Pause",
    20: "CapsLock",
    27: "Escape",
    32: " ",
    33: "PageUp",
    34: "PageDown",
    35: "End",
    36: "Home",
    37: "ArrowLeft",
    38: "ArrowUp",
    39: "ArrowRight",
    40: "ArrowDown",
    45: "Insert",
    46: "Delete",
    112: "F1",
    113: "F2",
    114: "F3",
    115: "F4",
    116: "F5",
    117: "F6",
    118: "F7",
    119: "F8",
    120: "F9",
    121: "F10",
    122: "F11",
    123: "F12",
    144: "NumLock",
    145: "ScrollLock",
    224: "Meta",
  },
  oE = {
    Alt: "altKey",
    Control: "ctrlKey",
    Meta: "metaKey",
    Shift: "shiftKey",
  };
function sE(e) {
  var t = this.nativeEvent;
  return t.getModifierState ? t.getModifierState(e) : (e = oE[e]) ? !!t[e] : !1;
}
function kp() {
  return sE;
}
var lE = dt({}, cs, {
    key: function (e) {
      if (e.key) {
        var t = iE[e.key] || e.key;
        if (t !== "Unidentified") return t;
      }
      return e.type === "keypress"
        ? ((e = ml(e)), e === 13 ? "Enter" : String.fromCharCode(e))
        : e.type === "keydown" || e.type === "keyup"
        ? aE[e.keyCode] || "Unidentified"
        : "";
    },
    code: 0,
    location: 0,
    ctrlKey: 0,
    shiftKey: 0,
    altKey: 0,
    metaKey: 0,
    repeat: 0,
    locale: 0,
    getModifierState: kp,
    charCode: function (e) {
      return e.type === "keypress" ? ml(e) : 0;
    },
    keyCode: function (e) {
      return e.type === "keydown" || e.type === "keyup" ? e.keyCode : 0;
    },
    which: function (e) {
      return e.type === "keypress"
        ? ml(e)
        : e.type === "keydown" || e.type === "keyup"
        ? e.keyCode
        : 0;
    },
  }),
  cE = gr(lE),
  uE = dt({}, Uu, {
    pointerId: 0,
    width: 0,
    height: 0,
    pressure: 0,
    tangentialPressure: 0,
    tiltX: 0,
    tiltY: 0,
    twist: 0,
    pointerType: 0,
    isPrimary: 0,
  }),
  Rm = gr(uE),
  dE = dt({}, cs, {
    touches: 0,
    targetTouches: 0,
    changedTouches: 0,
    altKey: 0,
    metaKey: 0,
    ctrlKey: 0,
    shiftKey: 0,
    getModifierState: kp,
  }),
  hE = gr(dE),
  fE = dt({}, Ba, { propertyName: 0, elapsedTime: 0, pseudoElement: 0 }),
  pE = gr(fE),
  gE = dt({}, Uu, {
    deltaX: function (e) {
      return "deltaX" in e ? e.deltaX : "wheelDeltaX" in e ? -e.wheelDeltaX : 0;
    },
    deltaY: function (e) {
      return "deltaY" in e
        ? e.deltaY
        : "wheelDeltaY" in e
        ? -e.wheelDeltaY
        : "wheelDelta" in e
        ? -e.wheelDelta
        : 0;
    },
    deltaZ: 0,
    deltaMode: 0,
  }),
  mE = gr(gE),
  vE = [9, 13, 27, 32],
  Ap = Pn && "CompositionEvent" in window,
  Ro = null;
Pn && "documentMode" in document && (Ro = document.documentMode);
var yE = Pn && "TextEvent" in window && !Ro,
  Vw = Pn && (!Ap || (Ro && 8 < Ro && 11 >= Ro)),
  Lm = String.fromCharCode(32),
  Tm = !1;
function Gw(e, t) {
  switch (e) {
    case "keyup":
      return vE.indexOf(t.keyCode) !== -1;
    case "keydown":
      return t.keyCode !== 229;
    case "keypress":
    case "mousedown":
    case "focusout":
      return !0;
    default:
      return !1;
  }
}
function Uw(e) {
  return (e = e.detail), typeof e == "object" && "data" in e ? e.data : null;
}
var sa = !1;
function xE(e, t) {
  switch (e) {
    case "compositionend":
      return Uw(t);
    case "keypress":
      return t.which !== 32 ? null : ((Tm = !0), Lm);
    case "textInput":
      return (e = t.data), e === Lm && Tm ? null : e;
    default:
      return null;
  }
}
function bE(e, t) {
  if (sa)
    return e === "compositionend" || (!Ap && Gw(e, t))
      ? ((e = Ww()), (gl = Cp = Vn = null), (sa = !1), e)
      : null;
  switch (e) {
    case "paste":
      return null;
    case "keypress":
      if (!(t.ctrlKey || t.altKey || t.metaKey) || (t.ctrlKey && t.altKey)) {
        if (t.char && 1 < t.char.length) return t.char;
        if (t.which) return String.fromCharCode(t.which);
      }
      return null;
    case "compositionend":
      return Vw && t.locale !== "ko" ? null : t.data;
    default:
      return null;
  }
}
var wE = {
  color: !0,
  date: !0,
  datetime: !0,
  "datetime-local": !0,
  email: !0,
  month: !0,
  number: !0,
  password: !0,
  range: !0,
  search: !0,
  tel: !0,
  text: !0,
  time: !0,
  url: !0,
  week: !0,
};
function Im(e) {
  var t = e && e.nodeName && e.nodeName.toLowerCase();
  return t === "input" ? !!wE[e.type] : t === "textarea";
}
function qw(e, t, r, a) {
  Ow(a),
    (t = Dl(t, "onChange")),
    0 < t.length &&
      ((r = new Op("onChange", "change", null, r, a)),
      e.push({ event: r, listeners: t }));
}
var Lo = null,
  Go = null;
function SE(e) {
  o1(e, 0);
}
function qu(e) {
  var t = ua(e);
  if (xw(t)) return e;
}
function PE(e, t) {
  if (e === "change") return t;
}
var Zw = !1;
if (Pn) {
  var eh;
  if (Pn) {
    var th = "oninput" in document;
    if (!th) {
      var Nm = document.createElement("div");
      Nm.setAttribute("oninput", "return;"),
        (th = typeof Nm.oninput == "function");
    }
    eh = th;
  } else eh = !1;
  Zw = eh && (!document.documentMode || 9 < document.documentMode);
}
function Mm() {
  Lo && (Lo.detachEvent("onpropertychange", Kw), (Go = Lo = null));
}
function Kw(e) {
  if (e.propertyName === "value" && qu(Go)) {
    var t = [];
    qw(t, Go, e, bp(e)), Rw(SE, t);
  }
}
function _E(e, t, r) {
  e === "focusin"
    ? (Mm(), (Lo = t), (Go = r), Lo.attachEvent("onpropertychange", Kw))
    : e === "focusout" && Mm();
}
function CE(e) {
  if (e === "selectionchange" || e === "keyup" || e === "keydown")
    return qu(Go);
}
function OE(e, t) {
  if (e === "click") return qu(t);
}
function kE(e, t) {
  if (e === "input" || e === "change") return qu(t);
}
function AE(e, t) {
  return (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t);
}
var Yr = typeof Object.is == "function" ? Object.is : AE;
function Uo(e, t) {
  if (Yr(e, t)) return !0;
  if (typeof e != "object" || e === null || typeof t != "object" || t === null)
    return !1;
  var r = Object.keys(e),
    a = Object.keys(t);
  if (r.length !== a.length) return !1;
  for (a = 0; a < r.length; a++) {
    var c = r[a];
    if (!Gh.call(t, c) || !Yr(e[c], t[c])) return !1;
  }
  return !0;
}
function $m(e) {
  for (; e && e.firstChild; ) e = e.firstChild;
  return e;
}
function Dm(e, t) {
  var r = $m(e);
  e = 0;
  for (var a; r; ) {
    if (r.nodeType === 3) {
      if (((a = e + r.textContent.length), e <= t && a >= t))
        return { node: r, offset: t - e };
      e = a;
    }
    e: {
      for (; r; ) {
        if (r.nextSibling) {
          r = r.nextSibling;
          break e;
        }
        r = r.parentNode;
      }
      r = void 0;
    }
    r = $m(r);
  }
}
function Qw(e, t) {
  return e && t
    ? e === t
      ? !0
      : e && e.nodeType === 3
      ? !1
      : t && t.nodeType === 3
      ? Qw(e, t.parentNode)
      : "contains" in e
      ? e.contains(t)
      : e.compareDocumentPosition
      ? !!(e.compareDocumentPosition(t) & 16)
      : !1
    : !1;
}
function Jw() {
  for (var e = window, t = Rl(); t instanceof e.HTMLIFrameElement; ) {
    try {
      var r = typeof t.contentWindow.location.href == "string";
    } catch {
      r = !1;
    }
    if (r) e = t.contentWindow;
    else break;
    t = Rl(e.document);
  }
  return t;
}
function Ep(e) {
  var t = e && e.nodeName && e.nodeName.toLowerCase();
  return (
    t &&
    ((t === "input" &&
      (e.type === "text" ||
        e.type === "search" ||
        e.type === "tel" ||
        e.type === "url" ||
        e.type === "password")) ||
      t === "textarea" ||
      e.contentEditable === "true")
  );
}
function EE(e) {
  var t = Jw(),
    r = e.focusedElem,
    a = e.selectionRange;
  if (
    t !== r &&
    r &&
    r.ownerDocument &&
    Qw(r.ownerDocument.documentElement, r)
  ) {
    if (a !== null && Ep(r)) {
      if (
        ((t = a.start),
        (e = a.end),
        e === void 0 && (e = t),
        "selectionStart" in r)
      )
        (r.selectionStart = t), (r.selectionEnd = Math.min(e, r.value.length));
      else if (
        ((e = ((t = r.ownerDocument || document) && t.defaultView) || window),
        e.getSelection)
      ) {
        e = e.getSelection();
        var c = r.textContent.length,
          h = Math.min(a.start, c);
        (a = a.end === void 0 ? h : Math.min(a.end, c)),
          !e.extend && h > a && ((c = a), (a = h), (h = c)),
          (c = Dm(r, h));
        var p = Dm(r, a);
        c &&
          p &&
          (e.rangeCount !== 1 ||
            e.anchorNode !== c.node ||
            e.anchorOffset !== c.offset ||
            e.focusNode !== p.node ||
            e.focusOffset !== p.offset) &&
          ((t = t.createRange()),
          t.setStart(c.node, c.offset),
          e.removeAllRanges(),
          h > a
            ? (e.addRange(t), e.extend(p.node, p.offset))
            : (t.setEnd(p.node, p.offset), e.addRange(t)));
      }
    }
    for (t = [], e = r; (e = e.parentNode); )
      e.nodeType === 1 &&
        t.push({ element: e, left: e.scrollLeft, top: e.scrollTop });
    for (typeof r.focus == "function" && r.focus(), r = 0; r < t.length; r++)
      (e = t[r]),
        (e.element.scrollLeft = e.left),
        (e.element.scrollTop = e.top);
  }
}
var RE = Pn && "documentMode" in document && 11 >= document.documentMode,
  la = null,
  ff = null,
  To = null,
  pf = !1;
function zm(e, t, r) {
  var a = r.window === r ? r.document : r.nodeType === 9 ? r : r.ownerDocument;
  pf ||
    la == null ||
    la !== Rl(a) ||
    ((a = la),
    "selectionStart" in a && Ep(a)
      ? (a = { start: a.selectionStart, end: a.selectionEnd })
      : ((a = (
          (a.ownerDocument && a.ownerDocument.defaultView) ||
          window
        ).getSelection()),
        (a = {
          anchorNode: a.anchorNode,
          anchorOffset: a.anchorOffset,
          focusNode: a.focusNode,
          focusOffset: a.focusOffset,
        })),
    (To && Uo(To, a)) ||
      ((To = a),
      (a = Dl(ff, "onSelect")),
      0 < a.length &&
        ((t = new Op("onSelect", "select", null, t, r)),
        e.push({ event: t, listeners: a }),
        (t.target = la))));
}
function Ds(e, t) {
  var r = {};
  return (
    (r[e.toLowerCase()] = t.toLowerCase()),
    (r["Webkit" + e] = "webkit" + t),
    (r["Moz" + e] = "moz" + t),
    r
  );
}
var ca = {
    animationend: Ds("Animation", "AnimationEnd"),
    animationiteration: Ds("Animation", "AnimationIteration"),
    animationstart: Ds("Animation", "AnimationStart"),
    transitionend: Ds("Transition", "TransitionEnd"),
  },
  rh = {},
  e1 = {};
Pn &&
  ((e1 = document.createElement("div").style),
  "AnimationEvent" in window ||
    (delete ca.animationend.animation,
    delete ca.animationiteration.animation,
    delete ca.animationstart.animation),
  "TransitionEvent" in window || delete ca.transitionend.transition);
function Zu(e) {
  if (rh[e]) return rh[e];
  if (!ca[e]) return e;
  var t = ca[e],
    r;
  for (r in t) if (t.hasOwnProperty(r) && r in e1) return (rh[e] = t[r]);
  return e;
}
var t1 = Zu("animationend"),
  r1 = Zu("animationiteration"),
  n1 = Zu("animationstart"),
  i1 = Zu("transitionend"),
  a1 = new Map(),
  Fm =
    "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
      " ",
    );
function ci(e, t) {
  a1.set(e, t), Bi(t, [e]);
}
for (var nh = 0; nh < Fm.length; nh++) {
  var ih = Fm[nh],
    LE = ih.toLowerCase(),
    TE = ih[0].toUpperCase() + ih.slice(1);
  ci(LE, "on" + TE);
}
ci(t1, "onAnimationEnd");
ci(r1, "onAnimationIteration");
ci(n1, "onAnimationStart");
ci("dblclick", "onDoubleClick");
ci("focusin", "onFocus");
ci("focusout", "onBlur");
ci(i1, "onTransitionEnd");
Ea("onMouseEnter", ["mouseout", "mouseover"]);
Ea("onMouseLeave", ["mouseout", "mouseover"]);
Ea("onPointerEnter", ["pointerout", "pointerover"]);
Ea("onPointerLeave", ["pointerout", "pointerover"]);
Bi(
  "onChange",
  "change click focusin focusout input keydown keyup selectionchange".split(
    " ",
  ),
);
Bi(
  "onSelect",
  "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
    " ",
  ),
);
Bi("onBeforeInput", ["compositionend", "keypress", "textInput", "paste"]);
Bi(
  "onCompositionEnd",
  "compositionend focusout keydown keypress keyup mousedown".split(" "),
);
Bi(
  "onCompositionStart",
  "compositionstart focusout keydown keypress keyup mousedown".split(" "),
);
Bi(
  "onCompositionUpdate",
  "compositionupdate focusout keydown keypress keyup mousedown".split(" "),
);
var Oo =
    "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
      " ",
    ),
  IE = new Set("cancel close invalid load scroll toggle".split(" ").concat(Oo));
function jm(e, t, r) {
  var a = e.type || "unknown-event";
  (e.currentTarget = r), LA(a, t, void 0, e), (e.currentTarget = null);
}
function o1(e, t) {
  t = (t & 4) !== 0;
  for (var r = 0; r < e.length; r++) {
    var a = e[r],
      c = a.event;
    a = a.listeners;
    e: {
      var h = void 0;
      if (t)
        for (var p = a.length - 1; 0 <= p; p--) {
          var v = a[p],
            b = v.instance,
            P = v.currentTarget;
          if (((v = v.listener), b !== h && c.isPropagationStopped())) break e;
          jm(c, v, P), (h = b);
        }
      else
        for (p = 0; p < a.length; p++) {
          if (
            ((v = a[p]),
            (b = v.instance),
            (P = v.currentTarget),
            (v = v.listener),
            b !== h && c.isPropagationStopped())
          )
            break e;
          jm(c, v, P), (h = b);
        }
    }
  }
  if (Tl) throw ((e = cf), (Tl = !1), (cf = null), e);
}
function at(e, t) {
  var r = t[xf];
  r === void 0 && (r = t[xf] = new Set());
  var a = e + "__bubble";
  r.has(a) || (s1(t, e, 2, !1), r.add(a));
}
function ah(e, t, r) {
  var a = 0;
  t && (a |= 4), s1(r, e, a, t);
}
var zs = "_reactListening" + Math.random().toString(36).slice(2);
function qo(e) {
  if (!e[zs]) {
    (e[zs] = !0),
      pw.forEach(function (r) {
        r !== "selectionchange" && (IE.has(r) || ah(r, !1, e), ah(r, !0, e));
      });
    var t = e.nodeType === 9 ? e : e.ownerDocument;
    t === null || t[zs] || ((t[zs] = !0), ah("selectionchange", !1, t));
  }
}
function s1(e, t, r, a) {
  switch (Yw(t)) {
    case 1:
      var c = GA;
      break;
    case 4:
      c = UA;
      break;
    default:
      c = _p;
  }
  (r = c.bind(null, t, r, e)),
    (c = void 0),
    !lf ||
      (t !== "touchstart" && t !== "touchmove" && t !== "wheel") ||
      (c = !0),
    a
      ? c !== void 0
        ? e.addEventListener(t, r, { capture: !0, passive: c })
        : e.addEventListener(t, r, !0)
      : c !== void 0
      ? e.addEventListener(t, r, { passive: c })
      : e.addEventListener(t, r, !1);
}
function oh(e, t, r, a, c) {
  var h = a;
  if (!(t & 1) && !(t & 2) && a !== null)
    e: for (;;) {
      if (a === null) return;
      var p = a.tag;
      if (p === 3 || p === 4) {
        var v = a.stateNode.containerInfo;
        if (v === c || (v.nodeType === 8 && v.parentNode === c)) break;
        if (p === 4)
          for (p = a.return; p !== null; ) {
            var b = p.tag;
            if (
              (b === 3 || b === 4) &&
              ((b = p.stateNode.containerInfo),
              b === c || (b.nodeType === 8 && b.parentNode === c))
            )
              return;
            p = p.return;
          }
        for (; v !== null; ) {
          if (((p = Pi(v)), p === null)) return;
          if (((b = p.tag), b === 5 || b === 6)) {
            a = h = p;
            continue e;
          }
          v = v.parentNode;
        }
      }
      a = a.return;
    }
  Rw(function () {
    var P = h,
      k = bp(r),
      R = [];
    e: {
      var L = a1.get(e);
      if (L !== void 0) {
        var z = Op,
          M = e;
        switch (e) {
          case "keypress":
            if (ml(r) === 0) break e;
          case "keydown":
          case "keyup":
            z = cE;
            break;
          case "focusin":
            (M = "focus"), (z = Jd);
            break;
          case "focusout":
            (M = "blur"), (z = Jd);
            break;
          case "beforeblur":
          case "afterblur":
            z = Jd;
            break;
          case "click":
            if (r.button === 2) break e;
          case "auxclick":
          case "dblclick":
          case "mousedown":
          case "mousemove":
          case "mouseup":
          case "mouseout":
          case "mouseover":
          case "contextmenu":
            z = Am;
            break;
          case "drag":
          case "dragend":
          case "dragenter":
          case "dragexit":
          case "dragleave":
          case "dragover":
          case "dragstart":
          case "drop":
            z = KA;
            break;
          case "touchcancel":
          case "touchend":
          case "touchmove":
          case "touchstart":
            z = hE;
            break;
          case t1:
          case r1:
          case n1:
            z = eE;
            break;
          case i1:
            z = pE;
            break;
          case "scroll":
            z = qA;
            break;
          case "wheel":
            z = mE;
            break;
          case "copy":
          case "cut":
          case "paste":
            z = rE;
            break;
          case "gotpointercapture":
          case "lostpointercapture":
          case "pointercancel":
          case "pointerdown":
          case "pointermove":
          case "pointerout":
          case "pointerover":
          case "pointerup":
            z = Rm;
        }
        var F = (t & 4) !== 0,
          G = !F && e === "scroll",
          $ = F ? (L !== null ? L + "Capture" : null) : L;
        F = [];
        for (var O = P, X; O !== null; ) {
          X = O;
          var N = X.stateNode;
          if (
            (X.tag === 5 &&
              N !== null &&
              ((X = N),
              $ !== null && ((N = Bo(O, $)), N != null && F.push(Zo(O, N, X)))),
            G)
          )
            break;
          O = O.return;
        }
        0 < F.length &&
          ((L = new z(L, M, null, r, k)), R.push({ event: L, listeners: F }));
      }
    }
    if (!(t & 7)) {
      e: {
        if (
          ((L = e === "mouseover" || e === "pointerover"),
          (z = e === "mouseout" || e === "pointerout"),
          L &&
            r !== of &&
            (M = r.relatedTarget || r.fromElement) &&
            (Pi(M) || M[_n]))
        )
          break e;
        if (
          (z || L) &&
          ((L =
            k.window === k
              ? k
              : (L = k.ownerDocument)
              ? L.defaultView || L.parentWindow
              : window),
          z
            ? ((M = r.relatedTarget || r.toElement),
              (z = P),
              (M = M ? Pi(M) : null),
              M !== null &&
                ((G = Yi(M)), M !== G || (M.tag !== 5 && M.tag !== 6)) &&
                (M = null))
            : ((z = null), (M = P)),
          z !== M)
        ) {
          if (
            ((F = Am),
            (N = "onMouseLeave"),
            ($ = "onMouseEnter"),
            (O = "mouse"),
            (e === "pointerout" || e === "pointerover") &&
              ((F = Rm),
              (N = "onPointerLeave"),
              ($ = "onPointerEnter"),
              (O = "pointer")),
            (G = z == null ? L : ua(z)),
            (X = M == null ? L : ua(M)),
            (L = new F(N, O + "leave", z, r, k)),
            (L.target = G),
            (L.relatedTarget = X),
            (N = null),
            Pi(k) === P &&
              ((F = new F($, O + "enter", M, r, k)),
              (F.target = X),
              (F.relatedTarget = G),
              (N = F)),
            (G = N),
            z && M)
          )
            t: {
              for (F = z, $ = M, O = 0, X = F; X; X = Ji(X)) O++;
              for (X = 0, N = $; N; N = Ji(N)) X++;
              for (; 0 < O - X; ) (F = Ji(F)), O--;
              for (; 0 < X - O; ) ($ = Ji($)), X--;
              for (; O--; ) {
                if (F === $ || ($ !== null && F === $.alternate)) break t;
                (F = Ji(F)), ($ = Ji($));
              }
              F = null;
            }
          else F = null;
          z !== null && Hm(R, L, z, F, !1),
            M !== null && G !== null && Hm(R, G, M, F, !0);
        }
      }
      e: {
        if (
          ((L = P ? ua(P) : window),
          (z = L.nodeName && L.nodeName.toLowerCase()),
          z === "select" || (z === "input" && L.type === "file"))
        )
          var B = PE;
        else if (Im(L))
          if (Zw) B = kE;
          else {
            B = CE;
            var U = _E;
          }
        else
          (z = L.nodeName) &&
            z.toLowerCase() === "input" &&
            (L.type === "checkbox" || L.type === "radio") &&
            (B = OE);
        if (B && (B = B(e, P))) {
          qw(R, B, r, k);
          break e;
        }
        U && U(e, L, P),
          e === "focusout" &&
            (U = L._wrapperState) &&
            U.controlled &&
            L.type === "number" &&
            ef(L, "number", L.value);
      }
      switch (((U = P ? ua(P) : window), e)) {
        case "focusin":
          (Im(U) || U.contentEditable === "true") &&
            ((la = U), (ff = P), (To = null));
          break;
        case "focusout":
          To = ff = la = null;
          break;
        case "mousedown":
          pf = !0;
          break;
        case "contextmenu":
        case "mouseup":
        case "dragend":
          (pf = !1), zm(R, r, k);
          break;
        case "selectionchange":
          if (RE) break;
        case "keydown":
        case "keyup":
          zm(R, r, k);
      }
      var Q;
      if (Ap)
        e: {
          switch (e) {
            case "compositionstart":
              var ee = "onCompositionStart";
              break e;
            case "compositionend":
              ee = "onCompositionEnd";
              break e;
            case "compositionupdate":
              ee = "onCompositionUpdate";
              break e;
          }
          ee = void 0;
        }
      else
        sa
          ? Gw(e, r) && (ee = "onCompositionEnd")
          : e === "keydown" && r.keyCode === 229 && (ee = "onCompositionStart");
      ee &&
        (Vw &&
          r.locale !== "ko" &&
          (sa || ee !== "onCompositionStart"
            ? ee === "onCompositionEnd" && sa && (Q = Ww())
            : ((Vn = k),
              (Cp = "value" in Vn ? Vn.value : Vn.textContent),
              (sa = !0))),
        (U = Dl(P, ee)),
        0 < U.length &&
          ((ee = new Em(ee, e, null, r, k)),
          R.push({ event: ee, listeners: U }),
          Q ? (ee.data = Q) : ((Q = Uw(r)), Q !== null && (ee.data = Q)))),
        (Q = yE ? xE(e, r) : bE(e, r)) &&
          ((P = Dl(P, "onBeforeInput")),
          0 < P.length &&
            ((k = new Em("onBeforeInput", "beforeinput", null, r, k)),
            R.push({ event: k, listeners: P }),
            (k.data = Q)));
    }
    o1(R, t);
  });
}
function Zo(e, t, r) {
  return { instance: e, listener: t, currentTarget: r };
}
function Dl(e, t) {
  for (var r = t + "Capture", a = []; e !== null; ) {
    var c = e,
      h = c.stateNode;
    c.tag === 5 &&
      h !== null &&
      ((c = h),
      (h = Bo(e, r)),
      h != null && a.unshift(Zo(e, h, c)),
      (h = Bo(e, t)),
      h != null && a.push(Zo(e, h, c))),
      (e = e.return);
  }
  return a;
}
function Ji(e) {
  if (e === null) return null;
  do e = e.return;
  while (e && e.tag !== 5);
  return e || null;
}
function Hm(e, t, r, a, c) {
  for (var h = t._reactName, p = []; r !== null && r !== a; ) {
    var v = r,
      b = v.alternate,
      P = v.stateNode;
    if (b !== null && b === a) break;
    v.tag === 5 &&
      P !== null &&
      ((v = P),
      c
        ? ((b = Bo(r, h)), b != null && p.unshift(Zo(r, b, v)))
        : c || ((b = Bo(r, h)), b != null && p.push(Zo(r, b, v)))),
      (r = r.return);
  }
  p.length !== 0 && e.push({ event: t, listeners: p });
}
var NE = /\r\n?/g,
  ME = /\u0000|\uFFFD/g;
function Xm(e) {
  return (typeof e == "string" ? e : "" + e)
    .replace(
      NE,
      `
`,
    )
    .replace(ME, "");
}
function Fs(e, t, r) {
  if (((t = Xm(t)), Xm(e) !== t && r)) throw Error(ge(425));
}
function zl() {}
var gf = null,
  mf = null;
function vf(e, t) {
  return (
    e === "textarea" ||
    e === "noscript" ||
    typeof t.children == "string" ||
    typeof t.children == "number" ||
    (typeof t.dangerouslySetInnerHTML == "object" &&
      t.dangerouslySetInnerHTML !== null &&
      t.dangerouslySetInnerHTML.__html != null)
  );
}
var yf = typeof setTimeout == "function" ? setTimeout : void 0,
  $E = typeof clearTimeout == "function" ? clearTimeout : void 0,
  Bm = typeof Promise == "function" ? Promise : void 0,
  DE =
    typeof queueMicrotask == "function"
      ? queueMicrotask
      : typeof Bm < "u"
      ? function (e) {
          return Bm.resolve(null).then(e).catch(zE);
        }
      : yf;
function zE(e) {
  setTimeout(function () {
    throw e;
  });
}
function sh(e, t) {
  var r = t,
    a = 0;
  do {
    var c = r.nextSibling;
    if ((e.removeChild(r), c && c.nodeType === 8))
      if (((r = c.data), r === "/$")) {
        if (a === 0) {
          e.removeChild(c), Vo(t);
          return;
        }
        a--;
      } else (r !== "$" && r !== "$?" && r !== "$!") || a++;
    r = c;
  } while (r);
  Vo(t);
}
function Qn(e) {
  for (; e != null; e = e.nextSibling) {
    var t = e.nodeType;
    if (t === 1 || t === 3) break;
    if (t === 8) {
      if (((t = e.data), t === "$" || t === "$!" || t === "$?")) break;
      if (t === "/$") return null;
    }
  }
  return e;
}
function Ym(e) {
  e = e.previousSibling;
  for (var t = 0; e; ) {
    if (e.nodeType === 8) {
      var r = e.data;
      if (r === "$" || r === "$!" || r === "$?") {
        if (t === 0) return e;
        t--;
      } else r === "/$" && t++;
    }
    e = e.previousSibling;
  }
  return null;
}
var Ya = Math.random().toString(36).slice(2),
  tn = "__reactFiber$" + Ya,
  Ko = "__reactProps$" + Ya,
  _n = "__reactContainer$" + Ya,
  xf = "__reactEvents$" + Ya,
  FE = "__reactListeners$" + Ya,
  jE = "__reactHandles$" + Ya;
function Pi(e) {
  var t = e[tn];
  if (t) return t;
  for (var r = e.parentNode; r; ) {
    if ((t = r[_n] || r[tn])) {
      if (
        ((r = t.alternate),
        t.child !== null || (r !== null && r.child !== null))
      )
        for (e = Ym(e); e !== null; ) {
          if ((r = e[tn])) return r;
          e = Ym(e);
        }
      return t;
    }
    (e = r), (r = e.parentNode);
  }
  return null;
}
function us(e) {
  return (
    (e = e[tn] || e[_n]),
    !e || (e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3) ? null : e
  );
}
function ua(e) {
  if (e.tag === 5 || e.tag === 6) return e.stateNode;
  throw Error(ge(33));
}
function Ku(e) {
  return e[Ko] || null;
}
var bf = [],
  da = -1;
function ui(e) {
  return { current: e };
}
function ot(e) {
  0 > da || ((e.current = bf[da]), (bf[da] = null), da--);
}
function tt(e, t) {
  da++, (bf[da] = e.current), (e.current = t);
}
var ii = {},
  Ht = ui(ii),
  nr = ui(!1),
  Ni = ii;
function Ra(e, t) {
  var r = e.type.contextTypes;
  if (!r) return ii;
  var a = e.stateNode;
  if (a && a.__reactInternalMemoizedUnmaskedChildContext === t)
    return a.__reactInternalMemoizedMaskedChildContext;
  var c = {},
    h;
  for (h in r) c[h] = t[h];
  return (
    a &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = t),
      (e.__reactInternalMemoizedMaskedChildContext = c)),
    c
  );
}
function ir(e) {
  return (e = e.childContextTypes), e != null;
}
function Fl() {
  ot(nr), ot(Ht);
}
function Wm(e, t, r) {
  if (Ht.current !== ii) throw Error(ge(168));
  tt(Ht, t), tt(nr, r);
}
function l1(e, t, r) {
  var a = e.stateNode;
  if (((t = t.childContextTypes), typeof a.getChildContext != "function"))
    return r;
  a = a.getChildContext();
  for (var c in a) if (!(c in t)) throw Error(ge(108, _A(e) || "Unknown", c));
  return dt({}, r, a);
}
function jl(e) {
  return (
    (e =
      ((e = e.stateNode) && e.__reactInternalMemoizedMergedChildContext) || ii),
    (Ni = Ht.current),
    tt(Ht, e),
    tt(nr, nr.current),
    !0
  );
}
function Vm(e, t, r) {
  var a = e.stateNode;
  if (!a) throw Error(ge(169));
  r
    ? ((e = l1(e, t, Ni)),
      (a.__reactInternalMemoizedMergedChildContext = e),
      ot(nr),
      ot(Ht),
      tt(Ht, e))
    : ot(nr),
    tt(nr, r);
}
var mn = null,
  Qu = !1,
  lh = !1;
function c1(e) {
  mn === null ? (mn = [e]) : mn.push(e);
}
function HE(e) {
  (Qu = !0), c1(e);
}
function di() {
  if (!lh && mn !== null) {
    lh = !0;
    var e = 0,
      t = Ze;
    try {
      var r = mn;
      for (Ze = 1; e < r.length; e++) {
        var a = r[e];
        do a = a(!0);
        while (a !== null);
      }
      (mn = null), (Qu = !1);
    } catch (c) {
      throw (mn !== null && (mn = mn.slice(e + 1)), Nw(wp, di), c);
    } finally {
      (Ze = t), (lh = !1);
    }
  }
  return null;
}
var ha = [],
  fa = 0,
  Hl = null,
  Xl = 0,
  yr = [],
  xr = 0,
  Mi = null,
  vn = 1,
  yn = "";
function bi(e, t) {
  (ha[fa++] = Xl), (ha[fa++] = Hl), (Hl = e), (Xl = t);
}
function u1(e, t, r) {
  (yr[xr++] = vn), (yr[xr++] = yn), (yr[xr++] = Mi), (Mi = e);
  var a = vn;
  e = yn;
  var c = 32 - jr(a) - 1;
  (a &= ~(1 << c)), (r += 1);
  var h = 32 - jr(t) + c;
  if (30 < h) {
    var p = c - (c % 5);
    (h = (a & ((1 << p) - 1)).toString(32)),
      (a >>= p),
      (c -= p),
      (vn = (1 << (32 - jr(t) + c)) | (r << c) | a),
      (yn = h + e);
  } else (vn = (1 << h) | (r << c) | a), (yn = e);
}
function Rp(e) {
  e.return !== null && (bi(e, 1), u1(e, 1, 0));
}
function Lp(e) {
  for (; e === Hl; )
    (Hl = ha[--fa]), (ha[fa] = null), (Xl = ha[--fa]), (ha[fa] = null);
  for (; e === Mi; )
    (Mi = yr[--xr]),
      (yr[xr] = null),
      (yn = yr[--xr]),
      (yr[xr] = null),
      (vn = yr[--xr]),
      (yr[xr] = null);
}
var dr = null,
  ur = null,
  st = !1,
  zr = null;
function d1(e, t) {
  var r = br(5, null, null, 0);
  (r.elementType = "DELETED"),
    (r.stateNode = t),
    (r.return = e),
    (t = e.deletions),
    t === null ? ((e.deletions = [r]), (e.flags |= 16)) : t.push(r);
}
function Gm(e, t) {
  switch (e.tag) {
    case 5:
      var r = e.type;
      return (
        (t =
          t.nodeType !== 1 || r.toLowerCase() !== t.nodeName.toLowerCase()
            ? null
            : t),
        t !== null
          ? ((e.stateNode = t), (dr = e), (ur = Qn(t.firstChild)), !0)
          : !1
      );
    case 6:
      return (
        (t = e.pendingProps === "" || t.nodeType !== 3 ? null : t),
        t !== null ? ((e.stateNode = t), (dr = e), (ur = null), !0) : !1
      );
    case 13:
      return (
        (t = t.nodeType !== 8 ? null : t),
        t !== null
          ? ((r = Mi !== null ? { id: vn, overflow: yn } : null),
            (e.memoizedState = {
              dehydrated: t,
              treeContext: r,
              retryLane: 1073741824,
            }),
            (r = br(18, null, null, 0)),
            (r.stateNode = t),
            (r.return = e),
            (e.child = r),
            (dr = e),
            (ur = null),
            !0)
          : !1
      );
    default:
      return !1;
  }
}
function wf(e) {
  return (e.mode & 1) !== 0 && (e.flags & 128) === 0;
}
function Sf(e) {
  if (st) {
    var t = ur;
    if (t) {
      var r = t;
      if (!Gm(e, t)) {
        if (wf(e)) throw Error(ge(418));
        t = Qn(r.nextSibling);
        var a = dr;
        t && Gm(e, t)
          ? d1(a, r)
          : ((e.flags = (e.flags & -4097) | 2), (st = !1), (dr = e));
      }
    } else {
      if (wf(e)) throw Error(ge(418));
      (e.flags = (e.flags & -4097) | 2), (st = !1), (dr = e);
    }
  }
}
function Um(e) {
  for (e = e.return; e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13; )
    e = e.return;
  dr = e;
}
function js(e) {
  if (e !== dr) return !1;
  if (!st) return Um(e), (st = !0), !1;
  var t;
  if (
    ((t = e.tag !== 3) &&
      !(t = e.tag !== 5) &&
      ((t = e.type),
      (t = t !== "head" && t !== "body" && !vf(e.type, e.memoizedProps))),
    t && (t = ur))
  ) {
    if (wf(e)) throw (h1(), Error(ge(418)));
    for (; t; ) d1(e, t), (t = Qn(t.nextSibling));
  }
  if ((Um(e), e.tag === 13)) {
    if (((e = e.memoizedState), (e = e !== null ? e.dehydrated : null), !e))
      throw Error(ge(317));
    e: {
      for (e = e.nextSibling, t = 0; e; ) {
        if (e.nodeType === 8) {
          var r = e.data;
          if (r === "/$") {
            if (t === 0) {
              ur = Qn(e.nextSibling);
              break e;
            }
            t--;
          } else (r !== "$" && r !== "$!" && r !== "$?") || t++;
        }
        e = e.nextSibling;
      }
      ur = null;
    }
  } else ur = dr ? Qn(e.stateNode.nextSibling) : null;
  return !0;
}
function h1() {
  for (var e = ur; e; ) e = Qn(e.nextSibling);
}
function La() {
  (ur = dr = null), (st = !1);
}
function Tp(e) {
  zr === null ? (zr = [e]) : zr.push(e);
}
var XE = En.ReactCurrentBatchConfig;
function Nr(e, t) {
  if (e && e.defaultProps) {
    (t = dt({}, t)), (e = e.defaultProps);
    for (var r in e) t[r] === void 0 && (t[r] = e[r]);
    return t;
  }
  return t;
}
var Bl = ui(null),
  Yl = null,
  pa = null,
  Ip = null;
function Np() {
  Ip = pa = Yl = null;
}
function Mp(e) {
  var t = Bl.current;
  ot(Bl), (e._currentValue = t);
}
function Pf(e, t, r) {
  for (; e !== null; ) {
    var a = e.alternate;
    if (
      ((e.childLanes & t) !== t
        ? ((e.childLanes |= t), a !== null && (a.childLanes |= t))
        : a !== null && (a.childLanes & t) !== t && (a.childLanes |= t),
      e === r)
    )
      break;
    e = e.return;
  }
}
function Pa(e, t) {
  (Yl = e),
    (Ip = pa = null),
    (e = e.dependencies),
    e !== null &&
      e.firstContext !== null &&
      (e.lanes & t && (rr = !0), (e.firstContext = null));
}
function Sr(e) {
  var t = e._currentValue;
  if (Ip !== e)
    if (((e = { context: e, memoizedValue: t, next: null }), pa === null)) {
      if (Yl === null) throw Error(ge(308));
      (pa = e), (Yl.dependencies = { lanes: 0, firstContext: e });
    } else pa = pa.next = e;
  return t;
}
var _i = null;
function $p(e) {
  _i === null ? (_i = [e]) : _i.push(e);
}
function f1(e, t, r, a) {
  var c = t.interleaved;
  return (
    c === null ? ((r.next = r), $p(t)) : ((r.next = c.next), (c.next = r)),
    (t.interleaved = r),
    Cn(e, a)
  );
}
function Cn(e, t) {
  e.lanes |= t;
  var r = e.alternate;
  for (r !== null && (r.lanes |= t), r = e, e = e.return; e !== null; )
    (e.childLanes |= t),
      (r = e.alternate),
      r !== null && (r.childLanes |= t),
      (r = e),
      (e = e.return);
  return r.tag === 3 ? r.stateNode : null;
}
var Xn = !1;
function Dp(e) {
  e.updateQueue = {
    baseState: e.memoizedState,
    firstBaseUpdate: null,
    lastBaseUpdate: null,
    shared: { pending: null, interleaved: null, lanes: 0 },
    effects: null,
  };
}
function p1(e, t) {
  (e = e.updateQueue),
    t.updateQueue === e &&
      (t.updateQueue = {
        baseState: e.baseState,
        firstBaseUpdate: e.firstBaseUpdate,
        lastBaseUpdate: e.lastBaseUpdate,
        shared: e.shared,
        effects: e.effects,
      });
}
function xn(e, t) {
  return {
    eventTime: e,
    lane: t,
    tag: 0,
    payload: null,
    callback: null,
    next: null,
  };
}
function Jn(e, t, r) {
  var a = e.updateQueue;
  if (a === null) return null;
  if (((a = a.shared), Ye & 2)) {
    var c = a.pending;
    return (
      c === null ? (t.next = t) : ((t.next = c.next), (c.next = t)),
      (a.pending = t),
      Cn(e, r)
    );
  }
  return (
    (c = a.interleaved),
    c === null ? ((t.next = t), $p(a)) : ((t.next = c.next), (c.next = t)),
    (a.interleaved = t),
    Cn(e, r)
  );
}
function vl(e, t, r) {
  if (
    ((t = t.updateQueue), t !== null && ((t = t.shared), (r & 4194240) !== 0))
  ) {
    var a = t.lanes;
    (a &= e.pendingLanes), (r |= a), (t.lanes = r), Sp(e, r);
  }
}
function qm(e, t) {
  var r = e.updateQueue,
    a = e.alternate;
  if (a !== null && ((a = a.updateQueue), r === a)) {
    var c = null,
      h = null;
    if (((r = r.firstBaseUpdate), r !== null)) {
      do {
        var p = {
          eventTime: r.eventTime,
          lane: r.lane,
          tag: r.tag,
          payload: r.payload,
          callback: r.callback,
          next: null,
        };
        h === null ? (c = h = p) : (h = h.next = p), (r = r.next);
      } while (r !== null);
      h === null ? (c = h = t) : (h = h.next = t);
    } else c = h = t;
    (r = {
      baseState: a.baseState,
      firstBaseUpdate: c,
      lastBaseUpdate: h,
      shared: a.shared,
      effects: a.effects,
    }),
      (e.updateQueue = r);
    return;
  }
  (e = r.lastBaseUpdate),
    e === null ? (r.firstBaseUpdate = t) : (e.next = t),
    (r.lastBaseUpdate = t);
}
function Wl(e, t, r, a) {
  var c = e.updateQueue;
  Xn = !1;
  var h = c.firstBaseUpdate,
    p = c.lastBaseUpdate,
    v = c.shared.pending;
  if (v !== null) {
    c.shared.pending = null;
    var b = v,
      P = b.next;
    (b.next = null), p === null ? (h = P) : (p.next = P), (p = b);
    var k = e.alternate;
    k !== null &&
      ((k = k.updateQueue),
      (v = k.lastBaseUpdate),
      v !== p &&
        (v === null ? (k.firstBaseUpdate = P) : (v.next = P),
        (k.lastBaseUpdate = b)));
  }
  if (h !== null) {
    var R = c.baseState;
    (p = 0), (k = P = b = null), (v = h);
    do {
      var L = v.lane,
        z = v.eventTime;
      if ((a & L) === L) {
        k !== null &&
          (k = k.next =
            {
              eventTime: z,
              lane: 0,
              tag: v.tag,
              payload: v.payload,
              callback: v.callback,
              next: null,
            });
        e: {
          var M = e,
            F = v;
          switch (((L = t), (z = r), F.tag)) {
            case 1:
              if (((M = F.payload), typeof M == "function")) {
                R = M.call(z, R, L);
                break e;
              }
              R = M;
              break e;
            case 3:
              M.flags = (M.flags & -65537) | 128;
            case 0:
              if (
                ((M = F.payload),
                (L = typeof M == "function" ? M.call(z, R, L) : M),
                L == null)
              )
                break e;
              R = dt({}, R, L);
              break e;
            case 2:
              Xn = !0;
          }
        }
        v.callback !== null &&
          v.lane !== 0 &&
          ((e.flags |= 64),
          (L = c.effects),
          L === null ? (c.effects = [v]) : L.push(v));
      } else
        (z = {
          eventTime: z,
          lane: L,
          tag: v.tag,
          payload: v.payload,
          callback: v.callback,
          next: null,
        }),
          k === null ? ((P = k = z), (b = R)) : (k = k.next = z),
          (p |= L);
      if (((v = v.next), v === null)) {
        if (((v = c.shared.pending), v === null)) break;
        (L = v),
          (v = L.next),
          (L.next = null),
          (c.lastBaseUpdate = L),
          (c.shared.pending = null);
      }
    } while (1);
    if (
      (k === null && (b = R),
      (c.baseState = b),
      (c.firstBaseUpdate = P),
      (c.lastBaseUpdate = k),
      (t = c.shared.interleaved),
      t !== null)
    ) {
      c = t;
      do (p |= c.lane), (c = c.next);
      while (c !== t);
    } else h === null && (c.shared.lanes = 0);
    (Di |= p), (e.lanes = p), (e.memoizedState = R);
  }
}
function Zm(e, t, r) {
  if (((e = t.effects), (t.effects = null), e !== null))
    for (t = 0; t < e.length; t++) {
      var a = e[t],
        c = a.callback;
      if (c !== null) {
        if (((a.callback = null), (a = r), typeof c != "function"))
          throw Error(ge(191, c));
        c.call(a);
      }
    }
}
var g1 = new fw.Component().refs;
function _f(e, t, r, a) {
  (t = e.memoizedState),
    (r = r(a, t)),
    (r = r == null ? t : dt({}, t, r)),
    (e.memoizedState = r),
    e.lanes === 0 && (e.updateQueue.baseState = r);
}
var Ju = {
  isMounted: function (e) {
    return (e = e._reactInternals) ? Yi(e) === e : !1;
  },
  enqueueSetState: function (e, t, r) {
    e = e._reactInternals;
    var a = Ut(),
      c = ti(e),
      h = xn(a, c);
    (h.payload = t),
      r != null && (h.callback = r),
      (t = Jn(e, h, c)),
      t !== null && (Hr(t, e, c, a), vl(t, e, c));
  },
  enqueueReplaceState: function (e, t, r) {
    e = e._reactInternals;
    var a = Ut(),
      c = ti(e),
      h = xn(a, c);
    (h.tag = 1),
      (h.payload = t),
      r != null && (h.callback = r),
      (t = Jn(e, h, c)),
      t !== null && (Hr(t, e, c, a), vl(t, e, c));
  },
  enqueueForceUpdate: function (e, t) {
    e = e._reactInternals;
    var r = Ut(),
      a = ti(e),
      c = xn(r, a);
    (c.tag = 2),
      t != null && (c.callback = t),
      (t = Jn(e, c, a)),
      t !== null && (Hr(t, e, a, r), vl(t, e, a));
  },
};
function Km(e, t, r, a, c, h, p) {
  return (
    (e = e.stateNode),
    typeof e.shouldComponentUpdate == "function"
      ? e.shouldComponentUpdate(a, h, p)
      : t.prototype && t.prototype.isPureReactComponent
      ? !Uo(r, a) || !Uo(c, h)
      : !0
  );
}
function m1(e, t, r) {
  var a = !1,
    c = ii,
    h = t.contextType;
  return (
    typeof h == "object" && h !== null
      ? (h = Sr(h))
      : ((c = ir(t) ? Ni : Ht.current),
        (a = t.contextTypes),
        (h = (a = a != null) ? Ra(e, c) : ii)),
    (t = new t(r, h)),
    (e.memoizedState = t.state !== null && t.state !== void 0 ? t.state : null),
    (t.updater = Ju),
    (e.stateNode = t),
    (t._reactInternals = e),
    a &&
      ((e = e.stateNode),
      (e.__reactInternalMemoizedUnmaskedChildContext = c),
      (e.__reactInternalMemoizedMaskedChildContext = h)),
    t
  );
}
function Qm(e, t, r, a) {
  (e = t.state),
    typeof t.componentWillReceiveProps == "function" &&
      t.componentWillReceiveProps(r, a),
    typeof t.UNSAFE_componentWillReceiveProps == "function" &&
      t.UNSAFE_componentWillReceiveProps(r, a),
    t.state !== e && Ju.enqueueReplaceState(t, t.state, null);
}
function Cf(e, t, r, a) {
  var c = e.stateNode;
  (c.props = r), (c.state = e.memoizedState), (c.refs = g1), Dp(e);
  var h = t.contextType;
  typeof h == "object" && h !== null
    ? (c.context = Sr(h))
    : ((h = ir(t) ? Ni : Ht.current), (c.context = Ra(e, h))),
    (c.state = e.memoizedState),
    (h = t.getDerivedStateFromProps),
    typeof h == "function" && (_f(e, t, h, r), (c.state = e.memoizedState)),
    typeof t.getDerivedStateFromProps == "function" ||
      typeof c.getSnapshotBeforeUpdate == "function" ||
      (typeof c.UNSAFE_componentWillMount != "function" &&
        typeof c.componentWillMount != "function") ||
      ((t = c.state),
      typeof c.componentWillMount == "function" && c.componentWillMount(),
      typeof c.UNSAFE_componentWillMount == "function" &&
        c.UNSAFE_componentWillMount(),
      t !== c.state && Ju.enqueueReplaceState(c, c.state, null),
      Wl(e, r, c, a),
      (c.state = e.memoizedState)),
    typeof c.componentDidMount == "function" && (e.flags |= 4194308);
}
function co(e, t, r) {
  if (
    ((e = r.ref), e !== null && typeof e != "function" && typeof e != "object")
  ) {
    if (r._owner) {
      if (((r = r._owner), r)) {
        if (r.tag !== 1) throw Error(ge(309));
        var a = r.stateNode;
      }
      if (!a) throw Error(ge(147, e));
      var c = a,
        h = "" + e;
      return t !== null &&
        t.ref !== null &&
        typeof t.ref == "function" &&
        t.ref._stringRef === h
        ? t.ref
        : ((t = function (p) {
            var v = c.refs;
            v === g1 && (v = c.refs = {}),
              p === null ? delete v[h] : (v[h] = p);
          }),
          (t._stringRef = h),
          t);
    }
    if (typeof e != "string") throw Error(ge(284));
    if (!r._owner) throw Error(ge(290, e));
  }
  return e;
}
function Hs(e, t) {
  throw (
    ((e = Object.prototype.toString.call(t)),
    Error(
      ge(
        31,
        e === "[object Object]"
          ? "object with keys {" + Object.keys(t).join(", ") + "}"
          : e,
      ),
    ))
  );
}
function Jm(e) {
  var t = e._init;
  return t(e._payload);
}
function v1(e) {
  function t($, O) {
    if (e) {
      var X = $.deletions;
      X === null ? (($.deletions = [O]), ($.flags |= 16)) : X.push(O);
    }
  }
  function r($, O) {
    if (!e) return null;
    for (; O !== null; ) t($, O), (O = O.sibling);
    return null;
  }
  function a($, O) {
    for ($ = new Map(); O !== null; )
      O.key !== null ? $.set(O.key, O) : $.set(O.index, O), (O = O.sibling);
    return $;
  }
  function c($, O) {
    return ($ = ri($, O)), ($.index = 0), ($.sibling = null), $;
  }
  function h($, O, X) {
    return (
      ($.index = X),
      e
        ? ((X = $.alternate),
          X !== null
            ? ((X = X.index), X < O ? (($.flags |= 2), O) : X)
            : (($.flags |= 2), O))
        : (($.flags |= 1048576), O)
    );
  }
  function p($) {
    return e && $.alternate === null && ($.flags |= 2), $;
  }
  function v($, O, X, N) {
    return O === null || O.tag !== 6
      ? ((O = gh(X, $.mode, N)), (O.return = $), O)
      : ((O = c(O, X)), (O.return = $), O);
  }
  function b($, O, X, N) {
    var B = X.type;
    return B === oa
      ? k($, O, X.props.children, N, X.key)
      : O !== null &&
        (O.elementType === B ||
          (typeof B == "object" &&
            B !== null &&
            B.$$typeof === Hn &&
            Jm(B) === O.type))
      ? ((N = c(O, X.props)), (N.ref = co($, O, X)), (N.return = $), N)
      : ((N = Pl(X.type, X.key, X.props, null, $.mode, N)),
        (N.ref = co($, O, X)),
        (N.return = $),
        N);
  }
  function P($, O, X, N) {
    return O === null ||
      O.tag !== 4 ||
      O.stateNode.containerInfo !== X.containerInfo ||
      O.stateNode.implementation !== X.implementation
      ? ((O = mh(X, $.mode, N)), (O.return = $), O)
      : ((O = c(O, X.children || [])), (O.return = $), O);
  }
  function k($, O, X, N, B) {
    return O === null || O.tag !== 7
      ? ((O = Ri(X, $.mode, N, B)), (O.return = $), O)
      : ((O = c(O, X)), (O.return = $), O);
  }
  function R($, O, X) {
    if ((typeof O == "string" && O !== "") || typeof O == "number")
      return (O = gh("" + O, $.mode, X)), (O.return = $), O;
    if (typeof O == "object" && O !== null) {
      switch (O.$$typeof) {
        case Rs:
          return (
            (X = Pl(O.type, O.key, O.props, null, $.mode, X)),
            (X.ref = co($, null, O)),
            (X.return = $),
            X
          );
        case aa:
          return (O = mh(O, $.mode, X)), (O.return = $), O;
        case Hn:
          var N = O._init;
          return R($, N(O._payload), X);
      }
      if (_o(O) || io(O))
        return (O = Ri(O, $.mode, X, null)), (O.return = $), O;
      Hs($, O);
    }
    return null;
  }
  function L($, O, X, N) {
    var B = O !== null ? O.key : null;
    if ((typeof X == "string" && X !== "") || typeof X == "number")
      return B !== null ? null : v($, O, "" + X, N);
    if (typeof X == "object" && X !== null) {
      switch (X.$$typeof) {
        case Rs:
          return X.key === B ? b($, O, X, N) : null;
        case aa:
          return X.key === B ? P($, O, X, N) : null;
        case Hn:
          return (B = X._init), L($, O, B(X._payload), N);
      }
      if (_o(X) || io(X)) return B !== null ? null : k($, O, X, N, null);
      Hs($, X);
    }
    return null;
  }
  function z($, O, X, N, B) {
    if ((typeof N == "string" && N !== "") || typeof N == "number")
      return ($ = $.get(X) || null), v(O, $, "" + N, B);
    if (typeof N == "object" && N !== null) {
      switch (N.$$typeof) {
        case Rs:
          return ($ = $.get(N.key === null ? X : N.key) || null), b(O, $, N, B);
        case aa:
          return ($ = $.get(N.key === null ? X : N.key) || null), P(O, $, N, B);
        case Hn:
          var U = N._init;
          return z($, O, X, U(N._payload), B);
      }
      if (_o(N) || io(N)) return ($ = $.get(X) || null), k(O, $, N, B, null);
      Hs(O, N);
    }
    return null;
  }
  function M($, O, X, N) {
    for (
      var B = null, U = null, Q = O, ee = (O = 0), ne = null;
      Q !== null && ee < X.length;
      ee++
    ) {
      Q.index > ee ? ((ne = Q), (Q = null)) : (ne = Q.sibling);
      var le = L($, Q, X[ee], N);
      if (le === null) {
        Q === null && (Q = ne);
        break;
      }
      e && Q && le.alternate === null && t($, Q),
        (O = h(le, O, ee)),
        U === null ? (B = le) : (U.sibling = le),
        (U = le),
        (Q = ne);
    }
    if (ee === X.length) return r($, Q), st && bi($, ee), B;
    if (Q === null) {
      for (; ee < X.length; ee++)
        (Q = R($, X[ee], N)),
          Q !== null &&
            ((O = h(Q, O, ee)),
            U === null ? (B = Q) : (U.sibling = Q),
            (U = Q));
      return st && bi($, ee), B;
    }
    for (Q = a($, Q); ee < X.length; ee++)
      (ne = z(Q, $, ee, X[ee], N)),
        ne !== null &&
          (e &&
            ne.alternate !== null &&
            Q.delete(ne.key === null ? ee : ne.key),
          (O = h(ne, O, ee)),
          U === null ? (B = ne) : (U.sibling = ne),
          (U = ne));
    return (
      e &&
        Q.forEach(function (he) {
          return t($, he);
        }),
      st && bi($, ee),
      B
    );
  }
  function F($, O, X, N) {
    var B = io(X);
    if (typeof B != "function") throw Error(ge(150));
    if (((X = B.call(X)), X == null)) throw Error(ge(151));
    for (
      var U = (B = null), Q = O, ee = (O = 0), ne = null, le = X.next();
      Q !== null && !le.done;
      ee++, le = X.next()
    ) {
      Q.index > ee ? ((ne = Q), (Q = null)) : (ne = Q.sibling);
      var he = L($, Q, le.value, N);
      if (he === null) {
        Q === null && (Q = ne);
        break;
      }
      e && Q && he.alternate === null && t($, Q),
        (O = h(he, O, ee)),
        U === null ? (B = he) : (U.sibling = he),
        (U = he),
        (Q = ne);
    }
    if (le.done) return r($, Q), st && bi($, ee), B;
    if (Q === null) {
      for (; !le.done; ee++, le = X.next())
        (le = R($, le.value, N)),
          le !== null &&
            ((O = h(le, O, ee)),
            U === null ? (B = le) : (U.sibling = le),
            (U = le));
      return st && bi($, ee), B;
    }
    for (Q = a($, Q); !le.done; ee++, le = X.next())
      (le = z(Q, $, ee, le.value, N)),
        le !== null &&
          (e &&
            le.alternate !== null &&
            Q.delete(le.key === null ? ee : le.key),
          (O = h(le, O, ee)),
          U === null ? (B = le) : (U.sibling = le),
          (U = le));
    return (
      e &&
        Q.forEach(function (me) {
          return t($, me);
        }),
      st && bi($, ee),
      B
    );
  }
  function G($, O, X, N) {
    if (
      (typeof X == "object" &&
        X !== null &&
        X.type === oa &&
        X.key === null &&
        (X = X.props.children),
      typeof X == "object" && X !== null)
    ) {
      switch (X.$$typeof) {
        case Rs:
          e: {
            for (var B = X.key, U = O; U !== null; ) {
              if (U.key === B) {
                if (((B = X.type), B === oa)) {
                  if (U.tag === 7) {
                    r($, U.sibling),
                      (O = c(U, X.props.children)),
                      (O.return = $),
                      ($ = O);
                    break e;
                  }
                } else if (
                  U.elementType === B ||
                  (typeof B == "object" &&
                    B !== null &&
                    B.$$typeof === Hn &&
                    Jm(B) === U.type)
                ) {
                  r($, U.sibling),
                    (O = c(U, X.props)),
                    (O.ref = co($, U, X)),
                    (O.return = $),
                    ($ = O);
                  break e;
                }
                r($, U);
                break;
              } else t($, U);
              U = U.sibling;
            }
            X.type === oa
              ? ((O = Ri(X.props.children, $.mode, N, X.key)),
                (O.return = $),
                ($ = O))
              : ((N = Pl(X.type, X.key, X.props, null, $.mode, N)),
                (N.ref = co($, O, X)),
                (N.return = $),
                ($ = N));
          }
          return p($);
        case aa:
          e: {
            for (U = X.key; O !== null; ) {
              if (O.key === U)
                if (
                  O.tag === 4 &&
                  O.stateNode.containerInfo === X.containerInfo &&
                  O.stateNode.implementation === X.implementation
                ) {
                  r($, O.sibling),
                    (O = c(O, X.children || [])),
                    (O.return = $),
                    ($ = O);
                  break e;
                } else {
                  r($, O);
                  break;
                }
              else t($, O);
              O = O.sibling;
            }
            (O = mh(X, $.mode, N)), (O.return = $), ($ = O);
          }
          return p($);
        case Hn:
          return (U = X._init), G($, O, U(X._payload), N);
      }
      if (_o(X)) return M($, O, X, N);
      if (io(X)) return F($, O, X, N);
      Hs($, X);
    }
    return (typeof X == "string" && X !== "") || typeof X == "number"
      ? ((X = "" + X),
        O !== null && O.tag === 6
          ? (r($, O.sibling), (O = c(O, X)), (O.return = $), ($ = O))
          : (r($, O), (O = gh(X, $.mode, N)), (O.return = $), ($ = O)),
        p($))
      : r($, O);
  }
  return G;
}
var Ta = v1(!0),
  y1 = v1(!1),
  ds = {},
  on = ui(ds),
  Qo = ui(ds),
  Jo = ui(ds);
function Ci(e) {
  if (e === ds) throw Error(ge(174));
  return e;
}
function zp(e, t) {
  switch ((tt(Jo, t), tt(Qo, e), tt(on, ds), (e = t.nodeType), e)) {
    case 9:
    case 11:
      t = (t = t.documentElement) ? t.namespaceURI : rf(null, "");
      break;
    default:
      (e = e === 8 ? t.parentNode : t),
        (t = e.namespaceURI || null),
        (e = e.tagName),
        (t = rf(t, e));
  }
  ot(on), tt(on, t);
}
function Ia() {
  ot(on), ot(Qo), ot(Jo);
}
function x1(e) {
  Ci(Jo.current);
  var t = Ci(on.current),
    r = rf(t, e.type);
  t !== r && (tt(Qo, e), tt(on, r));
}
function Fp(e) {
  Qo.current === e && (ot(on), ot(Qo));
}
var ct = ui(0);
function Vl(e) {
  for (var t = e; t !== null; ) {
    if (t.tag === 13) {
      var r = t.memoizedState;
      if (
        r !== null &&
        ((r = r.dehydrated), r === null || r.data === "$?" || r.data === "$!")
      )
        return t;
    } else if (t.tag === 19 && t.memoizedProps.revealOrder !== void 0) {
      if (t.flags & 128) return t;
    } else if (t.child !== null) {
      (t.child.return = t), (t = t.child);
      continue;
    }
    if (t === e) break;
    for (; t.sibling === null; ) {
      if (t.return === null || t.return === e) return null;
      t = t.return;
    }
    (t.sibling.return = t.return), (t = t.sibling);
  }
  return null;
}
var ch = [];
function jp() {
  for (var e = 0; e < ch.length; e++)
    ch[e]._workInProgressVersionPrimary = null;
  ch.length = 0;
}
var yl = En.ReactCurrentDispatcher,
  uh = En.ReactCurrentBatchConfig,
  $i = 0,
  ut = null,
  Ct = null,
  At = null,
  Gl = !1,
  Io = !1,
  es = 0,
  BE = 0;
function Dt() {
  throw Error(ge(321));
}
function Hp(e, t) {
  if (t === null) return !1;
  for (var r = 0; r < t.length && r < e.length; r++)
    if (!Yr(e[r], t[r])) return !1;
  return !0;
}
function Xp(e, t, r, a, c, h) {
  if (
    (($i = h),
    (ut = t),
    (t.memoizedState = null),
    (t.updateQueue = null),
    (t.lanes = 0),
    (yl.current = e === null || e.memoizedState === null ? GE : UE),
    (e = r(a, c)),
    Io)
  ) {
    h = 0;
    do {
      if (((Io = !1), (es = 0), 25 <= h)) throw Error(ge(301));
      (h += 1),
        (At = Ct = null),
        (t.updateQueue = null),
        (yl.current = qE),
        (e = r(a, c));
    } while (Io);
  }
  if (
    ((yl.current = Ul),
    (t = Ct !== null && Ct.next !== null),
    ($i = 0),
    (At = Ct = ut = null),
    (Gl = !1),
    t)
  )
    throw Error(ge(300));
  return e;
}
function Bp() {
  var e = es !== 0;
  return (es = 0), e;
}
function Jr() {
  var e = {
    memoizedState: null,
    baseState: null,
    baseQueue: null,
    queue: null,
    next: null,
  };
  return At === null ? (ut.memoizedState = At = e) : (At = At.next = e), At;
}
function Pr() {
  if (Ct === null) {
    var e = ut.alternate;
    e = e !== null ? e.memoizedState : null;
  } else e = Ct.next;
  var t = At === null ? ut.memoizedState : At.next;
  if (t !== null) (At = t), (Ct = e);
  else {
    if (e === null) throw Error(ge(310));
    (Ct = e),
      (e = {
        memoizedState: Ct.memoizedState,
        baseState: Ct.baseState,
        baseQueue: Ct.baseQueue,
        queue: Ct.queue,
        next: null,
      }),
      At === null ? (ut.memoizedState = At = e) : (At = At.next = e);
  }
  return At;
}
function ts(e, t) {
  return typeof t == "function" ? t(e) : t;
}
function dh(e) {
  var t = Pr(),
    r = t.queue;
  if (r === null) throw Error(ge(311));
  r.lastRenderedReducer = e;
  var a = Ct,
    c = a.baseQueue,
    h = r.pending;
  if (h !== null) {
    if (c !== null) {
      var p = c.next;
      (c.next = h.next), (h.next = p);
    }
    (a.baseQueue = c = h), (r.pending = null);
  }
  if (c !== null) {
    (h = c.next), (a = a.baseState);
    var v = (p = null),
      b = null,
      P = h;
    do {
      var k = P.lane;
      if (($i & k) === k)
        b !== null &&
          (b = b.next =
            {
              lane: 0,
              action: P.action,
              hasEagerState: P.hasEagerState,
              eagerState: P.eagerState,
              next: null,
            }),
          (a = P.hasEagerState ? P.eagerState : e(a, P.action));
      else {
        var R = {
          lane: k,
          action: P.action,
          hasEagerState: P.hasEagerState,
          eagerState: P.eagerState,
          next: null,
        };
        b === null ? ((v = b = R), (p = a)) : (b = b.next = R),
          (ut.lanes |= k),
          (Di |= k);
      }
      P = P.next;
    } while (P !== null && P !== h);
    b === null ? (p = a) : (b.next = v),
      Yr(a, t.memoizedState) || (rr = !0),
      (t.memoizedState = a),
      (t.baseState = p),
      (t.baseQueue = b),
      (r.lastRenderedState = a);
  }
  if (((e = r.interleaved), e !== null)) {
    c = e;
    do (h = c.lane), (ut.lanes |= h), (Di |= h), (c = c.next);
    while (c !== e);
  } else c === null && (r.lanes = 0);
  return [t.memoizedState, r.dispatch];
}
function hh(e) {
  var t = Pr(),
    r = t.queue;
  if (r === null) throw Error(ge(311));
  r.lastRenderedReducer = e;
  var a = r.dispatch,
    c = r.pending,
    h = t.memoizedState;
  if (c !== null) {
    r.pending = null;
    var p = (c = c.next);
    do (h = e(h, p.action)), (p = p.next);
    while (p !== c);
    Yr(h, t.memoizedState) || (rr = !0),
      (t.memoizedState = h),
      t.baseQueue === null && (t.baseState = h),
      (r.lastRenderedState = h);
  }
  return [h, a];
}
function b1() {}
function w1(e, t) {
  var r = ut,
    a = Pr(),
    c = t(),
    h = !Yr(a.memoizedState, c);
  if (
    (h && ((a.memoizedState = c), (rr = !0)),
    (a = a.queue),
    Yp(_1.bind(null, r, a, e), [e]),
    a.getSnapshot !== t || h || (At !== null && At.memoizedState.tag & 1))
  ) {
    if (
      ((r.flags |= 2048),
      rs(9, P1.bind(null, r, a, c, t), void 0, null),
      Et === null)
    )
      throw Error(ge(349));
    $i & 30 || S1(r, t, c);
  }
  return c;
}
function S1(e, t, r) {
  (e.flags |= 16384),
    (e = { getSnapshot: t, value: r }),
    (t = ut.updateQueue),
    t === null
      ? ((t = { lastEffect: null, stores: null }),
        (ut.updateQueue = t),
        (t.stores = [e]))
      : ((r = t.stores), r === null ? (t.stores = [e]) : r.push(e));
}
function P1(e, t, r, a) {
  (t.value = r), (t.getSnapshot = a), C1(t) && O1(e);
}
function _1(e, t, r) {
  return r(function () {
    C1(t) && O1(e);
  });
}
function C1(e) {
  var t = e.getSnapshot;
  e = e.value;
  try {
    var r = t();
    return !Yr(e, r);
  } catch {
    return !0;
  }
}
function O1(e) {
  var t = Cn(e, 1);
  t !== null && Hr(t, e, 1, -1);
}
function ev(e) {
  var t = Jr();
  return (
    typeof e == "function" && (e = e()),
    (t.memoizedState = t.baseState = e),
    (e = {
      pending: null,
      interleaved: null,
      lanes: 0,
      dispatch: null,
      lastRenderedReducer: ts,
      lastRenderedState: e,
    }),
    (t.queue = e),
    (e = e.dispatch = VE.bind(null, ut, e)),
    [t.memoizedState, e]
  );
}
function rs(e, t, r, a) {
  return (
    (e = { tag: e, create: t, destroy: r, deps: a, next: null }),
    (t = ut.updateQueue),
    t === null
      ? ((t = { lastEffect: null, stores: null }),
        (ut.updateQueue = t),
        (t.lastEffect = e.next = e))
      : ((r = t.lastEffect),
        r === null
          ? (t.lastEffect = e.next = e)
          : ((a = r.next), (r.next = e), (e.next = a), (t.lastEffect = e))),
    e
  );
}
function k1() {
  return Pr().memoizedState;
}
function xl(e, t, r, a) {
  var c = Jr();
  (ut.flags |= e),
    (c.memoizedState = rs(1 | t, r, void 0, a === void 0 ? null : a));
}
function ed(e, t, r, a) {
  var c = Pr();
  a = a === void 0 ? null : a;
  var h = void 0;
  if (Ct !== null) {
    var p = Ct.memoizedState;
    if (((h = p.destroy), a !== null && Hp(a, p.deps))) {
      c.memoizedState = rs(t, r, h, a);
      return;
    }
  }
  (ut.flags |= e), (c.memoizedState = rs(1 | t, r, h, a));
}
function tv(e, t) {
  return xl(8390656, 8, e, t);
}
function Yp(e, t) {
  return ed(2048, 8, e, t);
}
function A1(e, t) {
  return ed(4, 2, e, t);
}
function E1(e, t) {
  return ed(4, 4, e, t);
}
function R1(e, t) {
  if (typeof t == "function")
    return (
      (e = e()),
      t(e),
      function () {
        t(null);
      }
    );
  if (t != null)
    return (
      (e = e()),
      (t.current = e),
      function () {
        t.current = null;
      }
    );
}
function L1(e, t, r) {
  return (
    (r = r != null ? r.concat([e]) : null), ed(4, 4, R1.bind(null, t, e), r)
  );
}
function Wp() {}
function T1(e, t) {
  var r = Pr();
  t = t === void 0 ? null : t;
  var a = r.memoizedState;
  return a !== null && t !== null && Hp(t, a[1])
    ? a[0]
    : ((r.memoizedState = [e, t]), e);
}
function I1(e, t) {
  var r = Pr();
  t = t === void 0 ? null : t;
  var a = r.memoizedState;
  return a !== null && t !== null && Hp(t, a[1])
    ? a[0]
    : ((e = e()), (r.memoizedState = [e, t]), e);
}
function N1(e, t, r) {
  return $i & 21
    ? (Yr(r, t) || ((r = Dw()), (ut.lanes |= r), (Di |= r), (e.baseState = !0)),
      t)
    : (e.baseState && ((e.baseState = !1), (rr = !0)), (e.memoizedState = r));
}
function YE(e, t) {
  var r = Ze;
  (Ze = r !== 0 && 4 > r ? r : 4), e(!0);
  var a = uh.transition;
  uh.transition = {};
  try {
    e(!1), t();
  } finally {
    (Ze = r), (uh.transition = a);
  }
}
function M1() {
  return Pr().memoizedState;
}
function WE(e, t, r) {
  var a = ti(e);
  if (
    ((r = {
      lane: a,
      action: r,
      hasEagerState: !1,
      eagerState: null,
      next: null,
    }),
    $1(e))
  )
    D1(t, r);
  else if (((r = f1(e, t, r, a)), r !== null)) {
    var c = Ut();
    Hr(r, e, a, c), z1(r, t, a);
  }
}
function VE(e, t, r) {
  var a = ti(e),
    c = { lane: a, action: r, hasEagerState: !1, eagerState: null, next: null };
  if ($1(e)) D1(t, c);
  else {
    var h = e.alternate;
    if (
      e.lanes === 0 &&
      (h === null || h.lanes === 0) &&
      ((h = t.lastRenderedReducer), h !== null)
    )
      try {
        var p = t.lastRenderedState,
          v = h(p, r);
        if (((c.hasEagerState = !0), (c.eagerState = v), Yr(v, p))) {
          var b = t.interleaved;
          b === null
            ? ((c.next = c), $p(t))
            : ((c.next = b.next), (b.next = c)),
            (t.interleaved = c);
          return;
        }
      } catch {
      } finally {
      }
    (r = f1(e, t, c, a)),
      r !== null && ((c = Ut()), Hr(r, e, a, c), z1(r, t, a));
  }
}
function $1(e) {
  var t = e.alternate;
  return e === ut || (t !== null && t === ut);
}
function D1(e, t) {
  Io = Gl = !0;
  var r = e.pending;
  r === null ? (t.next = t) : ((t.next = r.next), (r.next = t)),
    (e.pending = t);
}
function z1(e, t, r) {
  if (r & 4194240) {
    var a = t.lanes;
    (a &= e.pendingLanes), (r |= a), (t.lanes = r), Sp(e, r);
  }
}
var Ul = {
    readContext: Sr,
    useCallback: Dt,
    useContext: Dt,
    useEffect: Dt,
    useImperativeHandle: Dt,
    useInsertionEffect: Dt,
    useLayoutEffect: Dt,
    useMemo: Dt,
    useReducer: Dt,
    useRef: Dt,
    useState: Dt,
    useDebugValue: Dt,
    useDeferredValue: Dt,
    useTransition: Dt,
    useMutableSource: Dt,
    useSyncExternalStore: Dt,
    useId: Dt,
    unstable_isNewReconciler: !1,
  },
  GE = {
    readContext: Sr,
    useCallback: function (e, t) {
      return (Jr().memoizedState = [e, t === void 0 ? null : t]), e;
    },
    useContext: Sr,
    useEffect: tv,
    useImperativeHandle: function (e, t, r) {
      return (
        (r = r != null ? r.concat([e]) : null),
        xl(4194308, 4, R1.bind(null, t, e), r)
      );
    },
    useLayoutEffect: function (e, t) {
      return xl(4194308, 4, e, t);
    },
    useInsertionEffect: function (e, t) {
      return xl(4, 2, e, t);
    },
    useMemo: function (e, t) {
      var r = Jr();
      return (
        (t = t === void 0 ? null : t), (e = e()), (r.memoizedState = [e, t]), e
      );
    },
    useReducer: function (e, t, r) {
      var a = Jr();
      return (
        (t = r !== void 0 ? r(t) : t),
        (a.memoizedState = a.baseState = t),
        (e = {
          pending: null,
          interleaved: null,
          lanes: 0,
          dispatch: null,
          lastRenderedReducer: e,
          lastRenderedState: t,
        }),
        (a.queue = e),
        (e = e.dispatch = WE.bind(null, ut, e)),
        [a.memoizedState, e]
      );
    },
    useRef: function (e) {
      var t = Jr();
      return (e = { current: e }), (t.memoizedState = e);
    },
    useState: ev,
    useDebugValue: Wp,
    useDeferredValue: function (e) {
      return (Jr().memoizedState = e);
    },
    useTransition: function () {
      var e = ev(!1),
        t = e[0];
      return (e = YE.bind(null, e[1])), (Jr().memoizedState = e), [t, e];
    },
    useMutableSource: function () {},
    useSyncExternalStore: function (e, t, r) {
      var a = ut,
        c = Jr();
      if (st) {
        if (r === void 0) throw Error(ge(407));
        r = r();
      } else {
        if (((r = t()), Et === null)) throw Error(ge(349));
        $i & 30 || S1(a, t, r);
      }
      c.memoizedState = r;
      var h = { value: r, getSnapshot: t };
      return (
        (c.queue = h),
        tv(_1.bind(null, a, h, e), [e]),
        (a.flags |= 2048),
        rs(9, P1.bind(null, a, h, r, t), void 0, null),
        r
      );
    },
    useId: function () {
      var e = Jr(),
        t = Et.identifierPrefix;
      if (st) {
        var r = yn,
          a = vn;
        (r = (a & ~(1 << (32 - jr(a) - 1))).toString(32) + r),
          (t = ":" + t + "R" + r),
          (r = es++),
          0 < r && (t += "H" + r.toString(32)),
          (t += ":");
      } else (r = BE++), (t = ":" + t + "r" + r.toString(32) + ":");
      return (e.memoizedState = t);
    },
    unstable_isNewReconciler: !1,
  },
  UE = {
    readContext: Sr,
    useCallback: T1,
    useContext: Sr,
    useEffect: Yp,
    useImperativeHandle: L1,
    useInsertionEffect: A1,
    useLayoutEffect: E1,
    useMemo: I1,
    useReducer: dh,
    useRef: k1,
    useState: function () {
      return dh(ts);
    },
    useDebugValue: Wp,
    useDeferredValue: function (e) {
      var t = Pr();
      return N1(t, Ct.memoizedState, e);
    },
    useTransition: function () {
      var e = dh(ts)[0],
        t = Pr().memoizedState;
      return [e, t];
    },
    useMutableSource: b1,
    useSyncExternalStore: w1,
    useId: M1,
    unstable_isNewReconciler: !1,
  },
  qE = {
    readContext: Sr,
    useCallback: T1,
    useContext: Sr,
    useEffect: Yp,
    useImperativeHandle: L1,
    useInsertionEffect: A1,
    useLayoutEffect: E1,
    useMemo: I1,
    useReducer: hh,
    useRef: k1,
    useState: function () {
      return hh(ts);
    },
    useDebugValue: Wp,
    useDeferredValue: function (e) {
      var t = Pr();
      return Ct === null ? (t.memoizedState = e) : N1(t, Ct.memoizedState, e);
    },
    useTransition: function () {
      var e = hh(ts)[0],
        t = Pr().memoizedState;
      return [e, t];
    },
    useMutableSource: b1,
    useSyncExternalStore: w1,
    useId: M1,
    unstable_isNewReconciler: !1,
  };
function Na(e, t) {
  try {
    var r = "",
      a = t;
    do (r += PA(a)), (a = a.return);
    while (a);
    var c = r;
  } catch (h) {
    c =
      `
Error generating stack: ` +
      h.message +
      `
` +
      h.stack;
  }
  return { value: e, source: t, stack: c, digest: null };
}
function fh(e, t, r) {
  return { value: e, source: null, stack: r ?? null, digest: t ?? null };
}
function Of(e, t) {
  try {
    console.error(t.value);
  } catch (r) {
    setTimeout(function () {
      throw r;
    });
  }
}
var ZE = typeof WeakMap == "function" ? WeakMap : Map;
function F1(e, t, r) {
  (r = xn(-1, r)), (r.tag = 3), (r.payload = { element: null });
  var a = t.value;
  return (
    (r.callback = function () {
      Zl || ((Zl = !0), ($f = a)), Of(e, t);
    }),
    r
  );
}
function j1(e, t, r) {
  (r = xn(-1, r)), (r.tag = 3);
  var a = e.type.getDerivedStateFromError;
  if (typeof a == "function") {
    var c = t.value;
    (r.payload = function () {
      return a(c);
    }),
      (r.callback = function () {
        Of(e, t);
      });
  }
  var h = e.stateNode;
  return (
    h !== null &&
      typeof h.componentDidCatch == "function" &&
      (r.callback = function () {
        Of(e, t),
          typeof a != "function" &&
            (ei === null ? (ei = new Set([this])) : ei.add(this));
        var p = t.stack;
        this.componentDidCatch(t.value, {
          componentStack: p !== null ? p : "",
        });
      }),
    r
  );
}
function rv(e, t, r) {
  var a = e.pingCache;
  if (a === null) {
    a = e.pingCache = new ZE();
    var c = new Set();
    a.set(t, c);
  } else (c = a.get(t)), c === void 0 && ((c = new Set()), a.set(t, c));
  c.has(r) || (c.add(r), (e = u2.bind(null, e, t, r)), t.then(e, e));
}
function nv(e) {
  do {
    var t;
    if (
      ((t = e.tag === 13) &&
        ((t = e.memoizedState), (t = t !== null ? t.dehydrated !== null : !0)),
      t)
    )
      return e;
    e = e.return;
  } while (e !== null);
  return null;
}
function iv(e, t, r, a, c) {
  return e.mode & 1
    ? ((e.flags |= 65536), (e.lanes = c), e)
    : (e === t
        ? (e.flags |= 65536)
        : ((e.flags |= 128),
          (r.flags |= 131072),
          (r.flags &= -52805),
          r.tag === 1 &&
            (r.alternate === null
              ? (r.tag = 17)
              : ((t = xn(-1, 1)), (t.tag = 2), Jn(r, t, 1))),
          (r.lanes |= 1)),
      e);
}
var KE = En.ReactCurrentOwner,
  rr = !1;
function Wt(e, t, r, a) {
  t.child = e === null ? y1(t, null, r, a) : Ta(t, e.child, r, a);
}
function av(e, t, r, a, c) {
  r = r.render;
  var h = t.ref;
  return (
    Pa(t, c),
    (a = Xp(e, t, r, a, h, c)),
    (r = Bp()),
    e !== null && !rr
      ? ((t.updateQueue = e.updateQueue),
        (t.flags &= -2053),
        (e.lanes &= ~c),
        On(e, t, c))
      : (st && r && Rp(t), (t.flags |= 1), Wt(e, t, a, c), t.child)
  );
}
function ov(e, t, r, a, c) {
  if (e === null) {
    var h = r.type;
    return typeof h == "function" &&
      !Jp(h) &&
      h.defaultProps === void 0 &&
      r.compare === null &&
      r.defaultProps === void 0
      ? ((t.tag = 15), (t.type = h), H1(e, t, h, a, c))
      : ((e = Pl(r.type, null, a, t, t.mode, c)),
        (e.ref = t.ref),
        (e.return = t),
        (t.child = e));
  }
  if (((h = e.child), !(e.lanes & c))) {
    var p = h.memoizedProps;
    if (
      ((r = r.compare), (r = r !== null ? r : Uo), r(p, a) && e.ref === t.ref)
    )
      return On(e, t, c);
  }
  return (
    (t.flags |= 1),
    (e = ri(h, a)),
    (e.ref = t.ref),
    (e.return = t),
    (t.child = e)
  );
}
function H1(e, t, r, a, c) {
  if (e !== null) {
    var h = e.memoizedProps;
    if (Uo(h, a) && e.ref === t.ref)
      if (((rr = !1), (t.pendingProps = a = h), (e.lanes & c) !== 0))
        e.flags & 131072 && (rr = !0);
      else return (t.lanes = e.lanes), On(e, t, c);
  }
  return kf(e, t, r, a, c);
}
function X1(e, t, r) {
  var a = t.pendingProps,
    c = a.children,
    h = e !== null ? e.memoizedState : null;
  if (a.mode === "hidden")
    if (!(t.mode & 1))
      (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        tt(ma, cr),
        (cr |= r);
    else {
      if (!(r & 1073741824))
        return (
          (e = h !== null ? h.baseLanes | r : r),
          (t.lanes = t.childLanes = 1073741824),
          (t.memoizedState = {
            baseLanes: e,
            cachePool: null,
            transitions: null,
          }),
          (t.updateQueue = null),
          tt(ma, cr),
          (cr |= e),
          null
        );
      (t.memoizedState = { baseLanes: 0, cachePool: null, transitions: null }),
        (a = h !== null ? h.baseLanes : r),
        tt(ma, cr),
        (cr |= a);
    }
  else
    h !== null ? ((a = h.baseLanes | r), (t.memoizedState = null)) : (a = r),
      tt(ma, cr),
      (cr |= a);
  return Wt(e, t, c, r), t.child;
}
function B1(e, t) {
  var r = t.ref;
  ((e === null && r !== null) || (e !== null && e.ref !== r)) &&
    ((t.flags |= 512), (t.flags |= 2097152));
}
function kf(e, t, r, a, c) {
  var h = ir(r) ? Ni : Ht.current;
  return (
    (h = Ra(t, h)),
    Pa(t, c),
    (r = Xp(e, t, r, a, h, c)),
    (a = Bp()),
    e !== null && !rr
      ? ((t.updateQueue = e.updateQueue),
        (t.flags &= -2053),
        (e.lanes &= ~c),
        On(e, t, c))
      : (st && a && Rp(t), (t.flags |= 1), Wt(e, t, r, c), t.child)
  );
}
function sv(e, t, r, a, c) {
  if (ir(r)) {
    var h = !0;
    jl(t);
  } else h = !1;
  if ((Pa(t, c), t.stateNode === null))
    bl(e, t), m1(t, r, a), Cf(t, r, a, c), (a = !0);
  else if (e === null) {
    var p = t.stateNode,
      v = t.memoizedProps;
    p.props = v;
    var b = p.context,
      P = r.contextType;
    typeof P == "object" && P !== null
      ? (P = Sr(P))
      : ((P = ir(r) ? Ni : Ht.current), (P = Ra(t, P)));
    var k = r.getDerivedStateFromProps,
      R =
        typeof k == "function" ||
        typeof p.getSnapshotBeforeUpdate == "function";
    R ||
      (typeof p.UNSAFE_componentWillReceiveProps != "function" &&
        typeof p.componentWillReceiveProps != "function") ||
      ((v !== a || b !== P) && Qm(t, p, a, P)),
      (Xn = !1);
    var L = t.memoizedState;
    (p.state = L),
      Wl(t, a, p, c),
      (b = t.memoizedState),
      v !== a || L !== b || nr.current || Xn
        ? (typeof k == "function" && (_f(t, r, k, a), (b = t.memoizedState)),
          (v = Xn || Km(t, r, v, a, L, b, P))
            ? (R ||
                (typeof p.UNSAFE_componentWillMount != "function" &&
                  typeof p.componentWillMount != "function") ||
                (typeof p.componentWillMount == "function" &&
                  p.componentWillMount(),
                typeof p.UNSAFE_componentWillMount == "function" &&
                  p.UNSAFE_componentWillMount()),
              typeof p.componentDidMount == "function" && (t.flags |= 4194308))
            : (typeof p.componentDidMount == "function" && (t.flags |= 4194308),
              (t.memoizedProps = a),
              (t.memoizedState = b)),
          (p.props = a),
          (p.state = b),
          (p.context = P),
          (a = v))
        : (typeof p.componentDidMount == "function" && (t.flags |= 4194308),
          (a = !1));
  } else {
    (p = t.stateNode),
      p1(e, t),
      (v = t.memoizedProps),
      (P = t.type === t.elementType ? v : Nr(t.type, v)),
      (p.props = P),
      (R = t.pendingProps),
      (L = p.context),
      (b = r.contextType),
      typeof b == "object" && b !== null
        ? (b = Sr(b))
        : ((b = ir(r) ? Ni : Ht.current), (b = Ra(t, b)));
    var z = r.getDerivedStateFromProps;
    (k =
      typeof z == "function" ||
      typeof p.getSnapshotBeforeUpdate == "function") ||
      (typeof p.UNSAFE_componentWillReceiveProps != "function" &&
        typeof p.componentWillReceiveProps != "function") ||
      ((v !== R || L !== b) && Qm(t, p, a, b)),
      (Xn = !1),
      (L = t.memoizedState),
      (p.state = L),
      Wl(t, a, p, c);
    var M = t.memoizedState;
    v !== R || L !== M || nr.current || Xn
      ? (typeof z == "function" && (_f(t, r, z, a), (M = t.memoizedState)),
        (P = Xn || Km(t, r, P, a, L, M, b) || !1)
          ? (k ||
              (typeof p.UNSAFE_componentWillUpdate != "function" &&
                typeof p.componentWillUpdate != "function") ||
              (typeof p.componentWillUpdate == "function" &&
                p.componentWillUpdate(a, M, b),
              typeof p.UNSAFE_componentWillUpdate == "function" &&
                p.UNSAFE_componentWillUpdate(a, M, b)),
            typeof p.componentDidUpdate == "function" && (t.flags |= 4),
            typeof p.getSnapshotBeforeUpdate == "function" && (t.flags |= 1024))
          : (typeof p.componentDidUpdate != "function" ||
              (v === e.memoizedProps && L === e.memoizedState) ||
              (t.flags |= 4),
            typeof p.getSnapshotBeforeUpdate != "function" ||
              (v === e.memoizedProps && L === e.memoizedState) ||
              (t.flags |= 1024),
            (t.memoizedProps = a),
            (t.memoizedState = M)),
        (p.props = a),
        (p.state = M),
        (p.context = b),
        (a = P))
      : (typeof p.componentDidUpdate != "function" ||
          (v === e.memoizedProps && L === e.memoizedState) ||
          (t.flags |= 4),
        typeof p.getSnapshotBeforeUpdate != "function" ||
          (v === e.memoizedProps && L === e.memoizedState) ||
          (t.flags |= 1024),
        (a = !1));
  }
  return Af(e, t, r, a, h, c);
}
function Af(e, t, r, a, c, h) {
  B1(e, t);
  var p = (t.flags & 128) !== 0;
  if (!a && !p) return c && Vm(t, r, !1), On(e, t, h);
  (a = t.stateNode), (KE.current = t);
  var v =
    p && typeof r.getDerivedStateFromError != "function" ? null : a.render();
  return (
    (t.flags |= 1),
    e !== null && p
      ? ((t.child = Ta(t, e.child, null, h)), (t.child = Ta(t, null, v, h)))
      : Wt(e, t, v, h),
    (t.memoizedState = a.state),
    c && Vm(t, r, !0),
    t.child
  );
}
function Y1(e) {
  var t = e.stateNode;
  t.pendingContext
    ? Wm(e, t.pendingContext, t.pendingContext !== t.context)
    : t.context && Wm(e, t.context, !1),
    zp(e, t.containerInfo);
}
function lv(e, t, r, a, c) {
  return La(), Tp(c), (t.flags |= 256), Wt(e, t, r, a), t.child;
}
var Ef = { dehydrated: null, treeContext: null, retryLane: 0 };
function Rf(e) {
  return { baseLanes: e, cachePool: null, transitions: null };
}
function W1(e, t, r) {
  var a = t.pendingProps,
    c = ct.current,
    h = !1,
    p = (t.flags & 128) !== 0,
    v;
  if (
    ((v = p) ||
      (v = e !== null && e.memoizedState === null ? !1 : (c & 2) !== 0),
    v
      ? ((h = !0), (t.flags &= -129))
      : (e === null || e.memoizedState !== null) && (c |= 1),
    tt(ct, c & 1),
    e === null)
  )
    return (
      Sf(t),
      (e = t.memoizedState),
      e !== null && ((e = e.dehydrated), e !== null)
        ? (t.mode & 1
            ? e.data === "$!"
              ? (t.lanes = 8)
              : (t.lanes = 1073741824)
            : (t.lanes = 1),
          null)
        : ((p = a.children),
          (e = a.fallback),
          h
            ? ((a = t.mode),
              (h = t.child),
              (p = { mode: "hidden", children: p }),
              !(a & 1) && h !== null
                ? ((h.childLanes = 0), (h.pendingProps = p))
                : (h = nd(p, a, 0, null)),
              (e = Ri(e, a, r, null)),
              (h.return = t),
              (e.return = t),
              (h.sibling = e),
              (t.child = h),
              (t.child.memoizedState = Rf(r)),
              (t.memoizedState = Ef),
              e)
            : Vp(t, p))
    );
  if (((c = e.memoizedState), c !== null && ((v = c.dehydrated), v !== null)))
    return QE(e, t, p, a, v, c, r);
  if (h) {
    (h = a.fallback), (p = t.mode), (c = e.child), (v = c.sibling);
    var b = { mode: "hidden", children: a.children };
    return (
      !(p & 1) && t.child !== c
        ? ((a = t.child),
          (a.childLanes = 0),
          (a.pendingProps = b),
          (t.deletions = null))
        : ((a = ri(c, b)), (a.subtreeFlags = c.subtreeFlags & 14680064)),
      v !== null ? (h = ri(v, h)) : ((h = Ri(h, p, r, null)), (h.flags |= 2)),
      (h.return = t),
      (a.return = t),
      (a.sibling = h),
      (t.child = a),
      (a = h),
      (h = t.child),
      (p = e.child.memoizedState),
      (p =
        p === null
          ? Rf(r)
          : {
              baseLanes: p.baseLanes | r,
              cachePool: null,
              transitions: p.transitions,
            }),
      (h.memoizedState = p),
      (h.childLanes = e.childLanes & ~r),
      (t.memoizedState = Ef),
      a
    );
  }
  return (
    (h = e.child),
    (e = h.sibling),
    (a = ri(h, { mode: "visible", children: a.children })),
    !(t.mode & 1) && (a.lanes = r),
    (a.return = t),
    (a.sibling = null),
    e !== null &&
      ((r = t.deletions),
      r === null ? ((t.deletions = [e]), (t.flags |= 16)) : r.push(e)),
    (t.child = a),
    (t.memoizedState = null),
    a
  );
}
function Vp(e, t) {
  return (
    (t = nd({ mode: "visible", children: t }, e.mode, 0, null)),
    (t.return = e),
    (e.child = t)
  );
}
function Xs(e, t, r, a) {
  return (
    a !== null && Tp(a),
    Ta(t, e.child, null, r),
    (e = Vp(t, t.pendingProps.children)),
    (e.flags |= 2),
    (t.memoizedState = null),
    e
  );
}
function QE(e, t, r, a, c, h, p) {
  if (r)
    return t.flags & 256
      ? ((t.flags &= -257), (a = fh(Error(ge(422)))), Xs(e, t, p, a))
      : t.memoizedState !== null
      ? ((t.child = e.child), (t.flags |= 128), null)
      : ((h = a.fallback),
        (c = t.mode),
        (a = nd({ mode: "visible", children: a.children }, c, 0, null)),
        (h = Ri(h, c, p, null)),
        (h.flags |= 2),
        (a.return = t),
        (h.return = t),
        (a.sibling = h),
        (t.child = a),
        t.mode & 1 && Ta(t, e.child, null, p),
        (t.child.memoizedState = Rf(p)),
        (t.memoizedState = Ef),
        h);
  if (!(t.mode & 1)) return Xs(e, t, p, null);
  if (c.data === "$!") {
    if (((a = c.nextSibling && c.nextSibling.dataset), a)) var v = a.dgst;
    return (
      (a = v), (h = Error(ge(419))), (a = fh(h, a, void 0)), Xs(e, t, p, a)
    );
  }
  if (((v = (p & e.childLanes) !== 0), rr || v)) {
    if (((a = Et), a !== null)) {
      switch (p & -p) {
        case 4:
          c = 2;
          break;
        case 16:
          c = 8;
          break;
        case 64:
        case 128:
        case 256:
        case 512:
        case 1024:
        case 2048:
        case 4096:
        case 8192:
        case 16384:
        case 32768:
        case 65536:
        case 131072:
        case 262144:
        case 524288:
        case 1048576:
        case 2097152:
        case 4194304:
        case 8388608:
        case 16777216:
        case 33554432:
        case 67108864:
          c = 32;
          break;
        case 536870912:
          c = 268435456;
          break;
        default:
          c = 0;
      }
      (c = c & (a.suspendedLanes | p) ? 0 : c),
        c !== 0 &&
          c !== h.retryLane &&
          ((h.retryLane = c), Cn(e, c), Hr(a, e, c, -1));
    }
    return Qp(), (a = fh(Error(ge(421)))), Xs(e, t, p, a);
  }
  return c.data === "$?"
    ? ((t.flags |= 128),
      (t.child = e.child),
      (t = d2.bind(null, e)),
      (c._reactRetry = t),
      null)
    : ((e = h.treeContext),
      (ur = Qn(c.nextSibling)),
      (dr = t),
      (st = !0),
      (zr = null),
      e !== null &&
        ((yr[xr++] = vn),
        (yr[xr++] = yn),
        (yr[xr++] = Mi),
        (vn = e.id),
        (yn = e.overflow),
        (Mi = t)),
      (t = Vp(t, a.children)),
      (t.flags |= 4096),
      t);
}
function cv(e, t, r) {
  e.lanes |= t;
  var a = e.alternate;
  a !== null && (a.lanes |= t), Pf(e.return, t, r);
}
function ph(e, t, r, a, c) {
  var h = e.memoizedState;
  h === null
    ? (e.memoizedState = {
        isBackwards: t,
        rendering: null,
        renderingStartTime: 0,
        last: a,
        tail: r,
        tailMode: c,
      })
    : ((h.isBackwards = t),
      (h.rendering = null),
      (h.renderingStartTime = 0),
      (h.last = a),
      (h.tail = r),
      (h.tailMode = c));
}
function V1(e, t, r) {
  var a = t.pendingProps,
    c = a.revealOrder,
    h = a.tail;
  if ((Wt(e, t, a.children, r), (a = ct.current), a & 2))
    (a = (a & 1) | 2), (t.flags |= 128);
  else {
    if (e !== null && e.flags & 128)
      e: for (e = t.child; e !== null; ) {
        if (e.tag === 13) e.memoizedState !== null && cv(e, r, t);
        else if (e.tag === 19) cv(e, r, t);
        else if (e.child !== null) {
          (e.child.return = e), (e = e.child);
          continue;
        }
        if (e === t) break e;
        for (; e.sibling === null; ) {
          if (e.return === null || e.return === t) break e;
          e = e.return;
        }
        (e.sibling.return = e.return), (e = e.sibling);
      }
    a &= 1;
  }
  if ((tt(ct, a), !(t.mode & 1))) t.memoizedState = null;
  else
    switch (c) {
      case "forwards":
        for (r = t.child, c = null; r !== null; )
          (e = r.alternate),
            e !== null && Vl(e) === null && (c = r),
            (r = r.sibling);
        (r = c),
          r === null
            ? ((c = t.child), (t.child = null))
            : ((c = r.sibling), (r.sibling = null)),
          ph(t, !1, c, r, h);
        break;
      case "backwards":
        for (r = null, c = t.child, t.child = null; c !== null; ) {
          if (((e = c.alternate), e !== null && Vl(e) === null)) {
            t.child = c;
            break;
          }
          (e = c.sibling), (c.sibling = r), (r = c), (c = e);
        }
        ph(t, !0, r, null, h);
        break;
      case "together":
        ph(t, !1, null, null, void 0);
        break;
      default:
        t.memoizedState = null;
    }
  return t.child;
}
function bl(e, t) {
  !(t.mode & 1) &&
    e !== null &&
    ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
}
function On(e, t, r) {
  if (
    (e !== null && (t.dependencies = e.dependencies),
    (Di |= t.lanes),
    !(r & t.childLanes))
  )
    return null;
  if (e !== null && t.child !== e.child) throw Error(ge(153));
  if (t.child !== null) {
    for (
      e = t.child, r = ri(e, e.pendingProps), t.child = r, r.return = t;
      e.sibling !== null;

    )
      (e = e.sibling), (r = r.sibling = ri(e, e.pendingProps)), (r.return = t);
    r.sibling = null;
  }
  return t.child;
}
function JE(e, t, r) {
  switch (t.tag) {
    case 3:
      Y1(t), La();
      break;
    case 5:
      x1(t);
      break;
    case 1:
      ir(t.type) && jl(t);
      break;
    case 4:
      zp(t, t.stateNode.containerInfo);
      break;
    case 10:
      var a = t.type._context,
        c = t.memoizedProps.value;
      tt(Bl, a._currentValue), (a._currentValue = c);
      break;
    case 13:
      if (((a = t.memoizedState), a !== null))
        return a.dehydrated !== null
          ? (tt(ct, ct.current & 1), (t.flags |= 128), null)
          : r & t.child.childLanes
          ? W1(e, t, r)
          : (tt(ct, ct.current & 1),
            (e = On(e, t, r)),
            e !== null ? e.sibling : null);
      tt(ct, ct.current & 1);
      break;
    case 19:
      if (((a = (r & t.childLanes) !== 0), e.flags & 128)) {
        if (a) return V1(e, t, r);
        t.flags |= 128;
      }
      if (
        ((c = t.memoizedState),
        c !== null &&
          ((c.rendering = null), (c.tail = null), (c.lastEffect = null)),
        tt(ct, ct.current),
        a)
      )
        break;
      return null;
    case 22:
    case 23:
      return (t.lanes = 0), X1(e, t, r);
  }
  return On(e, t, r);
}
var G1, Lf, U1, q1;
G1 = function (e, t) {
  for (var r = t.child; r !== null; ) {
    if (r.tag === 5 || r.tag === 6) e.appendChild(r.stateNode);
    else if (r.tag !== 4 && r.child !== null) {
      (r.child.return = r), (r = r.child);
      continue;
    }
    if (r === t) break;
    for (; r.sibling === null; ) {
      if (r.return === null || r.return === t) return;
      r = r.return;
    }
    (r.sibling.return = r.return), (r = r.sibling);
  }
};
Lf = function () {};
U1 = function (e, t, r, a) {
  var c = e.memoizedProps;
  if (c !== a) {
    (e = t.stateNode), Ci(on.current);
    var h = null;
    switch (r) {
      case "input":
        (c = Qh(e, c)), (a = Qh(e, a)), (h = []);
        break;
      case "select":
        (c = dt({}, c, { value: void 0 })),
          (a = dt({}, a, { value: void 0 })),
          (h = []);
        break;
      case "textarea":
        (c = tf(e, c)), (a = tf(e, a)), (h = []);
        break;
      default:
        typeof c.onClick != "function" &&
          typeof a.onClick == "function" &&
          (e.onclick = zl);
    }
    nf(r, a);
    var p;
    r = null;
    for (P in c)
      if (!a.hasOwnProperty(P) && c.hasOwnProperty(P) && c[P] != null)
        if (P === "style") {
          var v = c[P];
          for (p in v) v.hasOwnProperty(p) && (r || (r = {}), (r[p] = ""));
        } else
          P !== "dangerouslySetInnerHTML" &&
            P !== "children" &&
            P !== "suppressContentEditableWarning" &&
            P !== "suppressHydrationWarning" &&
            P !== "autoFocus" &&
            (Ho.hasOwnProperty(P)
              ? h || (h = [])
              : (h = h || []).push(P, null));
    for (P in a) {
      var b = a[P];
      if (
        ((v = c != null ? c[P] : void 0),
        a.hasOwnProperty(P) && b !== v && (b != null || v != null))
      )
        if (P === "style")
          if (v) {
            for (p in v)
              !v.hasOwnProperty(p) ||
                (b && b.hasOwnProperty(p)) ||
                (r || (r = {}), (r[p] = ""));
            for (p in b)
              b.hasOwnProperty(p) &&
                v[p] !== b[p] &&
                (r || (r = {}), (r[p] = b[p]));
          } else r || (h || (h = []), h.push(P, r)), (r = b);
        else
          P === "dangerouslySetInnerHTML"
            ? ((b = b ? b.__html : void 0),
              (v = v ? v.__html : void 0),
              b != null && v !== b && (h = h || []).push(P, b))
            : P === "children"
            ? (typeof b != "string" && typeof b != "number") ||
              (h = h || []).push(P, "" + b)
            : P !== "suppressContentEditableWarning" &&
              P !== "suppressHydrationWarning" &&
              (Ho.hasOwnProperty(P)
                ? (b != null && P === "onScroll" && at("scroll", e),
                  h || v === b || (h = []))
                : (h = h || []).push(P, b));
    }
    r && (h = h || []).push("style", r);
    var P = h;
    (t.updateQueue = P) && (t.flags |= 4);
  }
};
q1 = function (e, t, r, a) {
  r !== a && (t.flags |= 4);
};
function uo(e, t) {
  if (!st)
    switch (e.tailMode) {
      case "hidden":
        t = e.tail;
        for (var r = null; t !== null; )
          t.alternate !== null && (r = t), (t = t.sibling);
        r === null ? (e.tail = null) : (r.sibling = null);
        break;
      case "collapsed":
        r = e.tail;
        for (var a = null; r !== null; )
          r.alternate !== null && (a = r), (r = r.sibling);
        a === null
          ? t || e.tail === null
            ? (e.tail = null)
            : (e.tail.sibling = null)
          : (a.sibling = null);
    }
}
function zt(e) {
  var t = e.alternate !== null && e.alternate.child === e.child,
    r = 0,
    a = 0;
  if (t)
    for (var c = e.child; c !== null; )
      (r |= c.lanes | c.childLanes),
        (a |= c.subtreeFlags & 14680064),
        (a |= c.flags & 14680064),
        (c.return = e),
        (c = c.sibling);
  else
    for (c = e.child; c !== null; )
      (r |= c.lanes | c.childLanes),
        (a |= c.subtreeFlags),
        (a |= c.flags),
        (c.return = e),
        (c = c.sibling);
  return (e.subtreeFlags |= a), (e.childLanes = r), t;
}
function e2(e, t, r) {
  var a = t.pendingProps;
  switch ((Lp(t), t.tag)) {
    case 2:
    case 16:
    case 15:
    case 0:
    case 11:
    case 7:
    case 8:
    case 12:
    case 9:
    case 14:
      return zt(t), null;
    case 1:
      return ir(t.type) && Fl(), zt(t), null;
    case 3:
      return (
        (a = t.stateNode),
        Ia(),
        ot(nr),
        ot(Ht),
        jp(),
        a.pendingContext &&
          ((a.context = a.pendingContext), (a.pendingContext = null)),
        (e === null || e.child === null) &&
          (js(t)
            ? (t.flags |= 4)
            : e === null ||
              (e.memoizedState.isDehydrated && !(t.flags & 256)) ||
              ((t.flags |= 1024), zr !== null && (Ff(zr), (zr = null)))),
        Lf(e, t),
        zt(t),
        null
      );
    case 5:
      Fp(t);
      var c = Ci(Jo.current);
      if (((r = t.type), e !== null && t.stateNode != null))
        U1(e, t, r, a, c),
          e.ref !== t.ref && ((t.flags |= 512), (t.flags |= 2097152));
      else {
        if (!a) {
          if (t.stateNode === null) throw Error(ge(166));
          return zt(t), null;
        }
        if (((e = Ci(on.current)), js(t))) {
          (a = t.stateNode), (r = t.type);
          var h = t.memoizedProps;
          switch (((a[tn] = t), (a[Ko] = h), (e = (t.mode & 1) !== 0), r)) {
            case "dialog":
              at("cancel", a), at("close", a);
              break;
            case "iframe":
            case "object":
            case "embed":
              at("load", a);
              break;
            case "video":
            case "audio":
              for (c = 0; c < Oo.length; c++) at(Oo[c], a);
              break;
            case "source":
              at("error", a);
              break;
            case "img":
            case "image":
            case "link":
              at("error", a), at("load", a);
              break;
            case "details":
              at("toggle", a);
              break;
            case "input":
              ym(a, h), at("invalid", a);
              break;
            case "select":
              (a._wrapperState = { wasMultiple: !!h.multiple }),
                at("invalid", a);
              break;
            case "textarea":
              bm(a, h), at("invalid", a);
          }
          nf(r, h), (c = null);
          for (var p in h)
            if (h.hasOwnProperty(p)) {
              var v = h[p];
              p === "children"
                ? typeof v == "string"
                  ? a.textContent !== v &&
                    (h.suppressHydrationWarning !== !0 &&
                      Fs(a.textContent, v, e),
                    (c = ["children", v]))
                  : typeof v == "number" &&
                    a.textContent !== "" + v &&
                    (h.suppressHydrationWarning !== !0 &&
                      Fs(a.textContent, v, e),
                    (c = ["children", "" + v]))
                : Ho.hasOwnProperty(p) &&
                  v != null &&
                  p === "onScroll" &&
                  at("scroll", a);
            }
          switch (r) {
            case "input":
              Ls(a), xm(a, h, !0);
              break;
            case "textarea":
              Ls(a), wm(a);
              break;
            case "select":
            case "option":
              break;
            default:
              typeof h.onClick == "function" && (a.onclick = zl);
          }
          (a = c), (t.updateQueue = a), a !== null && (t.flags |= 4);
        } else {
          (p = c.nodeType === 9 ? c : c.ownerDocument),
            e === "http://www.w3.org/1999/xhtml" && (e = Sw(r)),
            e === "http://www.w3.org/1999/xhtml"
              ? r === "script"
                ? ((e = p.createElement("div")),
                  (e.innerHTML = "<script></script>"),
                  (e = e.removeChild(e.firstChild)))
                : typeof a.is == "string"
                ? (e = p.createElement(r, { is: a.is }))
                : ((e = p.createElement(r)),
                  r === "select" &&
                    ((p = e),
                    a.multiple
                      ? (p.multiple = !0)
                      : a.size && (p.size = a.size)))
              : (e = p.createElementNS(e, r)),
            (e[tn] = t),
            (e[Ko] = a),
            G1(e, t, !1, !1),
            (t.stateNode = e);
          e: {
            switch (((p = af(r, a)), r)) {
              case "dialog":
                at("cancel", e), at("close", e), (c = a);
                break;
              case "iframe":
              case "object":
              case "embed":
                at("load", e), (c = a);
                break;
              case "video":
              case "audio":
                for (c = 0; c < Oo.length; c++) at(Oo[c], e);
                c = a;
                break;
              case "source":
                at("error", e), (c = a);
                break;
              case "img":
              case "image":
              case "link":
                at("error", e), at("load", e), (c = a);
                break;
              case "details":
                at("toggle", e), (c = a);
                break;
              case "input":
                ym(e, a), (c = Qh(e, a)), at("invalid", e);
                break;
              case "option":
                c = a;
                break;
              case "select":
                (e._wrapperState = { wasMultiple: !!a.multiple }),
                  (c = dt({}, a, { value: void 0 })),
                  at("invalid", e);
                break;
              case "textarea":
                bm(e, a), (c = tf(e, a)), at("invalid", e);
                break;
              default:
                c = a;
            }
            nf(r, c), (v = c);
            for (h in v)
              if (v.hasOwnProperty(h)) {
                var b = v[h];
                h === "style"
                  ? Cw(e, b)
                  : h === "dangerouslySetInnerHTML"
                  ? ((b = b ? b.__html : void 0), b != null && Pw(e, b))
                  : h === "children"
                  ? typeof b == "string"
                    ? (r !== "textarea" || b !== "") && Xo(e, b)
                    : typeof b == "number" && Xo(e, "" + b)
                  : h !== "suppressContentEditableWarning" &&
                    h !== "suppressHydrationWarning" &&
                    h !== "autoFocus" &&
                    (Ho.hasOwnProperty(h)
                      ? b != null && h === "onScroll" && at("scroll", e)
                      : b != null && mp(e, h, b, p));
              }
            switch (r) {
              case "input":
                Ls(e), xm(e, a, !1);
                break;
              case "textarea":
                Ls(e), wm(e);
                break;
              case "option":
                a.value != null && e.setAttribute("value", "" + ni(a.value));
                break;
              case "select":
                (e.multiple = !!a.multiple),
                  (h = a.value),
                  h != null
                    ? xa(e, !!a.multiple, h, !1)
                    : a.defaultValue != null &&
                      xa(e, !!a.multiple, a.defaultValue, !0);
                break;
              default:
                typeof c.onClick == "function" && (e.onclick = zl);
            }
            switch (r) {
              case "button":
              case "input":
              case "select":
              case "textarea":
                a = !!a.autoFocus;
                break e;
              case "img":
                a = !0;
                break e;
              default:
                a = !1;
            }
          }
          a && (t.flags |= 4);
        }
        t.ref !== null && ((t.flags |= 512), (t.flags |= 2097152));
      }
      return zt(t), null;
    case 6:
      if (e && t.stateNode != null) q1(e, t, e.memoizedProps, a);
      else {
        if (typeof a != "string" && t.stateNode === null) throw Error(ge(166));
        if (((r = Ci(Jo.current)), Ci(on.current), js(t))) {
          if (
            ((a = t.stateNode),
            (r = t.memoizedProps),
            (a[tn] = t),
            (h = a.nodeValue !== r) && ((e = dr), e !== null))
          )
            switch (e.tag) {
              case 3:
                Fs(a.nodeValue, r, (e.mode & 1) !== 0);
                break;
              case 5:
                e.memoizedProps.suppressHydrationWarning !== !0 &&
                  Fs(a.nodeValue, r, (e.mode & 1) !== 0);
            }
          h && (t.flags |= 4);
        } else
          (a = (r.nodeType === 9 ? r : r.ownerDocument).createTextNode(a)),
            (a[tn] = t),
            (t.stateNode = a);
      }
      return zt(t), null;
    case 13:
      if (
        (ot(ct),
        (a = t.memoizedState),
        e === null ||
          (e.memoizedState !== null && e.memoizedState.dehydrated !== null))
      ) {
        if (st && ur !== null && t.mode & 1 && !(t.flags & 128))
          h1(), La(), (t.flags |= 98560), (h = !1);
        else if (((h = js(t)), a !== null && a.dehydrated !== null)) {
          if (e === null) {
            if (!h) throw Error(ge(318));
            if (
              ((h = t.memoizedState),
              (h = h !== null ? h.dehydrated : null),
              !h)
            )
              throw Error(ge(317));
            h[tn] = t;
          } else
            La(), !(t.flags & 128) && (t.memoizedState = null), (t.flags |= 4);
          zt(t), (h = !1);
        } else zr !== null && (Ff(zr), (zr = null)), (h = !0);
        if (!h) return t.flags & 65536 ? t : null;
      }
      return t.flags & 128
        ? ((t.lanes = r), t)
        : ((a = a !== null),
          a !== (e !== null && e.memoizedState !== null) &&
            a &&
            ((t.child.flags |= 8192),
            t.mode & 1 &&
              (e === null || ct.current & 1 ? Ot === 0 && (Ot = 3) : Qp())),
          t.updateQueue !== null && (t.flags |= 4),
          zt(t),
          null);
    case 4:
      return (
        Ia(), Lf(e, t), e === null && qo(t.stateNode.containerInfo), zt(t), null
      );
    case 10:
      return Mp(t.type._context), zt(t), null;
    case 17:
      return ir(t.type) && Fl(), zt(t), null;
    case 19:
      if ((ot(ct), (h = t.memoizedState), h === null)) return zt(t), null;
      if (((a = (t.flags & 128) !== 0), (p = h.rendering), p === null))
        if (a) uo(h, !1);
        else {
          if (Ot !== 0 || (e !== null && e.flags & 128))
            for (e = t.child; e !== null; ) {
              if (((p = Vl(e)), p !== null)) {
                for (
                  t.flags |= 128,
                    uo(h, !1),
                    a = p.updateQueue,
                    a !== null && ((t.updateQueue = a), (t.flags |= 4)),
                    t.subtreeFlags = 0,
                    a = r,
                    r = t.child;
                  r !== null;

                )
                  (h = r),
                    (e = a),
                    (h.flags &= 14680066),
                    (p = h.alternate),
                    p === null
                      ? ((h.childLanes = 0),
                        (h.lanes = e),
                        (h.child = null),
                        (h.subtreeFlags = 0),
                        (h.memoizedProps = null),
                        (h.memoizedState = null),
                        (h.updateQueue = null),
                        (h.dependencies = null),
                        (h.stateNode = null))
                      : ((h.childLanes = p.childLanes),
                        (h.lanes = p.lanes),
                        (h.child = p.child),
                        (h.subtreeFlags = 0),
                        (h.deletions = null),
                        (h.memoizedProps = p.memoizedProps),
                        (h.memoizedState = p.memoizedState),
                        (h.updateQueue = p.updateQueue),
                        (h.type = p.type),
                        (e = p.dependencies),
                        (h.dependencies =
                          e === null
                            ? null
                            : {
                                lanes: e.lanes,
                                firstContext: e.firstContext,
                              })),
                    (r = r.sibling);
                return tt(ct, (ct.current & 1) | 2), t.child;
              }
              e = e.sibling;
            }
          h.tail !== null &&
            bt() > Ma &&
            ((t.flags |= 128), (a = !0), uo(h, !1), (t.lanes = 4194304));
        }
      else {
        if (!a)
          if (((e = Vl(p)), e !== null)) {
            if (
              ((t.flags |= 128),
              (a = !0),
              (r = e.updateQueue),
              r !== null && ((t.updateQueue = r), (t.flags |= 4)),
              uo(h, !0),
              h.tail === null && h.tailMode === "hidden" && !p.alternate && !st)
            )
              return zt(t), null;
          } else
            2 * bt() - h.renderingStartTime > Ma &&
              r !== 1073741824 &&
              ((t.flags |= 128), (a = !0), uo(h, !1), (t.lanes = 4194304));
        h.isBackwards
          ? ((p.sibling = t.child), (t.child = p))
          : ((r = h.last),
            r !== null ? (r.sibling = p) : (t.child = p),
            (h.last = p));
      }
      return h.tail !== null
        ? ((t = h.tail),
          (h.rendering = t),
          (h.tail = t.sibling),
          (h.renderingStartTime = bt()),
          (t.sibling = null),
          (r = ct.current),
          tt(ct, a ? (r & 1) | 2 : r & 1),
          t)
        : (zt(t), null);
    case 22:
    case 23:
      return (
        Kp(),
        (a = t.memoizedState !== null),
        e !== null && (e.memoizedState !== null) !== a && (t.flags |= 8192),
        a && t.mode & 1
          ? cr & 1073741824 && (zt(t), t.subtreeFlags & 6 && (t.flags |= 8192))
          : zt(t),
        null
      );
    case 24:
      return null;
    case 25:
      return null;
  }
  throw Error(ge(156, t.tag));
}
function t2(e, t) {
  switch ((Lp(t), t.tag)) {
    case 1:
      return (
        ir(t.type) && Fl(),
        (e = t.flags),
        e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null
      );
    case 3:
      return (
        Ia(),
        ot(nr),
        ot(Ht),
        jp(),
        (e = t.flags),
        e & 65536 && !(e & 128) ? ((t.flags = (e & -65537) | 128), t) : null
      );
    case 5:
      return Fp(t), null;
    case 13:
      if (
        (ot(ct), (e = t.memoizedState), e !== null && e.dehydrated !== null)
      ) {
        if (t.alternate === null) throw Error(ge(340));
        La();
      }
      return (
        (e = t.flags), e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null
      );
    case 19:
      return ot(ct), null;
    case 4:
      return Ia(), null;
    case 10:
      return Mp(t.type._context), null;
    case 22:
    case 23:
      return Kp(), null;
    case 24:
      return null;
    default:
      return null;
  }
}
var Bs = !1,
  Ft = !1,
  r2 = typeof WeakSet == "function" ? WeakSet : Set,
  _e = null;
function ga(e, t) {
  var r = e.ref;
  if (r !== null)
    if (typeof r == "function")
      try {
        r(null);
      } catch (a) {
        pt(e, t, a);
      }
    else r.current = null;
}
function Tf(e, t, r) {
  try {
    r();
  } catch (a) {
    pt(e, t, a);
  }
}
var uv = !1;
function n2(e, t) {
  if (((gf = Ml), (e = Jw()), Ep(e))) {
    if ("selectionStart" in e)
      var r = { start: e.selectionStart, end: e.selectionEnd };
    else
      e: {
        r = ((r = e.ownerDocument) && r.defaultView) || window;
        var a = r.getSelection && r.getSelection();
        if (a && a.rangeCount !== 0) {
          r = a.anchorNode;
          var c = a.anchorOffset,
            h = a.focusNode;
          a = a.focusOffset;
          try {
            r.nodeType, h.nodeType;
          } catch {
            r = null;
            break e;
          }
          var p = 0,
            v = -1,
            b = -1,
            P = 0,
            k = 0,
            R = e,
            L = null;
          t: for (;;) {
            for (
              var z;
              R !== r || (c !== 0 && R.nodeType !== 3) || (v = p + c),
                R !== h || (a !== 0 && R.nodeType !== 3) || (b = p + a),
                R.nodeType === 3 && (p += R.nodeValue.length),
                (z = R.firstChild) !== null;

            )
              (L = R), (R = z);
            for (;;) {
              if (R === e) break t;
              if (
                (L === r && ++P === c && (v = p),
                L === h && ++k === a && (b = p),
                (z = R.nextSibling) !== null)
              )
                break;
              (R = L), (L = R.parentNode);
            }
            R = z;
          }
          r = v === -1 || b === -1 ? null : { start: v, end: b };
        } else r = null;
      }
    r = r || { start: 0, end: 0 };
  } else r = null;
  for (
    mf = { focusedElem: e, selectionRange: r }, Ml = !1, _e = t;
    _e !== null;

  )
    if (((t = _e), (e = t.child), (t.subtreeFlags & 1028) !== 0 && e !== null))
      (e.return = t), (_e = e);
    else
      for (; _e !== null; ) {
        t = _e;
        try {
          var M = t.alternate;
          if (t.flags & 1024)
            switch (t.tag) {
              case 0:
              case 11:
              case 15:
                break;
              case 1:
                if (M !== null) {
                  var F = M.memoizedProps,
                    G = M.memoizedState,
                    $ = t.stateNode,
                    O = $.getSnapshotBeforeUpdate(
                      t.elementType === t.type ? F : Nr(t.type, F),
                      G,
                    );
                  $.__reactInternalSnapshotBeforeUpdate = O;
                }
                break;
              case 3:
                var X = t.stateNode.containerInfo;
                X.nodeType === 1
                  ? (X.textContent = "")
                  : X.nodeType === 9 &&
                    X.documentElement &&
                    X.removeChild(X.documentElement);
                break;
              case 5:
              case 6:
              case 4:
              case 17:
                break;
              default:
                throw Error(ge(163));
            }
        } catch (N) {
          pt(t, t.return, N);
        }
        if (((e = t.sibling), e !== null)) {
          (e.return = t.return), (_e = e);
          break;
        }
        _e = t.return;
      }
  return (M = uv), (uv = !1), M;
}
function No(e, t, r) {
  var a = t.updateQueue;
  if (((a = a !== null ? a.lastEffect : null), a !== null)) {
    var c = (a = a.next);
    do {
      if ((c.tag & e) === e) {
        var h = c.destroy;
        (c.destroy = void 0), h !== void 0 && Tf(t, r, h);
      }
      c = c.next;
    } while (c !== a);
  }
}
function td(e, t) {
  if (
    ((t = t.updateQueue), (t = t !== null ? t.lastEffect : null), t !== null)
  ) {
    var r = (t = t.next);
    do {
      if ((r.tag & e) === e) {
        var a = r.create;
        r.destroy = a();
      }
      r = r.next;
    } while (r !== t);
  }
}
function If(e) {
  var t = e.ref;
  if (t !== null) {
    var r = e.stateNode;
    switch (e.tag) {
      case 5:
        e = r;
        break;
      default:
        e = r;
    }
    typeof t == "function" ? t(e) : (t.current = e);
  }
}
function Z1(e) {
  var t = e.alternate;
  t !== null && ((e.alternate = null), Z1(t)),
    (e.child = null),
    (e.deletions = null),
    (e.sibling = null),
    e.tag === 5 &&
      ((t = e.stateNode),
      t !== null &&
        (delete t[tn], delete t[Ko], delete t[xf], delete t[FE], delete t[jE])),
    (e.stateNode = null),
    (e.return = null),
    (e.dependencies = null),
    (e.memoizedProps = null),
    (e.memoizedState = null),
    (e.pendingProps = null),
    (e.stateNode = null),
    (e.updateQueue = null);
}
function K1(e) {
  return e.tag === 5 || e.tag === 3 || e.tag === 4;
}
function dv(e) {
  e: for (;;) {
    for (; e.sibling === null; ) {
      if (e.return === null || K1(e.return)) return null;
      e = e.return;
    }
    for (
      e.sibling.return = e.return, e = e.sibling;
      e.tag !== 5 && e.tag !== 6 && e.tag !== 18;

    ) {
      if (e.flags & 2 || e.child === null || e.tag === 4) continue e;
      (e.child.return = e), (e = e.child);
    }
    if (!(e.flags & 2)) return e.stateNode;
  }
}
function Nf(e, t, r) {
  var a = e.tag;
  if (a === 5 || a === 6)
    (e = e.stateNode),
      t
        ? r.nodeType === 8
          ? r.parentNode.insertBefore(e, t)
          : r.insertBefore(e, t)
        : (r.nodeType === 8
            ? ((t = r.parentNode), t.insertBefore(e, r))
            : ((t = r), t.appendChild(e)),
          (r = r._reactRootContainer),
          r != null || t.onclick !== null || (t.onclick = zl));
  else if (a !== 4 && ((e = e.child), e !== null))
    for (Nf(e, t, r), e = e.sibling; e !== null; ) Nf(e, t, r), (e = e.sibling);
}
function Mf(e, t, r) {
  var a = e.tag;
  if (a === 5 || a === 6)
    (e = e.stateNode), t ? r.insertBefore(e, t) : r.appendChild(e);
  else if (a !== 4 && ((e = e.child), e !== null))
    for (Mf(e, t, r), e = e.sibling; e !== null; ) Mf(e, t, r), (e = e.sibling);
}
var Tt = null,
  $r = !1;
function Dn(e, t, r) {
  for (r = r.child; r !== null; ) Q1(e, t, r), (r = r.sibling);
}
function Q1(e, t, r) {
  if (an && typeof an.onCommitFiberUnmount == "function")
    try {
      an.onCommitFiberUnmount(Gu, r);
    } catch {}
  switch (r.tag) {
    case 5:
      Ft || ga(r, t);
    case 6:
      var a = Tt,
        c = $r;
      (Tt = null),
        Dn(e, t, r),
        (Tt = a),
        ($r = c),
        Tt !== null &&
          ($r
            ? ((e = Tt),
              (r = r.stateNode),
              e.nodeType === 8 ? e.parentNode.removeChild(r) : e.removeChild(r))
            : Tt.removeChild(r.stateNode));
      break;
    case 18:
      Tt !== null &&
        ($r
          ? ((e = Tt),
            (r = r.stateNode),
            e.nodeType === 8
              ? sh(e.parentNode, r)
              : e.nodeType === 1 && sh(e, r),
            Vo(e))
          : sh(Tt, r.stateNode));
      break;
    case 4:
      (a = Tt),
        (c = $r),
        (Tt = r.stateNode.containerInfo),
        ($r = !0),
        Dn(e, t, r),
        (Tt = a),
        ($r = c);
      break;
    case 0:
    case 11:
    case 14:
    case 15:
      if (
        !Ft &&
        ((a = r.updateQueue), a !== null && ((a = a.lastEffect), a !== null))
      ) {
        c = a = a.next;
        do {
          var h = c,
            p = h.destroy;
          (h = h.tag),
            p !== void 0 && (h & 2 || h & 4) && Tf(r, t, p),
            (c = c.next);
        } while (c !== a);
      }
      Dn(e, t, r);
      break;
    case 1:
      if (
        !Ft &&
        (ga(r, t),
        (a = r.stateNode),
        typeof a.componentWillUnmount == "function")
      )
        try {
          (a.props = r.memoizedProps),
            (a.state = r.memoizedState),
            a.componentWillUnmount();
        } catch (v) {
          pt(r, t, v);
        }
      Dn(e, t, r);
      break;
    case 21:
      Dn(e, t, r);
      break;
    case 22:
      r.mode & 1
        ? ((Ft = (a = Ft) || r.memoizedState !== null), Dn(e, t, r), (Ft = a))
        : Dn(e, t, r);
      break;
    default:
      Dn(e, t, r);
  }
}
function hv(e) {
  var t = e.updateQueue;
  if (t !== null) {
    e.updateQueue = null;
    var r = e.stateNode;
    r === null && (r = e.stateNode = new r2()),
      t.forEach(function (a) {
        var c = h2.bind(null, e, a);
        r.has(a) || (r.add(a), a.then(c, c));
      });
  }
}
function Ir(e, t) {
  var r = t.deletions;
  if (r !== null)
    for (var a = 0; a < r.length; a++) {
      var c = r[a];
      try {
        var h = e,
          p = t,
          v = p;
        e: for (; v !== null; ) {
          switch (v.tag) {
            case 5:
              (Tt = v.stateNode), ($r = !1);
              break e;
            case 3:
              (Tt = v.stateNode.containerInfo), ($r = !0);
              break e;
            case 4:
              (Tt = v.stateNode.containerInfo), ($r = !0);
              break e;
          }
          v = v.return;
        }
        if (Tt === null) throw Error(ge(160));
        Q1(h, p, c), (Tt = null), ($r = !1);
        var b = c.alternate;
        b !== null && (b.return = null), (c.return = null);
      } catch (P) {
        pt(c, t, P);
      }
    }
  if (t.subtreeFlags & 12854)
    for (t = t.child; t !== null; ) J1(t, e), (t = t.sibling);
}
function J1(e, t) {
  var r = e.alternate,
    a = e.flags;
  switch (e.tag) {
    case 0:
    case 11:
    case 14:
    case 15:
      if ((Ir(t, e), Zr(e), a & 4)) {
        try {
          No(3, e, e.return), td(3, e);
        } catch (F) {
          pt(e, e.return, F);
        }
        try {
          No(5, e, e.return);
        } catch (F) {
          pt(e, e.return, F);
        }
      }
      break;
    case 1:
      Ir(t, e), Zr(e), a & 512 && r !== null && ga(r, r.return);
      break;
    case 5:
      if (
        (Ir(t, e),
        Zr(e),
        a & 512 && r !== null && ga(r, r.return),
        e.flags & 32)
      ) {
        var c = e.stateNode;
        try {
          Xo(c, "");
        } catch (F) {
          pt(e, e.return, F);
        }
      }
      if (a & 4 && ((c = e.stateNode), c != null)) {
        var h = e.memoizedProps,
          p = r !== null ? r.memoizedProps : h,
          v = e.type,
          b = e.updateQueue;
        if (((e.updateQueue = null), b !== null))
          try {
            v === "input" && h.type === "radio" && h.name != null && bw(c, h),
              af(v, p);
            var P = af(v, h);
            for (p = 0; p < b.length; p += 2) {
              var k = b[p],
                R = b[p + 1];
              k === "style"
                ? Cw(c, R)
                : k === "dangerouslySetInnerHTML"
                ? Pw(c, R)
                : k === "children"
                ? Xo(c, R)
                : mp(c, k, R, P);
            }
            switch (v) {
              case "input":
                Jh(c, h);
                break;
              case "textarea":
                ww(c, h);
                break;
              case "select":
                var L = c._wrapperState.wasMultiple;
                c._wrapperState.wasMultiple = !!h.multiple;
                var z = h.value;
                z != null
                  ? xa(c, !!h.multiple, z, !1)
                  : L !== !!h.multiple &&
                    (h.defaultValue != null
                      ? xa(c, !!h.multiple, h.defaultValue, !0)
                      : xa(c, !!h.multiple, h.multiple ? [] : "", !1));
            }
            c[Ko] = h;
          } catch (F) {
            pt(e, e.return, F);
          }
      }
      break;
    case 6:
      if ((Ir(t, e), Zr(e), a & 4)) {
        if (e.stateNode === null) throw Error(ge(162));
        (c = e.stateNode), (h = e.memoizedProps);
        try {
          c.nodeValue = h;
        } catch (F) {
          pt(e, e.return, F);
        }
      }
      break;
    case 3:
      if (
        (Ir(t, e), Zr(e), a & 4 && r !== null && r.memoizedState.isDehydrated)
      )
        try {
          Vo(t.containerInfo);
        } catch (F) {
          pt(e, e.return, F);
        }
      break;
    case 4:
      Ir(t, e), Zr(e);
      break;
    case 13:
      Ir(t, e),
        Zr(e),
        (c = e.child),
        c.flags & 8192 &&
          ((h = c.memoizedState !== null),
          (c.stateNode.isHidden = h),
          !h ||
            (c.alternate !== null && c.alternate.memoizedState !== null) ||
            (qp = bt())),
        a & 4 && hv(e);
      break;
    case 22:
      if (
        ((k = r !== null && r.memoizedState !== null),
        e.mode & 1 ? ((Ft = (P = Ft) || k), Ir(t, e), (Ft = P)) : Ir(t, e),
        Zr(e),
        a & 8192)
      ) {
        if (
          ((P = e.memoizedState !== null),
          (e.stateNode.isHidden = P) && !k && e.mode & 1)
        )
          for (_e = e, k = e.child; k !== null; ) {
            for (R = _e = k; _e !== null; ) {
              switch (((L = _e), (z = L.child), L.tag)) {
                case 0:
                case 11:
                case 14:
                case 15:
                  No(4, L, L.return);
                  break;
                case 1:
                  ga(L, L.return);
                  var M = L.stateNode;
                  if (typeof M.componentWillUnmount == "function") {
                    (a = L), (r = L.return);
                    try {
                      (t = a),
                        (M.props = t.memoizedProps),
                        (M.state = t.memoizedState),
                        M.componentWillUnmount();
                    } catch (F) {
                      pt(a, r, F);
                    }
                  }
                  break;
                case 5:
                  ga(L, L.return);
                  break;
                case 22:
                  if (L.memoizedState !== null) {
                    pv(R);
                    continue;
                  }
              }
              z !== null ? ((z.return = L), (_e = z)) : pv(R);
            }
            k = k.sibling;
          }
        e: for (k = null, R = e; ; ) {
          if (R.tag === 5) {
            if (k === null) {
              k = R;
              try {
                (c = R.stateNode),
                  P
                    ? ((h = c.style),
                      typeof h.setProperty == "function"
                        ? h.setProperty("display", "none", "important")
                        : (h.display = "none"))
                    : ((v = R.stateNode),
                      (b = R.memoizedProps.style),
                      (p =
                        b != null && b.hasOwnProperty("display")
                          ? b.display
                          : null),
                      (v.style.display = _w("display", p)));
              } catch (F) {
                pt(e, e.return, F);
              }
            }
          } else if (R.tag === 6) {
            if (k === null)
              try {
                R.stateNode.nodeValue = P ? "" : R.memoizedProps;
              } catch (F) {
                pt(e, e.return, F);
              }
          } else if (
            ((R.tag !== 22 && R.tag !== 23) ||
              R.memoizedState === null ||
              R === e) &&
            R.child !== null
          ) {
            (R.child.return = R), (R = R.child);
            continue;
          }
          if (R === e) break e;
          for (; R.sibling === null; ) {
            if (R.return === null || R.return === e) break e;
            k === R && (k = null), (R = R.return);
          }
          k === R && (k = null), (R.sibling.return = R.return), (R = R.sibling);
        }
      }
      break;
    case 19:
      Ir(t, e), Zr(e), a & 4 && hv(e);
      break;
    case 21:
      break;
    default:
      Ir(t, e), Zr(e);
  }
}
function Zr(e) {
  var t = e.flags;
  if (t & 2) {
    try {
      e: {
        for (var r = e.return; r !== null; ) {
          if (K1(r)) {
            var a = r;
            break e;
          }
          r = r.return;
        }
        throw Error(ge(160));
      }
      switch (a.tag) {
        case 5:
          var c = a.stateNode;
          a.flags & 32 && (Xo(c, ""), (a.flags &= -33));
          var h = dv(e);
          Mf(e, h, c);
          break;
        case 3:
        case 4:
          var p = a.stateNode.containerInfo,
            v = dv(e);
          Nf(e, v, p);
          break;
        default:
          throw Error(ge(161));
      }
    } catch (b) {
      pt(e, e.return, b);
    }
    e.flags &= -3;
  }
  t & 4096 && (e.flags &= -4097);
}
function i2(e, t, r) {
  (_e = e), eS(e);
}
function eS(e, t, r) {
  for (var a = (e.mode & 1) !== 0; _e !== null; ) {
    var c = _e,
      h = c.child;
    if (c.tag === 22 && a) {
      var p = c.memoizedState !== null || Bs;
      if (!p) {
        var v = c.alternate,
          b = (v !== null && v.memoizedState !== null) || Ft;
        v = Bs;
        var P = Ft;
        if (((Bs = p), (Ft = b) && !P))
          for (_e = c; _e !== null; )
            (p = _e),
              (b = p.child),
              p.tag === 22 && p.memoizedState !== null
                ? gv(c)
                : b !== null
                ? ((b.return = p), (_e = b))
                : gv(c);
        for (; h !== null; ) (_e = h), eS(h), (h = h.sibling);
        (_e = c), (Bs = v), (Ft = P);
      }
      fv(e);
    } else
      c.subtreeFlags & 8772 && h !== null ? ((h.return = c), (_e = h)) : fv(e);
  }
}
function fv(e) {
  for (; _e !== null; ) {
    var t = _e;
    if (t.flags & 8772) {
      var r = t.alternate;
      try {
        if (t.flags & 8772)
          switch (t.tag) {
            case 0:
            case 11:
            case 15:
              Ft || td(5, t);
              break;
            case 1:
              var a = t.stateNode;
              if (t.flags & 4 && !Ft)
                if (r === null) a.componentDidMount();
                else {
                  var c =
                    t.elementType === t.type
                      ? r.memoizedProps
                      : Nr(t.type, r.memoizedProps);
                  a.componentDidUpdate(
                    c,
                    r.memoizedState,
                    a.__reactInternalSnapshotBeforeUpdate,
                  );
                }
              var h = t.updateQueue;
              h !== null && Zm(t, h, a);
              break;
            case 3:
              var p = t.updateQueue;
              if (p !== null) {
                if (((r = null), t.child !== null))
                  switch (t.child.tag) {
                    case 5:
                      r = t.child.stateNode;
                      break;
                    case 1:
                      r = t.child.stateNode;
                  }
                Zm(t, p, r);
              }
              break;
            case 5:
              var v = t.stateNode;
              if (r === null && t.flags & 4) {
                r = v;
                var b = t.memoizedProps;
                switch (t.type) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    b.autoFocus && r.focus();
                    break;
                  case "img":
                    b.src && (r.src = b.src);
                }
              }
              break;
            case 6:
              break;
            case 4:
              break;
            case 12:
              break;
            case 13:
              if (t.memoizedState === null) {
                var P = t.alternate;
                if (P !== null) {
                  var k = P.memoizedState;
                  if (k !== null) {
                    var R = k.dehydrated;
                    R !== null && Vo(R);
                  }
                }
              }
              break;
            case 19:
            case 17:
            case 21:
            case 22:
            case 23:
            case 25:
              break;
            default:
              throw Error(ge(163));
          }
        Ft || (t.flags & 512 && If(t));
      } catch (L) {
        pt(t, t.return, L);
      }
    }
    if (t === e) {
      _e = null;
      break;
    }
    if (((r = t.sibling), r !== null)) {
      (r.return = t.return), (_e = r);
      break;
    }
    _e = t.return;
  }
}
function pv(e) {
  for (; _e !== null; ) {
    var t = _e;
    if (t === e) {
      _e = null;
      break;
    }
    var r = t.sibling;
    if (r !== null) {
      (r.return = t.return), (_e = r);
      break;
    }
    _e = t.return;
  }
}
function gv(e) {
  for (; _e !== null; ) {
    var t = _e;
    try {
      switch (t.tag) {
        case 0:
        case 11:
        case 15:
          var r = t.return;
          try {
            td(4, t);
          } catch (b) {
            pt(t, r, b);
          }
          break;
        case 1:
          var a = t.stateNode;
          if (typeof a.componentDidMount == "function") {
            var c = t.return;
            try {
              a.componentDidMount();
            } catch (b) {
              pt(t, c, b);
            }
          }
          var h = t.return;
          try {
            If(t);
          } catch (b) {
            pt(t, h, b);
          }
          break;
        case 5:
          var p = t.return;
          try {
            If(t);
          } catch (b) {
            pt(t, p, b);
          }
      }
    } catch (b) {
      pt(t, t.return, b);
    }
    if (t === e) {
      _e = null;
      break;
    }
    var v = t.sibling;
    if (v !== null) {
      (v.return = t.return), (_e = v);
      break;
    }
    _e = t.return;
  }
}
var a2 = Math.ceil,
  ql = En.ReactCurrentDispatcher,
  Gp = En.ReactCurrentOwner,
  wr = En.ReactCurrentBatchConfig,
  Ye = 0,
  Et = null,
  _t = null,
  It = 0,
  cr = 0,
  ma = ui(0),
  Ot = 0,
  ns = null,
  Di = 0,
  rd = 0,
  Up = 0,
  Mo = null,
  tr = null,
  qp = 0,
  Ma = 1 / 0,
  gn = null,
  Zl = !1,
  $f = null,
  ei = null,
  Ys = !1,
  Gn = null,
  Kl = 0,
  $o = 0,
  Df = null,
  wl = -1,
  Sl = 0;
function Ut() {
  return Ye & 6 ? bt() : wl !== -1 ? wl : (wl = bt());
}
function ti(e) {
  return e.mode & 1
    ? Ye & 2 && It !== 0
      ? It & -It
      : XE.transition !== null
      ? (Sl === 0 && (Sl = Dw()), Sl)
      : ((e = Ze),
        e !== 0 || ((e = window.event), (e = e === void 0 ? 16 : Yw(e.type))),
        e)
    : 1;
}
function Hr(e, t, r, a) {
  if (50 < $o) throw (($o = 0), (Df = null), Error(ge(185)));
  ls(e, r, a),
    (!(Ye & 2) || e !== Et) &&
      (e === Et && (!(Ye & 2) && (rd |= r), Ot === 4 && Wn(e, It)),
      ar(e, a),
      r === 1 && Ye === 0 && !(t.mode & 1) && ((Ma = bt() + 500), Qu && di()));
}
function ar(e, t) {
  var r = e.callbackNode;
  XA(e, t);
  var a = Nl(e, e === Et ? It : 0);
  if (a === 0)
    r !== null && _m(r), (e.callbackNode = null), (e.callbackPriority = 0);
  else if (((t = a & -a), e.callbackPriority !== t)) {
    if ((r != null && _m(r), t === 1))
      e.tag === 0 ? HE(mv.bind(null, e)) : c1(mv.bind(null, e)),
        DE(function () {
          !(Ye & 6) && di();
        }),
        (r = null);
    else {
      switch (zw(a)) {
        case 1:
          r = wp;
          break;
        case 4:
          r = Mw;
          break;
        case 16:
          r = Il;
          break;
        case 536870912:
          r = $w;
          break;
        default:
          r = Il;
      }
      r = lS(r, tS.bind(null, e));
    }
    (e.callbackPriority = t), (e.callbackNode = r);
  }
}
function tS(e, t) {
  if (((wl = -1), (Sl = 0), Ye & 6)) throw Error(ge(327));
  var r = e.callbackNode;
  if (_a() && e.callbackNode !== r) return null;
  var a = Nl(e, e === Et ? It : 0);
  if (a === 0) return null;
  if (a & 30 || a & e.expiredLanes || t) t = Ql(e, a);
  else {
    t = a;
    var c = Ye;
    Ye |= 2;
    var h = nS();
    (Et !== e || It !== t) && ((gn = null), (Ma = bt() + 500), Ei(e, t));
    do
      try {
        l2();
        break;
      } catch (v) {
        rS(e, v);
      }
    while (1);
    Np(),
      (ql.current = h),
      (Ye = c),
      _t !== null ? (t = 0) : ((Et = null), (It = 0), (t = Ot));
  }
  if (t !== 0) {
    if (
      (t === 2 && ((c = uf(e)), c !== 0 && ((a = c), (t = zf(e, c)))), t === 1)
    )
      throw ((r = ns), Ei(e, 0), Wn(e, a), ar(e, bt()), r);
    if (t === 6) Wn(e, a);
    else {
      if (
        ((c = e.current.alternate),
        !(a & 30) &&
          !o2(c) &&
          ((t = Ql(e, a)),
          t === 2 && ((h = uf(e)), h !== 0 && ((a = h), (t = zf(e, h)))),
          t === 1))
      )
        throw ((r = ns), Ei(e, 0), Wn(e, a), ar(e, bt()), r);
      switch (((e.finishedWork = c), (e.finishedLanes = a), t)) {
        case 0:
        case 1:
          throw Error(ge(345));
        case 2:
          wi(e, tr, gn);
          break;
        case 3:
          if (
            (Wn(e, a), (a & 130023424) === a && ((t = qp + 500 - bt()), 10 < t))
          ) {
            if (Nl(e, 0) !== 0) break;
            if (((c = e.suspendedLanes), (c & a) !== a)) {
              Ut(), (e.pingedLanes |= e.suspendedLanes & c);
              break;
            }
            e.timeoutHandle = yf(wi.bind(null, e, tr, gn), t);
            break;
          }
          wi(e, tr, gn);
          break;
        case 4:
          if ((Wn(e, a), (a & 4194240) === a)) break;
          for (t = e.eventTimes, c = -1; 0 < a; ) {
            var p = 31 - jr(a);
            (h = 1 << p), (p = t[p]), p > c && (c = p), (a &= ~h);
          }
          if (
            ((a = c),
            (a = bt() - a),
            (a =
              (120 > a
                ? 120
                : 480 > a
                ? 480
                : 1080 > a
                ? 1080
                : 1920 > a
                ? 1920
                : 3e3 > a
                ? 3e3
                : 4320 > a
                ? 4320
                : 1960 * a2(a / 1960)) - a),
            10 < a)
          ) {
            e.timeoutHandle = yf(wi.bind(null, e, tr, gn), a);
            break;
          }
          wi(e, tr, gn);
          break;
        case 5:
          wi(e, tr, gn);
          break;
        default:
          throw Error(ge(329));
      }
    }
  }
  return ar(e, bt()), e.callbackNode === r ? tS.bind(null, e) : null;
}
function zf(e, t) {
  var r = Mo;
  return (
    e.current.memoizedState.isDehydrated && (Ei(e, t).flags |= 256),
    (e = Ql(e, t)),
    e !== 2 && ((t = tr), (tr = r), t !== null && Ff(t)),
    e
  );
}
function Ff(e) {
  tr === null ? (tr = e) : tr.push.apply(tr, e);
}
function o2(e) {
  for (var t = e; ; ) {
    if (t.flags & 16384) {
      var r = t.updateQueue;
      if (r !== null && ((r = r.stores), r !== null))
        for (var a = 0; a < r.length; a++) {
          var c = r[a],
            h = c.getSnapshot;
          c = c.value;
          try {
            if (!Yr(h(), c)) return !1;
          } catch {
            return !1;
          }
        }
    }
    if (((r = t.child), t.subtreeFlags & 16384 && r !== null))
      (r.return = t), (t = r);
    else {
      if (t === e) break;
      for (; t.sibling === null; ) {
        if (t.return === null || t.return === e) return !0;
        t = t.return;
      }
      (t.sibling.return = t.return), (t = t.sibling);
    }
  }
  return !0;
}
function Wn(e, t) {
  for (
    t &= ~Up,
      t &= ~rd,
      e.suspendedLanes |= t,
      e.pingedLanes &= ~t,
      e = e.expirationTimes;
    0 < t;

  ) {
    var r = 31 - jr(t),
      a = 1 << r;
    (e[r] = -1), (t &= ~a);
  }
}
function mv(e) {
  if (Ye & 6) throw Error(ge(327));
  _a();
  var t = Nl(e, 0);
  if (!(t & 1)) return ar(e, bt()), null;
  var r = Ql(e, t);
  if (e.tag !== 0 && r === 2) {
    var a = uf(e);
    a !== 0 && ((t = a), (r = zf(e, a)));
  }
  if (r === 1) throw ((r = ns), Ei(e, 0), Wn(e, t), ar(e, bt()), r);
  if (r === 6) throw Error(ge(345));
  return (
    (e.finishedWork = e.current.alternate),
    (e.finishedLanes = t),
    wi(e, tr, gn),
    ar(e, bt()),
    null
  );
}
function Zp(e, t) {
  var r = Ye;
  Ye |= 1;
  try {
    return e(t);
  } finally {
    (Ye = r), Ye === 0 && ((Ma = bt() + 500), Qu && di());
  }
}
function zi(e) {
  Gn !== null && Gn.tag === 0 && !(Ye & 6) && _a();
  var t = Ye;
  Ye |= 1;
  var r = wr.transition,
    a = Ze;
  try {
    if (((wr.transition = null), (Ze = 1), e)) return e();
  } finally {
    (Ze = a), (wr.transition = r), (Ye = t), !(Ye & 6) && di();
  }
}
function Kp() {
  (cr = ma.current), ot(ma);
}
function Ei(e, t) {
  (e.finishedWork = null), (e.finishedLanes = 0);
  var r = e.timeoutHandle;
  if ((r !== -1 && ((e.timeoutHandle = -1), $E(r)), _t !== null))
    for (r = _t.return; r !== null; ) {
      var a = r;
      switch ((Lp(a), a.tag)) {
        case 1:
          (a = a.type.childContextTypes), a != null && Fl();
          break;
        case 3:
          Ia(), ot(nr), ot(Ht), jp();
          break;
        case 5:
          Fp(a);
          break;
        case 4:
          Ia();
          break;
        case 13:
          ot(ct);
          break;
        case 19:
          ot(ct);
          break;
        case 10:
          Mp(a.type._context);
          break;
        case 22:
        case 23:
          Kp();
      }
      r = r.return;
    }
  if (
    ((Et = e),
    (_t = e = ri(e.current, null)),
    (It = cr = t),
    (Ot = 0),
    (ns = null),
    (Up = rd = Di = 0),
    (tr = Mo = null),
    _i !== null)
  ) {
    for (t = 0; t < _i.length; t++)
      if (((r = _i[t]), (a = r.interleaved), a !== null)) {
        r.interleaved = null;
        var c = a.next,
          h = r.pending;
        if (h !== null) {
          var p = h.next;
          (h.next = c), (a.next = p);
        }
        r.pending = a;
      }
    _i = null;
  }
  return e;
}
function rS(e, t) {
  do {
    var r = _t;
    try {
      if ((Np(), (yl.current = Ul), Gl)) {
        for (var a = ut.memoizedState; a !== null; ) {
          var c = a.queue;
          c !== null && (c.pending = null), (a = a.next);
        }
        Gl = !1;
      }
      if (
        (($i = 0),
        (At = Ct = ut = null),
        (Io = !1),
        (es = 0),
        (Gp.current = null),
        r === null || r.return === null)
      ) {
        (Ot = 1), (ns = t), (_t = null);
        break;
      }
      e: {
        var h = e,
          p = r.return,
          v = r,
          b = t;
        if (
          ((t = It),
          (v.flags |= 32768),
          b !== null && typeof b == "object" && typeof b.then == "function")
        ) {
          var P = b,
            k = v,
            R = k.tag;
          if (!(k.mode & 1) && (R === 0 || R === 11 || R === 15)) {
            var L = k.alternate;
            L
              ? ((k.updateQueue = L.updateQueue),
                (k.memoizedState = L.memoizedState),
                (k.lanes = L.lanes))
              : ((k.updateQueue = null), (k.memoizedState = null));
          }
          var z = nv(p);
          if (z !== null) {
            (z.flags &= -257),
              iv(z, p, v, h, t),
              z.mode & 1 && rv(h, P, t),
              (t = z),
              (b = P);
            var M = t.updateQueue;
            if (M === null) {
              var F = new Set();
              F.add(b), (t.updateQueue = F);
            } else M.add(b);
            break e;
          } else {
            if (!(t & 1)) {
              rv(h, P, t), Qp();
              break e;
            }
            b = Error(ge(426));
          }
        } else if (st && v.mode & 1) {
          var G = nv(p);
          if (G !== null) {
            !(G.flags & 65536) && (G.flags |= 256),
              iv(G, p, v, h, t),
              Tp(Na(b, v));
            break e;
          }
        }
        (h = b = Na(b, v)),
          Ot !== 4 && (Ot = 2),
          Mo === null ? (Mo = [h]) : Mo.push(h),
          (h = p);
        do {
          switch (h.tag) {
            case 3:
              (h.flags |= 65536), (t &= -t), (h.lanes |= t);
              var $ = F1(h, b, t);
              qm(h, $);
              break e;
            case 1:
              v = b;
              var O = h.type,
                X = h.stateNode;
              if (
                !(h.flags & 128) &&
                (typeof O.getDerivedStateFromError == "function" ||
                  (X !== null &&
                    typeof X.componentDidCatch == "function" &&
                    (ei === null || !ei.has(X))))
              ) {
                (h.flags |= 65536), (t &= -t), (h.lanes |= t);
                var N = j1(h, v, t);
                qm(h, N);
                break e;
              }
          }
          h = h.return;
        } while (h !== null);
      }
      aS(r);
    } catch (B) {
      (t = B), _t === r && r !== null && (_t = r = r.return);
      continue;
    }
    break;
  } while (1);
}
function nS() {
  var e = ql.current;
  return (ql.current = Ul), e === null ? Ul : e;
}
function Qp() {
  (Ot === 0 || Ot === 3 || Ot === 2) && (Ot = 4),
    Et === null || (!(Di & 268435455) && !(rd & 268435455)) || Wn(Et, It);
}
function Ql(e, t) {
  var r = Ye;
  Ye |= 2;
  var a = nS();
  (Et !== e || It !== t) && ((gn = null), Ei(e, t));
  do
    try {
      s2();
      break;
    } catch (c) {
      rS(e, c);
    }
  while (1);
  if ((Np(), (Ye = r), (ql.current = a), _t !== null)) throw Error(ge(261));
  return (Et = null), (It = 0), Ot;
}
function s2() {
  for (; _t !== null; ) iS(_t);
}
function l2() {
  for (; _t !== null && !IA(); ) iS(_t);
}
function iS(e) {
  var t = sS(e.alternate, e, cr);
  (e.memoizedProps = e.pendingProps),
    t === null ? aS(e) : (_t = t),
    (Gp.current = null);
}
function aS(e) {
  var t = e;
  do {
    var r = t.alternate;
    if (((e = t.return), t.flags & 32768)) {
      if (((r = t2(r, t)), r !== null)) {
        (r.flags &= 32767), (_t = r);
        return;
      }
      if (e !== null)
        (e.flags |= 32768), (e.subtreeFlags = 0), (e.deletions = null);
      else {
        (Ot = 6), (_t = null);
        return;
      }
    } else if (((r = e2(r, t, cr)), r !== null)) {
      _t = r;
      return;
    }
    if (((t = t.sibling), t !== null)) {
      _t = t;
      return;
    }
    _t = t = e;
  } while (t !== null);
  Ot === 0 && (Ot = 5);
}
function wi(e, t, r) {
  var a = Ze,
    c = wr.transition;
  try {
    (wr.transition = null), (Ze = 1), c2(e, t, r, a);
  } finally {
    (wr.transition = c), (Ze = a);
  }
  return null;
}
function c2(e, t, r, a) {
  do _a();
  while (Gn !== null);
  if (Ye & 6) throw Error(ge(327));
  r = e.finishedWork;
  var c = e.finishedLanes;
  if (r === null) return null;
  if (((e.finishedWork = null), (e.finishedLanes = 0), r === e.current))
    throw Error(ge(177));
  (e.callbackNode = null), (e.callbackPriority = 0);
  var h = r.lanes | r.childLanes;
  if (
    (BA(e, h),
    e === Et && ((_t = Et = null), (It = 0)),
    (!(r.subtreeFlags & 2064) && !(r.flags & 2064)) ||
      Ys ||
      ((Ys = !0),
      lS(Il, function () {
        return _a(), null;
      })),
    (h = (r.flags & 15990) !== 0),
    r.subtreeFlags & 15990 || h)
  ) {
    (h = wr.transition), (wr.transition = null);
    var p = Ze;
    Ze = 1;
    var v = Ye;
    (Ye |= 4),
      (Gp.current = null),
      n2(e, r),
      J1(r, e),
      EE(mf),
      (Ml = !!gf),
      (mf = gf = null),
      (e.current = r),
      i2(r),
      NA(),
      (Ye = v),
      (Ze = p),
      (wr.transition = h);
  } else e.current = r;
  if (
    (Ys && ((Ys = !1), (Gn = e), (Kl = c)),
    (h = e.pendingLanes),
    h === 0 && (ei = null),
    DA(r.stateNode),
    ar(e, bt()),
    t !== null)
  )
    for (a = e.onRecoverableError, r = 0; r < t.length; r++)
      (c = t[r]), a(c.value, { componentStack: c.stack, digest: c.digest });
  if (Zl) throw ((Zl = !1), (e = $f), ($f = null), e);
  return (
    Kl & 1 && e.tag !== 0 && _a(),
    (h = e.pendingLanes),
    h & 1 ? (e === Df ? $o++ : (($o = 0), (Df = e))) : ($o = 0),
    di(),
    null
  );
}
function _a() {
  if (Gn !== null) {
    var e = zw(Kl),
      t = wr.transition,
      r = Ze;
    try {
      if (((wr.transition = null), (Ze = 16 > e ? 16 : e), Gn === null))
        var a = !1;
      else {
        if (((e = Gn), (Gn = null), (Kl = 0), Ye & 6)) throw Error(ge(331));
        var c = Ye;
        for (Ye |= 4, _e = e.current; _e !== null; ) {
          var h = _e,
            p = h.child;
          if (_e.flags & 16) {
            var v = h.deletions;
            if (v !== null) {
              for (var b = 0; b < v.length; b++) {
                var P = v[b];
                for (_e = P; _e !== null; ) {
                  var k = _e;
                  switch (k.tag) {
                    case 0:
                    case 11:
                    case 15:
                      No(8, k, h);
                  }
                  var R = k.child;
                  if (R !== null) (R.return = k), (_e = R);
                  else
                    for (; _e !== null; ) {
                      k = _e;
                      var L = k.sibling,
                        z = k.return;
                      if ((Z1(k), k === P)) {
                        _e = null;
                        break;
                      }
                      if (L !== null) {
                        (L.return = z), (_e = L);
                        break;
                      }
                      _e = z;
                    }
                }
              }
              var M = h.alternate;
              if (M !== null) {
                var F = M.child;
                if (F !== null) {
                  M.child = null;
                  do {
                    var G = F.sibling;
                    (F.sibling = null), (F = G);
                  } while (F !== null);
                }
              }
              _e = h;
            }
          }
          if (h.subtreeFlags & 2064 && p !== null) (p.return = h), (_e = p);
          else
            e: for (; _e !== null; ) {
              if (((h = _e), h.flags & 2048))
                switch (h.tag) {
                  case 0:
                  case 11:
                  case 15:
                    No(9, h, h.return);
                }
              var $ = h.sibling;
              if ($ !== null) {
                ($.return = h.return), (_e = $);
                break e;
              }
              _e = h.return;
            }
        }
        var O = e.current;
        for (_e = O; _e !== null; ) {
          p = _e;
          var X = p.child;
          if (p.subtreeFlags & 2064 && X !== null) (X.return = p), (_e = X);
          else
            e: for (p = O; _e !== null; ) {
              if (((v = _e), v.flags & 2048))
                try {
                  switch (v.tag) {
                    case 0:
                    case 11:
                    case 15:
                      td(9, v);
                  }
                } catch (B) {
                  pt(v, v.return, B);
                }
              if (v === p) {
                _e = null;
                break e;
              }
              var N = v.sibling;
              if (N !== null) {
                (N.return = v.return), (_e = N);
                break e;
              }
              _e = v.return;
            }
        }
        if (
          ((Ye = c), di(), an && typeof an.onPostCommitFiberRoot == "function")
        )
          try {
            an.onPostCommitFiberRoot(Gu, e);
          } catch {}
        a = !0;
      }
      return a;
    } finally {
      (Ze = r), (wr.transition = t);
    }
  }
  return !1;
}
function vv(e, t, r) {
  (t = Na(r, t)),
    (t = F1(e, t, 1)),
    (e = Jn(e, t, 1)),
    (t = Ut()),
    e !== null && (ls(e, 1, t), ar(e, t));
}
function pt(e, t, r) {
  if (e.tag === 3) vv(e, e, r);
  else
    for (; t !== null; ) {
      if (t.tag === 3) {
        vv(t, e, r);
        break;
      } else if (t.tag === 1) {
        var a = t.stateNode;
        if (
          typeof t.type.getDerivedStateFromError == "function" ||
          (typeof a.componentDidCatch == "function" &&
            (ei === null || !ei.has(a)))
        ) {
          (e = Na(r, e)),
            (e = j1(t, e, 1)),
            (t = Jn(t, e, 1)),
            (e = Ut()),
            t !== null && (ls(t, 1, e), ar(t, e));
          break;
        }
      }
      t = t.return;
    }
}
function u2(e, t, r) {
  var a = e.pingCache;
  a !== null && a.delete(t),
    (t = Ut()),
    (e.pingedLanes |= e.suspendedLanes & r),
    Et === e &&
      (It & r) === r &&
      (Ot === 4 || (Ot === 3 && (It & 130023424) === It && 500 > bt() - qp)
        ? Ei(e, 0)
        : (Up |= r)),
    ar(e, t);
}
function oS(e, t) {
  t === 0 &&
    (e.mode & 1
      ? ((t = Ns), (Ns <<= 1), !(Ns & 130023424) && (Ns = 4194304))
      : (t = 1));
  var r = Ut();
  (e = Cn(e, t)), e !== null && (ls(e, t, r), ar(e, r));
}
function d2(e) {
  var t = e.memoizedState,
    r = 0;
  t !== null && (r = t.retryLane), oS(e, r);
}
function h2(e, t) {
  var r = 0;
  switch (e.tag) {
    case 13:
      var a = e.stateNode,
        c = e.memoizedState;
      c !== null && (r = c.retryLane);
      break;
    case 19:
      a = e.stateNode;
      break;
    default:
      throw Error(ge(314));
  }
  a !== null && a.delete(t), oS(e, r);
}
var sS;
sS = function (e, t, r) {
  if (e !== null)
    if (e.memoizedProps !== t.pendingProps || nr.current) rr = !0;
    else {
      if (!(e.lanes & r) && !(t.flags & 128)) return (rr = !1), JE(e, t, r);
      rr = !!(e.flags & 131072);
    }
  else (rr = !1), st && t.flags & 1048576 && u1(t, Xl, t.index);
  switch (((t.lanes = 0), t.tag)) {
    case 2:
      var a = t.type;
      bl(e, t), (e = t.pendingProps);
      var c = Ra(t, Ht.current);
      Pa(t, r), (c = Xp(null, t, a, e, c, r));
      var h = Bp();
      return (
        (t.flags |= 1),
        typeof c == "object" &&
        c !== null &&
        typeof c.render == "function" &&
        c.$$typeof === void 0
          ? ((t.tag = 1),
            (t.memoizedState = null),
            (t.updateQueue = null),
            ir(a) ? ((h = !0), jl(t)) : (h = !1),
            (t.memoizedState =
              c.state !== null && c.state !== void 0 ? c.state : null),
            Dp(t),
            (c.updater = Ju),
            (t.stateNode = c),
            (c._reactInternals = t),
            Cf(t, a, e, r),
            (t = Af(null, t, a, !0, h, r)))
          : ((t.tag = 0), st && h && Rp(t), Wt(null, t, c, r), (t = t.child)),
        t
      );
    case 16:
      a = t.elementType;
      e: {
        switch (
          (bl(e, t),
          (e = t.pendingProps),
          (c = a._init),
          (a = c(a._payload)),
          (t.type = a),
          (c = t.tag = p2(a)),
          (e = Nr(a, e)),
          c)
        ) {
          case 0:
            t = kf(null, t, a, e, r);
            break e;
          case 1:
            t = sv(null, t, a, e, r);
            break e;
          case 11:
            t = av(null, t, a, e, r);
            break e;
          case 14:
            t = ov(null, t, a, Nr(a.type, e), r);
            break e;
        }
        throw Error(ge(306, a, ""));
      }
      return t;
    case 0:
      return (
        (a = t.type),
        (c = t.pendingProps),
        (c = t.elementType === a ? c : Nr(a, c)),
        kf(e, t, a, c, r)
      );
    case 1:
      return (
        (a = t.type),
        (c = t.pendingProps),
        (c = t.elementType === a ? c : Nr(a, c)),
        sv(e, t, a, c, r)
      );
    case 3:
      e: {
        if ((Y1(t), e === null)) throw Error(ge(387));
        (a = t.pendingProps),
          (h = t.memoizedState),
          (c = h.element),
          p1(e, t),
          Wl(t, a, null, r);
        var p = t.memoizedState;
        if (((a = p.element), h.isDehydrated))
          if (
            ((h = {
              element: a,
              isDehydrated: !1,
              cache: p.cache,
              pendingSuspenseBoundaries: p.pendingSuspenseBoundaries,
              transitions: p.transitions,
            }),
            (t.updateQueue.baseState = h),
            (t.memoizedState = h),
            t.flags & 256)
          ) {
            (c = Na(Error(ge(423)), t)), (t = lv(e, t, a, r, c));
            break e;
          } else if (a !== c) {
            (c = Na(Error(ge(424)), t)), (t = lv(e, t, a, r, c));
            break e;
          } else
            for (
              ur = Qn(t.stateNode.containerInfo.firstChild),
                dr = t,
                st = !0,
                zr = null,
                r = y1(t, null, a, r),
                t.child = r;
              r;

            )
              (r.flags = (r.flags & -3) | 4096), (r = r.sibling);
        else {
          if ((La(), a === c)) {
            t = On(e, t, r);
            break e;
          }
          Wt(e, t, a, r);
        }
        t = t.child;
      }
      return t;
    case 5:
      return (
        x1(t),
        e === null && Sf(t),
        (a = t.type),
        (c = t.pendingProps),
        (h = e !== null ? e.memoizedProps : null),
        (p = c.children),
        vf(a, c) ? (p = null) : h !== null && vf(a, h) && (t.flags |= 32),
        B1(e, t),
        Wt(e, t, p, r),
        t.child
      );
    case 6:
      return e === null && Sf(t), null;
    case 13:
      return W1(e, t, r);
    case 4:
      return (
        zp(t, t.stateNode.containerInfo),
        (a = t.pendingProps),
        e === null ? (t.child = Ta(t, null, a, r)) : Wt(e, t, a, r),
        t.child
      );
    case 11:
      return (
        (a = t.type),
        (c = t.pendingProps),
        (c = t.elementType === a ? c : Nr(a, c)),
        av(e, t, a, c, r)
      );
    case 7:
      return Wt(e, t, t.pendingProps, r), t.child;
    case 8:
      return Wt(e, t, t.pendingProps.children, r), t.child;
    case 12:
      return Wt(e, t, t.pendingProps.children, r), t.child;
    case 10:
      e: {
        if (
          ((a = t.type._context),
          (c = t.pendingProps),
          (h = t.memoizedProps),
          (p = c.value),
          tt(Bl, a._currentValue),
          (a._currentValue = p),
          h !== null)
        )
          if (Yr(h.value, p)) {
            if (h.children === c.children && !nr.current) {
              t = On(e, t, r);
              break e;
            }
          } else
            for (h = t.child, h !== null && (h.return = t); h !== null; ) {
              var v = h.dependencies;
              if (v !== null) {
                p = h.child;
                for (var b = v.firstContext; b !== null; ) {
                  if (b.context === a) {
                    if (h.tag === 1) {
                      (b = xn(-1, r & -r)), (b.tag = 2);
                      var P = h.updateQueue;
                      if (P !== null) {
                        P = P.shared;
                        var k = P.pending;
                        k === null
                          ? (b.next = b)
                          : ((b.next = k.next), (k.next = b)),
                          (P.pending = b);
                      }
                    }
                    (h.lanes |= r),
                      (b = h.alternate),
                      b !== null && (b.lanes |= r),
                      Pf(h.return, r, t),
                      (v.lanes |= r);
                    break;
                  }
                  b = b.next;
                }
              } else if (h.tag === 10) p = h.type === t.type ? null : h.child;
              else if (h.tag === 18) {
                if (((p = h.return), p === null)) throw Error(ge(341));
                (p.lanes |= r),
                  (v = p.alternate),
                  v !== null && (v.lanes |= r),
                  Pf(p, r, t),
                  (p = h.sibling);
              } else p = h.child;
              if (p !== null) p.return = h;
              else
                for (p = h; p !== null; ) {
                  if (p === t) {
                    p = null;
                    break;
                  }
                  if (((h = p.sibling), h !== null)) {
                    (h.return = p.return), (p = h);
                    break;
                  }
                  p = p.return;
                }
              h = p;
            }
        Wt(e, t, c.children, r), (t = t.child);
      }
      return t;
    case 9:
      return (
        (c = t.type),
        (a = t.pendingProps.children),
        Pa(t, r),
        (c = Sr(c)),
        (a = a(c)),
        (t.flags |= 1),
        Wt(e, t, a, r),
        t.child
      );
    case 14:
      return (
        (a = t.type),
        (c = Nr(a, t.pendingProps)),
        (c = Nr(a.type, c)),
        ov(e, t, a, c, r)
      );
    case 15:
      return H1(e, t, t.type, t.pendingProps, r);
    case 17:
      return (
        (a = t.type),
        (c = t.pendingProps),
        (c = t.elementType === a ? c : Nr(a, c)),
        bl(e, t),
        (t.tag = 1),
        ir(a) ? ((e = !0), jl(t)) : (e = !1),
        Pa(t, r),
        m1(t, a, c),
        Cf(t, a, c, r),
        Af(null, t, a, !0, e, r)
      );
    case 19:
      return V1(e, t, r);
    case 22:
      return X1(e, t, r);
  }
  throw Error(ge(156, t.tag));
};
function lS(e, t) {
  return Nw(e, t);
}
function f2(e, t, r, a) {
  (this.tag = e),
    (this.key = r),
    (this.sibling =
      this.child =
      this.return =
      this.stateNode =
      this.type =
      this.elementType =
        null),
    (this.index = 0),
    (this.ref = null),
    (this.pendingProps = t),
    (this.dependencies =
      this.memoizedState =
      this.updateQueue =
      this.memoizedProps =
        null),
    (this.mode = a),
    (this.subtreeFlags = this.flags = 0),
    (this.deletions = null),
    (this.childLanes = this.lanes = 0),
    (this.alternate = null);
}
function br(e, t, r, a) {
  return new f2(e, t, r, a);
}
function Jp(e) {
  return (e = e.prototype), !(!e || !e.isReactComponent);
}
function p2(e) {
  if (typeof e == "function") return Jp(e) ? 1 : 0;
  if (e != null) {
    if (((e = e.$$typeof), e === yp)) return 11;
    if (e === xp) return 14;
  }
  return 2;
}
function ri(e, t) {
  var r = e.alternate;
  return (
    r === null
      ? ((r = br(e.tag, t, e.key, e.mode)),
        (r.elementType = e.elementType),
        (r.type = e.type),
        (r.stateNode = e.stateNode),
        (r.alternate = e),
        (e.alternate = r))
      : ((r.pendingProps = t),
        (r.type = e.type),
        (r.flags = 0),
        (r.subtreeFlags = 0),
        (r.deletions = null)),
    (r.flags = e.flags & 14680064),
    (r.childLanes = e.childLanes),
    (r.lanes = e.lanes),
    (r.child = e.child),
    (r.memoizedProps = e.memoizedProps),
    (r.memoizedState = e.memoizedState),
    (r.updateQueue = e.updateQueue),
    (t = e.dependencies),
    (r.dependencies =
      t === null ? null : { lanes: t.lanes, firstContext: t.firstContext }),
    (r.sibling = e.sibling),
    (r.index = e.index),
    (r.ref = e.ref),
    r
  );
}
function Pl(e, t, r, a, c, h) {
  var p = 2;
  if (((a = e), typeof e == "function")) Jp(e) && (p = 1);
  else if (typeof e == "string") p = 5;
  else
    e: switch (e) {
      case oa:
        return Ri(r.children, c, h, t);
      case vp:
        (p = 8), (c |= 8);
        break;
      case Uh:
        return (
          (e = br(12, r, t, c | 2)), (e.elementType = Uh), (e.lanes = h), e
        );
      case qh:
        return (e = br(13, r, t, c)), (e.elementType = qh), (e.lanes = h), e;
      case Zh:
        return (e = br(19, r, t, c)), (e.elementType = Zh), (e.lanes = h), e;
      case vw:
        return nd(r, c, h, t);
      default:
        if (typeof e == "object" && e !== null)
          switch (e.$$typeof) {
            case gw:
              p = 10;
              break e;
            case mw:
              p = 9;
              break e;
            case yp:
              p = 11;
              break e;
            case xp:
              p = 14;
              break e;
            case Hn:
              (p = 16), (a = null);
              break e;
          }
        throw Error(ge(130, e == null ? e : typeof e, ""));
    }
  return (
    (t = br(p, r, t, c)), (t.elementType = e), (t.type = a), (t.lanes = h), t
  );
}
function Ri(e, t, r, a) {
  return (e = br(7, e, a, t)), (e.lanes = r), e;
}
function nd(e, t, r, a) {
  return (
    (e = br(22, e, a, t)),
    (e.elementType = vw),
    (e.lanes = r),
    (e.stateNode = { isHidden: !1 }),
    e
  );
}
function gh(e, t, r) {
  return (e = br(6, e, null, t)), (e.lanes = r), e;
}
function mh(e, t, r) {
  return (
    (t = br(4, e.children !== null ? e.children : [], e.key, t)),
    (t.lanes = r),
    (t.stateNode = {
      containerInfo: e.containerInfo,
      pendingChildren: null,
      implementation: e.implementation,
    }),
    t
  );
}
function g2(e, t, r, a, c) {
  (this.tag = t),
    (this.containerInfo = e),
    (this.finishedWork =
      this.pingCache =
      this.current =
      this.pendingChildren =
        null),
    (this.timeoutHandle = -1),
    (this.callbackNode = this.pendingContext = this.context = null),
    (this.callbackPriority = 0),
    (this.eventTimes = Zd(0)),
    (this.expirationTimes = Zd(-1)),
    (this.entangledLanes =
      this.finishedLanes =
      this.mutableReadLanes =
      this.expiredLanes =
      this.pingedLanes =
      this.suspendedLanes =
      this.pendingLanes =
        0),
    (this.entanglements = Zd(0)),
    (this.identifierPrefix = a),
    (this.onRecoverableError = c),
    (this.mutableSourceEagerHydrationData = null);
}
function eg(e, t, r, a, c, h, p, v, b) {
  return (
    (e = new g2(e, t, r, v, b)),
    t === 1 ? ((t = 1), h === !0 && (t |= 8)) : (t = 0),
    (h = br(3, null, null, t)),
    (e.current = h),
    (h.stateNode = e),
    (h.memoizedState = {
      element: a,
      isDehydrated: r,
      cache: null,
      transitions: null,
      pendingSuspenseBoundaries: null,
    }),
    Dp(h),
    e
  );
}
function m2(e, t, r) {
  var a = 3 < arguments.length && arguments[3] !== void 0 ? arguments[3] : null;
  return {
    $$typeof: aa,
    key: a == null ? null : "" + a,
    children: e,
    containerInfo: t,
    implementation: r,
  };
}
function cS(e) {
  if (!e) return ii;
  e = e._reactInternals;
  e: {
    if (Yi(e) !== e || e.tag !== 1) throw Error(ge(170));
    var t = e;
    do {
      switch (t.tag) {
        case 3:
          t = t.stateNode.context;
          break e;
        case 1:
          if (ir(t.type)) {
            t = t.stateNode.__reactInternalMemoizedMergedChildContext;
            break e;
          }
      }
      t = t.return;
    } while (t !== null);
    throw Error(ge(171));
  }
  if (e.tag === 1) {
    var r = e.type;
    if (ir(r)) return l1(e, r, t);
  }
  return t;
}
function uS(e, t, r, a, c, h, p, v, b) {
  return (
    (e = eg(r, a, !0, e, c, h, p, v, b)),
    (e.context = cS(null)),
    (r = e.current),
    (a = Ut()),
    (c = ti(r)),
    (h = xn(a, c)),
    (h.callback = t ?? null),
    Jn(r, h, c),
    (e.current.lanes = c),
    ls(e, c, a),
    ar(e, a),
    e
  );
}
function id(e, t, r, a) {
  var c = t.current,
    h = Ut(),
    p = ti(c);
  return (
    (r = cS(r)),
    t.context === null ? (t.context = r) : (t.pendingContext = r),
    (t = xn(h, p)),
    (t.payload = { element: e }),
    (a = a === void 0 ? null : a),
    a !== null && (t.callback = a),
    (e = Jn(c, t, p)),
    e !== null && (Hr(e, c, p, h), vl(e, c, p)),
    p
  );
}
function Jl(e) {
  if (((e = e.current), !e.child)) return null;
  switch (e.child.tag) {
    case 5:
      return e.child.stateNode;
    default:
      return e.child.stateNode;
  }
}
function yv(e, t) {
  if (((e = e.memoizedState), e !== null && e.dehydrated !== null)) {
    var r = e.retryLane;
    e.retryLane = r !== 0 && r < t ? r : t;
  }
}
function tg(e, t) {
  yv(e, t), (e = e.alternate) && yv(e, t);
}
function v2() {
  return null;
}
var dS =
  typeof reportError == "function"
    ? reportError
    : function (e) {
        console.error(e);
      };
function rg(e) {
  this._internalRoot = e;
}
ad.prototype.render = rg.prototype.render = function (e) {
  var t = this._internalRoot;
  if (t === null) throw Error(ge(409));
  id(e, t, null, null);
};
ad.prototype.unmount = rg.prototype.unmount = function () {
  var e = this._internalRoot;
  if (e !== null) {
    this._internalRoot = null;
    var t = e.containerInfo;
    zi(function () {
      id(null, e, null, null);
    }),
      (t[_n] = null);
  }
};
function ad(e) {
  this._internalRoot = e;
}
ad.prototype.unstable_scheduleHydration = function (e) {
  if (e) {
    var t = Hw();
    e = { blockedOn: null, target: e, priority: t };
    for (var r = 0; r < Yn.length && t !== 0 && t < Yn[r].priority; r++);
    Yn.splice(r, 0, e), r === 0 && Bw(e);
  }
};
function ng(e) {
  return !(!e || (e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11));
}
function od(e) {
  return !(
    !e ||
    (e.nodeType !== 1 &&
      e.nodeType !== 9 &&
      e.nodeType !== 11 &&
      (e.nodeType !== 8 || e.nodeValue !== " react-mount-point-unstable "))
  );
}
function xv() {}
function y2(e, t, r, a, c) {
  if (c) {
    if (typeof a == "function") {
      var h = a;
      a = function () {
        var P = Jl(p);
        h.call(P);
      };
    }
    var p = uS(t, a, e, 0, null, !1, !1, "", xv);
    return (
      (e._reactRootContainer = p),
      (e[_n] = p.current),
      qo(e.nodeType === 8 ? e.parentNode : e),
      zi(),
      p
    );
  }
  for (; (c = e.lastChild); ) e.removeChild(c);
  if (typeof a == "function") {
    var v = a;
    a = function () {
      var P = Jl(b);
      v.call(P);
    };
  }
  var b = eg(e, 0, !1, null, null, !1, !1, "", xv);
  return (
    (e._reactRootContainer = b),
    (e[_n] = b.current),
    qo(e.nodeType === 8 ? e.parentNode : e),
    zi(function () {
      id(t, b, r, a);
    }),
    b
  );
}
function sd(e, t, r, a, c) {
  var h = r._reactRootContainer;
  if (h) {
    var p = h;
    if (typeof c == "function") {
      var v = c;
      c = function () {
        var b = Jl(p);
        v.call(b);
      };
    }
    id(t, p, e, c);
  } else p = y2(r, t, e, c, a);
  return Jl(p);
}
Fw = function (e) {
  switch (e.tag) {
    case 3:
      var t = e.stateNode;
      if (t.current.memoizedState.isDehydrated) {
        var r = Co(t.pendingLanes);
        r !== 0 &&
          (Sp(t, r | 1), ar(t, bt()), !(Ye & 6) && ((Ma = bt() + 500), di()));
      }
      break;
    case 13:
      zi(function () {
        var a = Cn(e, 1);
        if (a !== null) {
          var c = Ut();
          Hr(a, e, 1, c);
        }
      }),
        tg(e, 1);
  }
};
Pp = function (e) {
  if (e.tag === 13) {
    var t = Cn(e, 134217728);
    if (t !== null) {
      var r = Ut();
      Hr(t, e, 134217728, r);
    }
    tg(e, 134217728);
  }
};
jw = function (e) {
  if (e.tag === 13) {
    var t = ti(e),
      r = Cn(e, t);
    if (r !== null) {
      var a = Ut();
      Hr(r, e, t, a);
    }
    tg(e, t);
  }
};
Hw = function () {
  return Ze;
};
Xw = function (e, t) {
  var r = Ze;
  try {
    return (Ze = e), t();
  } finally {
    Ze = r;
  }
};
sf = function (e, t, r) {
  switch (t) {
    case "input":
      if ((Jh(e, r), (t = r.name), r.type === "radio" && t != null)) {
        for (r = e; r.parentNode; ) r = r.parentNode;
        for (
          r = r.querySelectorAll(
            "input[name=" + JSON.stringify("" + t) + '][type="radio"]',
          ),
            t = 0;
          t < r.length;
          t++
        ) {
          var a = r[t];
          if (a !== e && a.form === e.form) {
            var c = Ku(a);
            if (!c) throw Error(ge(90));
            xw(a), Jh(a, c);
          }
        }
      }
      break;
    case "textarea":
      ww(e, r);
      break;
    case "select":
      (t = r.value), t != null && xa(e, !!r.multiple, t, !1);
  }
};
Aw = Zp;
Ew = zi;
var x2 = { usingClientEntryPoint: !1, Events: [us, ua, Ku, Ow, kw, Zp] },
  ho = {
    findFiberByHostInstance: Pi,
    bundleType: 0,
    version: "18.2.0",
    rendererPackageName: "react-dom",
  },
  b2 = {
    bundleType: ho.bundleType,
    version: ho.version,
    rendererPackageName: ho.rendererPackageName,
    rendererConfig: ho.rendererConfig,
    overrideHookState: null,
    overrideHookStateDeletePath: null,
    overrideHookStateRenamePath: null,
    overrideProps: null,
    overridePropsDeletePath: null,
    overridePropsRenamePath: null,
    setErrorHandler: null,
    setSuspenseHandler: null,
    scheduleUpdate: null,
    currentDispatcherRef: En.ReactCurrentDispatcher,
    findHostInstanceByFiber: function (e) {
      return (e = Tw(e)), e === null ? null : e.stateNode;
    },
    findFiberByHostInstance: ho.findFiberByHostInstance || v2,
    findHostInstancesForRefresh: null,
    scheduleRefresh: null,
    scheduleRoot: null,
    setRefreshHandler: null,
    getCurrentFiber: null,
    reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
  };
if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
  var Ws = __REACT_DEVTOOLS_GLOBAL_HOOK__;
  if (!Ws.isDisabled && Ws.supportsFiber)
    try {
      (Gu = Ws.inject(b2)), (an = Ws);
    } catch {}
}
pr.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = x2;
pr.createPortal = function (e, t) {
  var r = 2 < arguments.length && arguments[2] !== void 0 ? arguments[2] : null;
  if (!ng(t)) throw Error(ge(200));
  return m2(e, t, null, r);
};
pr.createRoot = function (e, t) {
  if (!ng(e)) throw Error(ge(299));
  var r = !1,
    a = "",
    c = dS;
  return (
    t != null &&
      (t.unstable_strictMode === !0 && (r = !0),
      t.identifierPrefix !== void 0 && (a = t.identifierPrefix),
      t.onRecoverableError !== void 0 && (c = t.onRecoverableError)),
    (t = eg(e, 1, !1, null, null, r, !1, a, c)),
    (e[_n] = t.current),
    qo(e.nodeType === 8 ? e.parentNode : e),
    new rg(t)
  );
};
pr.findDOMNode = function (e) {
  if (e == null) return null;
  if (e.nodeType === 1) return e;
  var t = e._reactInternals;
  if (t === void 0)
    throw typeof e.render == "function"
      ? Error(ge(188))
      : ((e = Object.keys(e).join(",")), Error(ge(268, e)));
  return (e = Tw(t)), (e = e === null ? null : e.stateNode), e;
};
pr.flushSync = function (e) {
  return zi(e);
};
pr.hydrate = function (e, t, r) {
  if (!od(t)) throw Error(ge(200));
  return sd(null, e, t, !0, r);
};
pr.hydrateRoot = function (e, t, r) {
  if (!ng(e)) throw Error(ge(405));
  var a = (r != null && r.hydratedSources) || null,
    c = !1,
    h = "",
    p = dS;
  if (
    (r != null &&
      (r.unstable_strictMode === !0 && (c = !0),
      r.identifierPrefix !== void 0 && (h = r.identifierPrefix),
      r.onRecoverableError !== void 0 && (p = r.onRecoverableError)),
    (t = uS(t, null, e, 1, r ?? null, c, !1, h, p)),
    (e[_n] = t.current),
    qo(e),
    a)
  )
    for (e = 0; e < a.length; e++)
      (r = a[e]),
        (c = r._getVersion),
        (c = c(r._source)),
        t.mutableSourceEagerHydrationData == null
          ? (t.mutableSourceEagerHydrationData = [r, c])
          : t.mutableSourceEagerHydrationData.push(r, c);
  return new ad(t);
};
pr.render = function (e, t, r) {
  if (!od(t)) throw Error(ge(200));
  return sd(null, e, t, !1, r);
};
pr.unmountComponentAtNode = function (e) {
  if (!od(e)) throw Error(ge(40));
  return e._reactRootContainer
    ? (zi(function () {
        sd(null, null, e, !1, function () {
          (e._reactRootContainer = null), (e[_n] = null);
        });
      }),
      !0)
    : !1;
};
pr.unstable_batchedUpdates = Zp;
pr.unstable_renderSubtreeIntoContainer = function (e, t, r, a) {
  if (!od(r)) throw Error(ge(200));
  if (e == null || e._reactInternals === void 0) throw Error(ge(38));
  return sd(e, t, r, !1, a);
};
pr.version = "18.2.0-next-9e3b772b8-20220608";
function hS() {
  if (
    !(
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
      typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
    )
  )
    try {
      __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(hS);
    } catch (e) {
      console.error(e);
    }
}
hS(), (uw.exports = pr);
var ig = uw.exports,
  bv = ig;
(Vh.createRoot = bv.createRoot), (Vh.hydrateRoot = bv.hydrateRoot);
var rn = function () {
  return (
    (rn =
      Object.assign ||
      function (t) {
        for (var r, a = 1, c = arguments.length; a < c; a++) {
          r = arguments[a];
          for (var h in r)
            Object.prototype.hasOwnProperty.call(r, h) && (t[h] = r[h]);
        }
        return t;
      }),
    rn.apply(this, arguments)
  );
};
function fS(e, t) {
  var r = {};
  for (var a in e)
    Object.prototype.hasOwnProperty.call(e, a) &&
      t.indexOf(a) < 0 &&
      (r[a] = e[a]);
  if (e != null && typeof Object.getOwnPropertySymbols == "function")
    for (var c = 0, a = Object.getOwnPropertySymbols(e); c < a.length; c++)
      t.indexOf(a[c]) < 0 &&
        Object.prototype.propertyIsEnumerable.call(e, a[c]) &&
        (r[a[c]] = e[a[c]]);
  return r;
}
function w2(e, t, r) {
  if (r || arguments.length === 2)
    for (var a = 0, c = t.length, h; a < c; a++)
      (h || !(a in t)) &&
        (h || (h = Array.prototype.slice.call(t, 0, a)), (h[a] = t[a]));
  return e.concat(h || Array.prototype.slice.call(t));
}
var _l = "right-scroll-bar-position",
  Cl = "width-before-scroll-bar",
  S2 = "with-scroll-bars-hidden",
  P2 = "--removed-body-scroll-bar-size";
function _2(e, t) {
  return typeof e == "function" ? e(t) : e && (e.current = t), e;
}
function C2(e, t) {
  var r = j.useState(function () {
    return {
      value: e,
      callback: t,
      facade: {
        get current() {
          return r.value;
        },
        set current(a) {
          var c = r.value;
          c !== a && ((r.value = a), r.callback(a, c));
        },
      },
    };
  })[0];
  return (r.callback = t), r.facade;
}
function O2(e, t) {
  return C2(t || null, function (r) {
    return e.forEach(function (a) {
      return _2(a, r);
    });
  });
}
function k2(e) {
  return e;
}
function A2(e, t) {
  t === void 0 && (t = k2);
  var r = [],
    a = !1,
    c = {
      read: function () {
        if (a)
          throw new Error(
            "Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`.",
          );
        return r.length ? r[r.length - 1] : e;
      },
      useMedium: function (h) {
        var p = t(h, a);
        return (
          r.push(p),
          function () {
            r = r.filter(function (v) {
              return v !== p;
            });
          }
        );
      },
      assignSyncMedium: function (h) {
        for (a = !0; r.length; ) {
          var p = r;
          (r = []), p.forEach(h);
        }
        r = {
          push: function (v) {
            return h(v);
          },
          filter: function () {
            return r;
          },
        };
      },
      assignMedium: function (h) {
        a = !0;
        var p = [];
        if (r.length) {
          var v = r;
          (r = []), v.forEach(h), (p = r);
        }
        var b = function () {
            var k = p;
            (p = []), k.forEach(h);
          },
          P = function () {
            return Promise.resolve().then(b);
          };
        P(),
          (r = {
            push: function (k) {
              p.push(k), P();
            },
            filter: function (k) {
              return (p = p.filter(k)), r;
            },
          });
      },
    };
  return c;
}
function E2(e) {
  e === void 0 && (e = {});
  var t = A2(null);
  return (t.options = rn({ async: !0, ssr: !1 }, e)), t;
}
var pS = function (e) {
  var t = e.sideCar,
    r = fS(e, ["sideCar"]);
  if (!t)
    throw new Error(
      "Sidecar: please provide `sideCar` property to import the right car",
    );
  var a = t.read();
  if (!a) throw new Error("Sidecar medium not found");
  return j.createElement(a, rn({}, r));
};
pS.isSideCarExport = !0;
function R2(e, t) {
  return e.useMedium(t), pS;
}
var gS = E2(),
  vh = function () {},
  ld = j.forwardRef(function (e, t) {
    var r = j.useRef(null),
      a = j.useState({
        onScrollCapture: vh,
        onWheelCapture: vh,
        onTouchMoveCapture: vh,
      }),
      c = a[0],
      h = a[1],
      p = e.forwardProps,
      v = e.children,
      b = e.className,
      P = e.removeScrollBar,
      k = e.enabled,
      R = e.shards,
      L = e.sideCar,
      z = e.noIsolation,
      M = e.inert,
      F = e.allowPinchZoom,
      G = e.as,
      $ = G === void 0 ? "div" : G,
      O = e.gapMode,
      X = fS(e, [
        "forwardProps",
        "children",
        "className",
        "removeScrollBar",
        "enabled",
        "shards",
        "sideCar",
        "noIsolation",
        "inert",
        "allowPinchZoom",
        "as",
        "gapMode",
      ]),
      N = L,
      B = O2([r, t]),
      U = rn(rn({}, X), c);
    return j.createElement(
      j.Fragment,
      null,
      k &&
        j.createElement(N, {
          sideCar: gS,
          removeScrollBar: P,
          shards: R,
          noIsolation: z,
          inert: M,
          setCallbacks: h,
          allowPinchZoom: !!F,
          lockRef: r,
          gapMode: O,
        }),
      p
        ? j.cloneElement(j.Children.only(v), rn(rn({}, U), { ref: B }))
        : j.createElement($, rn({}, U, { className: b, ref: B }), v),
    );
  });
ld.defaultProps = { enabled: !0, removeScrollBar: !0, inert: !1 };
ld.classNames = { fullWidth: Cl, zeroRight: _l };
var wv,
  L2 = function () {
    if (wv) return wv;
    if (typeof __webpack_nonce__ < "u") return __webpack_nonce__;
  };
function T2() {
  if (!document) return null;
  var e = document.createElement("style");
  e.type = "text/css";
  var t = L2();
  return t && e.setAttribute("nonce", t), e;
}
function I2(e, t) {
  e.styleSheet
    ? (e.styleSheet.cssText = t)
    : e.appendChild(document.createTextNode(t));
}
function N2(e) {
  var t = document.head || document.getElementsByTagName("head")[0];
  t.appendChild(e);
}
var M2 = function () {
    var e = 0,
      t = null;
    return {
      add: function (r) {
        e == 0 && (t = T2()) && (I2(t, r), N2(t)), e++;
      },
      remove: function () {
        e--,
          !e && t && (t.parentNode && t.parentNode.removeChild(t), (t = null));
      },
    };
  },
  $2 = function () {
    var e = M2();
    return function (t, r) {
      j.useEffect(
        function () {
          return (
            e.add(t),
            function () {
              e.remove();
            }
          );
        },
        [t && r],
      );
    };
  },
  mS = function () {
    var e = $2(),
      t = function (r) {
        var a = r.styles,
          c = r.dynamic;
        return e(a, c), null;
      };
    return t;
  },
  D2 = { left: 0, top: 0, right: 0, gap: 0 },
  yh = function (e) {
    return parseInt(e || "", 10) || 0;
  },
  z2 = function (e) {
    var t = window.getComputedStyle(document.body),
      r = t[e === "padding" ? "paddingLeft" : "marginLeft"],
      a = t[e === "padding" ? "paddingTop" : "marginTop"],
      c = t[e === "padding" ? "paddingRight" : "marginRight"];
    return [yh(r), yh(a), yh(c)];
  },
  F2 = function (e) {
    if ((e === void 0 && (e = "margin"), typeof window > "u")) return D2;
    var t = z2(e),
      r = document.documentElement.clientWidth,
      a = window.innerWidth;
    return {
      left: t[0],
      top: t[1],
      right: t[2],
      gap: Math.max(0, a - r + t[2] - t[0]),
    };
  },
  j2 = mS(),
  H2 = function (e, t, r, a) {
    var c = e.left,
      h = e.top,
      p = e.right,
      v = e.gap;
    return (
      r === void 0 && (r = "margin"),
      `
  .`
        .concat(
          S2,
          ` {
   overflow: hidden `,
        )
        .concat(
          a,
          `;
   padding-right: `,
        )
        .concat(v, "px ")
        .concat(
          a,
          `;
  }
  body {
    overflow: hidden `,
        )
        .concat(
          a,
          `;
    overscroll-behavior: contain;
    `,
        )
        .concat(
          [
            t && "position: relative ".concat(a, ";"),
            r === "margin" &&
              `
    padding-left: `
                .concat(
                  c,
                  `px;
    padding-top: `,
                )
                .concat(
                  h,
                  `px;
    padding-right: `,
                )
                .concat(
                  p,
                  `px;
    margin-left:0;
    margin-top:0;
    margin-right: `,
                )
                .concat(v, "px ")
                .concat(
                  a,
                  `;
    `,
                ),
            r === "padding" &&
              "padding-right: ".concat(v, "px ").concat(a, ";"),
          ]
            .filter(Boolean)
            .join(""),
          `
  }
  
  .`,
        )
        .concat(
          _l,
          ` {
    right: `,
        )
        .concat(v, "px ")
        .concat(
          a,
          `;
  }
  
  .`,
        )
        .concat(
          Cl,
          ` {
    margin-right: `,
        )
        .concat(v, "px ")
        .concat(
          a,
          `;
  }
  
  .`,
        )
        .concat(_l, " .")
        .concat(
          _l,
          ` {
    right: 0 `,
        )
        .concat(
          a,
          `;
  }
  
  .`,
        )
        .concat(Cl, " .")
        .concat(
          Cl,
          ` {
    margin-right: 0 `,
        )
        .concat(
          a,
          `;
  }
  
  body {
    `,
        )
        .concat(P2, ": ")
        .concat(
          v,
          `px;
  }
`,
        )
    );
  },
  X2 = function (e) {
    var t = e.noRelative,
      r = e.noImportant,
      a = e.gapMode,
      c = a === void 0 ? "margin" : a,
      h = j.useMemo(
        function () {
          return F2(c);
        },
        [c],
      );
    return j.createElement(j2, { styles: H2(h, !t, c, r ? "" : "!important") });
  },
  jf = !1;
if (typeof window < "u")
  try {
    var Vs = Object.defineProperty({}, "passive", {
      get: function () {
        return (jf = !0), !0;
      },
    });
    window.addEventListener("test", Vs, Vs),
      window.removeEventListener("test", Vs, Vs);
  } catch {
    jf = !1;
  }
var ea = jf ? { passive: !1 } : !1,
  B2 = function (e) {
    return e.tagName === "TEXTAREA";
  },
  vS = function (e, t) {
    var r = window.getComputedStyle(e);
    return (
      r[t] !== "hidden" &&
      !(r.overflowY === r.overflowX && !B2(e) && r[t] === "visible")
    );
  },
  Y2 = function (e) {
    return vS(e, "overflowY");
  },
  W2 = function (e) {
    return vS(e, "overflowX");
  },
  Sv = function (e, t) {
    var r = t.ownerDocument,
      a = t;
    do {
      typeof ShadowRoot < "u" && a instanceof ShadowRoot && (a = a.host);
      var c = yS(e, a);
      if (c) {
        var h = xS(e, a),
          p = h[1],
          v = h[2];
        if (p > v) return !0;
      }
      a = a.parentNode;
    } while (a && a !== r.body);
    return !1;
  },
  V2 = function (e) {
    var t = e.scrollTop,
      r = e.scrollHeight,
      a = e.clientHeight;
    return [t, r, a];
  },
  G2 = function (e) {
    var t = e.scrollLeft,
      r = e.scrollWidth,
      a = e.clientWidth;
    return [t, r, a];
  },
  yS = function (e, t) {
    return e === "v" ? Y2(t) : W2(t);
  },
  xS = function (e, t) {
    return e === "v" ? V2(t) : G2(t);
  },
  U2 = function (e, t) {
    return e === "h" && t === "rtl" ? -1 : 1;
  },
  q2 = function (e, t, r, a, c) {
    var h = U2(e, window.getComputedStyle(t).direction),
      p = h * a,
      v = r.target,
      b = t.contains(v),
      P = !1,
      k = p > 0,
      R = 0,
      L = 0;
    do {
      var z = xS(e, v),
        M = z[0],
        F = z[1],
        G = z[2],
        $ = F - G - h * M;
      (M || $) && yS(e, v) && ((R += $), (L += M)),
        v instanceof ShadowRoot ? (v = v.host) : (v = v.parentNode);
    } while ((!b && v !== document.body) || (b && (t.contains(v) || t === v)));
    return (
      ((k && ((c && Math.abs(R) < 1) || (!c && p > R))) ||
        (!k && ((c && Math.abs(L) < 1) || (!c && -p > L)))) &&
        (P = !0),
      P
    );
  },
  Gs = function (e) {
    return "changedTouches" in e
      ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY]
      : [0, 0];
  },
  Pv = function (e) {
    return [e.deltaX, e.deltaY];
  },
  _v = function (e) {
    return e && "current" in e ? e.current : e;
  },
  Z2 = function (e, t) {
    return e[0] === t[0] && e[1] === t[1];
  },
  K2 = function (e) {
    return `
  .block-interactivity-`
      .concat(
        e,
        ` {pointer-events: none;}
  .allow-interactivity-`,
      )
      .concat(
        e,
        ` {pointer-events: all;}
`,
      );
  },
  Q2 = 0,
  ta = [];
function J2(e) {
  var t = j.useRef([]),
    r = j.useRef([0, 0]),
    a = j.useRef(),
    c = j.useState(Q2++)[0],
    h = j.useState(mS)[0],
    p = j.useRef(e);
  j.useEffect(
    function () {
      p.current = e;
    },
    [e],
  ),
    j.useEffect(
      function () {
        if (e.inert) {
          document.body.classList.add("block-interactivity-".concat(c));
          var F = w2([e.lockRef.current], (e.shards || []).map(_v), !0).filter(
            Boolean,
          );
          return (
            F.forEach(function (G) {
              return G.classList.add("allow-interactivity-".concat(c));
            }),
            function () {
              document.body.classList.remove("block-interactivity-".concat(c)),
                F.forEach(function (G) {
                  return G.classList.remove("allow-interactivity-".concat(c));
                });
            }
          );
        }
      },
      [e.inert, e.lockRef.current, e.shards],
    );
  var v = j.useCallback(function (F, G) {
      if ("touches" in F && F.touches.length === 2)
        return !p.current.allowPinchZoom;
      var $ = Gs(F),
        O = r.current,
        X = "deltaX" in F ? F.deltaX : O[0] - $[0],
        N = "deltaY" in F ? F.deltaY : O[1] - $[1],
        B,
        U = F.target,
        Q = Math.abs(X) > Math.abs(N) ? "h" : "v";
      if ("touches" in F && Q === "h" && U.type === "range") return !1;
      var ee = Sv(Q, U);
      if (!ee) return !0;
      if ((ee ? (B = Q) : ((B = Q === "v" ? "h" : "v"), (ee = Sv(Q, U))), !ee))
        return !1;
      if (
        (!a.current && "changedTouches" in F && (X || N) && (a.current = B), !B)
      )
        return !0;
      var ne = a.current || B;
      return q2(ne, G, F, ne === "h" ? X : N, !0);
    }, []),
    b = j.useCallback(function (F) {
      var G = F;
      if (!(!ta.length || ta[ta.length - 1] !== h)) {
        var $ = "deltaY" in G ? Pv(G) : Gs(G),
          O = t.current.filter(function (B) {
            return (
              B.name === G.type &&
              (B.target === G.target || G.target === B.shadowParent) &&
              Z2(B.delta, $)
            );
          })[0];
        if (O && O.should) {
          G.cancelable && G.preventDefault();
          return;
        }
        if (!O) {
          var X = (p.current.shards || [])
              .map(_v)
              .filter(Boolean)
              .filter(function (B) {
                return B.contains(G.target);
              }),
            N = X.length > 0 ? v(G, X[0]) : !p.current.noIsolation;
          N && G.cancelable && G.preventDefault();
        }
      }
    }, []),
    P = j.useCallback(function (F, G, $, O) {
      var X = { name: F, delta: G, target: $, should: O, shadowParent: eR($) };
      t.current.push(X),
        setTimeout(function () {
          t.current = t.current.filter(function (N) {
            return N !== X;
          });
        }, 1);
    }, []),
    k = j.useCallback(function (F) {
      (r.current = Gs(F)), (a.current = void 0);
    }, []),
    R = j.useCallback(function (F) {
      P(F.type, Pv(F), F.target, v(F, e.lockRef.current));
    }, []),
    L = j.useCallback(function (F) {
      P(F.type, Gs(F), F.target, v(F, e.lockRef.current));
    }, []);
  j.useEffect(function () {
    return (
      ta.push(h),
      e.setCallbacks({
        onScrollCapture: R,
        onWheelCapture: R,
        onTouchMoveCapture: L,
      }),
      document.addEventListener("wheel", b, ea),
      document.addEventListener("touchmove", b, ea),
      document.addEventListener("touchstart", k, ea),
      function () {
        (ta = ta.filter(function (F) {
          return F !== h;
        })),
          document.removeEventListener("wheel", b, ea),
          document.removeEventListener("touchmove", b, ea),
          document.removeEventListener("touchstart", k, ea);
      }
    );
  }, []);
  var z = e.removeScrollBar,
    M = e.inert;
  return j.createElement(
    j.Fragment,
    null,
    M ? j.createElement(h, { styles: K2(c) }) : null,
    z ? j.createElement(X2, { gapMode: e.gapMode }) : null,
  );
}
function eR(e) {
  for (var t = null; e !== null; )
    e instanceof ShadowRoot && ((t = e.host), (e = e.host)), (e = e.parentNode);
  return t;
}
const tR = R2(gS, J2);
var bS = j.forwardRef(function (e, t) {
  return j.createElement(ld, rn({}, e, { ref: t, sideCar: tR }));
});
bS.classNames = ld.classNames;
const ag = bS;
function Nt(e) {
  return Object.keys(e);
}
var rR = Object.defineProperty,
  Cv = Object.getOwnPropertySymbols,
  nR = Object.prototype.hasOwnProperty,
  iR = Object.prototype.propertyIsEnumerable,
  Ov = (e, t, r) =>
    t in e
      ? rR(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  aR = (e, t) => {
    for (var r in t || (t = {})) nR.call(t, r) && Ov(e, r, t[r]);
    if (Cv) for (var r of Cv(t)) iR.call(t, r) && Ov(e, r, t[r]);
    return e;
  };
function xh(e) {
  return e && typeof e == "object" && !Array.isArray(e);
}
function og(e, t) {
  const r = aR({}, e),
    a = t;
  return (
    xh(e) &&
      xh(t) &&
      Object.keys(t).forEach((c) => {
        xh(a[c]) && c in e ? (r[c] = og(r[c], a[c])) : (r[c] = a[c]);
      }),
    r
  );
}
function oR(e) {
  return e.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);
}
function sR(e) {
  var t;
  return typeof e != "string" || !e.includes("var(--mantine-scale)")
    ? e
    : (t = e.match(/^calc\((.*?)\)$/)) == null
    ? void 0
    : t[1].split("*")[0].trim();
}
function Hf(e) {
  const t = sR(e);
  return typeof t == "number"
    ? t
    : typeof t == "string"
    ? t.includes("calc") || t.includes("var")
      ? t
      : t.includes("px")
      ? Number(t.replace("px", ""))
      : t.includes("rem")
      ? Number(t.replace("rem", "")) * 16
      : t.includes("em")
      ? Number(t.replace("em", "")) * 16
      : Number(t)
    : NaN;
}
function bh(e) {
  return `calc(${e} * var(--mantine-scale))`;
}
function wS(e, { shouldScale: t = !1 } = {}) {
  return (r) => {
    if (r === 0 || r === "0") return "0";
    if (typeof r == "number") {
      const a = `${r / 16}${e}`;
      return t ? bh(a) : a;
    }
    if (typeof r == "string") {
      if (r.includes("calc(") || r.includes("var(")) return r;
      if (r.includes(e)) return t ? bh(r) : r;
      const a = r.replace("px", "");
      if (!Number.isNaN(Number(a))) {
        const c = `${Number(a) / 16}${e}`;
        return t ? bh(c) : c;
      }
    }
    return r;
  };
}
const ae = wS("rem", { shouldScale: !0 }),
  ec = wS("em");
function sg(e) {
  return Object.keys(e).reduce(
    (t, r) => (e[r] !== void 0 && (t[r] = e[r]), t),
    {},
  );
}
function SS(e) {
  return typeof e == "number"
    ? !0
    : typeof e == "string"
    ? e.startsWith("calc(") || e.startsWith("var(")
      ? !0
      : /[0-9]/.test(e.trim().replace("-", "")[0])
    : !1;
}
function Wi(e) {
  return Array.isArray(e) || e === null
    ? !1
    : typeof e == "object"
    ? e.type !== q.Fragment
    : !1;
}
function hi(e) {
  const t = j.createContext(null);
  return [
    ({ children: c, value: h }) => q.createElement(t.Provider, { value: h }, c),
    () => {
      const c = j.useContext(t);
      if (c === null) throw new Error(e);
      return c;
    },
  ];
}
function lR(e = null) {
  const t = j.createContext(e);
  return [
    ({ children: c, value: h }) => q.createElement(t.Provider, { value: h }, c),
    () => j.useContext(t),
  ];
}
const cR = { app: 100, modal: 200, popover: 300, overlay: 400, max: 9999 };
function fi(e) {
  return cR[e];
}
const uR = () => {};
function dR(e, t = { active: !0 }) {
  return typeof e != "function" || !t.active
    ? t.onKeyDown || uR
    : (r) => {
        var a;
        r.key === "Escape" && (e(r), (a = t.onTrigger) == null || a.call(t));
      };
}
function wt(e, t = "size", r = !0) {
  if (e !== void 0) return SS(e) ? (r ? ae(e) : e) : `var(--${t}-${e})`;
}
function Wa(e) {
  return wt(e, "mantine-spacing");
}
function ln(e) {
  return e === void 0
    ? "var(--mantine-radius-default)"
    : wt(e, "mantine-radius");
}
function Xr(e) {
  return wt(e, "mantine-font-size");
}
function hR(e) {
  return wt(e, "mantine-line-height", !1);
}
function lg(e) {
  if (e) return wt(e, "mantine-shadow");
}
function cg(e, t) {
  return e in t.breakpoints ? Hf(t.breakpoints[e]) : Hf(e);
}
function kv(e, t) {
  const r = e.map((a) => ({ value: a, px: cg(a, t) }));
  return r.sort((a, c) => a.px - c.px), r;
}
function PS(e) {
  var t,
    r,
    a = "";
  if (typeof e == "string" || typeof e == "number") a += e;
  else if (typeof e == "object")
    if (Array.isArray(e))
      for (t = 0; t < e.length; t++)
        e[t] && (r = PS(e[t])) && (a && (a += " "), (a += r));
    else for (t in e) e[t] && (a && (a += " "), (a += t));
  return a;
}
function kt() {
  for (var e, t, r = 0, a = ""; r < arguments.length; )
    (e = arguments[r++]) && (t = PS(e)) && (a && (a += " "), (a += t));
  return a;
}
const fR = {};
function pR(e) {
  const t = {};
  return (
    e.forEach((r) => {
      Object.entries(r).forEach(([a, c]) => {
        t[a] ? (t[a] = kt(t[a], c)) : (t[a] = c);
      });
    }),
    t
  );
}
function cd({ theme: e, classNames: t, props: r, stylesCtx: a }) {
  const h = (Array.isArray(t) ? t : [t]).map((p) =>
    typeof p == "function" ? p(e, r, a) : p || fR,
  );
  return pR(h);
}
var gR = Object.defineProperty,
  Av = Object.getOwnPropertySymbols,
  mR = Object.prototype.hasOwnProperty,
  vR = Object.prototype.propertyIsEnumerable,
  Ev = (e, t, r) =>
    t in e
      ? gR(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Us = (e, t) => {
    for (var r in t || (t = {})) mR.call(t, r) && Ev(e, r, t[r]);
    if (Av) for (var r of Av(t)) vR.call(t, r) && Ev(e, r, t[r]);
    return e;
  };
function tc({ theme: e, styles: t, props: r, stylesCtx: a }) {
  return (Array.isArray(t) ? t : [t]).reduce(
    (h, p) =>
      typeof p == "function" ? Us(Us({}, h), p(e, r, a)) : Us(Us({}, h), p),
    {},
  );
}
const yR = {
  dark: [
    "#C1C2C5",
    "#A6A7AB",
    "#909296",
    "#5c5f66",
    "#373A40",
    "#2C2E33",
    "#25262b",
    "#1A1B1E",
    "#141517",
    "#101113",
  ],
  gray: [
    "#f8f9fa",
    "#f1f3f5",
    "#e9ecef",
    "#dee2e6",
    "#ced4da",
    "#adb5bd",
    "#868e96",
    "#495057",
    "#343a40",
    "#212529",
  ],
  red: [
    "#fff5f5",
    "#ffe3e3",
    "#ffc9c9",
    "#ffa8a8",
    "#ff8787",
    "#ff6b6b",
    "#fa5252",
    "#f03e3e",
    "#e03131",
    "#c92a2a",
  ],
  pink: [
    "#fff0f6",
    "#ffdeeb",
    "#fcc2d7",
    "#faa2c1",
    "#f783ac",
    "#f06595",
    "#e64980",
    "#d6336c",
    "#c2255c",
    "#a61e4d",
  ],
  grape: [
    "#f8f0fc",
    "#f3d9fa",
    "#eebefa",
    "#e599f7",
    "#da77f2",
    "#cc5de8",
    "#be4bdb",
    "#ae3ec9",
    "#9c36b5",
    "#862e9c",
  ],
  violet: [
    "#f3f0ff",
    "#e5dbff",
    "#d0bfff",
    "#b197fc",
    "#9775fa",
    "#845ef7",
    "#7950f2",
    "#7048e8",
    "#6741d9",
    "#5f3dc4",
  ],
  indigo: [
    "#edf2ff",
    "#dbe4ff",
    "#bac8ff",
    "#91a7ff",
    "#748ffc",
    "#5c7cfa",
    "#4c6ef5",
    "#4263eb",
    "#3b5bdb",
    "#364fc7",
  ],
  blue: [
    "#e7f5ff",
    "#d0ebff",
    "#a5d8ff",
    "#74c0fc",
    "#4dabf7",
    "#339af0",
    "#228be6",
    "#1c7ed6",
    "#1971c2",
    "#1864ab",
  ],
  cyan: [
    "#e3fafc",
    "#c5f6fa",
    "#99e9f2",
    "#66d9e8",
    "#3bc9db",
    "#22b8cf",
    "#15aabf",
    "#1098ad",
    "#0c8599",
    "#0b7285",
  ],
  teal: [
    "#e6fcf5",
    "#c3fae8",
    "#96f2d7",
    "#63e6be",
    "#38d9a9",
    "#20c997",
    "#12b886",
    "#0ca678",
    "#099268",
    "#087f5b",
  ],
  green: [
    "#ebfbee",
    "#d3f9d8",
    "#b2f2bb",
    "#8ce99a",
    "#69db7c",
    "#51cf66",
    "#40c057",
    "#37b24d",
    "#2f9e44",
    "#2b8a3e",
  ],
  lime: [
    "#f4fce3",
    "#e9fac8",
    "#d8f5a2",
    "#c0eb75",
    "#a9e34b",
    "#94d82d",
    "#82c91e",
    "#74b816",
    "#66a80f",
    "#5c940d",
  ],
  yellow: [
    "#fff9db",
    "#fff3bf",
    "#ffec99",
    "#ffe066",
    "#ffd43b",
    "#fcc419",
    "#fab005",
    "#f59f00",
    "#f08c00",
    "#e67700",
  ],
  orange: [
    "#fff4e6",
    "#ffe8cc",
    "#ffd8a8",
    "#ffc078",
    "#ffa94d",
    "#ff922b",
    "#fd7e14",
    "#f76707",
    "#e8590c",
    "#d9480f",
  ],
};
function Xf(e, t) {
  return typeof e.primaryShade == "number"
    ? e.primaryShade
    : t === "dark"
    ? e.primaryShade.dark
    : e.primaryShade.light;
}
function ug({ color: e, theme: t, colorScheme: r }) {
  if (typeof e != "string")
    throw new Error(
      `[@mantine/core] Failed to parse color. Instead got ${typeof e}`,
    );
  if (e === "white" || e === "black")
    return {
      color: e,
      value: e === "white" ? t.white : t.black,
      shade: void 0,
      isThemeColor: !1,
      variable: `--mantine-color-${e}`,
    };
  const [a, c] = e.split("."),
    h = c ? Number(c) : void 0,
    p = a in t.colors;
  return p
    ? {
        color: a,
        value: h !== void 0 ? t.colors[a][h] : t.colors[a][Xf(t, r || "light")],
        shade: h,
        isThemeColor: p,
        variable: c
          ? `--mantine-color-${a}-${h}`
          : `--mantine-color-${a}-filled`,
      }
    : { color: e, value: e, isThemeColor: p, shade: h, variable: void 0 };
}
function ai(e, t) {
  const r = ug({ color: e || t.primaryColor, theme: t });
  return r.variable ? `var(${r.variable})` : e;
}
function Bf(e, t) {
  const r = {
      from: (e == null ? void 0 : e.from) || t.defaultGradient.from,
      to: (e == null ? void 0 : e.to) || t.defaultGradient.to,
      deg: (e == null ? void 0 : e.deg) || t.defaultGradient.deg || 0,
    },
    a = ai(r.from, t),
    c = ai(r.to, t);
  return `linear-gradient(${r.deg}deg, ${a} 0%, ${c} 100%)`;
}
function xR(e) {
  return /^#?([0-9A-F]{3}){1,2}$/i.test(e);
}
function bR(e) {
  let t = e.replace("#", "");
  if (t.length === 3) {
    const p = t.split("");
    t = [p[0], p[0], p[1], p[1], p[2], p[2]].join("");
  }
  const r = parseInt(t, 16),
    a = (r >> 16) & 255,
    c = (r >> 8) & 255,
    h = r & 255;
  return { r: a, g: c, b: h, a: 1 };
}
function wR(e) {
  const [t, r, a, c] = e
    .replace(/[^0-9,.]/g, "")
    .split(",")
    .map(Number);
  return { r: t, g: r, b: a, a: c || 1 };
}
function SR(e) {
  const t =
      /^hsla?\(\s*(\d+)\s*,\s*(\d+%)\s*,\s*(\d+%)\s*(,\s*(0?\.\d+|\d+(\.\d+)?))?\s*\)$/i,
    r = e.match(t);
  if (!r) return { r: 0, g: 0, b: 0, a: 1 };
  const a = parseInt(r[1], 10),
    c = parseInt(r[2], 10) / 100,
    h = parseInt(r[3], 10) / 100,
    p = r[5] ? parseFloat(r[5]) : void 0,
    v = (1 - Math.abs(2 * h - 1)) * c,
    b = a / 60,
    P = v * (1 - Math.abs((b % 2) - 1)),
    k = h - v / 2;
  let R, L, z;
  return (
    b >= 0 && b < 1
      ? ((R = v), (L = P), (z = 0))
      : b >= 1 && b < 2
      ? ((R = P), (L = v), (z = 0))
      : b >= 2 && b < 3
      ? ((R = 0), (L = v), (z = P))
      : b >= 3 && b < 4
      ? ((R = 0), (L = P), (z = v))
      : b >= 4 && b < 5
      ? ((R = P), (L = 0), (z = v))
      : ((R = v), (L = 0), (z = P)),
    {
      r: Math.round((R + k) * 255),
      g: Math.round((L + k) * 255),
      b: Math.round((z + k) * 255),
      a: p || 1,
    }
  );
}
function _S(e) {
  return xR(e)
    ? bR(e)
    : e.startsWith("rgb")
    ? wR(e)
    : e.startsWith("hsl")
    ? SR(e)
    : { r: 0, g: 0, b: 0, a: 1 };
}
function qs(e, t) {
  if (e.startsWith("var(")) return e;
  const { r, g: a, b: c, a: h } = _S(e),
    p = 1 - t,
    v = (b) => Math.round(b * p);
  return `rgba(${v(r)}, ${v(a)}, ${v(c)}, ${h})`;
}
function Vt(e, t) {
  if (typeof e != "string" || t > 1 || t < 0) return "rgba(0, 0, 0, 1)";
  const { r, g: a, b: c } = _S(e);
  return `rgba(${r}, ${a}, ${c}, ${t})`;
}
const PR = ({ color: e, theme: t, variant: r, gradient: a }) => {
    const c = ug({ color: e, theme: t });
    if (r === "filled")
      return c.isThemeColor
        ? c.shade === void 0
          ? {
              background: `var(--mantine-color-${e}-filled)`,
              hover: `var(--mantine-color-${e}-filled-hover)`,
              color: "var(--mantine-color-white)",
              border: `${ae(1)} solid transparent`,
            }
          : {
              background: `var(--mantine-color-${c.color}-${c.shade})`,
              hover: `var(--mantine-color-${c.color}-${
                c.shade === 9 ? 8 : c.shade + 1
              })`,
              color: "var(--mantine-color-white)",
              border: `${ae(1)} solid transparent`,
            }
        : {
            background: e,
            hover: qs(e, 0.1),
            color: "var(--mantine-color-white)",
            border: `${ae(1)} solid transparent`,
          };
    if (r === "light") {
      if (c.isThemeColor) {
        if (c.shade === void 0)
          return {
            background: `var(--mantine-color-${e}-light)`,
            hover: `var(--mantine-color-${e}-light-hover)`,
            color: `var(--mantine-color-${e}-light-color)`,
            border: `${ae(1)} solid transparent`,
          };
        const h = t.colors[c.color][c.shade];
        return {
          background: Vt(h, 0.1),
          hover: Vt(h, 0.12),
          color: `var(--mantine-color-${c.color}-${Math.min(c.shade, 6)})`,
          border: `${ae(1)} solid transparent`,
        };
      }
      return {
        background: Vt(e, 0.1),
        hover: Vt(e, 0.12),
        color: e,
        border: `${ae(1)} solid transparent`,
      };
    }
    if (r === "outline")
      return c.isThemeColor
        ? c.shade === void 0
          ? {
              background: "transparent",
              hover: `var(--mantine-color-${e}-outline-hover)`,
              color: `var(--mantine-color-${e}-outline)`,
              border: `${ae(1)} solid var(--mantine-color-${e}-outline)`,
            }
          : {
              background: "transparent",
              hover: Vt(t.colors[c.color][c.shade], 0.05),
              color: `var(--mantine-color-${c.color}-${c.shade})`,
              border: `${ae(1)} solid var(--mantine-color-${c.color}-${
                c.shade
              })`,
            }
        : {
            background: "transparent",
            hover: Vt(e, 0.05),
            color: e,
            border: `${ae(1)} solid ${e}`,
          };
    if (r === "subtle") {
      if (c.isThemeColor) {
        if (c.shade === void 0)
          return {
            background: "transparent",
            hover: `var(--mantine-color-${e}-light-hover)`,
            color: `var(--mantine-color-${e}-light-color)`,
            border: `${ae(1)} solid transparent`,
          };
        const h = t.colors[c.color][c.shade];
        return {
          background: "transparent",
          hover: Vt(h, 0.12),
          color: `var(--mantine-color-${c.color}-${Math.min(c.shade, 6)})`,
          border: `${ae(1)} solid transparent`,
        };
      }
      return {
        background: "transparent",
        hover: Vt(e, 0.12),
        color: e,
        border: `${ae(1)} solid transparent`,
      };
    }
    return r === "transparent"
      ? c.isThemeColor
        ? c.shade === void 0
          ? {
              background: "transparent",
              hover: "transparent",
              color: `var(--mantine-color-${e}-light-color)`,
              border: `${ae(1)} solid transparent`,
            }
          : {
              background: "transparent",
              hover: "transparent",
              color: `var(--mantine-color-${c.color}-${Math.min(c.shade, 6)})`,
              border: `${ae(1)} solid transparent`,
            }
        : {
            background: "transparent",
            hover: "transparent",
            color: e,
            border: `${ae(1)} solid transparent`,
          }
      : r === "white"
      ? c.isThemeColor
        ? c.shade === void 0
          ? {
              background: "var(--mantine-color-white)",
              hover: qs(t.white, 0.01),
              color: `var(--mantine-color-${e}-filled)`,
              border: `${ae(1)} solid transparent`,
            }
          : {
              background: "var(--mantine-color-white)",
              hover: qs(t.white, 0.01),
              color: `var(--mantine-color-${c.color}-${c.shade})`,
              border: `${ae(1)} solid transparent`,
            }
        : {
            background: "var(--mantine-color-white)",
            hover: qs(t.white, 0.01),
            color: e,
            border: `${ae(1)} solid transparent`,
          }
      : r === "gradient"
      ? {
          background: Bf(a, t),
          hover: Bf(a, t),
          color: "var(--mantine-color-white)",
          border: "none",
        }
      : r === "default"
      ? {
          background: "var(--mantine-color-default)",
          hover: "var(--mantine-color-default-hover)",
          color: "var(--mantine-color-default-color)",
          border: `${ae(1)} solid var(--mantine-color-default-border)`,
        }
      : {};
  },
  Rv =
    "-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji",
  dg = {
    scale: 1,
    fontSmoothing: !0,
    focusRing: "auto",
    white: "#fff",
    black: "#000",
    colors: yR,
    primaryShade: { light: 6, dark: 8 },
    primaryColor: "blue",
    variantColorResolver: PR,
    fontFamily: Rv,
    fontFamilyMonospace:
      "ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace",
    respectReducedMotion: !1,
    cursorType: "default",
    defaultGradient: { from: "blue", to: "cyan", deg: 45 },
    defaultRadius: "sm",
    activeClassName: "mantine-active",
    focusClassName: "",
    headings: {
      fontFamily: Rv,
      fontWeight: "700",
      sizes: {
        h1: { fontSize: ae(34), lineHeight: "1.3" },
        h2: { fontSize: ae(26), lineHeight: "1.35" },
        h3: { fontSize: ae(22), lineHeight: "1.4" },
        h4: { fontSize: ae(18), lineHeight: "1.45" },
        h5: { fontSize: ae(16), lineHeight: "1.5" },
        h6: { fontSize: ae(14), lineHeight: "1.5" },
      },
    },
    fontSizes: { xs: ae(12), sm: ae(14), md: ae(16), lg: ae(18), xl: ae(20) },
    lineHeights: { xs: "1.4", sm: "1.45", md: "1.55", lg: "1.6", xl: "1.65" },
    radius: { xs: ae(2), sm: ae(4), md: ae(8), lg: ae(16), xl: ae(32) },
    spacing: { xs: ae(10), sm: ae(12), md: ae(16), lg: ae(20), xl: ae(32) },
    breakpoints: { xs: "36em", sm: "48em", md: "62em", lg: "75em", xl: "88em" },
    shadows: {
      xs: `0 ${ae(1)} ${ae(3)} rgba(0, 0, 0, 0.05), 0 ${ae(1)} ${ae(
        2,
      )} rgba(0, 0, 0, 0.1)`,
      sm: `0 ${ae(1)} ${ae(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${ae(
        10,
      )} ${ae(15)} ${ae(-5)}, rgba(0, 0, 0, 0.04) 0 ${ae(7)} ${ae(7)} ${ae(
        -5,
      )}`,
      md: `0 ${ae(1)} ${ae(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${ae(
        20,
      )} ${ae(25)} ${ae(-5)}, rgba(0, 0, 0, 0.04) 0 ${ae(10)} ${ae(10)} ${ae(
        -5,
      )}`,
      lg: `0 ${ae(1)} ${ae(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${ae(
        28,
      )} ${ae(23)} ${ae(-7)}, rgba(0, 0, 0, 0.04) 0 ${ae(12)} ${ae(12)} ${ae(
        -7,
      )}`,
      xl: `0 ${ae(1)} ${ae(3)} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${ae(
        36,
      )} ${ae(28)} ${ae(-7)}, rgba(0, 0, 0, 0.04) 0 ${ae(17)} ${ae(17)} ${ae(
        -7,
      )}`,
    },
    other: {},
    components: {},
  },
  _R =
    "[@mantine/core] MantineProvider: Invalid theme.primaryColor, it accepts only key of theme.colors, learn more – https://mantine.dev/theming/colors/#primary-color",
  Lv =
    "[@mantine/core] MantineProvider: Invalid theme.primaryShade, it accepts only 0-9 integers or an object { light: 0-9, dark: 0-9 }";
function wh(e) {
  return e < 0 || e > 9 ? !1 : parseInt(e.toString(), 10) === e;
}
function Tv(e) {
  if (!(e.primaryColor in e.colors)) throw new Error(_R);
  if (
    typeof e.primaryShade == "object" &&
    (!wh(e.primaryShade.dark) || !wh(e.primaryShade.light))
  )
    throw new Error(Lv);
  if (typeof e.primaryShade == "number" && !wh(e.primaryShade))
    throw new Error(Lv);
}
function CR(e, t) {
  var r;
  if (!t) return Tv(e), e;
  const a = og(e, t);
  return (
    t.fontFamily &&
      !((r = t.headings) != null && r.fontFamily) &&
      (a.headings.fontFamily = t.fontFamily),
    Tv(a),
    a
  );
}
const hg = j.createContext(null),
  OR = () => j.useContext(hg) || dg;
function cn() {
  const e = j.useContext(hg);
  if (!e)
    throw new Error(
      "@mantine/core: MantineProvider was not found in component tree, make sure you have it in your app",
    );
  return e;
}
function CS({ theme: e, children: t, inherit: r = !0 }) {
  const a = OR(),
    c = j.useMemo(() => CR(r ? a : dg, e), [e, a, r]);
  return q.createElement(hg.Provider, { value: c }, t);
}
CS.displayName = "@mantine/core/MantineThemeProvider";
function kR({ classNames: e, styles: t, props: r, stylesCtx: a }) {
  const c = cn();
  return {
    resolvedClassNames: cd({
      theme: c,
      classNames: e,
      props: r,
      stylesCtx: a || void 0,
    }),
    resolvedStyles: tc({
      theme: c,
      styles: t,
      props: r,
      stylesCtx: a || void 0,
    }),
  };
}
const AR = {
  always: "mantine-focus-always",
  auto: "mantine-focus-auto",
  never: "mantine-focus-never",
};
function ER({ theme: e, options: t, unstyled: r }) {
  return kt(
    (t == null ? void 0 : t.focusable) &&
      !r &&
      (e.focusClassName || AR[e.focusRing]),
    (t == null ? void 0 : t.active) && !r && e.activeClassName,
  );
}
function RR({ themeName: e, classNamesPrefix: t, selector: r }) {
  return e.map((a) => `${t}-${a}-${r}`);
}
function LR({ themeName: e, theme: t, selector: r, props: a, stylesCtx: c }) {
  return e.map((h) => {
    var p, v;
    return (v = cd({
      theme: t,
      classNames: (p = t.components[h]) == null ? void 0 : p.classNames,
      props: a,
      stylesCtx: c,
    })) == null
      ? void 0
      : v[r];
  });
}
function TR({ options: e, classes: t, selector: r, unstyled: a }) {
  return e != null && e.variant && !a ? t[`${r}--${e.variant}`] : void 0;
}
function IR({ rootSelector: e, selector: t, className: r }) {
  return e === t ? r : void 0;
}
function NR({ selector: e, classes: t, unstyled: r }) {
  return r ? void 0 : t[e];
}
function MR({ selector: e, stylesCtx: t, theme: r, classNames: a, props: c }) {
  return cd({ theme: r, classNames: a, props: c, stylesCtx: t })[e];
}
function $R({ selector: e, stylesCtx: t, options: r, props: a, theme: c }) {
  return cd({
    theme: c,
    classNames: r == null ? void 0 : r.classNames,
    props: (r == null ? void 0 : r.props) || a,
    stylesCtx: t,
  })[e];
}
function DR({
  theme: e,
  options: t,
  themeName: r,
  selector: a,
  classNamesPrefix: c,
  classNames: h,
  classes: p,
  unstyled: v,
  className: b,
  rootSelector: P,
  props: k,
  stylesCtx: R,
}) {
  return kt(
    ER({ theme: e, options: t, unstyled: v }),
    LR({ theme: e, themeName: r, selector: a, props: k, stylesCtx: R }),
    TR({ options: t, classes: p, selector: a, unstyled: v }),
    MR({ selector: a, stylesCtx: R, theme: e, classNames: h, props: k }),
    $R({ selector: a, stylesCtx: R, options: t, props: k, theme: e }),
    IR({ rootSelector: P, selector: a, className: b }),
    NR({ selector: a, classes: p, unstyled: v }),
    RR({ themeName: r, classNamesPrefix: c, selector: a }),
    t == null ? void 0 : t.className,
  );
}
var zR = Object.defineProperty,
  Iv = Object.getOwnPropertySymbols,
  FR = Object.prototype.hasOwnProperty,
  jR = Object.prototype.propertyIsEnumerable,
  Nv = (e, t, r) =>
    t in e
      ? zR(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Mv = (e, t) => {
    for (var r in t || (t = {})) FR.call(t, r) && Nv(e, r, t[r]);
    if (Iv) for (var r of Iv(t)) jR.call(t, r) && Nv(e, r, t[r]);
    return e;
  };
function HR({ theme: e, themeName: t, props: r, stylesCtx: a, selector: c }) {
  return t
    .map((h) => {
      var p;
      return tc({
        theme: e,
        styles: (p = e.components[h]) == null ? void 0 : p.styles,
        props: r,
        stylesCtx: a,
      })[c];
    })
    .reduce((h, p) => Mv(Mv({}, h), p), {});
}
var XR = Object.defineProperty,
  $v = Object.getOwnPropertySymbols,
  BR = Object.prototype.hasOwnProperty,
  YR = Object.prototype.propertyIsEnumerable,
  Dv = (e, t, r) =>
    t in e
      ? XR(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  zv = (e, t) => {
    for (var r in t || (t = {})) BR.call(t, r) && Dv(e, r, t[r]);
    if ($v) for (var r of $v(t)) YR.call(t, r) && Dv(e, r, t[r]);
    return e;
  };
function Yf({ style: e, theme: t }) {
  return Array.isArray(e)
    ? [...e].reduce((r, a) => zv(zv({}, r), Yf({ style: a, theme: t })), {})
    : typeof e == "function"
    ? e(t)
    : e ?? {};
}
var WR = Object.defineProperty,
  Fv = Object.getOwnPropertySymbols,
  VR = Object.prototype.hasOwnProperty,
  GR = Object.prototype.propertyIsEnumerable,
  jv = (e, t, r) =>
    t in e
      ? WR(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Hv = (e, t) => {
    for (var r in t || (t = {})) VR.call(t, r) && jv(e, r, t[r]);
    if (Fv) for (var r of Fv(t)) GR.call(t, r) && jv(e, r, t[r]);
    return e;
  };
function UR(e) {
  return e.reduce(
    (t, r) => (
      r &&
        Object.keys(r).forEach((a) => {
          t[a] = Hv(Hv({}, t[a]), sg(r[a]));
        }),
      t
    ),
    {},
  );
}
function qR({
  vars: e,
  varsResolver: t,
  theme: r,
  props: a,
  stylesCtx: c,
  selector: h,
  themeName: p,
}) {
  var v;
  return (v = UR([
    t == null ? void 0 : t(r, a, c),
    ...p.map((b) => {
      var P, k, R;
      return (R =
        (k = (P = r.components) == null ? void 0 : P[b]) == null
          ? void 0
          : k.vars) == null
        ? void 0
        : R.call(k, r, a, c);
    }),
    e == null ? void 0 : e(r, a, c),
  ])) == null
    ? void 0
    : v[h];
}
var ZR = Object.defineProperty,
  Xv = Object.getOwnPropertySymbols,
  KR = Object.prototype.hasOwnProperty,
  QR = Object.prototype.propertyIsEnumerable,
  Bv = (e, t, r) =>
    t in e
      ? ZR(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  ra = (e, t) => {
    for (var r in t || (t = {})) KR.call(t, r) && Bv(e, r, t[r]);
    if (Xv) for (var r of Xv(t)) QR.call(t, r) && Bv(e, r, t[r]);
    return e;
  };
function JR({
  theme: e,
  themeName: t,
  selector: r,
  options: a,
  props: c,
  stylesCtx: h,
  rootSelector: p,
  styles: v,
  style: b,
  vars: P,
  varsResolver: k,
}) {
  return ra(
    ra(
      ra(
        ra(
          ra(
            ra(
              {},
              HR({
                theme: e,
                themeName: t,
                props: c,
                stylesCtx: h,
                selector: r,
              }),
            ),
            tc({ theme: e, styles: v, props: c, stylesCtx: h })[r],
          ),
          tc({
            theme: e,
            styles: a == null ? void 0 : a.styles,
            props: (a == null ? void 0 : a.props) || c,
            stylesCtx: h,
          })[r],
        ),
        qR({
          theme: e,
          props: c,
          stylesCtx: h,
          vars: P,
          varsResolver: k,
          selector: r,
          themeName: t,
        }),
      ),
      p === r ? Yf({ style: b, theme: e }) : null,
    ),
    Yf({ style: a == null ? void 0 : a.style, theme: e }),
  );
}
const OS = j.createContext(null);
function ud() {
  const e = j.useContext(OS);
  if (!e)
    throw new Error("[@mantine/core] MantineProvider was not found in tree");
  return e;
}
function eL() {
  return ud().cssVariablesResolver;
}
function tL() {
  return ud().classNamesPrefix;
}
function fg() {
  return ud().getStyleNonce;
}
function Ke({
  name: e,
  classes: t,
  props: r,
  stylesCtx: a,
  className: c,
  style: h,
  rootSelector: p = "root",
  unstyled: v,
  classNames: b,
  styles: P,
  vars: k,
  varsResolver: R,
}) {
  const L = cn(),
    z = tL(),
    M = (Array.isArray(e) ? e : [e]).filter((F) => F);
  return (F, G) => ({
    className: DR({
      theme: L,
      options: G,
      themeName: M,
      selector: F,
      classNamesPrefix: z,
      classNames: b,
      classes: t,
      unstyled: v,
      className: c,
      rootSelector: p,
      props: r,
      stylesCtx: a,
    }),
    style: JR({
      theme: L,
      themeName: M,
      selector: F,
      options: G,
      props: r,
      stylesCtx: a,
      rootSelector: p,
      styles: P,
      style: h,
      vars: k,
      varsResolver: R,
    }),
  });
}
function rL() {
  const e = console.error;
  console.error = (...t) => {
    (t.length > 1 &&
      typeof t[0] == "string" &&
      t[0].toLowerCase().includes("extra attributes from the server") &&
      typeof t[1] == "string" &&
      t[1].toLowerCase().includes("data-mantine-color-scheme")) ||
      e(...t);
  };
}
function Yv(e) {
  return e === "auto" || e === "dark" || e === "light";
}
function nL({ key: e = "mantine-color-scheme-value" } = {}) {
  let t;
  return {
    get: (r) => {
      if (typeof window > "u") return r;
      try {
        const a = window.localStorage.getItem(e);
        return Yv(a) ? a : r;
      } catch {
        return r;
      }
    },
    set: (r) => {
      try {
        window.localStorage.setItem(e, r);
      } catch (a) {
        console.warn(
          "[@mantine/core] Local storage color scheme manager was unable to save color scheme.",
          a,
        );
      }
    },
    subscribe: (r) => {
      (t = (a) => {
        a.storageArea === window.localStorage &&
          a.key === e &&
          Yv(a.newValue) &&
          r(a.newValue);
      }),
        window.addEventListener("storage", t);
    },
    unsubscribe: () => {
      window.removeEventListener("storage", t);
    },
    clear: () => {
      window.localStorage.removeItem(e);
    },
  };
}
function Si(e) {
  const t = j.useRef(e);
  return (
    j.useEffect(() => {
      t.current = e;
    }),
    j.useMemo(
      () =>
        (...r) => {
          var a;
          return (a = t.current) == null ? void 0 : a.call(t, ...r);
        },
      [],
    )
  );
}
function dd(e, t) {
  const r = Si(e),
    a = j.useRef(0);
  return (
    j.useEffect(() => () => window.clearTimeout(a.current), []),
    j.useCallback(() => {
      window.clearTimeout(a.current), (a.current = window.setTimeout(r, t));
    }, [r, t])
  );
}
const Wv = ["mousedown", "touchstart"];
function iL(e, t, r) {
  const a = j.useRef();
  return (
    j.useEffect(() => {
      const c = (h) => {
        const { target: p } = h ?? {};
        if (Array.isArray(r)) {
          const v =
            (p == null
              ? void 0
              : p.hasAttribute("data-ignore-outside-clicks")) ||
            (!document.body.contains(p) && p.tagName !== "HTML");
          r.every((P) => !!P && !h.composedPath().includes(P)) && !v && e();
        } else a.current && !a.current.contains(p) && e();
      };
      return (
        (t || Wv).forEach((h) => document.addEventListener(h, c)),
        () => {
          (t || Wv).forEach((h) => document.removeEventListener(h, c));
        }
      );
    }, [a, e, r]),
    a
  );
}
function aL(e, t) {
  try {
    return (
      e.addEventListener("change", t), () => e.removeEventListener("change", t)
    );
  } catch {
    return e.addListener(t), () => e.removeListener(t);
  }
}
function oL(e, t) {
  return typeof t == "boolean"
    ? t
    : typeof window < "u" && "matchMedia" in window
    ? window.matchMedia(e).matches
    : !1;
}
function sL(
  e,
  t,
  { getInitialValueInEffect: r } = { getInitialValueInEffect: !0 },
) {
  const [a, c] = j.useState(r ? t : oL(e, t)),
    h = j.useRef();
  return (
    j.useEffect(() => {
      if ("matchMedia" in window)
        return (
          (h.current = window.matchMedia(e)),
          c(h.current.matches),
          aL(h.current, (p) => c(p.matches))
        );
    }, [e]),
    a
  );
}
const Va = typeof document < "u" ? j.useLayoutEffect : j.useEffect;
function Fi(e, t) {
  const r = j.useRef(!1);
  j.useEffect(
    () => () => {
      r.current = !1;
    },
    [],
  ),
    j.useEffect(() => {
      if (r.current) return e();
      r.current = !0;
    }, t);
}
function kS({ opened: e, shouldReturnFocus: t = !0 }) {
  const r = j.useRef(),
    a = () => {
      var c;
      r.current &&
        "focus" in r.current &&
        typeof r.current.focus == "function" &&
        ((c = r.current) == null || c.focus({ preventScroll: !0 }));
    };
  return (
    Fi(() => {
      let c = -1;
      const h = (p) => {
        p.key === "Tab" && window.clearTimeout(c);
      };
      return (
        document.addEventListener("keydown", h),
        e
          ? (r.current = document.activeElement)
          : t && (c = window.setTimeout(a, 10)),
        () => {
          window.clearTimeout(c), document.removeEventListener("keydown", h);
        }
      );
    }, [e, t]),
    a
  );
}
const lL = /input|select|textarea|button|object/,
  AS = "a, input, select, textarea, button, object, [tabindex]";
function cL(e) {
  return e.style.display === "none";
}
function uL(e) {
  if (
    e.getAttribute("aria-hidden") ||
    e.getAttribute("hidden") ||
    e.getAttribute("type") === "hidden"
  )
    return !1;
  let r = e;
  for (; r && !(r === document.body || r.nodeType === 11); ) {
    if (cL(r)) return !1;
    r = r.parentNode;
  }
  return !0;
}
function ES(e) {
  let t = e.getAttribute("tabindex");
  return t === null && (t = void 0), parseInt(t, 10);
}
function Wf(e) {
  const t = e.nodeName.toLowerCase(),
    r = !Number.isNaN(ES(e));
  return (
    ((lL.test(t) && !e.disabled) ||
      (e instanceof HTMLAnchorElement && e.href) ||
      r) &&
    uL(e)
  );
}
function RS(e) {
  const t = ES(e);
  return (Number.isNaN(t) || t >= 0) && Wf(e);
}
function dL(e) {
  return Array.from(e.querySelectorAll(AS)).filter(RS);
}
function hL(e, t) {
  const r = dL(e);
  if (!r.length) {
    t.preventDefault();
    return;
  }
  const a = r[t.shiftKey ? 0 : r.length - 1],
    c = e.getRootNode();
  let h = a === c.activeElement || e === c.activeElement;
  const p = c.activeElement;
  if (
    (p.tagName === "INPUT" &&
      p.getAttribute("type") === "radio" &&
      (h = r
        .filter(
          (k) =>
            k.getAttribute("type") === "radio" &&
            k.getAttribute("name") === p.getAttribute("name"),
        )
        .includes(a)),
    !h)
  )
    return;
  t.preventDefault();
  const b = r[t.shiftKey ? r.length - 1 : 0];
  b && b.focus();
}
function LS() {
  return `mantine-${Math.random().toString(36).slice(2, 11)}`;
}
function fL(e, t = "body > :not(script)") {
  const r = LS(),
    a = Array.from(document.querySelectorAll(t)).map((c) => {
      var h;
      if (
        ((h = c == null ? void 0 : c.shadowRoot) != null && h.contains(e)) ||
        c.contains(e)
      )
        return;
      const p = c.getAttribute("aria-hidden"),
        v = c.getAttribute("data-hidden"),
        b = c.getAttribute("data-focus-id");
      return (
        c.setAttribute("data-focus-id", r),
        p === null || p === "false"
          ? c.setAttribute("aria-hidden", "true")
          : !v && !b && c.setAttribute("data-hidden", p),
        { node: c, ariaHidden: v || null }
      );
    });
  return () => {
    a.forEach((c) => {
      !c ||
        r !== c.node.getAttribute("data-focus-id") ||
        (c.ariaHidden === null
          ? c.node.removeAttribute("aria-hidden")
          : c.node.setAttribute("aria-hidden", c.ariaHidden),
        c.node.removeAttribute("data-focus-id"),
        c.node.removeAttribute("data-hidden"));
    });
  };
}
function pL(e = !0) {
  const t = j.useRef(),
    r = j.useRef(null),
    a = (h) => {
      let p = h.querySelector("[data-autofocus]");
      if (!p) {
        const v = Array.from(h.querySelectorAll(AS));
        (p = v.find(RS) || v.find(Wf) || null), !p && Wf(h) && (p = h);
      }
      p && p.focus({ preventScroll: !0 });
    },
    c = j.useCallback(
      (h) => {
        if (e) {
          if (h === null) {
            r.current && (r.current(), (r.current = null));
            return;
          }
          (r.current = fL(h)),
            t.current !== h &&
              (h
                ? (setTimeout(() => {
                    h.getRootNode() && a(h);
                  }),
                  (t.current = h))
                : (t.current = null));
        }
      },
      [e],
    );
  return (
    j.useEffect(() => {
      if (!e) return;
      t.current && setTimeout(() => a(t.current));
      const h = (p) => {
        p.key === "Tab" && t.current && hL(t.current, p);
      };
      return (
        document.addEventListener("keydown", h),
        () => {
          document.removeEventListener("keydown", h), r.current && r.current();
        }
      );
    }, [e]),
    c
  );
}
const gL = q["useId".toString()] || (() => {});
function mL() {
  const e = gL();
  return e ? `mantine-${e.replace(/:/g, "")}` : "";
}
function Vi(e) {
  const t = mL(),
    [r, a] = j.useState(t);
  return (
    Va(() => {
      a(LS());
    }, []),
    typeof e == "string" ? e : typeof window > "u" ? t : r
  );
}
function TS(e, t, r) {
  j.useEffect(
    () => (
      window.addEventListener(e, t, r),
      () => window.removeEventListener(e, t, r)
    ),
    [e, t],
  );
}
function IS(e, t) {
  typeof e == "function"
    ? e(t)
    : typeof e == "object" && e !== null && "current" in e && (e.current = t);
}
function vL(...e) {
  return (t) => {
    e.forEach((r) => IS(r, t));
  };
}
function or(...e) {
  return j.useCallback(vL(...e), e);
}
function $a({
  value: e,
  defaultValue: t,
  finalValue: r,
  onChange: a = () => {},
}) {
  const [c, h] = j.useState(t !== void 0 ? t : r),
    p = (v) => {
      h(v), a == null || a(v);
    };
  return e !== void 0 ? [e, a, !0] : [c, p, !1];
}
function NS(e, t) {
  return sL("(prefers-reduced-motion: reduce)", e, t);
}
function yL() {
  const [e, t] = j.useState(!1),
    r = j.useRef(null),
    a = j.useCallback(() => t(!0), []),
    c = j.useCallback(() => t(!1), []);
  return (
    j.useEffect(() => {
      if (r.current)
        return (
          r.current.addEventListener("mouseenter", a),
          r.current.addEventListener("mouseleave", c),
          () => {
            var h, p;
            (h = r.current) == null || h.removeEventListener("mouseenter", a),
              (p = r.current) == null || p.removeEventListener("mouseleave", c);
          }
        );
    }, []),
    { ref: r, hovered: e }
  );
}
function fo(e, t) {
  var r;
  const a =
    e !== "auto"
      ? e
      : window.matchMedia("(prefers-color-scheme: dark)").matches
      ? "dark"
      : "light";
  (r = t()) == null || r.setAttribute("data-mantine-color-scheme", a);
}
function xL({
  manager: e,
  defaultColorScheme: t,
  getRootElement: r,
  forceColorScheme: a,
}) {
  const c = j.useRef(),
    [h, p] = j.useState(() => e.get(t)),
    v = a || h,
    b = j.useCallback(
      (k) => {
        a || (fo(k, r), p(k), e.set(k));
      },
      [e.set, v, a],
    ),
    P = j.useCallback(() => {
      p(t), fo(t, r), e.clear();
    }, [e.clear, t]);
  return (
    j.useEffect(
      () => (e.subscribe(b), e.unsubscribe),
      [e.subscribe, e.unsubscribe],
    ),
    Va(() => {
      fo(e.get(t), r);
    }, []),
    j.useEffect(() => {
      var k;
      if (a) return fo(a, r), () => {};
      c.current = window.matchMedia("(prefers-color-scheme: dark)");
      const R = (L) => {
        h === "auto" && fo(L.matches ? "dark" : "light", r);
      };
      return (
        (k = c.current) == null || k.addEventListener("change", R),
        () => {
          var L;
          return (L = c.current) == null
            ? void 0
            : L.removeEventListener("change", R);
        }
      );
    }, [h, a]),
    { colorScheme: v, setColorScheme: b, clearColorScheme: P }
  );
}
function bL({ respectReducedMotion: e, getRootElement: t }) {
  Va(() => {
    var r;
    e &&
      ((r = t()) == null ||
        r.setAttribute("data-respect-reduced-motion", "true"));
  }, [e]);
}
function Sh(e) {
  return Object.entries(e)
    .map(([t, r]) => `${t}: ${r};`)
    .join("");
}
function Ph(e, t) {
  return (Array.isArray(e) ? e : [e]).reduce((a, c) => `${c}{${a}}`, t);
}
function wL(e, t) {
  const r = Sh(e.variables),
    a = r ? Ph(t, r) : "",
    c = Sh(e.dark),
    h = c ? Ph(`${t}[data-mantine-color-scheme="dark"]`, c) : "",
    p = Sh(e.light),
    v = p ? Ph(`${t}[data-mantine-color-scheme="light"]`, p) : "";
  return `${a}${h}${v}`;
}
function na(e, t, r) {
  Nt(t).forEach((a) => Object.assign(e, { [`--mantine-${r}-${a}`]: t[a] }));
}
const MS = (e) => {
  const t = Xf(e, "dark"),
    r = Xf(e, "light"),
    a =
      e.defaultRadius in e.radius
        ? e.radius[e.defaultRadius]
        : ae(e.defaultRadius),
    c = {
      variables: {
        "--mantine-scale": e.scale.toString(),
        "--mantine-cursor-type": e.cursorType,
        "--mantine-webkit-font-smoothing": e.fontSmoothing
          ? "antialiased"
          : "unset",
        "--mantine-color-scheme": "light dark",
        "--mantine-moz-font-smoothing": e.fontSmoothing ? "grayscale" : "unset",
        "--mantine-color-white": e.white,
        "--mantine-color-black": e.black,
        "--mantine-line-height": e.lineHeights.md,
        "--mantine-font-family": e.fontFamily,
        "--mantine-font-family-monospace": e.fontFamilyMonospace,
        "--mantine-font-family-headings": e.headings.fontFamily,
        "--mantine-heading-font-weight": e.headings.fontWeight,
        "--mantine-radius-default": a,
        "--mantine-primary-color-filled": `var(--mantine-color-${e.primaryColor}-filled)`,
        "--mantine-primary-color-filled-hover": `var(--mantine-color-${e.primaryColor}-filled-hover)`,
        "--mantine-primary-color-light": `var(--mantine-color-${e.primaryColor}-light)`,
        "--mantine-primary-color-light-hover": `var(--mantine-color-${e.primaryColor}-light-hover)`,
        "--mantine-primary-color-light-color": `var(--mantine-color-${e.primaryColor}-light-color)`,
      },
      light: {
        "--mantine-color-bright": "var(--mantine-color-black)",
        "--mantine-color-text": e.black,
        "--mantine-color-body": e.white,
        "--mantine-color-error": e.colors.red[6],
        "--mantine-color-placeholder": e.colors.gray[5],
        "--mantine-color-anchor": e.colors[e.primaryColor][r],
        "--mantine-color-default": e.white,
        "--mantine-color-default-hover": e.colors.gray[0],
        "--mantine-color-default-color": e.black,
        "--mantine-color-default-border": e.colors.gray[4],
      },
      dark: {
        "--mantine-color-bright": "var(--mantine-color-white)",
        "--mantine-color-text": "var(--mantine-color-dark-0)",
        "--mantine-color-body": e.colors.dark[7],
        "--mantine-color-error": e.colors.red[9],
        "--mantine-color-placeholder": e.colors.dark[3],
        "--mantine-color-anchor": e.colors[e.primaryColor][4],
        "--mantine-color-default": e.colors.dark[6],
        "--mantine-color-default-hover": e.colors.dark[5],
        "--mantine-color-default-color": e.white,
        "--mantine-color-default-border": e.colors.dark[4],
      },
    };
  na(c.variables, e.breakpoints, "breakpoint"),
    na(c.variables, e.spacing, "spacing"),
    na(c.variables, e.fontSizes, "font-size"),
    na(c.variables, e.lineHeights, "line-height"),
    na(c.variables, e.shadows, "shadow"),
    na(c.variables, e.radius, "radius"),
    Nt(e.colors).forEach((p) => {
      e.colors[p].forEach((P, k) => {
        c.variables[`--mantine-color-${p}-${k}`] = P;
      });
      const v = r === 9 ? e.colors[p][8] : e.colors[p][r + 1],
        b = t === 9 ? e.colors[p][8] : e.colors[p][t + 1];
      (c.light["--mantine-color-dimmed"] = "var(--mantine-color-gray-6)"),
        (c.light[`--mantine-color-${p}-filled`] = e.colors[p][r]),
        (c.light[`--mantine-color-${p}-filled-hover`] = v),
        (c.light[`--mantine-color-${p}-light`] = Vt(e.colors[p][r], 0.1)),
        (c.light[`--mantine-color-${p}-light-hover`] = Vt(
          e.colors[p][r],
          0.12,
        )),
        (c.light[`--mantine-color-${p}-light-color`] = e.colors[p][r]),
        (c.light[`--mantine-color-${p}-outline`] = e.colors[p][r]),
        (c.light[`--mantine-color-${p}-outline-hover`] = Vt(
          e.colors[p][r],
          0.05,
        )),
        (c.dark["--mantine-color-dimmed"] = "var(--mantine-color-dark-2)"),
        (c.dark[`--mantine-color-${p}-filled`] = e.colors[p][t]),
        (c.dark[`--mantine-color-${p}-filled-hover`] = b),
        (c.dark[`--mantine-color-${p}-light`] = Vt(
          e.colors[p][Math.max(0, t - 2)],
          0.15,
        )),
        (c.dark[`--mantine-color-${p}-light-hover`] = Vt(
          e.colors[p][Math.max(0, t - 2)],
          0.2,
        )),
        (c.dark[`--mantine-color-${p}-light-color`] =
          e.colors[p][Math.max(t - 5, 0)]),
        (c.dark[`--mantine-color-${p}-outline`] =
          e.colors[p][Math.max(t - 4, 0)]),
        (c.dark[`--mantine-color-${p}-outline-hover`] = Vt(
          e.colors[p][Math.max(t - 4, 0)],
          0.05,
        ));
    });
  const h = e.headings.sizes;
  return (
    Nt(h).forEach((p) => {
      (c.variables[`--mantine-${p}-font-size`] = h[p].fontSize),
        (c.variables[`--mantine-${p}-line-height`] = h[p].lineHeight),
        (c.variables[`--mantine-${p}-font-weight`] =
          h[p].fontWeight || e.headings.fontWeight);
    }),
    c
  );
};
function SL({ theme: e, generator: t }) {
  const r = MS(e),
    a = t == null ? void 0 : t(e);
  return a ? og(r, a) : r;
}
const _h = MS(dg);
function PL(e) {
  const t = { variables: {}, light: {}, dark: {} };
  return (
    Nt(e.variables).forEach((r) => {
      _h.variables[r] !== e.variables[r] && (t.variables[r] = e.variables[r]);
    }),
    Nt(e.light).forEach((r) => {
      _h.light[r] !== e.light[r] && (t.light[r] = e.light[r]);
    }),
    Nt(e.dark).forEach((r) => {
      _h.dark[r] !== e.dark[r] && (t.dark[r] = e.dark[r]);
    }),
    t
  );
}
function _L(e) {
  return `
  ${e}[data-mantine-color-scheme="dark"] { --mantine-color-scheme: dark; }
  ${e}[data-mantine-color-scheme="light"] { --mantine-color-scheme: light; }
`;
}
function $S({ cssVariablesSelector: e }) {
  const t = cn(),
    r = fg(),
    a = eL(),
    c = SL({ theme: t, generator: a }),
    h = e === ":root",
    p = h ? PL(c) : c,
    v = wL(p, e);
  return v
    ? q.createElement("style", {
        "data-mantine-styles": !0,
        nonce: r == null ? void 0 : r(),
        dangerouslySetInnerHTML: { __html: `${v}${h ? "" : _L(e)}` },
      })
    : null;
}
$S.displayName = "@mantine/CssVariables";
function CL() {
  const e = cn(),
    t = fg(),
    r = Nt(e.breakpoints).reduce((a, c) => {
      const h = Hf(e.breakpoints[c]);
      return `${a}@media (max-width: ${ec(
        h - 0.1,
      )}) {.mantine-visible-from-${c} {display: none !important;}}@media (min-width: ${ec(
        h,
      )}) {.mantine-hidden-from-${c} {display: none !important;}}`;
    }, "");
  return q.createElement("style", {
    "data-mantine-styles": "classes",
    nonce: t == null ? void 0 : t(),
    dangerouslySetInnerHTML: { __html: r },
  });
}
rL();
function DS({
  theme: e,
  children: t,
  getStyleNonce: r,
  withCssVariables: a = !0,
  cssVariablesSelector: c = ":root",
  classNamesPrefix: h = "mantine",
  colorSchemeManager: p = nL(),
  defaultColorScheme: v = "light",
  getRootElement: b = () => document.documentElement,
  cssVariablesResolver: P,
  forceColorScheme: k,
}) {
  const {
    colorScheme: R,
    setColorScheme: L,
    clearColorScheme: z,
  } = xL({
    defaultColorScheme: v,
    forceColorScheme: k,
    manager: p,
    getRootElement: b,
  });
  return (
    bL({
      respectReducedMotion: (e == null ? void 0 : e.respectReducedMotion) || !1,
      getRootElement: b,
    }),
    q.createElement(
      OS.Provider,
      {
        value: {
          colorSchemeManager: p,
          colorScheme: R,
          setColorScheme: L,
          clearColorScheme: z,
          getRootElement: b,
          classNamesPrefix: h,
          getStyleNonce: r,
          cssVariablesResolver: P,
          cssVariablesSelector: c,
        },
      },
      q.createElement(
        CS,
        { theme: e },
        a && q.createElement($S, { cssVariablesSelector: c }),
        q.createElement(CL, null),
        t,
      ),
    )
  );
}
DS.displayName = "@mantine/core/MantineProvider";
var OL = Object.defineProperty,
  Vv = Object.getOwnPropertySymbols,
  kL = Object.prototype.hasOwnProperty,
  AL = Object.prototype.propertyIsEnumerable,
  Gv = (e, t, r) =>
    t in e
      ? OL(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Ch = (e, t) => {
    for (var r in t || (t = {})) kL.call(t, r) && Gv(e, r, t[r]);
    if (Vv) for (var r of Vv(t)) AL.call(t, r) && Gv(e, r, t[r]);
    return e;
  };
function Pe(e, t, r) {
  var a;
  const c = cn(),
    h = (a = c.components[e]) == null ? void 0 : a.defaultProps,
    p = typeof h == "function" ? h(c) : h;
  return Ch(Ch(Ch({}, t), p), sg(r));
}
function Uv(e) {
  return Nt(e)
    .reduce((t, r) => (e[r] !== void 0 ? `${t}${oR(r)}:${e[r]};` : t), "")
    .trim();
}
function EL({ selector: e, styles: t, media: r }) {
  const a = t ? Uv(t) : "",
    c = Array.isArray(r)
      ? r.map((h) => `@media${h.query}{${e}{${Uv(h.styles)}}}`)
      : [];
  return `${a ? `${e}{${a}}` : ""}${c.join("")}`.trim();
}
function zS({ selector: e, styles: t, media: r }) {
  const a = fg();
  return q.createElement("style", {
    "data-mantine-styles": "inline",
    nonce: a == null ? void 0 : a(),
    dangerouslySetInnerHTML: {
      __html: EL({ selector: e, styles: t, media: r }),
    },
  });
}
function RL() {
  return `__m__-${j.useId().replace(/:/g, "")}`;
}
var LL = Object.defineProperty,
  qv = Object.getOwnPropertySymbols,
  TL = Object.prototype.hasOwnProperty,
  IL = Object.prototype.propertyIsEnumerable,
  Zv = (e, t, r) =>
    t in e
      ? LL(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Kv = (e, t) => {
    for (var r in t || (t = {})) TL.call(t, r) && Zv(e, r, t[r]);
    if (qv) for (var r of qv(t)) IL.call(t, r) && Zv(e, r, t[r]);
    return e;
  };
function FS(e, t) {
  return Array.isArray(e)
    ? [...e].reduce((r, a) => Kv(Kv({}, r), FS(a, t)), {})
    : typeof e == "function"
    ? e(t)
    : e ?? {};
}
var NL = Object.defineProperty,
  Qv = Object.getOwnPropertySymbols,
  ML = Object.prototype.hasOwnProperty,
  $L = Object.prototype.propertyIsEnumerable,
  Jv = (e, t, r) =>
    t in e
      ? NL(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Do = (e, t) => {
    for (var r in t || (t = {})) ML.call(t, r) && Jv(e, r, t[r]);
    if (Qv) for (var r of Qv(t)) $L.call(t, r) && Jv(e, r, t[r]);
    return e;
  };
function Vf(e, t) {
  return Array.isArray(e)
    ? [...e].reduce((r, a) => Do(Do({}, r), Vf(a, t)), {})
    : typeof e == "function"
    ? e(t)
    : e ?? {};
}
function DL({ theme: e, style: t, vars: r, styleProps: a }) {
  const c = Vf(t, e),
    h = Vf(r, e);
  return Do(Do(Do({}, c), h), a);
}
var zL = Object.defineProperty,
  ey = Object.getOwnPropertySymbols,
  FL = Object.prototype.hasOwnProperty,
  jL = Object.prototype.propertyIsEnumerable,
  ty = (e, t, r) =>
    t in e
      ? zL(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  ry = (e, t) => {
    for (var r in t || (t = {})) FL.call(t, r) && ty(e, r, t[r]);
    if (ey) for (var r of ey(t)) jL.call(t, r) && ty(e, r, t[r]);
    return e;
  };
function jS(e) {
  return e.startsWith("data-") ? e : `data-${e}`;
}
function HL(e) {
  return Object.keys(e).reduce((t, r) => {
    const a = e[r];
    return (
      a === void 0 || a === "" || a === !1 || a === null || (t[jS(r)] = e[r]), t
    );
  }, {});
}
function HS(e) {
  return e
    ? typeof e == "string"
      ? { [jS(e)]: !0 }
      : Array.isArray(e)
      ? [...e].reduce((t, r) => ry(ry({}, t), HS(r)), {})
      : HL(e)
    : null;
}
var ny = Object.getOwnPropertySymbols,
  XL = Object.prototype.hasOwnProperty,
  BL = Object.prototype.propertyIsEnumerable,
  YL = (e, t) => {
    var r = {};
    for (var a in e) XL.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && ny)
      for (var a of ny(e)) t.indexOf(a) < 0 && BL.call(e, a) && (r[a] = e[a]);
    return r;
  };
function hd(e) {
  const t = e,
    {
      m: r,
      mx: a,
      my: c,
      mt: h,
      mb: p,
      ml: v,
      mr: b,
      p: P,
      px: k,
      py: R,
      pt: L,
      pb: z,
      pl: M,
      pr: F,
      bg: G,
      c: $,
      opacity: O,
      ff: X,
      fz: N,
      fw: B,
      lts: U,
      ta: Q,
      lh: ee,
      fs: ne,
      tt: le,
      td: he,
      w: me,
      miw: fe,
      maw: ue,
      h: oe,
      mih: ve,
      mah: ye,
      bgsz: te,
      bgp: pe,
      bgr: Se,
      bga: ke,
      pos: Ce,
      top: ze,
      left: $e,
      bottom: Qe,
      right: Be,
      inset: Ue,
      display: mt,
      hiddenFrom: Xe,
      visibleFrom: St,
    } = t,
    Bt = YL(t, [
      "m",
      "mx",
      "my",
      "mt",
      "mb",
      "ml",
      "mr",
      "p",
      "px",
      "py",
      "pt",
      "pb",
      "pl",
      "pr",
      "bg",
      "c",
      "opacity",
      "ff",
      "fz",
      "fw",
      "lts",
      "ta",
      "lh",
      "fs",
      "tt",
      "td",
      "w",
      "miw",
      "maw",
      "h",
      "mih",
      "mah",
      "bgsz",
      "bgp",
      "bgr",
      "bga",
      "pos",
      "top",
      "left",
      "bottom",
      "right",
      "inset",
      "display",
      "hiddenFrom",
      "visibleFrom",
    ]);
  return {
    styleProps: sg({
      m: r,
      mx: a,
      my: c,
      mt: h,
      mb: p,
      ml: v,
      mr: b,
      p: P,
      px: k,
      py: R,
      pt: L,
      pb: z,
      pl: M,
      pr: F,
      bg: G,
      c: $,
      opacity: O,
      ff: X,
      fz: N,
      fw: B,
      lts: U,
      ta: Q,
      lh: ee,
      fs: ne,
      tt: le,
      td: he,
      w: me,
      miw: fe,
      maw: ue,
      h: oe,
      mih: ve,
      mah: ye,
      bgsz: te,
      bgp: pe,
      bgr: Se,
      bga: ke,
      pos: Ce,
      top: ze,
      left: $e,
      bottom: Qe,
      right: Be,
      inset: Ue,
      display: mt,
      hiddenFrom: Xe,
      visibleFrom: St,
    }),
    rest: Bt,
  };
}
function WL(e, t) {
  const r = ug({ color: e, theme: t });
  return r.color === "dimmed"
    ? "var(--mantine-color-dimmed)"
    : r.color === "bright"
    ? "var(--mantine-color-bright)"
    : r.variable
    ? `var(${r.variable})`
    : r.color;
}
function VL(e, t) {
  return typeof e == "string" && e in t.fontSizes
    ? `var(--mantine-font-size-${e})`
    : typeof e == "number" || typeof e == "string"
    ? ae(e)
    : e;
}
function GL(e, t) {
  if (typeof e == "number") return ae(e);
  if (typeof e == "string") {
    const r = e.replace("-", "");
    if (!(r in t.spacing)) return ae(e);
    const a = `--mantine-spacing-${r}`;
    return e.startsWith("-") ? `calc(var(${a}) * -1)` : `var(${a})`;
  }
  return e;
}
function UL(e) {
  return e;
}
function qL(e) {
  return typeof e == "number" ? ae(e) : e;
}
function ZL(e, t) {
  return typeof e == "string" && e in t.fontSizes
    ? `var(--mantine-line-height-${e})`
    : e;
}
const Oh = {
  color: WL,
  fontSize: VL,
  spacing: GL,
  identity: UL,
  size: qL,
  lineHeight: ZL,
};
var KL = Object.defineProperty,
  QL = Object.defineProperties,
  JL = Object.getOwnPropertyDescriptors,
  rc = Object.getOwnPropertySymbols,
  XS = Object.prototype.hasOwnProperty,
  BS = Object.prototype.propertyIsEnumerable,
  iy = (e, t, r) =>
    t in e
      ? KL(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  eT = (e, t) => {
    for (var r in t || (t = {})) XS.call(t, r) && iy(e, r, t[r]);
    if (rc) for (var r of rc(t)) BS.call(t, r) && iy(e, r, t[r]);
    return e;
  },
  tT = (e, t) => QL(e, JL(t)),
  rT = (e, t) => {
    var r = {};
    for (var a in e) XS.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && rc)
      for (var a of rc(e)) t.indexOf(a) < 0 && BS.call(e, a) && (r[a] = e[a]);
    return r;
  };
function ay(e) {
  return e.replace("(min-width: ", "").replace("em)", "");
}
function nT(e) {
  var t = e,
    { media: r } = t,
    a = rT(t, ["media"]);
  const h = Object.keys(r)
    .sort((p, v) => Number(ay(p)) - Number(ay(v)))
    .map((p) => ({ query: p, styles: r[p] }));
  return tT(eT({}, a), { media: h });
}
var iT = Object.defineProperty,
  aT = Object.defineProperties,
  oT = Object.getOwnPropertyDescriptors,
  oy = Object.getOwnPropertySymbols,
  sT = Object.prototype.hasOwnProperty,
  lT = Object.prototype.propertyIsEnumerable,
  sy = (e, t, r) =>
    t in e
      ? iT(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  cT = (e, t) => {
    for (var r in t || (t = {})) sT.call(t, r) && sy(e, r, t[r]);
    if (oy) for (var r of oy(t)) lT.call(t, r) && sy(e, r, t[r]);
    return e;
  },
  uT = (e, t) => aT(e, oT(t));
function dT(e) {
  if (typeof e != "object" || e === null) return !1;
  const t = Object.keys(e);
  return !(t.length === 1 && t[0] === "base");
}
function hT(e) {
  return typeof e == "object" && e !== null
    ? "base" in e
      ? e.base
      : void 0
    : e;
}
function fT(e) {
  return typeof e == "object" && e !== null
    ? Nt(e).filter((t) => t !== "base")
    : [];
}
function pT(e, t) {
  return typeof e == "object" && e !== null && t in e ? e[t] : e;
}
function gT({ styleProps: e, data: t, theme: r }) {
  return nT(
    Nt(e).reduce(
      (a, c) => {
        if (c === "hiddenFrom" || c === "visibleFrom") return a;
        const h = t[c],
          p = Array.isArray(h.property) ? h.property : [h.property],
          v = hT(e[c]);
        if (!dT(e[c]))
          return (
            p.forEach((P) => {
              a.inlineStyles[P] = Oh[h.type](v, r);
            }),
            a
          );
        a.hasResponsiveStyles = !0;
        const b = fT(e[c]);
        return (
          p.forEach((P) => {
            v && (a.styles[P] = Oh[h.type](v, r)),
              b.forEach((k) => {
                const R = `(min-width: ${r.breakpoints[k]})`;
                a.media[R] = uT(cT({}, a.media[R]), {
                  [P]: Oh[h.type](pT(e[c], k), r),
                });
              });
          }),
          a
        );
      },
      { hasResponsiveStyles: !1, styles: {}, inlineStyles: {}, media: {} },
    ),
  );
}
const mT = {
  m: { type: "spacing", property: "margin" },
  mt: { type: "spacing", property: "marginTop" },
  mb: { type: "spacing", property: "marginBottom" },
  ml: { type: "spacing", property: "marginLeft" },
  mr: { type: "spacing", property: "marginRight" },
  mx: { type: "spacing", property: ["marginRight", "marginLeft"] },
  my: { type: "spacing", property: ["marginTop", "marginBottom"] },
  p: { type: "spacing", property: "padding" },
  pt: { type: "spacing", property: "paddingTop" },
  pb: { type: "spacing", property: "paddingBottom" },
  pl: { type: "spacing", property: "paddingLeft" },
  pr: { type: "spacing", property: "paddingRight" },
  px: { type: "spacing", property: ["paddingRight", "paddingLeft"] },
  py: { type: "spacing", property: ["paddingTop", "paddingBottom"] },
  bg: { type: "color", property: "background" },
  c: { type: "color", property: "color" },
  opacity: { type: "identity", property: "opacity" },
  ff: { type: "identity", property: "fontFamily" },
  fz: { type: "fontSize", property: "fontSize" },
  fw: { type: "identity", property: "fontWeight" },
  lts: { type: "size", property: "letterSpacing" },
  ta: { type: "identity", property: "textAlign" },
  lh: { type: "lineHeight", property: "lineHeight" },
  fs: { type: "identity", property: "fontStyle" },
  tt: { type: "identity", property: "textTransform" },
  td: { type: "identity", property: "textDecoration" },
  w: { type: "spacing", property: "width" },
  miw: { type: "spacing", property: "minWidth" },
  maw: { type: "spacing", property: "maxWidth" },
  h: { type: "spacing", property: "height" },
  mih: { type: "spacing", property: "minHeight" },
  mah: { type: "spacing", property: "maxHeight" },
  bgsz: { type: "size", property: "backgroundSize" },
  bgp: { type: "identity", property: "backgroundPosition" },
  bgr: { type: "identity", property: "backgroundRepeat" },
  bga: { type: "identity", property: "backgroundAttachment" },
  pos: { type: "identity", property: "position" },
  top: { type: "identity", property: "top" },
  left: { type: "size", property: "left" },
  bottom: { type: "size", property: "bottom" },
  right: { type: "size", property: "right" },
  inset: { type: "size", property: "inset" },
  display: { type: "identity", property: "display" },
};
var vT = Object.defineProperty,
  nc = Object.getOwnPropertySymbols,
  YS = Object.prototype.hasOwnProperty,
  WS = Object.prototype.propertyIsEnumerable,
  ly = (e, t, r) =>
    t in e
      ? vT(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  kh = (e, t) => {
    for (var r in t || (t = {})) YS.call(t, r) && ly(e, r, t[r]);
    if (nc) for (var r of nc(t)) WS.call(t, r) && ly(e, r, t[r]);
    return e;
  },
  yT = (e, t) => {
    var r = {};
    for (var a in e) YS.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && nc)
      for (var a of nc(e)) t.indexOf(a) < 0 && WS.call(e, a) && (r[a] = e[a]);
    return r;
  };
const VS = j.forwardRef((e, t) => {
  var r = e,
    {
      component: a,
      style: c,
      __vars: h,
      className: p,
      variant: v,
      mod: b,
      size: P,
      hiddenFrom: k,
      visibleFrom: R,
      renderRoot: L,
    } = r,
    z = yT(r, [
      "component",
      "style",
      "__vars",
      "className",
      "variant",
      "mod",
      "size",
      "hiddenFrom",
      "visibleFrom",
      "renderRoot",
    ]);
  const M = cn(),
    F = a || "div",
    { styleProps: G, rest: $ } = hd(z),
    O = RL(),
    X = gT({ styleProps: G, theme: M, data: mT }),
    N = kh(
      kh(
        {
          ref: t,
          style: DL({
            theme: M,
            style: c,
            vars: h,
            styleProps: X.inlineStyles,
          }),
          className: kt(p, {
            [O]: X.hasResponsiveStyles,
            [`mantine-hidden-from-${k}`]: k,
            [`mantine-visible-from-${R}`]: R,
          }),
          "data-variant": v,
          "data-size": SS(P) ? void 0 : P || void 0,
        },
        HS(b),
      ),
      $,
    );
  return q.createElement(
    q.Fragment,
    null,
    X.hasResponsiveStyles &&
      q.createElement(zS, {
        selector: `.${O}`,
        styles: X.styles,
        media: X.media,
      }),
    typeof L == "function" ? L(N) : q.createElement(F, kh({}, N)),
  );
});
VS.displayName = "@mantine/core/Box";
const Te = VS;
function GS(e) {
  return e;
}
function Ne(e) {
  const t = j.forwardRef(e);
  return (t.extend = GS), t;
}
function Cr(e) {
  const t = j.forwardRef(e);
  return (t.extend = GS), t;
}
const xT = j.createContext({
  dir: "ltr",
  toggleDirection: () => {},
  setDirection: () => {},
});
function fd() {
  return j.useContext(xT);
}
const [bT, Or] = hi("ScrollArea.Root component was not found in tree");
function Da(e, t) {
  const r = Si(t);
  Va(() => {
    let a = 0;
    if (e) {
      const c = new ResizeObserver(() => {
        cancelAnimationFrame(a), (a = window.requestAnimationFrame(r));
      });
      return (
        c.observe(e),
        () => {
          window.cancelAnimationFrame(a), c.unobserve(e);
        }
      );
    }
  }, [e, r]);
}
const [wT, US] = hi("ScrollAreaScrollbar was not found in tree");
function Li(e, t, { checkForDefaultPrevented: r = !0 } = {}) {
  return (a) => {
    e == null || e(a), (r === !1 || !a.defaultPrevented) && (t == null || t(a));
  };
}
var ST = Object.defineProperty,
  PT = Object.defineProperties,
  _T = Object.getOwnPropertyDescriptors,
  ic = Object.getOwnPropertySymbols,
  qS = Object.prototype.hasOwnProperty,
  ZS = Object.prototype.propertyIsEnumerable,
  cy = (e, t, r) =>
    t in e
      ? ST(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  uy = (e, t) => {
    for (var r in t || (t = {})) qS.call(t, r) && cy(e, r, t[r]);
    if (ic) for (var r of ic(t)) ZS.call(t, r) && cy(e, r, t[r]);
    return e;
  },
  CT = (e, t) => PT(e, _T(t)),
  OT = (e, t) => {
    var r = {};
    for (var a in e) qS.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && ic)
      for (var a of ic(e)) t.indexOf(a) < 0 && ZS.call(e, a) && (r[a] = e[a]);
    return r;
  };
const KS = j.forwardRef((e, t) => {
  const r = e,
    {
      sizes: a,
      hasThumb: c,
      onThumbChange: h,
      onThumbPointerUp: p,
      onThumbPointerDown: v,
      onThumbPositionChange: b,
      onDragScroll: P,
      onWheelScroll: k,
      onResize: R,
    } = r,
    L = OT(r, [
      "sizes",
      "hasThumb",
      "onThumbChange",
      "onThumbPointerUp",
      "onThumbPointerDown",
      "onThumbPositionChange",
      "onDragScroll",
      "onWheelScroll",
      "onResize",
    ]),
    z = Or(),
    [M, F] = q.useState(null),
    G = or(t, (ne) => F(ne)),
    $ = q.useRef(null),
    O = q.useRef(""),
    { viewport: X } = z,
    N = a.content - a.viewport,
    B = Si(k),
    U = Si(b),
    Q = dd(R, 10),
    ee = (ne) => {
      if ($.current) {
        const le = ne.clientX - $.current.left,
          he = ne.clientY - $.current.top;
        P({ x: le, y: he });
      }
    };
  return (
    j.useEffect(() => {
      const ne = (le) => {
        const he = le.target;
        (M == null ? void 0 : M.contains(he)) && B(le, N);
      };
      return (
        document.addEventListener("wheel", ne, { passive: !1 }),
        () => document.removeEventListener("wheel", ne, { passive: !1 })
      );
    }, [X, M, N, B]),
    j.useEffect(U, [a, U]),
    Da(M, Q),
    Da(z.content, Q),
    q.createElement(
      wT,
      {
        value: {
          scrollbar: M,
          hasThumb: c,
          onThumbChange: Si(h),
          onThumbPointerUp: Si(p),
          onThumbPositionChange: U,
          onThumbPointerDown: Si(v),
        },
      },
      q.createElement(
        "div",
        CT(uy({}, L), {
          ref: G,
          style: uy({ position: "absolute" }, L.style),
          onPointerDown: Li(e.onPointerDown, (ne) => {
            ne.button === 0 &&
              (ne.target.setPointerCapture(ne.pointerId),
              ($.current = M.getBoundingClientRect()),
              (O.current = document.body.style.webkitUserSelect),
              (document.body.style.webkitUserSelect = "none"),
              ee(ne));
          }),
          onPointerMove: Li(e.onPointerMove, ee),
          onPointerUp: Li(e.onPointerUp, (ne) => {
            const le = ne.target;
            le.hasPointerCapture(ne.pointerId) &&
              le.releasePointerCapture(ne.pointerId),
              (document.body.style.webkitUserSelect = O.current),
              ($.current = null);
          }),
        }),
      ),
    )
  );
});
function QS(e, t) {
  const r = e / t;
  return Number.isNaN(r) ? 0 : r;
}
function pd(e) {
  const t = QS(e.viewport, e.content),
    r = e.scrollbar.paddingStart + e.scrollbar.paddingEnd,
    a = (e.scrollbar.size - r) * t;
  return Math.max(a, 18);
}
function JS(e, t) {
  return e > 0 && e < t;
}
function ac(e) {
  return e ? parseInt(e, 10) : 0;
}
var kT = Object.defineProperty,
  AT = Object.defineProperties,
  ET = Object.getOwnPropertyDescriptors,
  oc = Object.getOwnPropertySymbols,
  eP = Object.prototype.hasOwnProperty,
  tP = Object.prototype.propertyIsEnumerable,
  dy = (e, t, r) =>
    t in e
      ? kT(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  hy = (e, t) => {
    for (var r in t || (t = {})) eP.call(t, r) && dy(e, r, t[r]);
    if (oc) for (var r of oc(t)) tP.call(t, r) && dy(e, r, t[r]);
    return e;
  },
  fy = (e, t) => AT(e, ET(t)),
  RT = (e, t) => {
    var r = {};
    for (var a in e) eP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && oc)
      for (var a of oc(e)) t.indexOf(a) < 0 && tP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const LT = j.forwardRef((e, t) => {
  const r = e,
    { sizes: a, onSizesChange: c, style: h } = r,
    p = RT(r, ["sizes", "onSizesChange", "style"]),
    v = Or(),
    [b, P] = j.useState(),
    k = j.useRef(null),
    R = or(t, k, v.onScrollbarXChange);
  return (
    j.useEffect(() => {
      k.current && P(getComputedStyle(k.current));
    }, [k]),
    q.createElement(
      KS,
      fy(hy({ "data-orientation": "horizontal" }, p), {
        ref: R,
        sizes: a,
        style: fy(hy({}, h), { "--sa-thumb-width": `${pd(a)}px` }),
        onThumbPointerDown: (L) => e.onThumbPointerDown(L.x),
        onDragScroll: (L) => e.onDragScroll(L.x),
        onWheelScroll: (L, z) => {
          if (v.viewport) {
            const M = v.viewport.scrollLeft + L.deltaX;
            e.onWheelScroll(M), JS(M, z) && L.preventDefault();
          }
        },
        onResize: () => {
          k.current &&
            v.viewport &&
            b &&
            c({
              content: v.viewport.scrollWidth,
              viewport: v.viewport.offsetWidth,
              scrollbar: {
                size: k.current.clientWidth,
                paddingStart: ac(b.paddingLeft),
                paddingEnd: ac(b.paddingRight),
              },
            });
        },
      }),
    )
  );
});
var TT = Object.defineProperty,
  IT = Object.defineProperties,
  NT = Object.getOwnPropertyDescriptors,
  sc = Object.getOwnPropertySymbols,
  rP = Object.prototype.hasOwnProperty,
  nP = Object.prototype.propertyIsEnumerable,
  py = (e, t, r) =>
    t in e
      ? TT(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  gy = (e, t) => {
    for (var r in t || (t = {})) rP.call(t, r) && py(e, r, t[r]);
    if (sc) for (var r of sc(t)) nP.call(t, r) && py(e, r, t[r]);
    return e;
  },
  MT = (e, t) => IT(e, NT(t)),
  $T = (e, t) => {
    var r = {};
    for (var a in e) rP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && sc)
      for (var a of sc(e)) t.indexOf(a) < 0 && nP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const DT = j.forwardRef((e, t) => {
  const r = e,
    { sizes: a, onSizesChange: c, style: h } = r,
    p = $T(r, ["sizes", "onSizesChange", "style"]),
    v = Or(),
    [b, P] = q.useState(),
    k = j.useRef(null),
    R = or(t, k, v.onScrollbarYChange);
  return (
    j.useEffect(() => {
      k.current && P(getComputedStyle(k.current));
    }, [k]),
    q.createElement(
      KS,
      MT(gy({}, p), {
        "data-orientation": "vertical",
        ref: R,
        sizes: a,
        style: gy({ "--sa-thumb-height": `${pd(a)}px` }, h),
        onThumbPointerDown: (L) => e.onThumbPointerDown(L.y),
        onDragScroll: (L) => e.onDragScroll(L.y),
        onWheelScroll: (L, z) => {
          if (v.viewport) {
            const M = v.viewport.scrollTop + L.deltaY;
            e.onWheelScroll(M), JS(M, z) && L.preventDefault();
          }
        },
        onResize: () => {
          k.current &&
            v.viewport &&
            b &&
            c({
              content: v.viewport.scrollHeight,
              viewport: v.viewport.offsetHeight,
              scrollbar: {
                size: k.current.clientHeight,
                paddingStart: ac(b.paddingTop),
                paddingEnd: ac(b.paddingBottom),
              },
            });
        },
      }),
    )
  );
});
function iP(e, t) {
  return (r) => {
    if (e[0] === e[1] || t[0] === t[1]) return t[0];
    const a = (t[1] - t[0]) / (e[1] - e[0]);
    return t[0] + a * (r - e[0]);
  };
}
function zT(e, [t, r]) {
  return Math.min(r, Math.max(t, e));
}
function my(e, t, r = "ltr") {
  const a = pd(t),
    c = t.scrollbar.paddingStart + t.scrollbar.paddingEnd,
    h = t.scrollbar.size - c,
    p = t.content - t.viewport,
    v = h - a,
    b = r === "ltr" ? [0, p] : [p * -1, 0],
    P = zT(e, b);
  return iP([0, p], [0, v])(P);
}
function FT(e, t, r, a = "ltr") {
  const c = pd(r),
    h = c / 2,
    p = t || h,
    v = c - p,
    b = r.scrollbar.paddingStart + p,
    P = r.scrollbar.size - r.scrollbar.paddingEnd - v,
    k = r.content - r.viewport,
    R = a === "ltr" ? [0, k] : [k * -1, 0];
  return iP([b, P], R)(e);
}
var jT = Object.defineProperty,
  HT = Object.defineProperties,
  XT = Object.getOwnPropertyDescriptors,
  lc = Object.getOwnPropertySymbols,
  aP = Object.prototype.hasOwnProperty,
  oP = Object.prototype.propertyIsEnumerable,
  vy = (e, t, r) =>
    t in e
      ? jT(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Ah = (e, t) => {
    for (var r in t || (t = {})) aP.call(t, r) && vy(e, r, t[r]);
    if (lc) for (var r of lc(t)) oP.call(t, r) && vy(e, r, t[r]);
    return e;
  },
  Eh = (e, t) => HT(e, XT(t)),
  BT = (e, t) => {
    var r = {};
    for (var a in e) aP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && lc)
      for (var a of lc(e)) t.indexOf(a) < 0 && oP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const pg = j.forwardRef((e, t) => {
  const r = e,
    { orientation: a = "vertical" } = r,
    c = BT(r, ["orientation"]),
    { dir: h } = fd(),
    p = Or(),
    v = j.useRef(null),
    b = j.useRef(0),
    [P, k] = j.useState({
      content: 0,
      viewport: 0,
      scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 },
    }),
    R = QS(P.viewport, P.content),
    L = Eh(Ah({}, c), {
      sizes: P,
      onSizesChange: k,
      hasThumb: R > 0 && R < 1,
      onThumbChange: (M) => {
        v.current = M;
      },
      onThumbPointerUp: () => {
        b.current = 0;
      },
      onThumbPointerDown: (M) => {
        b.current = M;
      },
    }),
    z = (M, F) => FT(M, b.current, P, F);
  return a === "horizontal"
    ? q.createElement(
        LT,
        Eh(Ah({}, L), {
          ref: t,
          onThumbPositionChange: () => {
            if (p.viewport && v.current) {
              const M = p.viewport.scrollLeft,
                F = my(M, P, h);
              v.current.style.transform = `translate3d(${F}px, 0, 0)`;
            }
          },
          onWheelScroll: (M) => {
            p.viewport && (p.viewport.scrollLeft = M);
          },
          onDragScroll: (M) => {
            p.viewport && (p.viewport.scrollLeft = z(M, h));
          },
        }),
      )
    : a === "vertical"
    ? q.createElement(
        DT,
        Eh(Ah({}, L), {
          ref: t,
          onThumbPositionChange: () => {
            if (p.viewport && v.current) {
              const M = p.viewport.scrollTop,
                F = my(M, P);
              v.current.style.transform = `translate3d(0, ${F}px, 0)`;
            }
          },
          onWheelScroll: (M) => {
            p.viewport && (p.viewport.scrollTop = M);
          },
          onDragScroll: (M) => {
            p.viewport && (p.viewport.scrollTop = z(M));
          },
        }),
      )
    : null;
});
var YT = Object.defineProperty,
  WT = Object.defineProperties,
  VT = Object.getOwnPropertyDescriptors,
  cc = Object.getOwnPropertySymbols,
  sP = Object.prototype.hasOwnProperty,
  lP = Object.prototype.propertyIsEnumerable,
  yy = (e, t, r) =>
    t in e
      ? YT(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  GT = (e, t) => {
    for (var r in t || (t = {})) sP.call(t, r) && yy(e, r, t[r]);
    if (cc) for (var r of cc(t)) lP.call(t, r) && yy(e, r, t[r]);
    return e;
  },
  UT = (e, t) => WT(e, VT(t)),
  qT = (e, t) => {
    var r = {};
    for (var a in e) sP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && cc)
      for (var a of cc(e)) t.indexOf(a) < 0 && lP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const cP = j.forwardRef((e, t) => {
  const r = Or(),
    a = e,
    { forceMount: c } = a,
    h = qT(a, ["forceMount"]),
    [p, v] = j.useState(!1),
    b = e.orientation === "horizontal",
    P = dd(() => {
      if (r.viewport) {
        const k = r.viewport.offsetWidth < r.viewport.scrollWidth,
          R = r.viewport.offsetHeight < r.viewport.scrollHeight;
        v(b ? k : R);
      }
    }, 10);
  return (
    Da(r.viewport, P),
    Da(r.content, P),
    c || p
      ? q.createElement(
          pg,
          UT(GT({ "data-state": p ? "visible" : "hidden" }, h), { ref: t }),
        )
      : null
  );
});
var ZT = Object.defineProperty,
  KT = Object.defineProperties,
  QT = Object.getOwnPropertyDescriptors,
  uc = Object.getOwnPropertySymbols,
  uP = Object.prototype.hasOwnProperty,
  dP = Object.prototype.propertyIsEnumerable,
  xy = (e, t, r) =>
    t in e
      ? ZT(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  JT = (e, t) => {
    for (var r in t || (t = {})) uP.call(t, r) && xy(e, r, t[r]);
    if (uc) for (var r of uc(t)) dP.call(t, r) && xy(e, r, t[r]);
    return e;
  },
  eI = (e, t) => KT(e, QT(t)),
  tI = (e, t) => {
    var r = {};
    for (var a in e) uP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && uc)
      for (var a of uc(e)) t.indexOf(a) < 0 && dP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const rI = j.forwardRef((e, t) => {
  const r = e,
    { forceMount: a } = r,
    c = tI(r, ["forceMount"]),
    h = Or(),
    [p, v] = j.useState(!1);
  return (
    j.useEffect(() => {
      const { scrollArea: b } = h;
      let P = 0;
      if (b) {
        const k = () => {
            window.clearTimeout(P), v(!0);
          },
          R = () => {
            P = window.setTimeout(() => v(!1), h.scrollHideDelay);
          };
        return (
          b.addEventListener("pointerenter", k),
          b.addEventListener("pointerleave", R),
          () => {
            window.clearTimeout(P),
              b.removeEventListener("pointerenter", k),
              b.removeEventListener("pointerleave", R);
          }
        );
      }
    }, [h.scrollArea, h.scrollHideDelay]),
    a || p
      ? q.createElement(
          cP,
          eI(JT({ "data-state": p ? "visible" : "hidden" }, c), { ref: t }),
        )
      : null
  );
});
var nI = Object.defineProperty,
  iI = Object.defineProperties,
  aI = Object.getOwnPropertyDescriptors,
  dc = Object.getOwnPropertySymbols,
  hP = Object.prototype.hasOwnProperty,
  fP = Object.prototype.propertyIsEnumerable,
  by = (e, t, r) =>
    t in e
      ? nI(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  oI = (e, t) => {
    for (var r in t || (t = {})) hP.call(t, r) && by(e, r, t[r]);
    if (dc) for (var r of dc(t)) fP.call(t, r) && by(e, r, t[r]);
    return e;
  },
  sI = (e, t) => iI(e, aI(t)),
  lI = (e, t) => {
    var r = {};
    for (var a in e) hP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && dc)
      for (var a of dc(e)) t.indexOf(a) < 0 && fP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const cI = j.forwardRef((e, t) => {
  const r = e,
    { forceMount: a } = r,
    c = lI(r, ["forceMount"]),
    h = Or(),
    p = e.orientation === "horizontal",
    [v, b] = j.useState("hidden"),
    P = dd(() => b("idle"), 100);
  return (
    j.useEffect(() => {
      if (v === "idle") {
        const k = window.setTimeout(() => b("hidden"), h.scrollHideDelay);
        return () => window.clearTimeout(k);
      }
    }, [v, h.scrollHideDelay]),
    j.useEffect(() => {
      const { viewport: k } = h,
        R = p ? "scrollLeft" : "scrollTop";
      if (k) {
        let L = k[R];
        const z = () => {
          const M = k[R];
          L !== M && (b("scrolling"), P()), (L = M);
        };
        return (
          k.addEventListener("scroll", z),
          () => k.removeEventListener("scroll", z)
        );
      }
    }, [h.viewport, p, P]),
    a || v !== "hidden"
      ? q.createElement(
          pg,
          sI(oI({ "data-state": v === "hidden" ? "hidden" : "visible" }, c), {
            ref: t,
            onPointerEnter: Li(e.onPointerEnter, () => b("interacting")),
            onPointerLeave: Li(e.onPointerLeave, () => b("idle")),
          }),
        )
      : null
  );
});
var uI = Object.defineProperty,
  dI = Object.defineProperties,
  hI = Object.getOwnPropertyDescriptors,
  hc = Object.getOwnPropertySymbols,
  pP = Object.prototype.hasOwnProperty,
  gP = Object.prototype.propertyIsEnumerable,
  wy = (e, t, r) =>
    t in e
      ? uI(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Zs = (e, t) => {
    for (var r in t || (t = {})) pP.call(t, r) && wy(e, r, t[r]);
    if (hc) for (var r of hc(t)) gP.call(t, r) && wy(e, r, t[r]);
    return e;
  },
  Ks = (e, t) => dI(e, hI(t)),
  fI = (e, t) => {
    var r = {};
    for (var a in e) pP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && hc)
      for (var a of hc(e)) t.indexOf(a) < 0 && gP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Sy = q.forwardRef((e, t) => {
  const r = e,
    { forceMount: a } = r,
    c = fI(r, ["forceMount"]),
    h = Or(),
    { onScrollbarXEnabledChange: p, onScrollbarYEnabledChange: v } = h,
    b = e.orientation === "horizontal";
  return (
    q.useEffect(
      () => (
        b ? p(!0) : v(!0),
        () => {
          b ? p(!1) : v(!1);
        }
      ),
      [b, p, v],
    ),
    h.type === "hover"
      ? q.createElement(rI, Ks(Zs({}, c), { ref: t, forceMount: a }))
      : h.type === "scroll"
      ? q.createElement(cI, Ks(Zs({}, c), { ref: t, forceMount: a }))
      : h.type === "auto"
      ? q.createElement(cP, Ks(Zs({}, c), { ref: t, forceMount: a }))
      : h.type === "always"
      ? q.createElement(pg, Ks(Zs({}, c), { ref: t }))
      : null
  );
});
var pI = Object.defineProperty,
  gI = Object.defineProperties,
  mI = Object.getOwnPropertyDescriptors,
  fc = Object.getOwnPropertySymbols,
  mP = Object.prototype.hasOwnProperty,
  vP = Object.prototype.propertyIsEnumerable,
  Py = (e, t, r) =>
    t in e
      ? pI(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Gf = (e, t) => {
    for (var r in t || (t = {})) mP.call(t, r) && Py(e, r, t[r]);
    if (fc) for (var r of fc(t)) vP.call(t, r) && Py(e, r, t[r]);
    return e;
  },
  Uf = (e, t) => gI(e, mI(t)),
  vI = (e, t) => {
    var r = {};
    for (var a in e) mP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && fc)
      for (var a of fc(e)) t.indexOf(a) < 0 && vP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const yI = q.forwardRef((e, t) => {
    const r = e,
      { style: a } = r,
      c = vI(r, ["style"]),
      h = Or(),
      [p, v] = q.useState(0),
      [b, P] = q.useState(0),
      k = !!(p && b);
    return (
      Da(h.scrollbarX, () => {
        var R;
        const L = ((R = h.scrollbarX) == null ? void 0 : R.offsetHeight) || 0;
        h.onCornerHeightChange(L), P(L);
      }),
      Da(h.scrollbarY, () => {
        var R;
        const L = ((R = h.scrollbarY) == null ? void 0 : R.offsetWidth) || 0;
        h.onCornerWidthChange(L), v(L);
      }),
      k
        ? q.createElement(
            "div",
            Uf(Gf({}, c), {
              ref: t,
              style: Uf(Gf({}, a), { width: p, height: b }),
            }),
          )
        : null
    );
  }),
  xI = q.forwardRef((e, t) => {
    const r = Or(),
      a = !!(r.scrollbarX && r.scrollbarY);
    return r.type !== "scroll" && a
      ? q.createElement(yI, Uf(Gf({}, e), { ref: t }))
      : null;
  });
var bI = Object.defineProperty,
  wI = Object.defineProperties,
  SI = Object.getOwnPropertyDescriptors,
  pc = Object.getOwnPropertySymbols,
  yP = Object.prototype.hasOwnProperty,
  xP = Object.prototype.propertyIsEnumerable,
  _y = (e, t, r) =>
    t in e
      ? bI(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  PI = (e, t) => {
    for (var r in t || (t = {})) yP.call(t, r) && _y(e, r, t[r]);
    if (pc) for (var r of pc(t)) xP.call(t, r) && _y(e, r, t[r]);
    return e;
  },
  _I = (e, t) => wI(e, SI(t)),
  CI = (e, t) => {
    var r = {};
    for (var a in e) yP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && pc)
      for (var a of pc(e)) t.indexOf(a) < 0 && xP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const OI = { scrollHideDelay: 1e3, type: "hover" },
  bP = j.forwardRef((e, t) => {
    const a = Pe("ScrollAreaRoot", OI, e),
      { type: c, scrollHideDelay: h } = a,
      p = CI(a, ["type", "scrollHideDelay"]),
      [v, b] = j.useState(null),
      [P, k] = j.useState(null),
      [R, L] = j.useState(null),
      [z, M] = j.useState(null),
      [F, G] = j.useState(null),
      [$, O] = j.useState(0),
      [X, N] = j.useState(0),
      [B, U] = j.useState(!1),
      [Q, ee] = j.useState(!1),
      ne = or(t, (le) => b(le));
    return q.createElement(
      bT,
      {
        value: {
          type: c,
          scrollHideDelay: h,
          scrollArea: v,
          viewport: P,
          onViewportChange: k,
          content: R,
          onContentChange: L,
          scrollbarX: z,
          onScrollbarXChange: M,
          scrollbarXEnabled: B,
          onScrollbarXEnabledChange: U,
          scrollbarY: F,
          onScrollbarYChange: G,
          scrollbarYEnabled: Q,
          onScrollbarYEnabledChange: ee,
          onCornerWidthChange: O,
          onCornerHeightChange: N,
        },
      },
      q.createElement(
        Te,
        _I(PI({}, p), {
          ref: ne,
          __vars: {
            "--sa-corner-width": `${$}px`,
            "--sa-corner-height": `${X}px`,
          },
        }),
      ),
    );
  });
bP.displayName = "@mantine/core/ScrollAreaRoot";
var kI = Object.defineProperty,
  AI = Object.defineProperties,
  EI = Object.getOwnPropertyDescriptors,
  gc = Object.getOwnPropertySymbols,
  wP = Object.prototype.hasOwnProperty,
  SP = Object.prototype.propertyIsEnumerable,
  Cy = (e, t, r) =>
    t in e
      ? kI(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Oy = (e, t) => {
    for (var r in t || (t = {})) wP.call(t, r) && Cy(e, r, t[r]);
    if (gc) for (var r of gc(t)) SP.call(t, r) && Cy(e, r, t[r]);
    return e;
  },
  RI = (e, t) => AI(e, EI(t)),
  LI = (e, t) => {
    var r = {};
    for (var a in e) wP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && gc)
      for (var a of gc(e)) t.indexOf(a) < 0 && SP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const PP = j.forwardRef((e, t) => {
  var r = e,
    { children: a, style: c } = r,
    h = LI(r, ["children", "style"]);
  const p = Or(),
    v = or(t, p.onViewportChange);
  return q.createElement(
    Te,
    RI(Oy({}, h), {
      ref: v,
      style: Oy(
        {
          overflowX: p.scrollbarXEnabled ? "scroll" : "hidden",
          overflowY: p.scrollbarYEnabled ? "scroll" : "hidden",
        },
        c,
      ),
    }),
    q.createElement(
      "div",
      { style: { minWidth: "100%", display: "table" }, ref: p.onContentChange },
      a,
    ),
  );
});
PP.displayName = "@mantine/core/ScrollAreaViewport";
var TI = {
  root: "m-d57069b5",
  viewport: "m-c0783ff9",
  viewportInner: "m-f8f631dd",
  scrollbar: "m-c44ba933",
  thumb: "m-d8b5e363",
  corner: "m-21657268",
};
const gg = TI;
function II(e, t = () => {}) {
  let r = { left: e.scrollLeft, top: e.scrollTop },
    a = 0;
  return (
    (function c() {
      const h = { left: e.scrollLeft, top: e.scrollTop },
        p = r.left !== h.left,
        v = r.top !== h.top;
      (p || v) && t(), (r = h), (a = window.requestAnimationFrame(c));
    })(),
    () => window.cancelAnimationFrame(a)
  );
}
var NI = Object.defineProperty,
  MI = Object.defineProperties,
  $I = Object.getOwnPropertyDescriptors,
  mc = Object.getOwnPropertySymbols,
  _P = Object.prototype.hasOwnProperty,
  CP = Object.prototype.propertyIsEnumerable,
  ky = (e, t, r) =>
    t in e
      ? NI(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  qf = (e, t) => {
    for (var r in t || (t = {})) _P.call(t, r) && ky(e, r, t[r]);
    if (mc) for (var r of mc(t)) CP.call(t, r) && ky(e, r, t[r]);
    return e;
  },
  DI = (e, t) => MI(e, $I(t)),
  OP = (e, t) => {
    var r = {};
    for (var a in e) _P.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && mc)
      for (var a of mc(e)) t.indexOf(a) < 0 && CP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const zI = j.forwardRef((e, t) => {
    const r = e,
      { style: a } = r,
      c = OP(r, ["style"]),
      h = Or(),
      p = US(),
      { onThumbPositionChange: v } = p,
      b = or(t, (R) => p.onThumbChange(R)),
      P = j.useRef(),
      k = dd(() => {
        P.current && (P.current(), (P.current = void 0));
      }, 100);
    return (
      j.useEffect(() => {
        const { viewport: R } = h;
        if (R) {
          const L = () => {
            if ((k(), !P.current)) {
              const z = II(R, v);
              (P.current = z), v();
            }
          };
          return (
            v(),
            R.addEventListener("scroll", L),
            () => R.removeEventListener("scroll", L)
          );
        }
      }, [h.viewport, k, v]),
      q.createElement(
        "div",
        DI(qf({ "data-state": p.hasThumb ? "visible" : "hidden" }, c), {
          ref: b,
          style: qf(
            {
              width: "var(--sa-thumb-width)",
              height: "var(--sa-thumb-height)",
            },
            a,
          ),
          onPointerDownCapture: Li(e.onPointerDownCapture, (R) => {
            const z = R.target.getBoundingClientRect(),
              M = R.clientX - z.left,
              F = R.clientY - z.top;
            p.onThumbPointerDown({ x: M, y: F });
          }),
          onPointerUp: Li(e.onPointerUp, p.onThumbPointerUp),
        }),
      )
    );
  }),
  Ay = q.forwardRef((e, t) => {
    const r = e,
      { forceMount: a } = r,
      c = OP(r, ["forceMount"]),
      h = US();
    return a || h.hasThumb ? q.createElement(zI, qf({ ref: t }, c)) : null;
  });
var FI = Object.defineProperty,
  jI = Object.defineProperties,
  HI = Object.getOwnPropertyDescriptors,
  vc = Object.getOwnPropertySymbols,
  kP = Object.prototype.hasOwnProperty,
  AP = Object.prototype.propertyIsEnumerable,
  Ey = (e, t, r) =>
    t in e
      ? FI(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Qr = (e, t) => {
    for (var r in t || (t = {})) kP.call(t, r) && Ey(e, r, t[r]);
    if (vc) for (var r of vc(t)) AP.call(t, r) && Ey(e, r, t[r]);
    return e;
  },
  ko = (e, t) => jI(e, HI(t)),
  EP = (e, t) => {
    var r = {};
    for (var a in e) kP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && vc)
      for (var a of vc(e)) t.indexOf(a) < 0 && AP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const RP = { scrollHideDelay: 1e3, type: "hover" },
  XI = (e, { scrollbarSize: t }) => ({
    root: { "--scrollarea-scrollbar-size": ae(t) },
  }),
  hs = Ne((e, t) => {
    const r = Pe("ScrollArea", RP, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        scrollbarSize: P,
        vars: k,
        type: R,
        scrollHideDelay: L,
        viewportProps: z,
        viewportRef: M,
        onScrollPositionChange: F,
        children: G,
        offsetScrollbars: $,
      } = a,
      O = EP(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "scrollbarSize",
        "vars",
        "type",
        "scrollHideDelay",
        "viewportProps",
        "viewportRef",
        "onScrollPositionChange",
        "children",
        "offsetScrollbars",
      ]),
      [X, N] = j.useState(!1),
      B = Ke({
        name: "ScrollArea",
        props: r,
        classes: gg,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        vars: k,
        varsResolver: XI,
      });
    return q.createElement(
      bP,
      Qr(
        Qr(
          { type: R === "never" ? "always" : R, scrollHideDelay: L, ref: t },
          B("root"),
        ),
        O,
      ),
      q.createElement(
        PP,
        ko(Qr(Qr({}, z), B("viewport")), {
          ref: M,
          "data-offset-scrollbars": $ === !0 ? "xy" : $ || void 0,
          onScroll:
            typeof F == "function"
              ? ({ currentTarget: U }) => F({ x: U.scrollLeft, y: U.scrollTop })
              : void 0,
        }),
        G,
      ),
      q.createElement(
        Sy,
        ko(Qr({}, B("scrollbar")), {
          orientation: "horizontal",
          "data-hidden": R === "never" || void 0,
          forceMount: !0,
          onMouseEnter: () => N(!0),
          onMouseLeave: () => N(!1),
        }),
        q.createElement(Ay, Qr({}, B("thumb"))),
      ),
      q.createElement(
        Sy,
        ko(Qr({}, B("scrollbar")), {
          orientation: "vertical",
          "data-hidden": R === "never" || void 0,
          forceMount: !0,
          onMouseEnter: () => N(!0),
          onMouseLeave: () => N(!1),
        }),
        q.createElement(Ay, Qr({}, B("thumb"))),
      ),
      q.createElement(
        xI,
        ko(Qr({}, B("corner")), {
          "data-hovered": X || void 0,
          "data-hidden": R === "never" || void 0,
        }),
      ),
    );
  });
hs.displayName = "@mantine/core/ScrollArea";
const mg = Ne((e, t) => {
  const r = Pe("ScrollAreaAutosize", RP, e),
    {
      children: a,
      classNames: c,
      styles: h,
      scrollbarSize: p,
      scrollHideDelay: v,
      type: b,
      dir: P,
      offsetScrollbars: k,
      viewportRef: R,
      onScrollPositionChange: L,
      unstyled: z,
      variant: M,
      viewportProps: F,
      style: G,
      vars: $,
    } = r,
    O = EP(r, [
      "children",
      "classNames",
      "styles",
      "scrollbarSize",
      "scrollHideDelay",
      "type",
      "dir",
      "offsetScrollbars",
      "viewportRef",
      "onScrollPositionChange",
      "unstyled",
      "variant",
      "viewportProps",
      "style",
      "vars",
    ]);
  return q.createElement(
    Te,
    ko(Qr({}, O), { ref: t, style: [{ display: "flex" }, G] }),
    q.createElement(
      Te,
      { style: { display: "flex", flexDirection: "column", flex: 1 } },
      q.createElement(
        hs,
        {
          classNames: c,
          styles: h,
          scrollHideDelay: v,
          scrollbarSize: p,
          type: b,
          dir: P,
          offsetScrollbars: k,
          viewportRef: R,
          onScrollPositionChange: L,
          unstyled: z,
          variant: M,
          viewportProps: F,
          vars: $,
        },
        a,
      ),
    ),
  );
});
hs.classes = gg;
mg.displayName = "@mantine/core/ScrollAreaAutosize";
mg.classes = gg;
hs.Autosize = mg;
var BI = { root: "m-87cf2631" };
const LP = BI;
var YI = Object.defineProperty,
  WI = Object.defineProperties,
  VI = Object.getOwnPropertyDescriptors,
  yc = Object.getOwnPropertySymbols,
  TP = Object.prototype.hasOwnProperty,
  IP = Object.prototype.propertyIsEnumerable,
  Ry = (e, t, r) =>
    t in e
      ? YI(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Ly = (e, t) => {
    for (var r in t || (t = {})) TP.call(t, r) && Ry(e, r, t[r]);
    if (yc) for (var r of yc(t)) IP.call(t, r) && Ry(e, r, t[r]);
    return e;
  },
  GI = (e, t) => WI(e, VI(t)),
  UI = (e, t) => {
    var r = {};
    for (var a in e) TP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && yc)
      for (var a of yc(e)) t.indexOf(a) < 0 && IP.call(e, a) && (r[a] = e[a]);
    return r;
  };
const qI = { __staticSelector: "UnstyledButton" },
  fs = Cr((e, t) => {
    const r = Pe("UnstyledButton", qI, e),
      a = r,
      {
        className: c,
        component: h = "button",
        __staticSelector: p,
        unstyled: v,
        classNames: b,
        styles: P,
        style: k,
      } = a,
      R = UI(a, [
        "className",
        "component",
        "__staticSelector",
        "unstyled",
        "classNames",
        "styles",
        "style",
      ]),
      L = Ke({
        name: p,
        props: r,
        classes: LP,
        className: c,
        style: k,
        classNames: b,
        styles: P,
        unstyled: v,
      });
    return q.createElement(
      Te,
      Ly(
        GI(Ly({}, L("root", { focusable: !0 })), {
          component: h,
          ref: t,
          type: h === "button" ? "button" : void 0,
        }),
        R,
      ),
    );
  });
fs.classes = LP;
fs.displayName = "@mantine/core/UnstyledButton";
var ZI = { root: "m-1b7284a3" };
const NP = ZI;
var KI = Object.defineProperty,
  QI = Object.defineProperties,
  JI = Object.getOwnPropertyDescriptors,
  xc = Object.getOwnPropertySymbols,
  MP = Object.prototype.hasOwnProperty,
  $P = Object.prototype.propertyIsEnumerable,
  Ty = (e, t, r) =>
    t in e
      ? KI(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Iy = (e, t) => {
    for (var r in t || (t = {})) MP.call(t, r) && Ty(e, r, t[r]);
    if (xc) for (var r of xc(t)) $P.call(t, r) && Ty(e, r, t[r]);
    return e;
  },
  eN = (e, t) => QI(e, JI(t)),
  tN = (e, t) => {
    var r = {};
    for (var a in e) MP.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && xc)
      for (var a of xc(e)) t.indexOf(a) < 0 && $P.call(e, a) && (r[a] = e[a]);
    return r;
  };
const rN = {},
  nN = (e, { radius: t, shadow: r }) => ({
    root: {
      "--paper-radius": t === void 0 ? void 0 : ln(t),
      "--paper-shadow": lg(r),
    },
  }),
  ps = Cr((e, t) => {
    const r = Pe("Paper", rN, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        withBorder: P,
        vars: k,
        radius: R,
        shadow: L,
        variant: z,
      } = a,
      M = tN(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "withBorder",
        "vars",
        "radius",
        "shadow",
        "variant",
      ]),
      F = Ke({
        name: "Paper",
        props: r,
        classes: NP,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        vars: k,
        varsResolver: nN,
      });
    return q.createElement(
      Te,
      Iy(
        eN(Iy({ ref: t, mod: { "data-with-border": P } }, F("root")), {
          variant: z,
        }),
        M,
      ),
    );
  });
ps.classes = NP;
ps.displayName = "@mantine/core/Paper";
const Wr = Math.min,
  jt = Math.max,
  bc = Math.round,
  Qs = Math.floor,
  oi = (e) => ({ x: e, y: e }),
  iN = { left: "right", right: "left", bottom: "top", top: "bottom" },
  aN = { start: "end", end: "start" };
function Zf(e, t, r) {
  return jt(e, Wr(t, r));
}
function kn(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function Vr(e) {
  return e.split("-")[0];
}
function Ga(e) {
  return e.split("-")[1];
}
function vg(e) {
  return e === "x" ? "y" : "x";
}
function yg(e) {
  return e === "y" ? "height" : "width";
}
function Gi(e) {
  return ["top", "bottom"].includes(Vr(e)) ? "y" : "x";
}
function xg(e) {
  return vg(Gi(e));
}
function oN(e, t, r) {
  r === void 0 && (r = !1);
  const a = Ga(e),
    c = xg(e),
    h = yg(c);
  let p =
    c === "x"
      ? a === (r ? "end" : "start")
        ? "right"
        : "left"
      : a === "start"
      ? "bottom"
      : "top";
  return t.reference[h] > t.floating[h] && (p = wc(p)), [p, wc(p)];
}
function sN(e) {
  const t = wc(e);
  return [Kf(e), t, Kf(t)];
}
function Kf(e) {
  return e.replace(/start|end/g, (t) => aN[t]);
}
function lN(e, t, r) {
  const a = ["left", "right"],
    c = ["right", "left"],
    h = ["top", "bottom"],
    p = ["bottom", "top"];
  switch (e) {
    case "top":
    case "bottom":
      return r ? (t ? c : a) : t ? a : c;
    case "left":
    case "right":
      return t ? h : p;
    default:
      return [];
  }
}
function cN(e, t, r, a) {
  const c = Ga(e);
  let h = lN(Vr(e), r === "start", a);
  return (
    c && ((h = h.map((p) => p + "-" + c)), t && (h = h.concat(h.map(Kf)))), h
  );
}
function wc(e) {
  return e.replace(/left|right|bottom|top/g, (t) => iN[t]);
}
function uN(e) {
  return { top: 0, right: 0, bottom: 0, left: 0, ...e };
}
function bg(e) {
  return typeof e != "number"
    ? uN(e)
    : { top: e, right: e, bottom: e, left: e };
}
function za(e) {
  return {
    ...e,
    top: e.y,
    left: e.x,
    right: e.x + e.width,
    bottom: e.y + e.height,
  };
}
function Ny(e, t, r) {
  let { reference: a, floating: c } = e;
  const h = Gi(t),
    p = xg(t),
    v = yg(p),
    b = Vr(t),
    P = h === "y",
    k = a.x + a.width / 2 - c.width / 2,
    R = a.y + a.height / 2 - c.height / 2,
    L = a[v] / 2 - c[v] / 2;
  let z;
  switch (b) {
    case "top":
      z = { x: k, y: a.y - c.height };
      break;
    case "bottom":
      z = { x: k, y: a.y + a.height };
      break;
    case "right":
      z = { x: a.x + a.width, y: R };
      break;
    case "left":
      z = { x: a.x - c.width, y: R };
      break;
    default:
      z = { x: a.x, y: a.y };
  }
  switch (Ga(t)) {
    case "start":
      z[p] -= L * (r && P ? -1 : 1);
      break;
    case "end":
      z[p] += L * (r && P ? -1 : 1);
      break;
  }
  return z;
}
const dN = async (e, t, r) => {
  const {
      placement: a = "bottom",
      strategy: c = "absolute",
      middleware: h = [],
      platform: p,
    } = r,
    v = h.filter(Boolean),
    b = await (p.isRTL == null ? void 0 : p.isRTL(t));
  let P = await p.getElementRects({ reference: e, floating: t, strategy: c }),
    { x: k, y: R } = Ny(P, a, b),
    L = a,
    z = {},
    M = 0;
  for (let F = 0; F < v.length; F++) {
    const { name: G, fn: $ } = v[F],
      {
        x: O,
        y: X,
        data: N,
        reset: B,
      } = await $({
        x: k,
        y: R,
        initialPlacement: a,
        placement: L,
        strategy: c,
        middlewareData: z,
        rects: P,
        platform: p,
        elements: { reference: e, floating: t },
      });
    if (
      ((k = O ?? k),
      (R = X ?? R),
      (z = { ...z, [G]: { ...z[G], ...N } }),
      B && M <= 50)
    ) {
      M++,
        typeof B == "object" &&
          (B.placement && (L = B.placement),
          B.rects &&
            (P =
              B.rects === !0
                ? await p.getElementRects({
                    reference: e,
                    floating: t,
                    strategy: c,
                  })
                : B.rects),
          ({ x: k, y: R } = Ny(P, L, b))),
        (F = -1);
      continue;
    }
  }
  return { x: k, y: R, placement: L, strategy: c, middlewareData: z };
};
async function wg(e, t) {
  var r;
  t === void 0 && (t = {});
  const { x: a, y: c, platform: h, rects: p, elements: v, strategy: b } = e,
    {
      boundary: P = "clippingAncestors",
      rootBoundary: k = "viewport",
      elementContext: R = "floating",
      altBoundary: L = !1,
      padding: z = 0,
    } = kn(t, e),
    M = bg(z),
    G = v[L ? (R === "floating" ? "reference" : "floating") : R],
    $ = za(
      await h.getClippingRect({
        element:
          (r = await (h.isElement == null ? void 0 : h.isElement(G))) == null ||
          r
            ? G
            : G.contextElement ||
              (await (h.getDocumentElement == null
                ? void 0
                : h.getDocumentElement(v.floating))),
        boundary: P,
        rootBoundary: k,
        strategy: b,
      }),
    ),
    O = R === "floating" ? { ...p.floating, x: a, y: c } : p.reference,
    X = await (h.getOffsetParent == null
      ? void 0
      : h.getOffsetParent(v.floating)),
    N = (await (h.isElement == null ? void 0 : h.isElement(X)))
      ? (await (h.getScale == null ? void 0 : h.getScale(X))) || { x: 1, y: 1 }
      : { x: 1, y: 1 },
    B = za(
      h.convertOffsetParentRelativeRectToViewportRelativeRect
        ? await h.convertOffsetParentRelativeRectToViewportRelativeRect({
            rect: O,
            offsetParent: X,
            strategy: b,
          })
        : O,
    );
  return {
    top: ($.top - B.top + M.top) / N.y,
    bottom: (B.bottom - $.bottom + M.bottom) / N.y,
    left: ($.left - B.left + M.left) / N.x,
    right: (B.right - $.right + M.right) / N.x,
  };
}
const My = (e) => ({
    name: "arrow",
    options: e,
    async fn(t) {
      const {
          x: r,
          y: a,
          placement: c,
          rects: h,
          platform: p,
          elements: v,
          middlewareData: b,
        } = t,
        { element: P, padding: k = 0 } = kn(e, t) || {};
      if (P == null) return {};
      const R = bg(k),
        L = { x: r, y: a },
        z = xg(c),
        M = yg(z),
        F = await p.getDimensions(P),
        G = z === "y",
        $ = G ? "top" : "left",
        O = G ? "bottom" : "right",
        X = G ? "clientHeight" : "clientWidth",
        N = h.reference[M] + h.reference[z] - L[z] - h.floating[M],
        B = L[z] - h.reference[z],
        U = await (p.getOffsetParent == null ? void 0 : p.getOffsetParent(P));
      let Q = U ? U[X] : 0;
      (!Q || !(await (p.isElement == null ? void 0 : p.isElement(U)))) &&
        (Q = v.floating[X] || h.floating[M]);
      const ee = N / 2 - B / 2,
        ne = Q / 2 - F[M] / 2 - 1,
        le = Wr(R[$], ne),
        he = Wr(R[O], ne),
        me = le,
        fe = Q - F[M] - he,
        ue = Q / 2 - F[M] / 2 + ee,
        oe = Zf(me, ue, fe),
        ve =
          !b.arrow &&
          Ga(c) != null &&
          ue != oe &&
          h.reference[M] / 2 - (ue < me ? le : he) - F[M] / 2 < 0,
        ye = ve ? (ue < me ? ue - me : ue - fe) : 0;
      return {
        [z]: L[z] + ye,
        data: {
          [z]: oe,
          centerOffset: ue - oe - ye,
          ...(ve && { alignmentOffset: ye }),
        },
        reset: ve,
      };
    },
  }),
  DP = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        name: "flip",
        options: e,
        async fn(t) {
          var r, a;
          const {
              placement: c,
              middlewareData: h,
              rects: p,
              initialPlacement: v,
              platform: b,
              elements: P,
            } = t,
            {
              mainAxis: k = !0,
              crossAxis: R = !0,
              fallbackPlacements: L,
              fallbackStrategy: z = "bestFit",
              fallbackAxisSideDirection: M = "none",
              flipAlignment: F = !0,
              ...G
            } = kn(e, t);
          if ((r = h.arrow) != null && r.alignmentOffset) return {};
          const $ = Vr(c),
            O = Vr(v) === v,
            X = await (b.isRTL == null ? void 0 : b.isRTL(P.floating)),
            N = L || (O || !F ? [wc(v)] : sN(v));
          !L && M !== "none" && N.push(...cN(v, F, M, X));
          const B = [v, ...N],
            U = await wg(t, G),
            Q = [];
          let ee = ((a = h.flip) == null ? void 0 : a.overflows) || [];
          if ((k && Q.push(U[$]), R)) {
            const me = oN(c, p, X);
            Q.push(U[me[0]], U[me[1]]);
          }
          if (
            ((ee = [...ee, { placement: c, overflows: Q }]),
            !Q.every((me) => me <= 0))
          ) {
            var ne, le;
            const me = (((ne = h.flip) == null ? void 0 : ne.index) || 0) + 1,
              fe = B[me];
            if (fe)
              return {
                data: { index: me, overflows: ee },
                reset: { placement: fe },
              };
            let ue =
              (le = ee
                .filter((oe) => oe.overflows[0] <= 0)
                .sort((oe, ve) => oe.overflows[1] - ve.overflows[1])[0]) == null
                ? void 0
                : le.placement;
            if (!ue)
              switch (z) {
                case "bestFit": {
                  var he;
                  const oe =
                    (he = ee
                      .map((ve) => [
                        ve.placement,
                        ve.overflows
                          .filter((ye) => ye > 0)
                          .reduce((ye, te) => ye + te, 0),
                      ])
                      .sort((ve, ye) => ve[1] - ye[1])[0]) == null
                      ? void 0
                      : he[0];
                  oe && (ue = oe);
                  break;
                }
                case "initialPlacement":
                  ue = v;
                  break;
              }
            if (c !== ue) return { reset: { placement: ue } };
          }
          return {};
        },
      }
    );
  };
function zP(e) {
  const t = Wr(...e.map((h) => h.left)),
    r = Wr(...e.map((h) => h.top)),
    a = jt(...e.map((h) => h.right)),
    c = jt(...e.map((h) => h.bottom));
  return { x: t, y: r, width: a - t, height: c - r };
}
function hN(e) {
  const t = e.slice().sort((c, h) => c.y - h.y),
    r = [];
  let a = null;
  for (let c = 0; c < t.length; c++) {
    const h = t[c];
    !a || h.y - a.y > a.height / 2 ? r.push([h]) : r[r.length - 1].push(h),
      (a = h);
  }
  return r.map((c) => za(zP(c)));
}
const FP = function (e) {
  return (
    e === void 0 && (e = {}),
    {
      name: "inline",
      options: e,
      async fn(t) {
        const {
            placement: r,
            elements: a,
            rects: c,
            platform: h,
            strategy: p,
          } = t,
          { padding: v = 2, x: b, y: P } = kn(e, t),
          k = Array.from(
            (await (h.getClientRects == null
              ? void 0
              : h.getClientRects(a.reference))) || [],
          ),
          R = hN(k),
          L = za(zP(k)),
          z = bg(v);
        function M() {
          if (
            R.length === 2 &&
            R[0].left > R[1].right &&
            b != null &&
            P != null
          )
            return (
              R.find(
                (G) =>
                  b > G.left - z.left &&
                  b < G.right + z.right &&
                  P > G.top - z.top &&
                  P < G.bottom + z.bottom,
              ) || L
            );
          if (R.length >= 2) {
            if (Gi(r) === "y") {
              const le = R[0],
                he = R[R.length - 1],
                me = Vr(r) === "top",
                fe = le.top,
                ue = he.bottom,
                oe = me ? le.left : he.left,
                ve = me ? le.right : he.right,
                ye = ve - oe,
                te = ue - fe;
              return {
                top: fe,
                bottom: ue,
                left: oe,
                right: ve,
                width: ye,
                height: te,
                x: oe,
                y: fe,
              };
            }
            const G = Vr(r) === "left",
              $ = jt(...R.map((le) => le.right)),
              O = Wr(...R.map((le) => le.left)),
              X = R.filter((le) => (G ? le.left === O : le.right === $)),
              N = X[0].top,
              B = X[X.length - 1].bottom,
              U = O,
              Q = $,
              ee = Q - U,
              ne = B - N;
            return {
              top: N,
              bottom: B,
              left: U,
              right: Q,
              width: ee,
              height: ne,
              x: U,
              y: N,
            };
          }
          return L;
        }
        const F = await h.getElementRects({
          reference: { getBoundingClientRect: M },
          floating: a.floating,
          strategy: p,
        });
        return c.reference.x !== F.reference.x ||
          c.reference.y !== F.reference.y ||
          c.reference.width !== F.reference.width ||
          c.reference.height !== F.reference.height
          ? { reset: { rects: F } }
          : {};
      },
    }
  );
};
async function fN(e, t) {
  const { placement: r, platform: a, elements: c } = e,
    h = await (a.isRTL == null ? void 0 : a.isRTL(c.floating)),
    p = Vr(r),
    v = Ga(r),
    b = Gi(r) === "y",
    P = ["left", "top"].includes(p) ? -1 : 1,
    k = h && b ? -1 : 1,
    R = kn(t, e);
  let {
    mainAxis: L,
    crossAxis: z,
    alignmentAxis: M,
  } = typeof R == "number"
    ? { mainAxis: R, crossAxis: 0, alignmentAxis: null }
    : { mainAxis: 0, crossAxis: 0, alignmentAxis: null, ...R };
  return (
    v && typeof M == "number" && (z = v === "end" ? M * -1 : M),
    b ? { x: z * k, y: L * P } : { x: L * P, y: z * k }
  );
}
const jP = function (e) {
    return (
      e === void 0 && (e = 0),
      {
        name: "offset",
        options: e,
        async fn(t) {
          const { x: r, y: a } = t,
            c = await fN(t, e);
          return { x: r + c.x, y: a + c.y, data: c };
        },
      }
    );
  },
  Sg = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        name: "shift",
        options: e,
        async fn(t) {
          const { x: r, y: a, placement: c } = t,
            {
              mainAxis: h = !0,
              crossAxis: p = !1,
              limiter: v = {
                fn: (G) => {
                  let { x: $, y: O } = G;
                  return { x: $, y: O };
                },
              },
              ...b
            } = kn(e, t),
            P = { x: r, y: a },
            k = await wg(t, b),
            R = Gi(Vr(c)),
            L = vg(R);
          let z = P[L],
            M = P[R];
          if (h) {
            const G = L === "y" ? "top" : "left",
              $ = L === "y" ? "bottom" : "right",
              O = z + k[G],
              X = z - k[$];
            z = Zf(O, z, X);
          }
          if (p) {
            const G = R === "y" ? "top" : "left",
              $ = R === "y" ? "bottom" : "right",
              O = M + k[G],
              X = M - k[$];
            M = Zf(O, M, X);
          }
          const F = v.fn({ ...t, [L]: z, [R]: M });
          return { ...F, data: { x: F.x - r, y: F.y - a } };
        },
      }
    );
  },
  pN = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        options: e,
        fn(t) {
          const { x: r, y: a, placement: c, rects: h, middlewareData: p } = t,
            { offset: v = 0, mainAxis: b = !0, crossAxis: P = !0 } = kn(e, t),
            k = { x: r, y: a },
            R = Gi(c),
            L = vg(R);
          let z = k[L],
            M = k[R];
          const F = kn(v, t),
            G =
              typeof F == "number"
                ? { mainAxis: F, crossAxis: 0 }
                : { mainAxis: 0, crossAxis: 0, ...F };
          if (b) {
            const X = L === "y" ? "height" : "width",
              N = h.reference[L] - h.floating[X] + G.mainAxis,
              B = h.reference[L] + h.reference[X] - G.mainAxis;
            z < N ? (z = N) : z > B && (z = B);
          }
          if (P) {
            var $, O;
            const X = L === "y" ? "width" : "height",
              N = ["top", "left"].includes(Vr(c)),
              B =
                h.reference[R] -
                h.floating[X] +
                ((N && (($ = p.offset) == null ? void 0 : $[R])) || 0) +
                (N ? 0 : G.crossAxis),
              U =
                h.reference[R] +
                h.reference[X] +
                (N ? 0 : ((O = p.offset) == null ? void 0 : O[R]) || 0) -
                (N ? G.crossAxis : 0);
            M < B ? (M = B) : M > U && (M = U);
          }
          return { [L]: z, [R]: M };
        },
      }
    );
  },
  gN = function (e) {
    return (
      e === void 0 && (e = {}),
      {
        name: "size",
        options: e,
        async fn(t) {
          const { placement: r, rects: a, platform: c, elements: h } = t,
            { apply: p = () => {}, ...v } = kn(e, t),
            b = await wg(t, v),
            P = Vr(r),
            k = Ga(r),
            R = Gi(r) === "y",
            { width: L, height: z } = a.floating;
          let M, F;
          P === "top" || P === "bottom"
            ? ((M = P),
              (F =
                k ===
                ((await (c.isRTL == null ? void 0 : c.isRTL(h.floating)))
                  ? "start"
                  : "end")
                  ? "left"
                  : "right"))
            : ((F = P), (M = k === "end" ? "top" : "bottom"));
          const G = z - b[M],
            $ = L - b[F],
            O = !t.middlewareData.shift;
          let X = G,
            N = $;
          if (R) {
            const U = L - b.left - b.right;
            N = k || O ? Wr($, U) : U;
          } else {
            const U = z - b.top - b.bottom;
            X = k || O ? Wr(G, U) : U;
          }
          if (O && !k) {
            const U = jt(b.left, 0),
              Q = jt(b.right, 0),
              ee = jt(b.top, 0),
              ne = jt(b.bottom, 0);
            R
              ? (N = L - 2 * (U !== 0 || Q !== 0 ? U + Q : jt(b.left, b.right)))
              : (X =
                  z -
                  2 * (ee !== 0 || ne !== 0 ? ee + ne : jt(b.top, b.bottom)));
          }
          await p({ ...t, availableWidth: N, availableHeight: X });
          const B = await c.getDimensions(h.floating);
          return L !== B.width || z !== B.height
            ? { reset: { rects: !0 } }
            : {};
        },
      }
    );
  };
function si(e) {
  return HP(e) ? (e.nodeName || "").toLowerCase() : "#document";
}
function hr(e) {
  var t;
  return (
    (e == null || (t = e.ownerDocument) == null ? void 0 : t.defaultView) ||
    window
  );
}
function Rn(e) {
  var t;
  return (t = (HP(e) ? e.ownerDocument : e.document) || window.document) == null
    ? void 0
    : t.documentElement;
}
function HP(e) {
  return e instanceof Node || e instanceof hr(e).Node;
}
function An(e) {
  return e instanceof Element || e instanceof hr(e).Element;
}
function sn(e) {
  return e instanceof HTMLElement || e instanceof hr(e).HTMLElement;
}
function $y(e) {
  return typeof ShadowRoot > "u"
    ? !1
    : e instanceof ShadowRoot || e instanceof hr(e).ShadowRoot;
}
function gs(e) {
  const { overflow: t, overflowX: r, overflowY: a, display: c } = _r(e);
  return (
    /auto|scroll|overlay|hidden|clip/.test(t + a + r) &&
    !["inline", "contents"].includes(c)
  );
}
function mN(e) {
  return ["table", "td", "th"].includes(si(e));
}
function Pg(e) {
  const t = _g(),
    r = _r(e);
  return (
    r.transform !== "none" ||
    r.perspective !== "none" ||
    (r.containerType ? r.containerType !== "normal" : !1) ||
    (!t && (r.backdropFilter ? r.backdropFilter !== "none" : !1)) ||
    (!t && (r.filter ? r.filter !== "none" : !1)) ||
    ["transform", "perspective", "filter"].some((a) =>
      (r.willChange || "").includes(a),
    ) ||
    ["paint", "layout", "strict", "content"].some((a) =>
      (r.contain || "").includes(a),
    )
  );
}
function vN(e) {
  let t = Fa(e);
  for (; sn(t) && !gd(t); ) {
    if (Pg(t)) return t;
    t = Fa(t);
  }
  return null;
}
function _g() {
  return typeof CSS > "u" || !CSS.supports
    ? !1
    : CSS.supports("-webkit-backdrop-filter", "none");
}
function gd(e) {
  return ["html", "body", "#document"].includes(si(e));
}
function _r(e) {
  return hr(e).getComputedStyle(e);
}
function md(e) {
  return An(e)
    ? { scrollLeft: e.scrollLeft, scrollTop: e.scrollTop }
    : { scrollLeft: e.pageXOffset, scrollTop: e.pageYOffset };
}
function Fa(e) {
  if (si(e) === "html") return e;
  const t = e.assignedSlot || e.parentNode || ($y(e) && e.host) || Rn(e);
  return $y(t) ? t.host : t;
}
function XP(e) {
  const t = Fa(e);
  return gd(t)
    ? e.ownerDocument
      ? e.ownerDocument.body
      : e.body
    : sn(t) && gs(t)
    ? t
    : XP(t);
}
function bn(e, t, r) {
  var a;
  t === void 0 && (t = []), r === void 0 && (r = !0);
  const c = XP(e),
    h = c === ((a = e.ownerDocument) == null ? void 0 : a.body),
    p = hr(c);
  return h
    ? t.concat(
        p,
        p.visualViewport || [],
        gs(c) ? c : [],
        p.frameElement && r ? bn(p.frameElement) : [],
      )
    : t.concat(c, bn(c, [], r));
}
function BP(e) {
  const t = _r(e);
  let r = parseFloat(t.width) || 0,
    a = parseFloat(t.height) || 0;
  const c = sn(e),
    h = c ? e.offsetWidth : r,
    p = c ? e.offsetHeight : a,
    v = bc(r) !== h || bc(a) !== p;
  return v && ((r = h), (a = p)), { width: r, height: a, $: v };
}
function Cg(e) {
  return An(e) ? e : e.contextElement;
}
function Ca(e) {
  const t = Cg(e);
  if (!sn(t)) return oi(1);
  const r = t.getBoundingClientRect(),
    { width: a, height: c, $: h } = BP(t);
  let p = (h ? bc(r.width) : r.width) / a,
    v = (h ? bc(r.height) : r.height) / c;
  return (
    (!p || !Number.isFinite(p)) && (p = 1),
    (!v || !Number.isFinite(v)) && (v = 1),
    { x: p, y: v }
  );
}
const yN = oi(0);
function YP(e) {
  const t = hr(e);
  return !_g() || !t.visualViewport
    ? yN
    : { x: t.visualViewport.offsetLeft, y: t.visualViewport.offsetTop };
}
function xN(e, t, r) {
  return t === void 0 && (t = !1), !r || (t && r !== hr(e)) ? !1 : t;
}
function ji(e, t, r, a) {
  t === void 0 && (t = !1), r === void 0 && (r = !1);
  const c = e.getBoundingClientRect(),
    h = Cg(e);
  let p = oi(1);
  t && (a ? An(a) && (p = Ca(a)) : (p = Ca(e)));
  const v = xN(h, r, a) ? YP(h) : oi(0);
  let b = (c.left + v.x) / p.x,
    P = (c.top + v.y) / p.y,
    k = c.width / p.x,
    R = c.height / p.y;
  if (h) {
    const L = hr(h),
      z = a && An(a) ? hr(a) : a;
    let M = L.frameElement;
    for (; M && a && z !== L; ) {
      const F = Ca(M),
        G = M.getBoundingClientRect(),
        $ = _r(M),
        O = G.left + (M.clientLeft + parseFloat($.paddingLeft)) * F.x,
        X = G.top + (M.clientTop + parseFloat($.paddingTop)) * F.y;
      (b *= F.x),
        (P *= F.y),
        (k *= F.x),
        (R *= F.y),
        (b += O),
        (P += X),
        (M = hr(M).frameElement);
    }
  }
  return za({ width: k, height: R, x: b, y: P });
}
function bN(e) {
  let { rect: t, offsetParent: r, strategy: a } = e;
  const c = sn(r),
    h = Rn(r);
  if (r === h) return t;
  let p = { scrollLeft: 0, scrollTop: 0 },
    v = oi(1);
  const b = oi(0);
  if (
    (c || (!c && a !== "fixed")) &&
    ((si(r) !== "body" || gs(h)) && (p = md(r)), sn(r))
  ) {
    const P = ji(r);
    (v = Ca(r)), (b.x = P.x + r.clientLeft), (b.y = P.y + r.clientTop);
  }
  return {
    width: t.width * v.x,
    height: t.height * v.y,
    x: t.x * v.x - p.scrollLeft * v.x + b.x,
    y: t.y * v.y - p.scrollTop * v.y + b.y,
  };
}
function wN(e) {
  return Array.from(e.getClientRects());
}
function WP(e) {
  return ji(Rn(e)).left + md(e).scrollLeft;
}
function SN(e) {
  const t = Rn(e),
    r = md(e),
    a = e.ownerDocument.body,
    c = jt(t.scrollWidth, t.clientWidth, a.scrollWidth, a.clientWidth),
    h = jt(t.scrollHeight, t.clientHeight, a.scrollHeight, a.clientHeight);
  let p = -r.scrollLeft + WP(e);
  const v = -r.scrollTop;
  return (
    _r(a).direction === "rtl" && (p += jt(t.clientWidth, a.clientWidth) - c),
    { width: c, height: h, x: p, y: v }
  );
}
function PN(e, t) {
  const r = hr(e),
    a = Rn(e),
    c = r.visualViewport;
  let h = a.clientWidth,
    p = a.clientHeight,
    v = 0,
    b = 0;
  if (c) {
    (h = c.width), (p = c.height);
    const P = _g();
    (!P || (P && t === "fixed")) && ((v = c.offsetLeft), (b = c.offsetTop));
  }
  return { width: h, height: p, x: v, y: b };
}
function _N(e, t) {
  const r = ji(e, !0, t === "fixed"),
    a = r.top + e.clientTop,
    c = r.left + e.clientLeft,
    h = sn(e) ? Ca(e) : oi(1),
    p = e.clientWidth * h.x,
    v = e.clientHeight * h.y,
    b = c * h.x,
    P = a * h.y;
  return { width: p, height: v, x: b, y: P };
}
function Dy(e, t, r) {
  let a;
  if (t === "viewport") a = PN(e, r);
  else if (t === "document") a = SN(Rn(e));
  else if (An(t)) a = _N(t, r);
  else {
    const c = YP(e);
    a = { ...t, x: t.x - c.x, y: t.y - c.y };
  }
  return za(a);
}
function VP(e, t) {
  const r = Fa(e);
  return r === t || !An(r) || gd(r)
    ? !1
    : _r(r).position === "fixed" || VP(r, t);
}
function CN(e, t) {
  const r = t.get(e);
  if (r) return r;
  let a = bn(e, [], !1).filter((v) => An(v) && si(v) !== "body"),
    c = null;
  const h = _r(e).position === "fixed";
  let p = h ? Fa(e) : e;
  for (; An(p) && !gd(p); ) {
    const v = _r(p),
      b = Pg(p);
    !b && v.position === "fixed" && (c = null),
      (
        h
          ? !b && !c
          : (!b &&
              v.position === "static" &&
              !!c &&
              ["absolute", "fixed"].includes(c.position)) ||
            (gs(p) && !b && VP(e, p))
      )
        ? (a = a.filter((k) => k !== p))
        : (c = v),
      (p = Fa(p));
  }
  return t.set(e, a), a;
}
function ON(e) {
  let { element: t, boundary: r, rootBoundary: a, strategy: c } = e;
  const p = [...(r === "clippingAncestors" ? CN(t, this._c) : [].concat(r)), a],
    v = p[0],
    b = p.reduce(
      (P, k) => {
        const R = Dy(t, k, c);
        return (
          (P.top = jt(R.top, P.top)),
          (P.right = Wr(R.right, P.right)),
          (P.bottom = Wr(R.bottom, P.bottom)),
          (P.left = jt(R.left, P.left)),
          P
        );
      },
      Dy(t, v, c),
    );
  return {
    width: b.right - b.left,
    height: b.bottom - b.top,
    x: b.left,
    y: b.top,
  };
}
function kN(e) {
  return BP(e);
}
function AN(e, t, r) {
  const a = sn(t),
    c = Rn(t),
    h = r === "fixed",
    p = ji(e, !0, h, t);
  let v = { scrollLeft: 0, scrollTop: 0 };
  const b = oi(0);
  if (a || (!a && !h))
    if (((si(t) !== "body" || gs(c)) && (v = md(t)), a)) {
      const P = ji(t, !0, h, t);
      (b.x = P.x + t.clientLeft), (b.y = P.y + t.clientTop);
    } else c && (b.x = WP(c));
  return {
    x: p.left + v.scrollLeft - b.x,
    y: p.top + v.scrollTop - b.y,
    width: p.width,
    height: p.height,
  };
}
function zy(e, t) {
  return !sn(e) || _r(e).position === "fixed"
    ? null
    : t
    ? t(e)
    : e.offsetParent;
}
function GP(e, t) {
  const r = hr(e);
  if (!sn(e)) return r;
  let a = zy(e, t);
  for (; a && mN(a) && _r(a).position === "static"; ) a = zy(a, t);
  return a &&
    (si(a) === "html" ||
      (si(a) === "body" && _r(a).position === "static" && !Pg(a)))
    ? r
    : a || vN(e) || r;
}
const EN = async function (e) {
  let { reference: t, floating: r, strategy: a } = e;
  const c = this.getOffsetParent || GP,
    h = this.getDimensions;
  return {
    reference: AN(t, await c(r), a),
    floating: { x: 0, y: 0, ...(await h(r)) },
  };
};
function RN(e) {
  return _r(e).direction === "rtl";
}
const LN = {
  convertOffsetParentRelativeRectToViewportRelativeRect: bN,
  getDocumentElement: Rn,
  getClippingRect: ON,
  getOffsetParent: GP,
  getElementRects: EN,
  getClientRects: wN,
  getDimensions: kN,
  getScale: Ca,
  isElement: An,
  isRTL: RN,
};
function TN(e, t) {
  let r = null,
    a;
  const c = Rn(e);
  function h() {
    clearTimeout(a), r && r.disconnect(), (r = null);
  }
  function p(v, b) {
    v === void 0 && (v = !1), b === void 0 && (b = 1), h();
    const { left: P, top: k, width: R, height: L } = e.getBoundingClientRect();
    if ((v || t(), !R || !L)) return;
    const z = Qs(k),
      M = Qs(c.clientWidth - (P + R)),
      F = Qs(c.clientHeight - (k + L)),
      G = Qs(P),
      O = {
        rootMargin: -z + "px " + -M + "px " + -F + "px " + -G + "px",
        threshold: jt(0, Wr(1, b)) || 1,
      };
    let X = !0;
    function N(B) {
      const U = B[0].intersectionRatio;
      if (U !== b) {
        if (!X) return p();
        U
          ? p(!1, U)
          : (a = setTimeout(() => {
              p(!1, 1e-7);
            }, 100));
      }
      X = !1;
    }
    try {
      r = new IntersectionObserver(N, { ...O, root: c.ownerDocument });
    } catch {
      r = new IntersectionObserver(N, O);
    }
    r.observe(e);
  }
  return p(!0), h;
}
function IN(e, t, r, a) {
  a === void 0 && (a = {});
  const {
      ancestorScroll: c = !0,
      ancestorResize: h = !0,
      elementResize: p = typeof ResizeObserver == "function",
      layoutShift: v = typeof IntersectionObserver == "function",
      animationFrame: b = !1,
    } = a,
    P = Cg(e),
    k = c || h ? [...(P ? bn(P) : []), ...bn(t)] : [];
  k.forEach(($) => {
    c && $.addEventListener("scroll", r, { passive: !0 }),
      h && $.addEventListener("resize", r);
  });
  const R = P && v ? TN(P, r) : null;
  let L = -1,
    z = null;
  p &&
    ((z = new ResizeObserver(($) => {
      let [O] = $;
      O &&
        O.target === P &&
        z &&
        (z.unobserve(t),
        cancelAnimationFrame(L),
        (L = requestAnimationFrame(() => {
          z && z.observe(t);
        }))),
        r();
    })),
    P && !b && z.observe(P),
    z.observe(t));
  let M,
    F = b ? ji(e) : null;
  b && G();
  function G() {
    const $ = ji(e);
    F &&
      ($.x !== F.x ||
        $.y !== F.y ||
        $.width !== F.width ||
        $.height !== F.height) &&
      r(),
      (F = $),
      (M = requestAnimationFrame(G));
  }
  return (
    r(),
    () => {
      k.forEach(($) => {
        c && $.removeEventListener("scroll", r),
          h && $.removeEventListener("resize", r);
      }),
        R && R(),
        z && z.disconnect(),
        (z = null),
        b && cancelAnimationFrame(M);
    }
  );
}
const NN = (e, t, r) => {
    const a = new Map(),
      c = { platform: LN, ...r },
      h = { ...c.platform, _c: a };
    return dN(e, t, { ...c, platform: h });
  },
  UP = (e) => {
    function t(r) {
      return {}.hasOwnProperty.call(r, "current");
    }
    return {
      name: "arrow",
      options: e,
      fn(r) {
        const { element: a, padding: c } = typeof e == "function" ? e(r) : e;
        return a && t(a)
          ? a.current != null
            ? My({ element: a.current, padding: c }).fn(r)
            : {}
          : a
          ? My({ element: a, padding: c }).fn(r)
          : {};
      },
    };
  };
var Ol = typeof document < "u" ? j.useLayoutEffect : j.useEffect;
function Sc(e, t) {
  if (e === t) return !0;
  if (typeof e != typeof t) return !1;
  if (typeof e == "function" && e.toString() === t.toString()) return !0;
  let r, a, c;
  if (e && t && typeof e == "object") {
    if (Array.isArray(e)) {
      if (((r = e.length), r != t.length)) return !1;
      for (a = r; a-- !== 0; ) if (!Sc(e[a], t[a])) return !1;
      return !0;
    }
    if (((c = Object.keys(e)), (r = c.length), r !== Object.keys(t).length))
      return !1;
    for (a = r; a-- !== 0; ) if (!{}.hasOwnProperty.call(t, c[a])) return !1;
    for (a = r; a-- !== 0; ) {
      const h = c[a];
      if (!(h === "_owner" && e.$$typeof) && !Sc(e[h], t[h])) return !1;
    }
    return !0;
  }
  return e !== e && t !== t;
}
function qP(e) {
  return typeof window > "u"
    ? 1
    : (e.ownerDocument.defaultView || window).devicePixelRatio || 1;
}
function Fy(e, t) {
  const r = qP(e);
  return Math.round(t * r) / r;
}
function jy(e) {
  const t = j.useRef(e);
  return (
    Ol(() => {
      t.current = e;
    }),
    t
  );
}
function MN(e) {
  e === void 0 && (e = {});
  const {
      placement: t = "bottom",
      strategy: r = "absolute",
      middleware: a = [],
      platform: c,
      elements: { reference: h, floating: p } = {},
      transform: v = !0,
      whileElementsMounted: b,
      open: P,
    } = e,
    [k, R] = j.useState({
      x: 0,
      y: 0,
      strategy: r,
      placement: t,
      middlewareData: {},
      isPositioned: !1,
    }),
    [L, z] = j.useState(a);
  Sc(L, a) || z(a);
  const [M, F] = j.useState(null),
    [G, $] = j.useState(null),
    O = j.useCallback(
      (ve) => {
        ve != U.current && ((U.current = ve), F(ve));
      },
      [F],
    ),
    X = j.useCallback(
      (ve) => {
        ve !== Q.current && ((Q.current = ve), $(ve));
      },
      [$],
    ),
    N = h || M,
    B = p || G,
    U = j.useRef(null),
    Q = j.useRef(null),
    ee = j.useRef(k),
    ne = jy(b),
    le = jy(c),
    he = j.useCallback(() => {
      if (!U.current || !Q.current) return;
      const ve = { placement: t, strategy: r, middleware: L };
      le.current && (ve.platform = le.current),
        NN(U.current, Q.current, ve).then((ye) => {
          const te = { ...ye, isPositioned: !0 };
          me.current &&
            !Sc(ee.current, te) &&
            ((ee.current = te),
            ig.flushSync(() => {
              R(te);
            }));
        });
    }, [L, t, r, le]);
  Ol(() => {
    P === !1 &&
      ee.current.isPositioned &&
      ((ee.current.isPositioned = !1),
      R((ve) => ({ ...ve, isPositioned: !1 })));
  }, [P]);
  const me = j.useRef(!1);
  Ol(
    () => (
      (me.current = !0),
      () => {
        me.current = !1;
      }
    ),
    [],
  ),
    Ol(() => {
      if ((N && (U.current = N), B && (Q.current = B), N && B)) {
        if (ne.current) return ne.current(N, B, he);
        he();
      }
    }, [N, B, he, ne]);
  const fe = j.useMemo(
      () => ({ reference: U, floating: Q, setReference: O, setFloating: X }),
      [O, X],
    ),
    ue = j.useMemo(() => ({ reference: N, floating: B }), [N, B]),
    oe = j.useMemo(() => {
      const ve = { position: r, left: 0, top: 0 };
      if (!ue.floating) return ve;
      const ye = Fy(ue.floating, k.x),
        te = Fy(ue.floating, k.y);
      return v
        ? {
            ...ve,
            transform: "translate(" + ye + "px, " + te + "px)",
            ...(qP(ue.floating) >= 1.5 && { willChange: "transform" }),
          }
        : { position: r, left: ye, top: te };
    }, [r, v, ue.floating, k.x, k.y]);
  return j.useMemo(
    () => ({ ...k, update: he, refs: fe, elements: ue, floatingStyles: oe }),
    [k, he, fe, ue, oe],
  );
}
var wn = typeof document < "u" ? j.useLayoutEffect : j.useEffect;
let Rh = !1,
  $N = 0;
const Hy = () => "floating-ui-" + $N++;
function DN() {
  const [e, t] = j.useState(() => (Rh ? Hy() : void 0));
  return (
    wn(() => {
      e == null && t(Hy());
    }, []),
    j.useEffect(() => {
      Rh || (Rh = !0);
    }, []),
    e
  );
}
const zN = fp["useId".toString()],
  ZP = zN || DN;
function FN() {
  const e = new Map();
  return {
    emit(t, r) {
      var a;
      (a = e.get(t)) == null || a.forEach((c) => c(r));
    },
    on(t, r) {
      e.set(t, [...(e.get(t) || []), r]);
    },
    off(t, r) {
      var a;
      e.set(
        t,
        ((a = e.get(t)) == null ? void 0 : a.filter((c) => c !== r)) || [],
      );
    },
  };
}
const jN = j.createContext(null),
  HN = j.createContext(null),
  KP = () => {
    var e;
    return ((e = j.useContext(jN)) == null ? void 0 : e.id) || null;
  },
  Og = () => j.useContext(HN);
function Un(e) {
  return (e == null ? void 0 : e.ownerDocument) || document;
}
function XN() {
  const e = navigator.userAgentData;
  return e != null && e.platform ? e.platform : navigator.platform;
}
function BN() {
  const e = navigator.userAgentData;
  return e && Array.isArray(e.brands)
    ? e.brands
        .map((t) => {
          let { brand: r, version: a } = t;
          return r + "/" + a;
        })
        .join(" ")
    : navigator.userAgent;
}
function vd(e) {
  return Un(e).defaultView || window;
}
function nn(e) {
  return e ? e instanceof Element || e instanceof vd(e).Element : !1;
}
function QP(e) {
  return e ? e instanceof HTMLElement || e instanceof vd(e).HTMLElement : !1;
}
function YN(e) {
  if (typeof ShadowRoot > "u") return !1;
  const t = vd(e).ShadowRoot;
  return e instanceof t || e instanceof ShadowRoot;
}
function WN(e) {
  if (e.mozInputSource === 0 && e.isTrusted) return !0;
  const t = /Android/i;
  return (t.test(XN()) || t.test(BN())) && e.pointerType
    ? e.type === "click" && e.buttons === 1
    : e.detail === 0 && !e.pointerType;
}
function VN(e) {
  return (
    (e.width === 0 && e.height === 0) ||
    (e.width === 1 &&
      e.height === 1 &&
      e.pressure === 0 &&
      e.detail === 0 &&
      e.pointerType !== "mouse") ||
    (e.width < 1 && e.height < 1 && e.pressure === 0 && e.detail === 0)
  );
}
function JP(e, t) {
  const r = ["mouse", "pen"];
  return t || r.push("", void 0), r.includes(e);
}
function GN(e) {
  return "nativeEvent" in e;
}
function Qf(e, t) {
  if (!e || !t) return !1;
  const r = t.getRootNode && t.getRootNode();
  if (e.contains(t)) return !0;
  if (r && YN(r)) {
    let a = t;
    for (; a; ) {
      if (e === a) return !0;
      a = a.parentNode || a.host;
    }
  }
  return !1;
}
function e_(e) {
  return "data-floating-ui-" + e;
}
function Xy(e) {
  const t = j.useRef(e);
  return (
    wn(() => {
      t.current = e;
    }),
    t
  );
}
const By = e_("safe-polygon");
function kl(e, t, r) {
  return r && !JP(r) ? 0 : typeof e == "number" ? e : e == null ? void 0 : e[t];
}
function UN(e, t) {
  t === void 0 && (t = {});
  const {
      open: r,
      onOpenChange: a,
      dataRef: c,
      events: h,
      elements: { domReference: p, floating: v },
      refs: b,
    } = e,
    {
      enabled: P = !0,
      delay: k = 0,
      handleClose: R = null,
      mouseOnly: L = !1,
      restMs: z = 0,
      move: M = !0,
    } = t,
    F = Og(),
    G = KP(),
    $ = Xy(R),
    O = Xy(k),
    X = j.useRef(),
    N = j.useRef(),
    B = j.useRef(),
    U = j.useRef(),
    Q = j.useRef(!0),
    ee = j.useRef(!1),
    ne = j.useRef(() => {}),
    le = j.useCallback(() => {
      var ue;
      const oe = (ue = c.current.openEvent) == null ? void 0 : ue.type;
      return (oe == null ? void 0 : oe.includes("mouse")) && oe !== "mousedown";
    }, [c]);
  j.useEffect(() => {
    if (!P) return;
    function ue() {
      clearTimeout(N.current), clearTimeout(U.current), (Q.current = !0);
    }
    return (
      h.on("dismiss", ue),
      () => {
        h.off("dismiss", ue);
      }
    );
  }, [P, h]),
    j.useEffect(() => {
      if (!P || !$.current || !r) return;
      function ue(ve) {
        le() && a(!1, ve);
      }
      const oe = Un(v).documentElement;
      return (
        oe.addEventListener("mouseleave", ue),
        () => {
          oe.removeEventListener("mouseleave", ue);
        }
      );
    }, [v, r, a, P, $, c, le]);
  const he = j.useCallback(
      function (ue, oe) {
        oe === void 0 && (oe = !0);
        const ve = kl(O.current, "close", X.current);
        ve && !B.current
          ? (clearTimeout(N.current),
            (N.current = setTimeout(() => a(!1, ue), ve)))
          : oe && (clearTimeout(N.current), a(!1, ue));
      },
      [O, a],
    ),
    me = j.useCallback(() => {
      ne.current(), (B.current = void 0);
    }, []),
    fe = j.useCallback(() => {
      if (ee.current) {
        const ue = Un(b.floating.current).body;
        (ue.style.pointerEvents = ""),
          ue.removeAttribute(By),
          (ee.current = !1);
      }
    }, [b]);
  return (
    j.useEffect(() => {
      if (!P) return;
      function ue() {
        return c.current.openEvent
          ? ["click", "mousedown"].includes(c.current.openEvent.type)
          : !1;
      }
      function oe(te) {
        if (
          (clearTimeout(N.current),
          (Q.current = !1),
          (L && !JP(X.current)) || (z > 0 && kl(O.current, "open") === 0))
        )
          return;
        const pe = kl(O.current, "open", X.current);
        pe
          ? (N.current = setTimeout(() => {
              a(!0, te);
            }, pe))
          : a(!0, te);
      }
      function ve(te) {
        if (ue()) return;
        ne.current();
        const pe = Un(v);
        if ((clearTimeout(U.current), $.current)) {
          r || clearTimeout(N.current),
            (B.current = $.current({
              ...e,
              tree: F,
              x: te.clientX,
              y: te.clientY,
              onClose() {
                fe(), me(), he(te);
              },
            }));
          const ke = B.current;
          pe.addEventListener("mousemove", ke),
            (ne.current = () => {
              pe.removeEventListener("mousemove", ke);
            });
          return;
        }
        (X.current === "touch" ? !Qf(v, te.relatedTarget) : !0) && he(te);
      }
      function ye(te) {
        ue() ||
          $.current == null ||
          $.current({
            ...e,
            tree: F,
            x: te.clientX,
            y: te.clientY,
            onClose() {
              fe(), me(), he(te);
            },
          })(te);
      }
      if (nn(p)) {
        const te = p;
        return (
          r && te.addEventListener("mouseleave", ye),
          v == null || v.addEventListener("mouseleave", ye),
          M && te.addEventListener("mousemove", oe, { once: !0 }),
          te.addEventListener("mouseenter", oe),
          te.addEventListener("mouseleave", ve),
          () => {
            r && te.removeEventListener("mouseleave", ye),
              v == null || v.removeEventListener("mouseleave", ye),
              M && te.removeEventListener("mousemove", oe),
              te.removeEventListener("mouseenter", oe),
              te.removeEventListener("mouseleave", ve);
          }
        );
      }
    }, [p, v, P, e, L, z, M, he, me, fe, a, r, F, O, $, c]),
    wn(() => {
      var ue;
      if (
        P &&
        r &&
        (ue = $.current) != null &&
        ue.__options.blockPointerEvents &&
        le()
      ) {
        const ye = Un(v).body;
        if (
          (ye.setAttribute(By, ""),
          (ye.style.pointerEvents = "none"),
          (ee.current = !0),
          nn(p) && v)
        ) {
          var oe, ve;
          const te = p,
            pe =
              F == null ||
              (oe = F.nodesRef.current.find((Se) => Se.id === G)) == null ||
              (ve = oe.context) == null
                ? void 0
                : ve.elements.floating;
          return (
            pe && (pe.style.pointerEvents = ""),
            (te.style.pointerEvents = "auto"),
            (v.style.pointerEvents = "auto"),
            () => {
              (te.style.pointerEvents = ""), (v.style.pointerEvents = "");
            }
          );
        }
      }
    }, [P, r, G, v, p, F, $, c, le]),
    wn(() => {
      r || ((X.current = void 0), me(), fe());
    }, [r, me, fe]),
    j.useEffect(
      () => () => {
        me(), clearTimeout(N.current), clearTimeout(U.current), fe();
      },
      [P, me, fe],
    ),
    j.useMemo(() => {
      if (!P) return {};
      function ue(oe) {
        X.current = oe.pointerType;
      }
      return {
        reference: {
          onPointerDown: ue,
          onPointerEnter: ue,
          onMouseMove(oe) {
            r ||
              z === 0 ||
              (clearTimeout(U.current),
              (U.current = setTimeout(() => {
                Q.current || a(!0, oe.nativeEvent);
              }, z)));
          },
        },
        floating: {
          onMouseEnter() {
            clearTimeout(N.current);
          },
          onMouseLeave(oe) {
            h.emit("dismiss", {
              type: "mouseLeave",
              data: { returnFocus: !1 },
            }),
              he(oe.nativeEvent, !1);
          },
        },
      };
    }, [h, P, z, r, a, he])
  );
}
const t_ = j.createContext({
    delay: 0,
    initialDelay: 0,
    timeoutMs: 0,
    currentId: null,
    setCurrentId: () => {},
    setState: () => {},
    isInstantPhase: !1,
  }),
  r_ = () => j.useContext(t_),
  qN = (e) => {
    let { children: t, delay: r, timeoutMs: a = 0 } = e;
    const [c, h] = j.useReducer((b, P) => ({ ...b, ...P }), {
        delay: r,
        timeoutMs: a,
        initialDelay: r,
        currentId: null,
        isInstantPhase: !1,
      }),
      p = j.useRef(null),
      v = j.useCallback((b) => {
        h({ currentId: b });
      }, []);
    return (
      wn(() => {
        c.currentId
          ? p.current === null
            ? (p.current = c.currentId)
            : h({ isInstantPhase: !0 })
          : (h({ isInstantPhase: !1 }), (p.current = null));
      }, [c.currentId]),
      j.createElement(
        t_.Provider,
        {
          value: j.useMemo(
            () => ({ ...c, setState: h, setCurrentId: v }),
            [c, h, v],
          ),
        },
        t,
      )
    );
  },
  ZN = (e, t) => {
    let { open: r, onOpenChange: a } = e,
      { id: c } = t;
    const {
      currentId: h,
      setCurrentId: p,
      initialDelay: v,
      setState: b,
      timeoutMs: P,
    } = r_();
    wn(() => {
      h && (b({ delay: { open: 1, close: kl(v, "close") } }), h !== c && a(!1));
    }, [c, a, b, h, v]),
      wn(() => {
        function k() {
          a(!1), b({ delay: v, currentId: null });
        }
        if (!r && h === c)
          if (P) {
            const R = window.setTimeout(k, P);
            return () => {
              clearTimeout(R);
            };
          } else k();
      }, [r, b, h, c, a, v, P]),
      wn(() => {
        r && p(c);
      }, [r, p, c]);
  };
function KN(e) {
  let t = e.activeElement;
  for (
    ;
    ((r = t) == null || (a = r.shadowRoot) == null
      ? void 0
      : a.activeElement) != null;

  ) {
    var r, a;
    t = t.shadowRoot.activeElement;
  }
  return t;
}
function Lh(e, t) {
  let r = e.filter((c) => {
      var h;
      return c.parentId === t && ((h = c.context) == null ? void 0 : h.open);
    }),
    a = r;
  for (; a.length; )
    (a = e.filter((c) => {
      var h;
      return (h = a) == null
        ? void 0
        : h.some((p) => {
            var v;
            return (
              c.parentId === p.id && ((v = c.context) == null ? void 0 : v.open)
            );
          });
    })),
      (r = r.concat(a));
  return r;
}
function QN(e) {
  return "composedPath" in e ? e.composedPath()[0] : e.target;
}
const JN = fp["useInsertionEffect".toString()],
  eM = JN || ((e) => e());
function Al(e) {
  const t = j.useRef(() => {});
  return (
    eM(() => {
      t.current = e;
    }),
    j.useCallback(function () {
      for (var r = arguments.length, a = new Array(r), c = 0; c < r; c++)
        a[c] = arguments[c];
      return t.current == null ? void 0 : t.current(...a);
    }, [])
  );
}
function El(e, t) {
  if (t == null) return !1;
  if ("composedPath" in e) return e.composedPath().includes(t);
  const r = e;
  return r.target != null && t.contains(r.target);
}
const tM = {
    pointerdown: "onPointerDown",
    mousedown: "onMouseDown",
    click: "onClick",
  },
  rM = {
    pointerdown: "onPointerDownCapture",
    mousedown: "onMouseDownCapture",
    click: "onClickCapture",
  },
  nM = (e) => {
    var t, r;
    return {
      escapeKeyBubbles:
        typeof e == "boolean"
          ? e
          : (t = e == null ? void 0 : e.escapeKey) != null
          ? t
          : !1,
      outsidePressBubbles:
        typeof e == "boolean"
          ? e
          : (r = e == null ? void 0 : e.outsidePress) != null
          ? r
          : !0,
    };
  };
function iM(e, t) {
  t === void 0 && (t = {});
  const {
      open: r,
      onOpenChange: a,
      events: c,
      nodeId: h,
      elements: { reference: p, domReference: v, floating: b },
      dataRef: P,
    } = e,
    {
      enabled: k = !0,
      escapeKey: R = !0,
      outsidePress: L = !0,
      outsidePressEvent: z = "pointerdown",
      referencePress: M = !1,
      referencePressEvent: F = "pointerdown",
      ancestorScroll: G = !1,
      bubbles: $,
    } = t,
    O = Og(),
    X = KP() != null,
    N = Al(typeof L == "function" ? L : () => !1),
    B = typeof L == "function" ? N : L,
    U = j.useRef(!1),
    { escapeKeyBubbles: Q, outsidePressBubbles: ee } = nM($),
    ne = Al((he) => {
      if (!r || !k || !R || he.key !== "Escape") return;
      const me = O ? Lh(O.nodesRef.current, h) : [];
      if (!Q && (he.stopPropagation(), me.length > 0)) {
        let fe = !0;
        if (
          (me.forEach((ue) => {
            var oe;
            if (
              (oe = ue.context) != null &&
              oe.open &&
              !ue.context.dataRef.current.__escapeKeyBubbles
            ) {
              fe = !1;
              return;
            }
          }),
          !fe)
        )
          return;
      }
      c.emit("dismiss", {
        type: "escapeKey",
        data: { returnFocus: { preventScroll: !1 } },
      }),
        a(!1, GN(he) ? he.nativeEvent : he);
    }),
    le = Al((he) => {
      const me = U.current;
      if (((U.current = !1), me || (typeof B == "function" && !B(he)))) return;
      const fe = QN(he);
      if (QP(fe) && b) {
        const ve = fe.clientWidth > 0 && fe.scrollWidth > fe.clientWidth,
          ye = fe.clientHeight > 0 && fe.scrollHeight > fe.clientHeight;
        let te = ye && he.offsetX > fe.clientWidth;
        if (
          (ye &&
            vd(b).getComputedStyle(fe).direction === "rtl" &&
            (te = he.offsetX <= fe.offsetWidth - fe.clientWidth),
          te || (ve && he.offsetY > fe.clientHeight))
        )
          return;
      }
      const ue =
        O &&
        Lh(O.nodesRef.current, h).some((ve) => {
          var ye;
          return El(
            he,
            (ye = ve.context) == null ? void 0 : ye.elements.floating,
          );
        });
      if (El(he, b) || El(he, v) || ue) return;
      const oe = O ? Lh(O.nodesRef.current, h) : [];
      if (oe.length > 0) {
        let ve = !0;
        if (
          (oe.forEach((ye) => {
            var te;
            if (
              (te = ye.context) != null &&
              te.open &&
              !ye.context.dataRef.current.__outsidePressBubbles
            ) {
              ve = !1;
              return;
            }
          }),
          !ve)
        )
          return;
      }
      c.emit("dismiss", {
        type: "outsidePress",
        data: { returnFocus: X ? { preventScroll: !0 } : WN(he) || VN(he) },
      }),
        a(!1, he);
    });
  return (
    j.useEffect(() => {
      if (!r || !k) return;
      (P.current.__escapeKeyBubbles = Q),
        (P.current.__outsidePressBubbles = ee);
      function he(ue) {
        a(!1, ue);
      }
      const me = Un(b);
      R && me.addEventListener("keydown", ne), B && me.addEventListener(z, le);
      let fe = [];
      return (
        G &&
          (nn(v) && (fe = bn(v)),
          nn(b) && (fe = fe.concat(bn(b))),
          !nn(p) &&
            p &&
            p.contextElement &&
            (fe = fe.concat(bn(p.contextElement)))),
        (fe = fe.filter((ue) => {
          var oe;
          return (
            ue !== ((oe = me.defaultView) == null ? void 0 : oe.visualViewport)
          );
        })),
        fe.forEach((ue) => {
          ue.addEventListener("scroll", he, { passive: !0 });
        }),
        () => {
          R && me.removeEventListener("keydown", ne),
            B && me.removeEventListener(z, le),
            fe.forEach((ue) => {
              ue.removeEventListener("scroll", he);
            });
        }
      );
    }, [P, b, v, p, R, B, z, r, a, G, k, Q, ee, ne, le]),
    j.useEffect(() => {
      U.current = !1;
    }, [B, z]),
    j.useMemo(
      () =>
        k
          ? {
              reference: {
                onKeyDown: ne,
                [tM[F]]: (he) => {
                  M &&
                    (c.emit("dismiss", {
                      type: "referencePress",
                      data: { returnFocus: !1 },
                    }),
                    a(!1, he.nativeEvent));
                },
              },
              floating: {
                onKeyDown: ne,
                [rM[z]]: () => {
                  U.current = !0;
                },
              },
            }
          : {},
      [k, c, M, z, F, a, ne],
    )
  );
}
function kg(e) {
  var t;
  e === void 0 && (e = {});
  const { open: r = !1, onOpenChange: a, nodeId: c } = e,
    [h, p] = j.useState(null),
    v = ((t = e.elements) == null ? void 0 : t.reference) || h,
    b = MN(e),
    P = Og(),
    k = Al((N, B) => {
      N && (L.current.openEvent = B), a == null || a(N, B);
    }),
    R = j.useRef(null),
    L = j.useRef({}),
    z = j.useState(() => FN())[0],
    M = ZP(),
    F = j.useCallback(
      (N) => {
        const B = nn(N)
          ? {
              getBoundingClientRect: () => N.getBoundingClientRect(),
              contextElement: N,
            }
          : N;
        b.refs.setReference(B);
      },
      [b.refs],
    ),
    G = j.useCallback(
      (N) => {
        (nn(N) || N === null) && ((R.current = N), p(N)),
          (nn(b.refs.reference.current) ||
            b.refs.reference.current === null ||
            (N !== null && !nn(N))) &&
            b.refs.setReference(N);
      },
      [b.refs],
    ),
    $ = j.useMemo(
      () => ({
        ...b.refs,
        setReference: G,
        setPositionReference: F,
        domReference: R,
      }),
      [b.refs, G, F],
    ),
    O = j.useMemo(() => ({ ...b.elements, domReference: v }), [b.elements, v]),
    X = j.useMemo(
      () => ({
        ...b,
        refs: $,
        elements: O,
        dataRef: L,
        nodeId: c,
        floatingId: M,
        events: z,
        open: r,
        onOpenChange: k,
      }),
      [b, c, M, z, r, k, $, O],
    );
  return (
    wn(() => {
      const N = P == null ? void 0 : P.nodesRef.current.find((B) => B.id === c);
      N && (N.context = X);
    }),
    j.useMemo(() => ({ ...b, context: X, refs: $, elements: O }), [b, $, O, X])
  );
}
function aM(e, t) {
  t === void 0 && (t = {});
  const {
      open: r,
      onOpenChange: a,
      dataRef: c,
      events: h,
      refs: p,
      elements: { floating: v, domReference: b },
    } = e,
    { enabled: P = !0, keyboardOnly: k = !0 } = t,
    R = j.useRef(""),
    L = j.useRef(!1),
    z = j.useRef();
  return (
    j.useEffect(() => {
      if (!P) return;
      const F = Un(v).defaultView || window;
      function G() {
        !r && QP(b) && b === KN(Un(b)) && (L.current = !0);
      }
      return (
        F.addEventListener("blur", G),
        () => {
          F.removeEventListener("blur", G);
        }
      );
    }, [v, b, r, P]),
    j.useEffect(() => {
      if (!P) return;
      function M(F) {
        (F.type === "referencePress" || F.type === "escapeKey") &&
          (L.current = !0);
      }
      return (
        h.on("dismiss", M),
        () => {
          h.off("dismiss", M);
        }
      );
    }, [h, P]),
    j.useEffect(
      () => () => {
        clearTimeout(z.current);
      },
      [],
    ),
    j.useMemo(
      () =>
        P
          ? {
              reference: {
                onPointerDown(M) {
                  let { pointerType: F } = M;
                  (R.current = F), (L.current = !!(F && k));
                },
                onMouseLeave() {
                  L.current = !1;
                },
                onFocus(M) {
                  var F;
                  L.current ||
                    (M.type === "focus" &&
                      ((F = c.current.openEvent) == null ? void 0 : F.type) ===
                        "mousedown" &&
                      El(c.current.openEvent, b)) ||
                    a(!0, M.nativeEvent);
                },
                onBlur(M) {
                  L.current = !1;
                  const F = M.relatedTarget,
                    G =
                      nn(F) &&
                      F.hasAttribute(e_("focus-guard")) &&
                      F.getAttribute("data-type") === "outside";
                  z.current = setTimeout(() => {
                    Qf(p.floating.current, F) ||
                      Qf(b, F) ||
                      G ||
                      a(!1, M.nativeEvent);
                  });
                },
              },
            }
          : {},
      [P, k, b, p, c, a],
    )
  );
}
function Th(e, t, r) {
  const a = new Map();
  return {
    ...(r === "floating" && { tabIndex: -1 }),
    ...e,
    ...t
      .map((c) => (c ? c[r] : null))
      .concat(e)
      .reduce(
        (c, h) => (
          h &&
            Object.entries(h).forEach((p) => {
              let [v, b] = p;
              if (v.indexOf("on") === 0) {
                if ((a.has(v) || a.set(v, []), typeof b == "function")) {
                  var P;
                  (P = a.get(v)) == null || P.push(b),
                    (c[v] = function () {
                      for (
                        var k, R = arguments.length, L = new Array(R), z = 0;
                        z < R;
                        z++
                      )
                        L[z] = arguments[z];
                      return (k = a.get(v)) == null
                        ? void 0
                        : k.map((M) => M(...L)).find((M) => M !== void 0);
                    });
                }
              } else c[v] = b;
            }),
          c
        ),
        {},
      ),
  };
}
function oM(e) {
  e === void 0 && (e = []);
  const t = e,
    r = j.useCallback((h) => Th(h, e, "reference"), t),
    a = j.useCallback((h) => Th(h, e, "floating"), t),
    c = j.useCallback(
      (h) => Th(h, e, "item"),
      e.map((h) => (h == null ? void 0 : h.item)),
    );
  return j.useMemo(
    () => ({ getReferenceProps: r, getFloatingProps: a, getItemProps: c }),
    [r, a, c],
  );
}
function sM(e, t) {
  t === void 0 && (t = {});
  const { open: r, floatingId: a } = e,
    { enabled: c = !0, role: h = "dialog" } = t,
    p = ZP();
  return j.useMemo(() => {
    const v = { id: a, role: h };
    return c
      ? h === "tooltip"
        ? { reference: { "aria-describedby": r ? a : void 0 }, floating: v }
        : {
            reference: {
              "aria-expanded": r ? "true" : "false",
              "aria-haspopup": h === "alertdialog" ? "dialog" : h,
              "aria-controls": r ? a : void 0,
              ...(h === "listbox" && { role: "combobox" }),
              ...(h === "menu" && { id: p }),
            },
            floating: { ...v, ...(h === "menu" && { "aria-labelledby": p }) },
          }
      : {};
  }, [c, h, r, a, p]);
}
function n_({ opened: e, floating: t, position: r, positionDependencies: a }) {
  const [c, h] = j.useState(0);
  j.useEffect(() => {
    if (t.refs.reference.current && t.refs.floating.current)
      return IN(t.refs.reference.current, t.refs.floating.current, t.update);
  }, [t.refs.reference.current, t.refs.floating.current, e, c, r]),
    Fi(() => {
      t.update();
    }, a),
    Fi(() => {
      h((p) => p + 1);
    }, [e]);
}
function lM(e) {
  var t, r, a;
  const c = [jP(e.offset)];
  return (
    (t = e.middlewares) != null && t.shift && c.push(Sg({ limiter: pN() })),
    (r = e.middlewares) != null && r.flip && c.push(DP()),
    (a = e.middlewares) != null && a.inline && c.push(FP()),
    c.push(UP({ element: e.arrowRef, padding: e.arrowOffset })),
    c
  );
}
function cM(e) {
  const [t, r] = $a({
      value: e.opened,
      defaultValue: e.defaultOpened,
      finalValue: !1,
      onChange: e.onChange,
    }),
    a = () => {
      var p;
      t && ((p = e.onClose) == null || p.call(e), r(!1));
    },
    c = () => {
      var p, v;
      t
        ? ((p = e.onClose) == null || p.call(e), r(!1))
        : ((v = e.onOpen) == null || v.call(e), r(!0));
    },
    h = kg({
      placement: e.position,
      middleware: [
        ...lM(e),
        ...(e.width === "target"
          ? [
              gN({
                apply({ rects: p }) {
                  var v, b;
                  Object.assign(
                    (b =
                      (v = h.refs.floating.current) == null
                        ? void 0
                        : v.style) != null
                      ? b
                      : {},
                    { width: `${p.reference.width}px` },
                  );
                },
              }),
            ]
          : []),
      ],
    });
  return (
    n_({
      opened: e.opened,
      position: e.position,
      positionDependencies: e.positionDependencies || [],
      floating: h,
    }),
    Fi(() => {
      var p;
      (p = e.onPositionChange) == null || p.call(e, h.placement);
    }, [h.placement]),
    Fi(() => {
      var p, v;
      e.opened
        ? (v = e.onOpen) == null || v.call(e)
        : (p = e.onClose) == null || p.call(e);
    }, [e.opened]),
    {
      floating: h,
      controlled: typeof e.opened == "boolean",
      opened: t,
      onClose: a,
      onToggle: c,
    }
  );
}
const [uM, i_] = hi("Popover component was not found in the tree");
var dM = Object.defineProperty,
  hM = Object.defineProperties,
  fM = Object.getOwnPropertyDescriptors,
  Pc = Object.getOwnPropertySymbols,
  a_ = Object.prototype.hasOwnProperty,
  o_ = Object.prototype.propertyIsEnumerable,
  Yy = (e, t, r) =>
    t in e
      ? dM(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Js = (e, t) => {
    for (var r in t || (t = {})) a_.call(t, r) && Yy(e, r, t[r]);
    if (Pc) for (var r of Pc(t)) o_.call(t, r) && Yy(e, r, t[r]);
    return e;
  },
  pM = (e, t) => hM(e, fM(t)),
  gM = (e, t) => {
    var r = {};
    for (var a in e) a_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Pc)
      for (var a of Pc(e)) t.indexOf(a) < 0 && o_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const mM = { refProp: "ref", popupType: "dialog" },
  s_ = Ne((e, t) => {
    const r = Pe("PopoverTarget", mM, e),
      { children: a, refProp: c, popupType: h } = r,
      p = gM(r, ["children", "refProp", "popupType"]);
    if (!Wi(a))
      throw new Error(
        "Popover.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported",
      );
    const v = p,
      b = i_(),
      P = or(b.reference, a.ref, t),
      k = b.withRoles
        ? {
            "aria-haspopup": h,
            "aria-expanded": b.opened,
            "aria-controls": b.getDropdownId(),
            id: b.getTargetId(),
          }
        : {};
    return j.cloneElement(
      a,
      Js(
        pM(Js(Js(Js({}, v), k), b.targetProps), {
          className: kt(
            b.targetProps.className,
            v.className,
            a.props.className,
          ),
          [c]: P,
        }),
        b.controlled ? null : { onClick: b.onToggle },
      ),
    );
  });
s_.displayName = "@mantine/core/PopoverTarget";
var vM = { dropdown: "m-38a85659", arrow: "m-a31dc6c1" };
const l_ = vM;
var Wy = Object.getOwnPropertySymbols,
  yM = Object.prototype.hasOwnProperty,
  xM = Object.prototype.propertyIsEnumerable,
  bM = (e, t) => {
    var r = {};
    for (var a in e) yM.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Wy)
      for (var a of Wy(e)) t.indexOf(a) < 0 && xM.call(e, a) && (r[a] = e[a]);
    return r;
  };
function wM(e) {
  const t = document.createElement("div");
  return (
    t.setAttribute("data-portal", "true"),
    typeof e.className == "string" &&
      t.classList.add(...e.className.split(" ")),
    typeof e.style == "object" && Object.assign(t.style, e.style),
    typeof e.id == "string" && t.setAttribute("id", e.id),
    t
  );
}
const SM = {},
  c_ = j.forwardRef((e, t) => {
    const r = Pe("Portal", SM, e),
      { children: a, target: c } = r,
      h = bM(r, ["children", "target"]),
      [p, v] = j.useState(!1),
      b = j.useRef(null);
    return (
      Va(
        () => (
          v(!0),
          (b.current = c
            ? typeof c == "string"
              ? document.querySelector(c)
              : c
            : wM(h)),
          IS(t, b.current),
          !c && b.current && document.body.appendChild(b.current),
          () => {
            !c && b.current && document.body.removeChild(b.current);
          }
        ),
        [c],
      ),
      !p || !b.current
        ? null
        : ig.createPortal(q.createElement(q.Fragment, null, a), b.current)
    );
  });
c_.displayName = "@mantine/core/Portal";
var PM = Object.defineProperty,
  _c = Object.getOwnPropertySymbols,
  u_ = Object.prototype.hasOwnProperty,
  d_ = Object.prototype.propertyIsEnumerable,
  Vy = (e, t, r) =>
    t in e
      ? PM(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  _M = (e, t) => {
    for (var r in t || (t = {})) u_.call(t, r) && Vy(e, r, t[r]);
    if (_c) for (var r of _c(t)) d_.call(t, r) && Vy(e, r, t[r]);
    return e;
  },
  CM = (e, t) => {
    var r = {};
    for (var a in e) u_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && _c)
      for (var a of _c(e)) t.indexOf(a) < 0 && d_.call(e, a) && (r[a] = e[a]);
    return r;
  };
function ms(e) {
  var t = e,
    { withinPortal: r = !0, children: a } = t,
    c = CM(t, ["withinPortal", "children"]);
  return r
    ? q.createElement(c_, _M({}, c), a)
    : q.createElement(q.Fragment, null, a);
}
ms.displayName = "@mantine/core/OptionalPortal";
var OM = Object.defineProperty,
  kM = Object.defineProperties,
  AM = Object.getOwnPropertyDescriptors,
  Gy = Object.getOwnPropertySymbols,
  EM = Object.prototype.hasOwnProperty,
  RM = Object.prototype.propertyIsEnumerable,
  Uy = (e, t, r) =>
    t in e
      ? OM(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  po = (e, t) => {
    for (var r in t || (t = {})) EM.call(t, r) && Uy(e, r, t[r]);
    if (Gy) for (var r of Gy(t)) RM.call(t, r) && Uy(e, r, t[r]);
    return e;
  },
  go = (e, t) => kM(e, AM(t));
const mo = (e) => ({
    in: { opacity: 1, transform: "scale(1)" },
    out: {
      opacity: 0,
      transform: `scale(.9) translateY(${ae(e === "bottom" ? 10 : -10)})`,
    },
    transitionProperty: "transform, opacity",
  }),
  el = {
    fade: {
      in: { opacity: 1 },
      out: { opacity: 0 },
      transitionProperty: "opacity",
    },
    scale: {
      in: { opacity: 1, transform: "scale(1)" },
      out: { opacity: 0, transform: "scale(0)" },
      common: { transformOrigin: "top" },
      transitionProperty: "transform, opacity",
    },
    "scale-y": {
      in: { opacity: 1, transform: "scaleY(1)" },
      out: { opacity: 0, transform: "scaleY(0)" },
      common: { transformOrigin: "top" },
      transitionProperty: "transform, opacity",
    },
    "scale-x": {
      in: { opacity: 1, transform: "scaleX(1)" },
      out: { opacity: 0, transform: "scaleX(0)" },
      common: { transformOrigin: "left" },
      transitionProperty: "transform, opacity",
    },
    "skew-up": {
      in: { opacity: 1, transform: "translateY(0) skew(0deg, 0deg)" },
      out: {
        opacity: 0,
        transform: `translateY(-${ae(20)}) skew(-10deg, -5deg)`,
      },
      common: { transformOrigin: "top" },
      transitionProperty: "transform, opacity",
    },
    "skew-down": {
      in: { opacity: 1, transform: "translateY(0) skew(0deg, 0deg)" },
      out: {
        opacity: 0,
        transform: `translateY(${ae(20)}) skew(-10deg, -5deg)`,
      },
      common: { transformOrigin: "bottom" },
      transitionProperty: "transform, opacity",
    },
    "rotate-left": {
      in: { opacity: 1, transform: "translateY(0) rotate(0deg)" },
      out: { opacity: 0, transform: `translateY(${ae(20)}) rotate(-5deg)` },
      common: { transformOrigin: "bottom" },
      transitionProperty: "transform, opacity",
    },
    "rotate-right": {
      in: { opacity: 1, transform: "translateY(0) rotate(0deg)" },
      out: { opacity: 0, transform: `translateY(${ae(20)}) rotate(5deg)` },
      common: { transformOrigin: "top" },
      transitionProperty: "transform, opacity",
    },
    "slide-down": {
      in: { opacity: 1, transform: "translateY(0)" },
      out: { opacity: 0, transform: "translateY(-100%)" },
      common: { transformOrigin: "top" },
      transitionProperty: "transform, opacity",
    },
    "slide-up": {
      in: { opacity: 1, transform: "translateY(0)" },
      out: { opacity: 0, transform: "translateY(100%)" },
      common: { transformOrigin: "bottom" },
      transitionProperty: "transform, opacity",
    },
    "slide-left": {
      in: { opacity: 1, transform: "translateX(0)" },
      out: { opacity: 0, transform: "translateX(100%)" },
      common: { transformOrigin: "left" },
      transitionProperty: "transform, opacity",
    },
    "slide-right": {
      in: { opacity: 1, transform: "translateX(0)" },
      out: { opacity: 0, transform: "translateX(-100%)" },
      common: { transformOrigin: "right" },
      transitionProperty: "transform, opacity",
    },
    pop: go(po({}, mo("bottom")), {
      common: { transformOrigin: "center center" },
    }),
    "pop-bottom-left": go(po({}, mo("bottom")), {
      common: { transformOrigin: "bottom left" },
    }),
    "pop-bottom-right": go(po({}, mo("bottom")), {
      common: { transformOrigin: "bottom right" },
    }),
    "pop-top-left": go(po({}, mo("top")), {
      common: { transformOrigin: "top left" },
    }),
    "pop-top-right": go(po({}, mo("top")), {
      common: { transformOrigin: "top right" },
    }),
  };
var LM = Object.defineProperty,
  qy = Object.getOwnPropertySymbols,
  TM = Object.prototype.hasOwnProperty,
  IM = Object.prototype.propertyIsEnumerable,
  Zy = (e, t, r) =>
    t in e
      ? LM(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  ia = (e, t) => {
    for (var r in t || (t = {})) TM.call(t, r) && Zy(e, r, t[r]);
    if (qy) for (var r of qy(t)) IM.call(t, r) && Zy(e, r, t[r]);
    return e;
  };
const Ky = {
  entering: "in",
  entered: "in",
  exiting: "out",
  exited: "out",
  "pre-exiting": "out",
  "pre-entering": "out",
};
function NM({ transition: e, state: t, duration: r, timingFunction: a }) {
  const c = { transitionDuration: `${r}ms`, transitionTimingFunction: a };
  return typeof e == "string"
    ? e in el
      ? ia(
          ia(
            ia({ transitionProperty: el[e].transitionProperty }, c),
            el[e].common,
          ),
          el[e][Ky[t]],
        )
      : {}
    : ia(
        ia(ia({ transitionProperty: e.transitionProperty }, c), e.common),
        e[Ky[t]],
      );
}
function MM({
  duration: e,
  exitDuration: t,
  timingFunction: r,
  mounted: a,
  onEnter: c,
  onExit: h,
  onEntered: p,
  onExited: v,
}) {
  const b = cn(),
    P = NS(),
    k = b.respectReducedMotion ? P : !1,
    [R, L] = j.useState(k ? 0 : e),
    [z, M] = j.useState(a ? "entered" : "exited"),
    F = j.useRef(-1),
    G = ($) => {
      const O = $ ? c : h,
        X = $ ? p : v;
      M($ ? "pre-entering" : "pre-exiting"), window.clearTimeout(F.current);
      const N = k ? 0 : $ ? e : t;
      if ((L(N), N === 0))
        typeof O == "function" && O(),
          typeof X == "function" && X(),
          M($ ? "entered" : "exited");
      else {
        const B = window.setTimeout(() => {
          typeof O == "function" && O(), M($ ? "entering" : "exiting");
        }, 10);
        F.current = window.setTimeout(() => {
          window.clearTimeout(B),
            typeof X == "function" && X(),
            M($ ? "entered" : "exited");
        }, N);
      }
    };
  return (
    Fi(() => {
      G(a);
    }, [a]),
    j.useEffect(() => () => window.clearTimeout(F.current), []),
    {
      transitionDuration: R,
      transitionStatus: z,
      transitionTimingFunction: r || "ease",
    }
  );
}
function vs({
  keepMounted: e,
  transition: t = "fade",
  duration: r = 250,
  exitDuration: a = r,
  mounted: c,
  children: h,
  timingFunction: p = "ease",
  onExit: v,
  onEntered: b,
  onEnter: P,
  onExited: k,
}) {
  const {
    transitionDuration: R,
    transitionStatus: L,
    transitionTimingFunction: z,
  } = MM({
    mounted: c,
    exitDuration: a,
    duration: r,
    timingFunction: p,
    onExit: v,
    onEntered: b,
    onEnter: P,
    onExited: k,
  });
  return R === 0
    ? c
      ? q.createElement(q.Fragment, null, h({}))
      : e
      ? h({ display: "none" })
      : null
    : L === "exited"
    ? e
      ? h({ display: "none" })
      : null
    : q.createElement(
        q.Fragment,
        null,
        h(NM({ transition: t, duration: R, state: L, timingFunction: z })),
      );
}
vs.displayName = "@mantine/core/Transition";
function Ag({ children: e, active: t = !0, refProp: r = "ref" }) {
  const a = pL(t),
    c = or(a, e == null ? void 0 : e.ref);
  return Wi(e) ? j.cloneElement(e, { [r]: c }) : e;
}
Ag.displayName = "@mantine/core/FocusTrap";
var $M = Object.defineProperty,
  DM = Object.defineProperties,
  zM = Object.getOwnPropertyDescriptors,
  Qy = Object.getOwnPropertySymbols,
  FM = Object.prototype.hasOwnProperty,
  jM = Object.prototype.propertyIsEnumerable,
  Jy = (e, t, r) =>
    t in e
      ? $M(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  zn = (e, t) => {
    for (var r in t || (t = {})) FM.call(t, r) && Jy(e, r, t[r]);
    if (Qy) for (var r of Qy(t)) jM.call(t, r) && Jy(e, r, t[r]);
    return e;
  },
  tl = (e, t) => DM(e, zM(t));
function ex(e, t, r, a) {
  return e === "center" || a === "center"
    ? { top: t }
    : e === "end"
    ? { bottom: r }
    : e === "start"
    ? { top: r }
    : {};
}
function tx(e, t, r, a, c) {
  return e === "center" || a === "center"
    ? { left: t }
    : e === "end"
    ? { [c === "ltr" ? "right" : "left"]: r }
    : e === "start"
    ? { [c === "ltr" ? "left" : "right"]: r }
    : {};
}
const HM = {
  bottom: "borderTopLeftRadius",
  left: "borderTopRightRadius",
  right: "borderBottomLeftRadius",
  top: "borderBottomRightRadius",
};
function XM({
  position: e,
  arrowSize: t,
  arrowOffset: r,
  arrowRadius: a,
  arrowPosition: c,
  arrowX: h,
  arrowY: p,
  dir: v,
}) {
  const [b, P = "center"] = e.split("-"),
    k = {
      width: ae(t),
      height: ae(t),
      transform: "rotate(45deg)",
      position: "absolute",
      [HM[b]]: ae(a),
    },
    R = ae(-t / 2);
  return b === "left"
    ? tl(zn(zn({}, k), ex(P, p, r, c)), {
        right: R,
        borderLeftColor: "transparent",
        borderBottomColor: "transparent",
      })
    : b === "right"
    ? tl(zn(zn({}, k), ex(P, p, r, c)), {
        left: R,
        borderRightColor: "transparent",
        borderTopColor: "transparent",
      })
    : b === "top"
    ? tl(zn(zn({}, k), tx(P, h, r, c, v)), {
        bottom: R,
        borderTopColor: "transparent",
        borderLeftColor: "transparent",
      })
    : b === "bottom"
    ? tl(zn(zn({}, k), tx(P, h, r, c, v)), {
        top: R,
        borderBottomColor: "transparent",
        borderRightColor: "transparent",
      })
    : {};
}
var BM = Object.defineProperty,
  YM = Object.defineProperties,
  WM = Object.getOwnPropertyDescriptors,
  Cc = Object.getOwnPropertySymbols,
  h_ = Object.prototype.hasOwnProperty,
  f_ = Object.prototype.propertyIsEnumerable,
  rx = (e, t, r) =>
    t in e
      ? BM(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Ih = (e, t) => {
    for (var r in t || (t = {})) h_.call(t, r) && rx(e, r, t[r]);
    if (Cc) for (var r of Cc(t)) f_.call(t, r) && rx(e, r, t[r]);
    return e;
  },
  VM = (e, t) => YM(e, WM(t)),
  GM = (e, t) => {
    var r = {};
    for (var a in e) h_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Cc)
      for (var a of Cc(e)) t.indexOf(a) < 0 && f_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Eg = j.forwardRef((e, t) => {
  var r = e,
    {
      position: a,
      arrowSize: c,
      arrowOffset: h,
      arrowRadius: p,
      arrowPosition: v,
      visible: b,
      arrowX: P,
      arrowY: k,
      style: R,
    } = r,
    L = GM(r, [
      "position",
      "arrowSize",
      "arrowOffset",
      "arrowRadius",
      "arrowPosition",
      "visible",
      "arrowX",
      "arrowY",
      "style",
    ]);
  const { dir: z } = fd();
  return b
    ? q.createElement(
        "div",
        VM(Ih({}, L), {
          ref: t,
          style: Ih(
            Ih({}, R),
            XM({
              position: a,
              arrowSize: c,
              arrowOffset: h,
              arrowRadius: p,
              arrowPosition: v,
              dir: z,
              arrowX: P,
              arrowY: k,
            }),
          ),
        }),
      )
    : null;
});
Eg.displayName = "@mantine/core/FloatingArrow";
var UM = Object.defineProperty,
  qM = Object.defineProperties,
  ZM = Object.getOwnPropertyDescriptors,
  Oc = Object.getOwnPropertySymbols,
  p_ = Object.prototype.hasOwnProperty,
  g_ = Object.prototype.propertyIsEnumerable,
  nx = (e, t, r) =>
    t in e
      ? UM(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  vi = (e, t) => {
    for (var r in t || (t = {})) p_.call(t, r) && nx(e, r, t[r]);
    if (Oc) for (var r of Oc(t)) g_.call(t, r) && nx(e, r, t[r]);
    return e;
  },
  rl = (e, t) => qM(e, ZM(t)),
  KM = (e, t) => {
    var r = {};
    for (var a in e) p_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Oc)
      for (var a of Oc(e)) t.indexOf(a) < 0 && g_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const QM = {},
  Rg = Ne((e, t) => {
    var r, a, c, h, p;
    const v = Pe("PopoverDropdown", QM, e),
      b = v,
      {
        className: P,
        style: k,
        vars: R,
        children: L,
        onKeyDownCapture: z,
        variant: M,
        classNames: F,
        styles: G,
      } = b,
      $ = KM(b, [
        "className",
        "style",
        "vars",
        "children",
        "onKeyDownCapture",
        "variant",
        "classNames",
        "styles",
      ]),
      O = i_(),
      X = kS({ opened: O.opened, shouldReturnFocus: O.returnFocus }),
      N = O.withRoles
        ? {
            "aria-labelledby": O.getTargetId(),
            id: O.getDropdownId(),
            role: "dialog",
            tabIndex: -1,
          }
        : {},
      B = or(t, O.floating);
    return O.disabled
      ? null
      : q.createElement(
          ms,
          rl(vi({}, O.portalProps), { withinPortal: O.withinPortal }),
          q.createElement(
            vs,
            rl(vi({ mounted: O.opened }, O.transitionProps), {
              transition:
                ((r = O.transitionProps) == null ? void 0 : r.transition) ||
                "fade",
              duration:
                (c = (a = O.transitionProps) == null ? void 0 : a.duration) !=
                null
                  ? c
                  : 150,
              keepMounted: O.keepMounted,
              exitDuration:
                typeof ((h = O.transitionProps) == null
                  ? void 0
                  : h.exitDuration) == "number"
                  ? O.transitionProps.exitDuration
                  : (p = O.transitionProps) == null
                  ? void 0
                  : p.duration,
            }),
            (U) => {
              var Q, ee;
              return q.createElement(
                Ag,
                { active: O.trapFocus },
                q.createElement(
                  Te,
                  vi(
                    rl(vi(vi({}, N), $), {
                      variant: M,
                      ref: B,
                      onKeyDownCapture: dR(O.onClose, {
                        active: O.closeOnEscape,
                        onTrigger: X,
                        onKeyDown: z,
                      }),
                      "data-position": O.placement,
                    }),
                    O.getStyles("dropdown", {
                      className: P,
                      props: v,
                      classNames: F,
                      styles: G,
                      style: [
                        rl(vi({}, U), {
                          zIndex: O.zIndex,
                          top: (Q = O.y) != null ? Q : 0,
                          left: (ee = O.x) != null ? ee : 0,
                          width: O.width === "target" ? void 0 : ae(O.width),
                        }),
                        k,
                      ],
                    }),
                  ),
                  L,
                  q.createElement(
                    Eg,
                    vi(
                      {
                        ref: O.arrowRef,
                        arrowX: O.arrowX,
                        arrowY: O.arrowY,
                        visible: O.withArrow,
                        position: O.placement,
                        arrowSize: O.arrowSize,
                        arrowRadius: O.arrowRadius,
                        arrowOffset: O.arrowOffset,
                        arrowPosition: O.arrowPosition,
                      },
                      O.getStyles("arrow", {
                        props: v,
                        classNames: F,
                        styles: G,
                      }),
                    ),
                  ),
                ),
              );
            },
          ),
        );
  });
Rg.classes = l_;
Rg.displayName = "@mantine/core/PopoverDropdown";
function m_(e, t) {
  if (e === "rtl" && (t.includes("right") || t.includes("left"))) {
    const [r, a] = t.split("-"),
      c = r === "right" ? "left" : "right";
    return a === void 0 ? c : `${c}-${a}`;
  }
  return t;
}
var ix = Object.getOwnPropertySymbols,
  JM = Object.prototype.hasOwnProperty,
  e$ = Object.prototype.propertyIsEnumerable,
  t$ = (e, t) => {
    var r = {};
    for (var a in e) JM.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && ix)
      for (var a of ix(e)) t.indexOf(a) < 0 && e$.call(e, a) && (r[a] = e[a]);
    return r;
  };
const r$ = {
    position: "bottom",
    offset: 8,
    positionDependencies: [],
    transitionProps: { transition: "fade", duration: 150 },
    middlewares: { flip: !0, shift: !0, inline: !1 },
    arrowSize: 7,
    arrowOffset: 5,
    arrowRadius: 0,
    arrowPosition: "side",
    closeOnClickOutside: !0,
    withinPortal: !0,
    closeOnEscape: !0,
    trapFocus: !1,
    withRoles: !0,
    returnFocus: !1,
    clickOutsideEvents: ["mousedown", "touchstart"],
    zIndex: fi("popover"),
    __staticSelector: "Popover",
    width: "max-content",
  },
  n$ = (e, { radius: t, shadow: r }) => ({
    dropdown: {
      "--popover-radius": t === void 0 ? void 0 : ln(t),
      "--popover-shadow": lg(r),
    },
  });
function pi(e) {
  var t, r, a, c, h, p;
  const v = Pe("Popover", r$, e),
    b = v,
    {
      children: P,
      position: k,
      offset: R,
      onPositionChange: L,
      positionDependencies: z,
      opened: M,
      transitionProps: F,
      width: G,
      middlewares: $,
      withArrow: O,
      arrowSize: X,
      arrowOffset: N,
      arrowRadius: B,
      arrowPosition: U,
      unstyled: Q,
      classNames: ee,
      styles: ne,
      closeOnClickOutside: le,
      withinPortal: he,
      portalProps: me,
      closeOnEscape: fe,
      clickOutsideEvents: ue,
      trapFocus: oe,
      onClose: ve,
      onOpen: ye,
      onChange: te,
      zIndex: pe,
      radius: Se,
      shadow: ke,
      id: Ce,
      defaultOpened: ze,
      __staticSelector: $e,
      withRoles: Qe,
      disabled: Be,
      returnFocus: Ue,
      variant: mt,
      keepMounted: Xe,
      vars: St,
    } = b,
    Bt = t$(b, [
      "children",
      "position",
      "offset",
      "onPositionChange",
      "positionDependencies",
      "opened",
      "transitionProps",
      "width",
      "middlewares",
      "withArrow",
      "arrowSize",
      "arrowOffset",
      "arrowRadius",
      "arrowPosition",
      "unstyled",
      "classNames",
      "styles",
      "closeOnClickOutside",
      "withinPortal",
      "portalProps",
      "closeOnEscape",
      "clickOutsideEvents",
      "trapFocus",
      "onClose",
      "onOpen",
      "onChange",
      "zIndex",
      "radius",
      "shadow",
      "id",
      "defaultOpened",
      "__staticSelector",
      "withRoles",
      "disabled",
      "returnFocus",
      "variant",
      "keepMounted",
      "vars",
    ]),
    vt = Ke({
      name: $e,
      props: v,
      classes: l_,
      classNames: ee,
      styles: ne,
      unstyled: Q,
      rootSelector: "dropdown",
      vars: St,
      varsResolver: n$,
    }),
    Pt = j.useRef(null),
    [Rt, Mn] = j.useState(null),
    [Qt, dn] = j.useState(null),
    { dir: Jt } = fd(),
    Lt = Vi(Ce),
    nt = cM({
      middlewares: $,
      width: G,
      position: m_(Jt, k),
      offset: typeof R == "number" ? R + (O ? X / 2 : 0) : R,
      arrowRef: Pt,
      arrowOffset: N,
      onPositionChange: L,
      positionDependencies: z,
      opened: M,
      defaultOpened: ze,
      onChange: te,
      onOpen: ye,
      onClose: ve,
    });
  iL(() => le && nt.onClose(), ue, [Rt, Qt]);
  const hn = j.useCallback(
      (Je) => {
        Mn(Je), nt.floating.refs.setReference(Je);
      },
      [nt.floating.refs.setReference],
    ),
    Gr = j.useCallback(
      (Je) => {
        dn(Je), nt.floating.refs.setFloating(Je);
      },
      [nt.floating.refs.setFloating],
    );
  return q.createElement(
    uM,
    {
      value: {
        returnFocus: Ue,
        disabled: Be,
        controlled: nt.controlled,
        reference: hn,
        floating: Gr,
        x: nt.floating.x,
        y: nt.floating.y,
        arrowX:
          (a =
            (r = (t = nt.floating) == null ? void 0 : t.middlewareData) == null
              ? void 0
              : r.arrow) == null
            ? void 0
            : a.x,
        arrowY:
          (p =
            (h = (c = nt.floating) == null ? void 0 : c.middlewareData) == null
              ? void 0
              : h.arrow) == null
            ? void 0
            : p.y,
        opened: nt.opened,
        arrowRef: Pt,
        transitionProps: F,
        width: G,
        withArrow: O,
        arrowSize: X,
        arrowOffset: N,
        arrowRadius: B,
        arrowPosition: U,
        placement: nt.floating.placement,
        trapFocus: oe,
        withinPortal: he,
        portalProps: me,
        zIndex: pe,
        radius: Se,
        shadow: ke,
        closeOnEscape: fe,
        onClose: nt.onClose,
        onToggle: nt.onToggle,
        getTargetId: () => `${Lt}-target`,
        getDropdownId: () => `${Lt}-dropdown`,
        withRoles: Qe,
        targetProps: Bt,
        __staticSelector: $e,
        classNames: ee,
        styles: ne,
        unstyled: Q,
        variant: mt,
        keepMounted: Xe,
        getStyles: vt,
      },
    },
    P,
  );
}
pi.Target = s_;
pi.Dropdown = Rg;
pi.displayName = "@mantine/core/Popover";
pi.extend = (e) => e;
var i$ = { root: "m-8d3f4000", loader: "m-302b9fb1", group: "m-1a0f1b21" };
const yd = i$;
var a$ = Object.defineProperty,
  o$ = Object.defineProperties,
  s$ = Object.getOwnPropertyDescriptors,
  kc = Object.getOwnPropertySymbols,
  v_ = Object.prototype.hasOwnProperty,
  y_ = Object.prototype.propertyIsEnumerable,
  ax = (e, t, r) =>
    t in e
      ? a$(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  ox = (e, t) => {
    for (var r in t || (t = {})) v_.call(t, r) && ax(e, r, t[r]);
    if (kc) for (var r of kc(t)) y_.call(t, r) && ax(e, r, t[r]);
    return e;
  },
  l$ = (e, t) => o$(e, s$(t)),
  c$ = (e, t) => {
    var r = {};
    for (var a in e) v_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && kc)
      for (var a of kc(e)) t.indexOf(a) < 0 && y_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const sx = { orientation: "horizontal" },
  u$ = (e, { borderWidth: t }) => ({ group: { "--ai-border-width": ae(t) } }),
  Lg = Ne((e, t) => {
    const r = Pe("ActionIconGroup", sx, e),
      a = Pe("ActionIconGroup", sx, e),
      {
        className: c,
        style: h,
        classNames: p,
        styles: v,
        unstyled: b,
        orientation: P,
        vars: k,
        borderWidth: R,
        variant: L,
      } = a,
      z = c$(a, [
        "className",
        "style",
        "classNames",
        "styles",
        "unstyled",
        "orientation",
        "vars",
        "borderWidth",
        "variant",
      ]),
      M = Ke({
        name: "ActionIconGroup",
        props: r,
        classes: yd,
        className: c,
        style: h,
        classNames: p,
        styles: v,
        unstyled: b,
        vars: k,
        varsResolver: u$,
        rootSelector: "group",
      });
    return q.createElement(
      Te,
      ox(
        l$(ox({}, M("group")), {
          ref: t,
          variant: L,
          mod: { "data-orientation": P },
          role: "group",
        }),
        z,
      ),
    );
  });
Lg.classes = yd;
Lg.displayName = "@mantine/core/ActionIconGroup";
var d$ = {
  root: "m-5ae2e3c",
  barsLoader: "m-7a2bd4cd",
  bar: "m-870bb79",
  "bars-loader-animation": "m-5d2b3b9d",
  dotsLoader: "m-4e3f22d7",
  dot: "m-870c4af",
  "loader-dots-animation": "m-aac34a1",
  ovalLoader: "m-b34414df",
  "oval-loader-animation": "m-f8e89c4b",
};
const Fr = d$;
var h$ = Object.defineProperty,
  f$ = Object.defineProperties,
  p$ = Object.getOwnPropertyDescriptors,
  Ac = Object.getOwnPropertySymbols,
  x_ = Object.prototype.hasOwnProperty,
  b_ = Object.prototype.propertyIsEnumerable,
  lx = (e, t, r) =>
    t in e
      ? h$(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  g$ = (e, t) => {
    for (var r in t || (t = {})) x_.call(t, r) && lx(e, r, t[r]);
    if (Ac) for (var r of Ac(t)) b_.call(t, r) && lx(e, r, t[r]);
    return e;
  },
  m$ = (e, t) => f$(e, p$(t)),
  v$ = (e, t) => {
    var r = {};
    for (var a in e) x_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Ac)
      for (var a of Ac(e)) t.indexOf(a) < 0 && b_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const y$ = j.forwardRef((e, t) => {
  var r = e,
    { className: a } = r,
    c = v$(r, ["className"]);
  return q.createElement(
    Te,
    m$(g$({ component: "span", className: kt(Fr.barsLoader, a) }, c), {
      ref: t,
    }),
    q.createElement("span", { className: Fr.bar }),
    q.createElement("span", { className: Fr.bar }),
    q.createElement("span", { className: Fr.bar }),
  );
});
var x$ = Object.defineProperty,
  b$ = Object.defineProperties,
  w$ = Object.getOwnPropertyDescriptors,
  Ec = Object.getOwnPropertySymbols,
  w_ = Object.prototype.hasOwnProperty,
  S_ = Object.prototype.propertyIsEnumerable,
  cx = (e, t, r) =>
    t in e
      ? x$(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  S$ = (e, t) => {
    for (var r in t || (t = {})) w_.call(t, r) && cx(e, r, t[r]);
    if (Ec) for (var r of Ec(t)) S_.call(t, r) && cx(e, r, t[r]);
    return e;
  },
  P$ = (e, t) => b$(e, w$(t)),
  _$ = (e, t) => {
    var r = {};
    for (var a in e) w_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Ec)
      for (var a of Ec(e)) t.indexOf(a) < 0 && S_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const C$ = j.forwardRef((e, t) => {
  var r = e,
    { className: a } = r,
    c = _$(r, ["className"]);
  return q.createElement(
    Te,
    P$(S$({ component: "span", className: kt(Fr.ovalLoader, a) }, c), {
      ref: t,
    }),
  );
});
var O$ = Object.defineProperty,
  k$ = Object.defineProperties,
  A$ = Object.getOwnPropertyDescriptors,
  Rc = Object.getOwnPropertySymbols,
  P_ = Object.prototype.hasOwnProperty,
  __ = Object.prototype.propertyIsEnumerable,
  ux = (e, t, r) =>
    t in e
      ? O$(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  E$ = (e, t) => {
    for (var r in t || (t = {})) P_.call(t, r) && ux(e, r, t[r]);
    if (Rc) for (var r of Rc(t)) __.call(t, r) && ux(e, r, t[r]);
    return e;
  },
  R$ = (e, t) => k$(e, A$(t)),
  L$ = (e, t) => {
    var r = {};
    for (var a in e) P_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Rc)
      for (var a of Rc(e)) t.indexOf(a) < 0 && __.call(e, a) && (r[a] = e[a]);
    return r;
  };
const T$ = j.forwardRef((e, t) => {
  var r = e,
    { className: a } = r,
    c = L$(r, ["className"]);
  return q.createElement(
    Te,
    R$(E$({ component: "span", className: kt(Fr.dotsLoader, a) }, c), {
      ref: t,
    }),
    q.createElement("span", { className: Fr.dot }),
    q.createElement("span", { className: Fr.dot }),
    q.createElement("span", { className: Fr.dot }),
  );
});
var I$ = Object.defineProperty,
  N$ = Object.defineProperties,
  M$ = Object.getOwnPropertyDescriptors,
  Lc = Object.getOwnPropertySymbols,
  C_ = Object.prototype.hasOwnProperty,
  O_ = Object.prototype.propertyIsEnumerable,
  dx = (e, t, r) =>
    t in e
      ? I$(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  hx = (e, t) => {
    for (var r in t || (t = {})) C_.call(t, r) && dx(e, r, t[r]);
    if (Lc) for (var r of Lc(t)) O_.call(t, r) && dx(e, r, t[r]);
    return e;
  },
  $$ = (e, t) => N$(e, M$(t)),
  D$ = (e, t) => {
    var r = {};
    for (var a in e) C_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Lc)
      for (var a of Lc(e)) t.indexOf(a) < 0 && O_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const z$ = { bars: y$, oval: C$, dots: T$ },
  F$ = { loaders: z$, type: "oval" },
  j$ = (e, { size: t, color: r }) => ({
    root: {
      "--loader-size": wt(t, "loader-size"),
      "--loader-color": r ? ai(r, e) : void 0,
    },
  }),
  Tg = Ne((e, t) => {
    const r = Pe("Loader", F$, e),
      a = r,
      {
        size: c,
        color: h,
        type: p,
        vars: v,
        className: b,
        style: P,
        classNames: k,
        styles: R,
        unstyled: L,
        loaders: z,
        variant: M,
      } = a,
      F = D$(a, [
        "size",
        "color",
        "type",
        "vars",
        "className",
        "style",
        "classNames",
        "styles",
        "unstyled",
        "loaders",
        "variant",
      ]),
      G = Ke({
        name: "Loader",
        props: r,
        classes: Fr,
        className: b,
        style: P,
        classNames: k,
        styles: R,
        unstyled: L,
        vars: v,
        varsResolver: j$,
      });
    return q.createElement(
      Te,
      hx(
        $$(hx({}, G("root")), { ref: t, component: z[p], variant: M, size: c }),
        F,
      ),
    );
  });
Tg.classes = Fr;
Tg.displayName = "@mantine/core/Loader";
var H$ = Object.defineProperty,
  X$ = Object.defineProperties,
  B$ = Object.getOwnPropertyDescriptors,
  Tc = Object.getOwnPropertySymbols,
  k_ = Object.prototype.hasOwnProperty,
  A_ = Object.prototype.propertyIsEnumerable,
  fx = (e, t, r) =>
    t in e
      ? H$(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  nl = (e, t) => {
    for (var r in t || (t = {})) k_.call(t, r) && fx(e, r, t[r]);
    if (Tc) for (var r of Tc(t)) A_.call(t, r) && fx(e, r, t[r]);
    return e;
  },
  px = (e, t) => X$(e, B$(t)),
  Y$ = (e, t) => {
    var r = {};
    for (var a in e) k_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Tc)
      for (var a of Tc(e)) t.indexOf(a) < 0 && A_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const W$ = {},
  V$ = (e, { size: t, radius: r, variant: a, gradient: c, color: h }) => {
    const p = e.variantColorResolver({
      color: h || e.primaryColor,
      theme: e,
      gradient: c,
      variant: a || "filled",
    });
    return {
      root: {
        "--ai-size": wt(t, "ai-size"),
        "--ai-radius": r === void 0 ? void 0 : ln(r),
        "--ai-bg": h || a ? p.background : void 0,
        "--ai-hover": h || a ? p.hover : void 0,
        "--ai-color": h || a ? p.color : void 0,
        "--ai-bd": h || a ? p.border : void 0,
      },
    };
  },
  Oa = Cr((e, t) => {
    const r = Pe("ActionIcon", W$, e),
      a = r,
      {
        className: c,
        unstyled: h,
        variant: p,
        classNames: v,
        styles: b,
        style: P,
        loading: k,
        loaderProps: R,
        size: L,
        color: z,
        radius: M,
        __staticSelector: F,
        gradient: G,
        vars: $,
        children: O,
        disabled: X,
        "data-disabled": N,
      } = a,
      B = Y$(a, [
        "className",
        "unstyled",
        "variant",
        "classNames",
        "styles",
        "style",
        "loading",
        "loaderProps",
        "size",
        "color",
        "radius",
        "__staticSelector",
        "gradient",
        "vars",
        "children",
        "disabled",
        "data-disabled",
      ]),
      U = Ke({
        name: ["ActionIcon", F],
        props: r,
        className: c,
        style: P,
        classes: yd,
        classNames: v,
        styles: b,
        unstyled: h,
        vars: $,
        varsResolver: V$,
      });
    return q.createElement(
      fs,
      px(nl(nl({}, U("root", { active: !X && !k && !N })), B), {
        unstyled: h,
        variant: p,
        size: L,
        disabled: X || k,
        ref: t,
        mod: { loading: k, disabled: X || N },
      }),
      k
        ? q.createElement(
            Tg,
            nl(
              px(nl({}, U("loader")), {
                color: "var(--ai-color)",
                size: "calc(var(--ai-size) * 0.55)",
              }),
              R,
            ),
          )
        : O,
    );
  });
Oa.classes = yd;
Oa.displayName = "@mantine/core/ActionIcon";
Oa.Group = Lg;
var G$ = Object.defineProperty,
  U$ = Object.defineProperties,
  q$ = Object.getOwnPropertyDescriptors,
  Ic = Object.getOwnPropertySymbols,
  E_ = Object.prototype.hasOwnProperty,
  R_ = Object.prototype.propertyIsEnumerable,
  gx = (e, t, r) =>
    t in e
      ? G$(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  mx = (e, t) => {
    for (var r in t || (t = {})) E_.call(t, r) && gx(e, r, t[r]);
    if (Ic) for (var r of Ic(t)) R_.call(t, r) && gx(e, r, t[r]);
    return e;
  },
  Z$ = (e, t) => U$(e, q$(t)),
  K$ = (e, t) => {
    var r = {};
    for (var a in e) E_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Ic)
      for (var a of Ic(e)) t.indexOf(a) < 0 && R_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const L_ = j.forwardRef((e, t) => {
  var r = e,
    { size: a = "var(--cb-icon-size, 70%)", style: c } = r,
    h = K$(r, ["size", "style"]);
  return q.createElement(
    "svg",
    mx(
      {
        viewBox: "0 0 15 15",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        style: Z$(mx({}, c), { width: a, height: a }),
        ref: t,
      },
      h,
    ),
    q.createElement("path", {
      d: "M11.7816 4.03157C12.0062 3.80702 12.0062 3.44295 11.7816 3.2184C11.5571 2.99385 11.193 2.99385 10.9685 3.2184L7.50005 6.68682L4.03164 3.2184C3.80708 2.99385 3.44301 2.99385 3.21846 3.2184C2.99391 3.44295 2.99391 3.80702 3.21846 4.03157L6.68688 7.49999L3.21846 10.9684C2.99391 11.193 2.99391 11.557 3.21846 11.7816C3.44301 12.0061 3.80708 12.0061 4.03164 11.7816L7.50005 8.31316L10.9685 11.7816C11.193 12.0061 11.5571 12.0061 11.7816 11.7816C12.0062 11.557 12.0062 11.193 11.7816 10.9684L8.31322 7.49999L11.7816 4.03157Z",
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
    }),
  );
});
L_.displayName = "@mantine/core/CloseIcon";
var Q$ = { root: "m-86a44da5", "root--subtle": "m-220c80f2" };
const T_ = Q$;
var J$ = Object.defineProperty,
  eD = Object.defineProperties,
  tD = Object.getOwnPropertyDescriptors,
  Nc = Object.getOwnPropertySymbols,
  I_ = Object.prototype.hasOwnProperty,
  N_ = Object.prototype.propertyIsEnumerable,
  vx = (e, t, r) =>
    t in e
      ? J$(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  yx = (e, t) => {
    for (var r in t || (t = {})) I_.call(t, r) && vx(e, r, t[r]);
    if (Nc) for (var r of Nc(t)) N_.call(t, r) && vx(e, r, t[r]);
    return e;
  },
  rD = (e, t) => eD(e, tD(t)),
  nD = (e, t) => {
    var r = {};
    for (var a in e) I_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Nc)
      for (var a of Nc(e)) t.indexOf(a) < 0 && N_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const iD = { variant: "subtle" },
  aD = (e, { size: t, radius: r, iconSize: a }) => ({
    root: {
      "--cb-size": wt(t, "cb-size"),
      "--cb-radius": r === void 0 ? void 0 : ln(r),
      "--cb-icon-size": ae(a),
    },
  }),
  xd = Cr((e, t) => {
    const r = Pe("CloseButton", iD, e),
      a = r,
      {
        iconSize: c,
        children: h,
        vars: p,
        radius: v,
        className: b,
        classNames: P,
        style: k,
        styles: R,
        unstyled: L,
        "data-disabled": z,
        disabled: M,
        variant: F,
      } = a,
      G = nD(a, [
        "iconSize",
        "children",
        "vars",
        "radius",
        "className",
        "classNames",
        "style",
        "styles",
        "unstyled",
        "data-disabled",
        "disabled",
        "variant",
      ]),
      $ = Ke({
        name: "CloseButton",
        props: r,
        className: b,
        style: k,
        classes: T_,
        classNames: P,
        styles: R,
        unstyled: L,
        vars: p,
        varsResolver: aD,
      });
    return q.createElement(
      fs,
      yx(
        rD(yx({ ref: t }, G), {
          unstyled: L,
          variant: F,
          disabled: M,
          mod: { disabled: M || z },
        }),
        $("root", { variant: F, active: !0 }),
      ),
      q.createElement(L_, null),
      h,
    );
  });
xd.classes = T_;
xd.displayName = "@mantine/core/CloseButton";
function oD(e) {
  return j.Children.toArray(e).filter(Boolean);
}
var sD = { root: "m-4081bf90" };
const M_ = sD;
var lD = Object.defineProperty,
  cD = Object.defineProperties,
  uD = Object.getOwnPropertyDescriptors,
  Mc = Object.getOwnPropertySymbols,
  $_ = Object.prototype.hasOwnProperty,
  D_ = Object.prototype.propertyIsEnumerable,
  xx = (e, t, r) =>
    t in e
      ? lD(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  bx = (e, t) => {
    for (var r in t || (t = {})) $_.call(t, r) && xx(e, r, t[r]);
    if (Mc) for (var r of Mc(t)) D_.call(t, r) && xx(e, r, t[r]);
    return e;
  },
  dD = (e, t) => cD(e, uD(t)),
  hD = (e, t) => {
    var r = {};
    for (var a in e) $_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Mc)
      for (var a of Mc(e)) t.indexOf(a) < 0 && D_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const fD = {
    preventGrowOverflow: !0,
    gap: "md",
    align: "center",
    justify: "flex-start",
    wrap: "wrap",
  },
  pD = (
    e,
    { grow: t, preventGrowOverflow: r, gap: a, align: c, justify: h, wrap: p },
    { childWidth: v },
  ) => ({
    root: {
      "--group-child-width": t && r ? v : void 0,
      "--group-gap": Wa(a),
      "--group-align": c,
      "--group-justify": h,
      "--group-wrap": p,
    },
  }),
  Oi = Ne((e, t) => {
    const r = Pe("Group", fD, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        children: P,
        gap: k,
        align: R,
        justify: L,
        wrap: z,
        grow: M,
        preventGrowOverflow: F,
        vars: G,
        variant: $,
        __size: O,
      } = a,
      X = hD(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "children",
        "gap",
        "align",
        "justify",
        "wrap",
        "grow",
        "preventGrowOverflow",
        "vars",
        "variant",
        "__size",
      ]),
      N = oD(P),
      B = N.length,
      U = Wa(k ?? "md"),
      ee = { childWidth: `calc(${100 / B}% - (${U} - ${U} / ${B}))` },
      ne = Ke({
        name: "Group",
        props: r,
        stylesCtx: ee,
        className: h,
        style: p,
        classes: M_,
        classNames: c,
        styles: v,
        unstyled: b,
        vars: G,
        varsResolver: pD,
      });
    return q.createElement(
      Te,
      bx(
        dD(bx({}, ne("root")), {
          ref: t,
          variant: $,
          mod: { grow: M },
          size: O,
        }),
        X,
      ),
      N,
    );
  });
Oi.classes = M_;
Oi.displayName = "@mantine/core/Group";
var gD = { root: "m-9814e45f" };
const z_ = gD;
var mD = Object.defineProperty,
  vD = Object.defineProperties,
  yD = Object.getOwnPropertyDescriptors,
  $c = Object.getOwnPropertySymbols,
  F_ = Object.prototype.hasOwnProperty,
  j_ = Object.prototype.propertyIsEnumerable,
  wx = (e, t, r) =>
    t in e
      ? mD(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Sx = (e, t) => {
    for (var r in t || (t = {})) F_.call(t, r) && wx(e, r, t[r]);
    if ($c) for (var r of $c(t)) j_.call(t, r) && wx(e, r, t[r]);
    return e;
  },
  xD = (e, t) => vD(e, yD(t)),
  bD = (e, t) => {
    var r = {};
    for (var a in e) F_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && $c)
      for (var a of $c(e)) t.indexOf(a) < 0 && j_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const wD = { zIndex: fi("modal") },
  SD = (
    e,
    {
      gradient: t,
      color: r,
      backgroundOpacity: a,
      blur: c,
      radius: h,
      zIndex: p,
    },
  ) => ({
    root: {
      "--overlay-bg":
        t ||
        ((r !== void 0 || a !== void 0) && Vt(r || "#000", a ?? 0.6)) ||
        void 0,
      "--overlay-filter": c ? `blur(${ae(c)})` : void 0,
      "--overlay-radius": h === void 0 ? void 0 : ln(h),
      "--overlay-z-index": p == null ? void 0 : p.toString(),
    },
  }),
  Ig = Cr((e, t) => {
    const r = Pe("Overlay", wD, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        fixed: k,
        center: R,
        children: L,
        radius: z,
        zIndex: M,
        gradient: F,
        blur: G,
        color: $,
        backgroundOpacity: O,
      } = a,
      X = bD(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "fixed",
        "center",
        "children",
        "radius",
        "zIndex",
        "gradient",
        "blur",
        "color",
        "backgroundOpacity",
      ]),
      N = Ke({
        name: "Overlay",
        props: r,
        classes: z_,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        vars: P,
        varsResolver: SD,
      });
    return q.createElement(
      Te,
      Sx(xD(Sx({ ref: t }, N("root")), { mod: { center: R, fixed: k } }), X),
      L,
    );
  });
Ig.classes = z_;
Ig.displayName = "@mantine/core/Overlay";
const [PD, Ln] = hi("ModalBase component was not found in tree");
function _D({ opened: e, transitionDuration: t }) {
  const [r, a] = j.useState(e),
    c = j.useRef(),
    p = NS() ? 0 : t;
  return (
    j.useEffect(
      () => (
        e
          ? (a(!0), window.clearTimeout(c.current))
          : p === 0
          ? a(!1)
          : (c.current = window.setTimeout(() => a(!1), p)),
        () => window.clearTimeout(c.current)
      ),
      [e, p],
    ),
    r
  );
}
function CD({
  id: e,
  transitionProps: t,
  opened: r,
  trapFocus: a,
  closeOnEscape: c,
  onClose: h,
  returnFocus: p,
}) {
  const v = Vi(e),
    [b, P] = j.useState(!1),
    [k, R] = j.useState(!1),
    L =
      typeof (t == null ? void 0 : t.duration) == "number"
        ? t == null
          ? void 0
          : t.duration
        : 200,
    z = _D({ opened: r, transitionDuration: L });
  return (
    TS("keydown", (M) => {
      !a && M.key === "Escape" && c && h();
    }),
    kS({ opened: r, shouldReturnFocus: a && p }),
    {
      _id: v,
      titleMounted: b,
      bodyMounted: k,
      shouldLockScroll: z,
      setTitleMounted: P,
      setBodyMounted: R,
    }
  );
}
var OD = Object.defineProperty,
  kD = Object.defineProperties,
  AD = Object.getOwnPropertyDescriptors,
  Dc = Object.getOwnPropertySymbols,
  H_ = Object.prototype.hasOwnProperty,
  X_ = Object.prototype.propertyIsEnumerable,
  Px = (e, t, r) =>
    t in e
      ? OD(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  il = (e, t) => {
    for (var r in t || (t = {})) H_.call(t, r) && Px(e, r, t[r]);
    if (Dc) for (var r of Dc(t)) X_.call(t, r) && Px(e, r, t[r]);
    return e;
  },
  al = (e, t) => kD(e, AD(t)),
  ED = (e, t) => {
    var r = {};
    for (var a in e) H_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Dc)
      for (var a of Dc(e)) t.indexOf(a) < 0 && X_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const RD = j.forwardRef((e, t) => {
  var r = e,
    {
      keepMounted: a,
      opened: c,
      onClose: h,
      id: p,
      transitionProps: v,
      trapFocus: b,
      closeOnEscape: P,
      returnFocus: k,
      closeOnClickOutside: R,
      withinPortal: L,
      portalProps: z,
      lockScroll: M,
      children: F,
      zIndex: G,
      shadow: $,
      padding: O,
      __vars: X,
      unstyled: N,
    } = r,
    B = ED(r, [
      "keepMounted",
      "opened",
      "onClose",
      "id",
      "transitionProps",
      "trapFocus",
      "closeOnEscape",
      "returnFocus",
      "closeOnClickOutside",
      "withinPortal",
      "portalProps",
      "lockScroll",
      "children",
      "zIndex",
      "shadow",
      "padding",
      "__vars",
      "unstyled",
    ]);
  const {
    _id: U,
    titleMounted: Q,
    bodyMounted: ee,
    shouldLockScroll: ne,
    setTitleMounted: le,
    setBodyMounted: he,
  } = CD({
    id: p,
    transitionProps: v,
    opened: c,
    trapFocus: b,
    closeOnEscape: P,
    onClose: h,
    returnFocus: k,
  });
  return q.createElement(
    ms,
    al(il({}, z), { withinPortal: L }),
    q.createElement(
      PD,
      {
        value: {
          opened: c,
          onClose: h,
          closeOnClickOutside: R,
          transitionProps: al(il({}, v), { keepMounted: a }),
          getTitleId: () => `${U}-title`,
          getBodyId: () => `${U}-body`,
          titleMounted: Q,
          bodyMounted: ee,
          setTitleMounted: le,
          setBodyMounted: he,
          trapFocus: b,
          closeOnEscape: P,
          zIndex: G,
          unstyled: N,
        },
      },
      q.createElement(
        ag,
        { enabled: ne && M },
        q.createElement(
          Te,
          al(il({ ref: t }, B), {
            __vars: al(il({}, X), {
              "--mb-z-index": (G || fi("modal")).toString(),
              "--mb-shadow": lg($),
              "--mb-padding": Wa(O),
            }),
          }),
          F,
        ),
      ),
    ),
  );
});
function LD() {
  const e = Ln();
  return (
    j.useEffect(() => (e.setBodyMounted(!0), () => e.setBodyMounted(!1)), []),
    e.getBodyId()
  );
}
var TD = {
  title: "m-615af6c9",
  header: "m-b5489c3c",
  inner: "m-60c222c7",
  content: "m-fd1ab0aa",
  close: "m-606cb269",
  body: "m-5df29311",
};
const ja = TD;
var ID = Object.defineProperty,
  ND = Object.defineProperties,
  MD = Object.getOwnPropertyDescriptors,
  zc = Object.getOwnPropertySymbols,
  B_ = Object.prototype.hasOwnProperty,
  Y_ = Object.prototype.propertyIsEnumerable,
  _x = (e, t, r) =>
    t in e
      ? ID(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  $D = (e, t) => {
    for (var r in t || (t = {})) B_.call(t, r) && _x(e, r, t[r]);
    if (zc) for (var r of zc(t)) Y_.call(t, r) && _x(e, r, t[r]);
    return e;
  },
  DD = (e, t) => ND(e, MD(t)),
  zD = (e, t) => {
    var r = {};
    for (var a in e) B_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && zc)
      for (var a of zc(e)) t.indexOf(a) < 0 && Y_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const W_ = j.forwardRef((e, t) => {
  var r = e,
    { className: a } = r,
    c = zD(r, ["className"]);
  const h = LD(),
    p = Ln();
  return q.createElement(
    Te,
    DD($D({ ref: t }, c), {
      id: h,
      className: kt({ [ja.body]: !p.unstyled }, a),
    }),
  );
});
W_.displayName = "@mantine/core/ModalBaseBody";
var FD = Object.defineProperty,
  jD = Object.defineProperties,
  HD = Object.getOwnPropertyDescriptors,
  Fc = Object.getOwnPropertySymbols,
  V_ = Object.prototype.hasOwnProperty,
  G_ = Object.prototype.propertyIsEnumerable,
  Cx = (e, t, r) =>
    t in e
      ? FD(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  XD = (e, t) => {
    for (var r in t || (t = {})) V_.call(t, r) && Cx(e, r, t[r]);
    if (Fc) for (var r of Fc(t)) G_.call(t, r) && Cx(e, r, t[r]);
    return e;
  },
  BD = (e, t) => jD(e, HD(t)),
  YD = (e, t) => {
    var r = {};
    for (var a in e) V_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Fc)
      for (var a of Fc(e)) t.indexOf(a) < 0 && G_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const U_ = j.forwardRef((e, t) => {
  var r = e,
    { className: a, onClick: c } = r,
    h = YD(r, ["className", "onClick"]);
  const p = Ln();
  return q.createElement(
    xd,
    BD(XD({ ref: t }, h), {
      onClick: (v) => {
        p.onClose(), c == null || c(v);
      },
      className: kt({ [ja.close]: !p.unstyled }, a),
      unstyled: p.unstyled,
    }),
  );
});
U_.displayName = "@mantine/core/ModalBaseCloseButton";
var WD = Object.defineProperty,
  VD = Object.defineProperties,
  GD = Object.getOwnPropertyDescriptors,
  jc = Object.getOwnPropertySymbols,
  q_ = Object.prototype.hasOwnProperty,
  Z_ = Object.prototype.propertyIsEnumerable,
  Ox = (e, t, r) =>
    t in e
      ? WD(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  ol = (e, t) => {
    for (var r in t || (t = {})) q_.call(t, r) && Ox(e, r, t[r]);
    if (jc) for (var r of jc(t)) Z_.call(t, r) && Ox(e, r, t[r]);
    return e;
  },
  kx = (e, t) => VD(e, GD(t)),
  UD = (e, t) => {
    var r = {};
    for (var a in e) q_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && jc)
      for (var a of jc(e)) t.indexOf(a) < 0 && Z_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const qD = j.forwardRef((e, t) => {
  var r = e,
    {
      transitionProps: a,
      className: c,
      innerProps: h,
      onKeyDown: p,
      style: v,
    } = r,
    b = UD(r, [
      "transitionProps",
      "className",
      "innerProps",
      "onKeyDown",
      "style",
    ]);
  const P = Ln(),
    k = (R) => {
      var L;
      ((L = R.target) == null
        ? void 0
        : L.getAttribute("data-mantine-stop-propagation")) !== "true" &&
        R.key === "Escape" &&
        P.closeOnEscape &&
        P.onClose(),
        p == null || p(R);
    };
  return q.createElement(
    vs,
    ol(ol({ mounted: P.opened, transition: "pop" }, P.transitionProps), a),
    (R) =>
      q.createElement(
        "div",
        kx(ol({}, h), {
          className: kt({ [ja.inner]: !P.unstyled }, h.className),
        }),
        q.createElement(
          Ag,
          { active: P.opened && P.trapFocus },
          q.createElement(
            ps,
            kx(ol({}, b), {
              component: "section",
              role: "dialog",
              tabIndex: -1,
              "aria-modal": !0,
              "aria-describedby": P.bodyMounted ? P.getBodyId() : void 0,
              "aria-labelledby": P.titleMounted ? P.getTitleId() : void 0,
              onKeyDown: k,
              ref: t,
              style: [v, R],
              className: kt({ [ja.content]: !P.unstyled }, c),
              unstyled: P.unstyled,
            }),
            b.children,
          ),
        ),
      ),
  );
});
var ZD = Object.defineProperty,
  Hc = Object.getOwnPropertySymbols,
  K_ = Object.prototype.hasOwnProperty,
  Q_ = Object.prototype.propertyIsEnumerable,
  Ax = (e, t, r) =>
    t in e
      ? ZD(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  KD = (e, t) => {
    for (var r in t || (t = {})) K_.call(t, r) && Ax(e, r, t[r]);
    if (Hc) for (var r of Hc(t)) Q_.call(t, r) && Ax(e, r, t[r]);
    return e;
  },
  QD = (e, t) => {
    var r = {};
    for (var a in e) K_.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Hc)
      for (var a of Hc(e)) t.indexOf(a) < 0 && Q_.call(e, a) && (r[a] = e[a]);
    return r;
  };
const J_ = j.forwardRef((e, t) => {
  var r = e,
    { className: a } = r,
    c = QD(r, ["className"]);
  const h = Ln();
  return q.createElement(
    Te,
    KD({ ref: t, className: kt({ [ja.header]: !h.unstyled }, a) }, c),
  );
});
J_.displayName = "@mantine/core/ModalBaseHeader";
var JD = Object.defineProperty,
  Ex = Object.getOwnPropertySymbols,
  ez = Object.prototype.hasOwnProperty,
  tz = Object.prototype.propertyIsEnumerable,
  Rx = (e, t, r) =>
    t in e
      ? JD(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Nh = (e, t) => {
    for (var r in t || (t = {})) ez.call(t, r) && Rx(e, r, t[r]);
    if (Ex) for (var r of Ex(t)) tz.call(t, r) && Rx(e, r, t[r]);
    return e;
  };
const rz = { duration: 200, timingFunction: "ease", transition: "fade" };
function nz(e) {
  const t = Ln();
  return Nh(Nh(Nh({}, rz), t.transitionProps), e);
}
var iz = Object.defineProperty,
  az = Object.defineProperties,
  oz = Object.getOwnPropertyDescriptors,
  Xc = Object.getOwnPropertySymbols,
  eC = Object.prototype.hasOwnProperty,
  tC = Object.prototype.propertyIsEnumerable,
  Lx = (e, t, r) =>
    t in e
      ? iz(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Tx = (e, t) => {
    for (var r in t || (t = {})) eC.call(t, r) && Lx(e, r, t[r]);
    if (Xc) for (var r of Xc(t)) tC.call(t, r) && Lx(e, r, t[r]);
    return e;
  },
  sz = (e, t) => az(e, oz(t)),
  lz = (e, t) => {
    var r = {};
    for (var a in e) eC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Xc)
      for (var a of Xc(e)) t.indexOf(a) < 0 && tC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const rC = j.forwardRef((e, t) => {
  var r = e,
    { onClick: a, transitionProps: c, style: h } = r,
    p = lz(r, ["onClick", "transitionProps", "style"]);
  const v = Ln(),
    b = nz(c);
  return q.createElement(
    vs,
    sz(Tx({ mounted: v.opened }, b), { transition: "fade" }),
    (P) =>
      q.createElement(
        Ig,
        Tx(
          {
            ref: t,
            fixed: !0,
            style: [h, P],
            zIndex: v.zIndex,
            unstyled: v.unstyled,
            onClick: (k) => {
              a == null || a(k), v.closeOnClickOutside && v.onClose();
            },
          },
          p,
        ),
      ),
  );
});
rC.displayName = "@mantine/core/ModalBaseOverlay";
function cz() {
  const e = Ln();
  return (
    j.useEffect(() => (e.setTitleMounted(!0), () => e.setTitleMounted(!1)), []),
    e.getTitleId()
  );
}
var uz = Object.defineProperty,
  dz = Object.defineProperties,
  hz = Object.getOwnPropertyDescriptors,
  Bc = Object.getOwnPropertySymbols,
  nC = Object.prototype.hasOwnProperty,
  iC = Object.prototype.propertyIsEnumerable,
  Ix = (e, t, r) =>
    t in e
      ? uz(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  fz = (e, t) => {
    for (var r in t || (t = {})) nC.call(t, r) && Ix(e, r, t[r]);
    if (Bc) for (var r of Bc(t)) iC.call(t, r) && Ix(e, r, t[r]);
    return e;
  },
  pz = (e, t) => dz(e, hz(t)),
  gz = (e, t) => {
    var r = {};
    for (var a in e) nC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Bc)
      for (var a of Bc(e)) t.indexOf(a) < 0 && iC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const aC = j.forwardRef((e, t) => {
  var r = e,
    { className: a } = r,
    c = gz(r, ["className"]);
  const h = cz(),
    p = Ln();
  return q.createElement(
    Te,
    pz(
      fz(
        {
          component: "h2",
          ref: t,
          className: kt({ [ja.title]: !p.unstyled }, a),
        },
        c,
      ),
      { id: h },
    ),
  );
});
aC.displayName = "@mantine/core/ModalBaseTitle";
function mz({ children: e }) {
  return q.createElement(q.Fragment, null, e);
}
const [vz, ys] = lR({
  offsetBottom: !1,
  offsetTop: !1,
  describedBy: void 0,
  getStyles: null,
  inputId: void 0,
  labelId: void 0,
});
var yz = {
  wrapper: "m-6c018570",
  input: "m-8fb7ebe7",
  section: "m-82577fc2",
  placeholder: "m-88bacfd0",
  root: "m-46b77525",
  label: "m-8fdc1311",
  required: "m-78a94662",
  error: "m-8f816625",
  description: "m-fe47ce59",
};
const kr = yz;
var xz = Object.defineProperty,
  bz = Object.defineProperties,
  wz = Object.getOwnPropertyDescriptors,
  Yc = Object.getOwnPropertySymbols,
  oC = Object.prototype.hasOwnProperty,
  sC = Object.prototype.propertyIsEnumerable,
  Nx = (e, t, r) =>
    t in e
      ? xz(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Mh = (e, t) => {
    for (var r in t || (t = {})) oC.call(t, r) && Nx(e, r, t[r]);
    if (Yc) for (var r of Yc(t)) sC.call(t, r) && Nx(e, r, t[r]);
    return e;
  },
  Mx = (e, t) => bz(e, wz(t)),
  Sz = (e, t) => {
    var r = {};
    for (var a in e) oC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Yc)
      for (var a of Yc(e)) t.indexOf(a) < 0 && sC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const $x = { labelElement: "label" },
  Pz = (e, { size: t }) => ({
    label: { "--input-label-size": Xr(t), "--input-asterisk-color": void 0 },
  }),
  bd = Ne((e, t) => {
    const r = Pe("InputLabel", $x, e),
      a = Pe("InputLabel", $x, r),
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        labelElement: k,
        size: R,
        required: L,
        htmlFor: z,
        onMouseDown: M,
        children: F,
        __staticSelector: G,
        variant: $,
      } = a,
      O = Sz(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "labelElement",
        "size",
        "required",
        "htmlFor",
        "onMouseDown",
        "children",
        "__staticSelector",
        "variant",
      ]),
      X = Ke({
        name: ["InputWrapper", G],
        props: r,
        classes: kr,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        rootSelector: "label",
        vars: P,
        varsResolver: Pz,
      }),
      N = ys(),
      B = (N == null ? void 0 : N.getStyles) || X;
    return q.createElement(
      Te,
      Mh(
        Mx(Mh({}, B("label")), {
          component: k,
          variant: $,
          size: R,
          ref: t,
          htmlFor: k === "label" ? z : void 0,
          mod: { required: L },
          onMouseDown: (U) => {
            M == null || M(U),
              !U.defaultPrevented && U.detail > 1 && U.preventDefault();
          },
        }),
        O,
      ),
      F,
      L &&
        q.createElement(
          "span",
          Mx(Mh({}, B("required")), { "aria-hidden": !0 }),
          " *",
        ),
    );
  });
bd.classes = kr;
bd.displayName = "@mantine/core/InputLabel";
var _z = Object.defineProperty,
  Wc = Object.getOwnPropertySymbols,
  lC = Object.prototype.hasOwnProperty,
  cC = Object.prototype.propertyIsEnumerable,
  Dx = (e, t, r) =>
    t in e
      ? _z(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  zx = (e, t) => {
    for (var r in t || (t = {})) lC.call(t, r) && Dx(e, r, t[r]);
    if (Wc) for (var r of Wc(t)) cC.call(t, r) && Dx(e, r, t[r]);
    return e;
  },
  Cz = (e, t) => {
    var r = {};
    for (var a in e) lC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Wc)
      for (var a of Wc(e)) t.indexOf(a) < 0 && cC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Oz = {},
  kz = (e, { size: t }) => ({
    error: {
      "--input-error-size": t === void 0 ? void 0 : `calc(${Xr(t)} - ${ae(2)})`,
    },
  }),
  wd = Ne((e, t) => {
    const r = Pe("InputError", Oz, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        size: k,
        __staticSelector: R,
        __inheritStyles: L = !0,
        variant: z,
      } = a,
      M = Cz(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "size",
        "__staticSelector",
        "__inheritStyles",
        "variant",
      ]),
      F = Ke({
        name: ["InputWrapper", R],
        props: r,
        classes: kr,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        rootSelector: "error",
        vars: P,
        varsResolver: kz,
      }),
      G = ys(),
      $ = (L && (G == null ? void 0 : G.getStyles)) || F;
    return q.createElement(
      Te,
      zx(zx({ component: "p", ref: t, variant: z, size: k }, $("error")), M),
    );
  });
wd.classes = kr;
wd.displayName = "@mantine/core/InputError";
var Az = Object.defineProperty,
  Vc = Object.getOwnPropertySymbols,
  uC = Object.prototype.hasOwnProperty,
  dC = Object.prototype.propertyIsEnumerable,
  Fx = (e, t, r) =>
    t in e
      ? Az(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  jx = (e, t) => {
    for (var r in t || (t = {})) uC.call(t, r) && Fx(e, r, t[r]);
    if (Vc) for (var r of Vc(t)) dC.call(t, r) && Fx(e, r, t[r]);
    return e;
  },
  Ez = (e, t) => {
    var r = {};
    for (var a in e) uC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Vc)
      for (var a of Vc(e)) t.indexOf(a) < 0 && dC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Hx = {},
  Rz = (e, { size: t }) => ({
    description: {
      "--input-description-size":
        t === void 0 ? void 0 : `calc(${Xr(t)} - ${ae(2)})`,
    },
  }),
  Sd = Ne((e, t) => {
    const r = Pe("InputDescription", Hx, e),
      a = Pe("InputDescription", Hx, r),
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        size: k,
        __staticSelector: R,
        __inheritStyles: L = !0,
        variant: z,
      } = a,
      M = Ez(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "size",
        "__staticSelector",
        "__inheritStyles",
        "variant",
      ]),
      F = ys(),
      G = Ke({
        name: ["InputWrapper", R],
        props: r,
        classes: kr,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        rootSelector: "description",
        vars: P,
        varsResolver: Rz,
      }),
      $ = (L && (F == null ? void 0 : F.getStyles)) || G;
    return q.createElement(
      Te,
      jx(
        jx({ component: "p", ref: t, variant: z, size: k }, $("description")),
        M,
      ),
    );
  });
Sd.classes = kr;
Sd.displayName = "@mantine/core/InputDescription";
var Lz = Object.defineProperty,
  Tz = Object.defineProperties,
  Iz = Object.getOwnPropertyDescriptors,
  Gc = Object.getOwnPropertySymbols,
  hC = Object.prototype.hasOwnProperty,
  fC = Object.prototype.propertyIsEnumerable,
  Xx = (e, t, r) =>
    t in e
      ? Lz(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Bx = (e, t) => {
    for (var r in t || (t = {})) hC.call(t, r) && Xx(e, r, t[r]);
    if (Gc) for (var r of Gc(t)) fC.call(t, r) && Xx(e, r, t[r]);
    return e;
  },
  Nz = (e, t) => Tz(e, Iz(t)),
  Mz = (e, t) => {
    var r = {};
    for (var a in e) hC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Gc)
      for (var a of Gc(e)) t.indexOf(a) < 0 && fC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Yx = {},
  Ng = Ne((e, t) => {
    const r = Pe("InputPlaceholder", Yx, e),
      a = Pe("InputPlaceholder", Yx, r),
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        __staticSelector: k,
        variant: R,
        error: L,
      } = a,
      z = Mz(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "__staticSelector",
        "variant",
        "error",
      ]),
      M = Ke({
        name: ["InputPlaceholder", k],
        props: r,
        classes: kr,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        rootSelector: "placeholder",
      });
    return q.createElement(
      Te,
      Bx(
        Nz(Bx({}, M("placeholder")), {
          mod: { error: !!L },
          component: "span",
          variant: R,
          ref: t,
        }),
        z,
      ),
    );
  });
Ng.classes = kr;
Ng.displayName = "@mantine/core/InputPlaceholder";
function $z(e, { hasDescription: t, hasError: r }) {
  const a = e.findIndex((b) => b === "input"),
    c = e[a - 1],
    h = e[a + 1];
  return {
    offsetBottom: (t && h === "description") || (r && h === "error"),
    offsetTop: (t && c === "description") || (r && c === "error"),
  };
}
var Dz = Object.defineProperty,
  zz = Object.defineProperties,
  Fz = Object.getOwnPropertyDescriptors,
  Uc = Object.getOwnPropertySymbols,
  pC = Object.prototype.hasOwnProperty,
  gC = Object.prototype.propertyIsEnumerable,
  Wx = (e, t, r) =>
    t in e
      ? Dz(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  fn = (e, t) => {
    for (var r in t || (t = {})) pC.call(t, r) && Wx(e, r, t[r]);
    if (Uc) for (var r of Uc(t)) gC.call(t, r) && Wx(e, r, t[r]);
    return e;
  },
  Vx = (e, t) => zz(e, Fz(t)),
  jz = (e, t) => {
    var r = {};
    for (var a in e) pC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Uc)
      for (var a of Uc(e)) t.indexOf(a) < 0 && gC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Hz = {
    labelElement: "label",
    inputContainer: (e) => e,
    inputWrapperOrder: ["label", "description", "input", "error"],
  },
  Xz = (e, { size: t }) => ({
    label: { "--input-label-size": Xr(t), "--input-asterisk-color": void 0 },
    error: {
      "--input-error-size": t === void 0 ? void 0 : `calc(${Xr(t)} - ${ae(2)})`,
    },
    description: {
      "--input-description-size":
        t === void 0 ? void 0 : `calc(${Xr(t)} - ${ae(2)})`,
    },
  }),
  Mg = Ne((e, t) => {
    const r = Pe("InputWrapper", Hz, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        size: k,
        variant: R,
        __staticSelector: L,
        inputContainer: z,
        inputWrapperOrder: M,
        label: F,
        error: G,
        description: $,
        labelProps: O,
        descriptionProps: X,
        errorProps: N,
        labelElement: B,
        children: U,
        withAsterisk: Q,
        id: ee,
        required: ne,
        __stylesApiProps: le,
      } = a,
      he = jz(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "size",
        "variant",
        "__staticSelector",
        "inputContainer",
        "inputWrapperOrder",
        "label",
        "error",
        "description",
        "labelProps",
        "descriptionProps",
        "errorProps",
        "labelElement",
        "children",
        "withAsterisk",
        "id",
        "required",
        "__stylesApiProps",
      ]),
      me = Ke({
        name: ["InputWrapper", L],
        props: le || r,
        classes: kr,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        vars: P,
        varsResolver: Xz,
      }),
      fe = { size: k, variant: R, __staticSelector: L },
      ue = Vi(ee),
      oe = typeof Q == "boolean" ? Q : ne,
      ve = (N == null ? void 0 : N.id) || `${ue}-error`,
      ye = (X == null ? void 0 : X.id) || `${ue}-description`,
      te = ue,
      pe = !!G && typeof G != "boolean",
      Se = !!$,
      ke = `${pe ? ve : ""} ${Se ? ye : ""}`,
      Ce = ke.trim().length > 0 ? ke.trim() : void 0,
      ze = (O == null ? void 0 : O.id) || `${ue}-label`,
      $e =
        F &&
        q.createElement(
          bd,
          fn(
            fn(
              {
                key: "label",
                labelElement: B,
                id: ze,
                htmlFor: te,
                required: oe,
              },
              fe,
            ),
            O,
          ),
          F,
        ),
      Qe =
        Se &&
        q.createElement(
          Sd,
          Vx(fn(fn({ key: "description" }, X), fe), {
            size: (X == null ? void 0 : X.size) || fe.size,
            id: (X == null ? void 0 : X.id) || ye,
          }),
          $,
        ),
      Be = q.createElement(q.Fragment, { key: "input" }, z(U)),
      Ue =
        pe &&
        q.createElement(
          wd,
          Vx(fn(fn({}, N), fe), {
            size: (N == null ? void 0 : N.size) || fe.size,
            key: "error",
            id: (N == null ? void 0 : N.id) || ve,
          }),
          G,
        ),
      mt = M.map((Xe) => {
        switch (Xe) {
          case "label":
            return $e;
          case "input":
            return Be;
          case "description":
            return Qe;
          case "error":
            return Ue;
          default:
            return null;
        }
      });
    return q.createElement(
      vz,
      {
        value: fn(
          { getStyles: me, describedBy: Ce, inputId: te, labelId: ze },
          $z(M, { hasDescription: Se, hasError: pe }),
        ),
      },
      q.createElement(
        Te,
        fn(fn({ ref: t, variant: R, size: k }, me("root")), he),
        mt,
      ),
    );
  });
Mg.classes = kr;
Mg.displayName = "@mantine/core/InputWrapper";
var Bz = Object.defineProperty,
  Yz = Object.defineProperties,
  Wz = Object.getOwnPropertyDescriptors,
  qc = Object.getOwnPropertySymbols,
  mC = Object.prototype.hasOwnProperty,
  vC = Object.prototype.propertyIsEnumerable,
  Gx = (e, t, r) =>
    t in e
      ? Bz(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Kr = (e, t) => {
    for (var r in t || (t = {})) mC.call(t, r) && Gx(e, r, t[r]);
    if (qc) for (var r of qc(t)) vC.call(t, r) && Gx(e, r, t[r]);
    return e;
  },
  sl = (e, t) => Yz(e, Wz(t)),
  Vz = (e, t) => {
    var r = {};
    for (var a in e) mC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && qc)
      for (var a of qc(e)) t.indexOf(a) < 0 && vC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Gz = {
    variant: "default",
    leftSectionPointerEvents: "none",
    rightSectionPointerEvents: "none",
    withAria: !0,
    withErrorStyles: !0,
  },
  Uz = (e, t, r) => ({
    wrapper: {
      "--input-margin-top": r.offsetTop
        ? "calc(var(--mantine-spacing-xs) / 2)"
        : void 0,
      "--input-margin-bottom": r.offsetBottom
        ? "calc(var(--mantine-spacing-xs) / 2)"
        : void 0,
      "--input-height": wt(t.size, "input-height"),
      "--input-fz": Xr(t.size),
      "--input-radius": t.radius === void 0 ? void 0 : ln(t.radius),
      "--input-left-section-width":
        t.leftSectionWidth !== void 0 ? ae(t.leftSectionWidth) : void 0,
      "--input-right-section-width":
        t.rightSectionWidth !== void 0 ? ae(t.rightSectionWidth) : void 0,
      "--input-padding-y": t.multiline ? wt(t.size, "input-padding-y") : void 0,
      "--input-left-section-pointer-events": t.leftSectionPointerEvents,
      "--input-right-section-pointer-events": t.rightSectionPointerEvents,
    },
  }),
  Xt = Cr((e, t) => {
    const r = Pe("Input", Gz, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        required: P,
        __staticSelector: k,
        __stylesApiProps: R,
        size: L,
        wrapperProps: z,
        error: M,
        disabled: F,
        leftSection: G,
        leftSectionProps: $,
        leftSectionWidth: O,
        rightSection: X,
        rightSectionProps: N,
        rightSectionWidth: B,
        rightSectionPointerEvents: U,
        leftSectionPointerEvents: Q,
        variant: ee,
        vars: ne,
        pointer: le,
        multiline: he,
        radius: me,
        id: fe,
        withAria: ue,
        withErrorStyles: oe,
      } = a,
      ve = Vz(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "required",
        "__staticSelector",
        "__stylesApiProps",
        "size",
        "wrapperProps",
        "error",
        "disabled",
        "leftSection",
        "leftSectionProps",
        "leftSectionWidth",
        "rightSection",
        "rightSectionProps",
        "rightSectionWidth",
        "rightSectionPointerEvents",
        "leftSectionPointerEvents",
        "variant",
        "vars",
        "pointer",
        "multiline",
        "radius",
        "id",
        "withAria",
        "withErrorStyles",
      ]),
      { styleProps: ye, rest: te } = hd(ve),
      pe = ys(),
      Se = {
        offsetBottom: pe == null ? void 0 : pe.offsetBottom,
        offsetTop: pe == null ? void 0 : pe.offsetTop,
      },
      ke = Ke({
        name: ["Input", k],
        props: R || r,
        classes: kr,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        stylesCtx: Se,
        rootSelector: "wrapper",
        vars: ne,
        varsResolver: Uz,
      }),
      Ce = ue
        ? {
            required: P,
            disabled: F,
            "aria-invalid": !!M,
            "aria-describedby": pe == null ? void 0 : pe.describedBy,
            id: (pe == null ? void 0 : pe.inputId) || fe,
          }
        : {};
    return q.createElement(
      Te,
      sl(Kr(Kr(Kr({}, ke("wrapper")), ye), z), {
        mod: {
          error: !!M && oe,
          pointer: le,
          disabled: F,
          multiline: he,
          "data-with-right-section": !!X,
          "data-with-left-section": !!G,
        },
        variant: ee,
        size: L,
      }),
      G &&
        q.createElement(
          "div",
          Kr(
            sl(Kr({}, $), { "data-position": "left" }),
            ke("section", {
              className: $ == null ? void 0 : $.className,
              style: $ == null ? void 0 : $.style,
            }),
          ),
          G,
        ),
      q.createElement(
        Te,
        Kr(
          sl(Kr(Kr({ component: "input" }, te), Ce), {
            ref: t,
            required: P,
            mod: { disabled: F, error: !!M && oe },
            variant: ee,
          }),
          ke("input"),
        ),
      ),
      X &&
        q.createElement(
          "div",
          Kr(
            sl(Kr({}, N), { "data-position": "right" }),
            ke("section", {
              className: N == null ? void 0 : N.className,
              style: N == null ? void 0 : N.style,
            }),
          ),
          X,
        ),
    );
  });
Xt.classes = kr;
Xt.Wrapper = Mg;
Xt.Label = bd;
Xt.Error = wd;
Xt.Description = Sd;
Xt.Placeholder = Ng;
Xt.displayName = "@mantine/core/Input";
var qz = Object.defineProperty,
  Zz = Object.defineProperties,
  Kz = Object.getOwnPropertyDescriptors,
  Zc = Object.getOwnPropertySymbols,
  yC = Object.prototype.hasOwnProperty,
  xC = Object.prototype.propertyIsEnumerable,
  Ux = (e, t, r) =>
    t in e
      ? qz(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  ll = (e, t) => {
    for (var r in t || (t = {})) yC.call(t, r) && Ux(e, r, t[r]);
    if (Zc) for (var r of Zc(t)) xC.call(t, r) && Ux(e, r, t[r]);
    return e;
  },
  Qz = (e, t) => Zz(e, Kz(t)),
  Jz = (e, t) => {
    var r = {};
    for (var a in e) yC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Zc)
      for (var a of Zc(e)) t.indexOf(a) < 0 && xC.call(e, a) && (r[a] = e[a]);
    return r;
  };
function eF(e, t, r) {
  const a = Pe(e, t, r),
    c = a,
    {
      label: h,
      description: p,
      error: v,
      required: b,
      classNames: P,
      styles: k,
      className: R,
      unstyled: L,
      __staticSelector: z,
      __stylesApiProps: M,
      errorProps: F,
      labelProps: G,
      descriptionProps: $,
      wrapperProps: O,
      id: X,
      size: N,
      style: B,
      inputContainer: U,
      inputWrapperOrder: Q,
      withAsterisk: ee,
      variant: ne,
      vars: le,
    } = c,
    he = Jz(c, [
      "label",
      "description",
      "error",
      "required",
      "classNames",
      "styles",
      "className",
      "unstyled",
      "__staticSelector",
      "__stylesApiProps",
      "errorProps",
      "labelProps",
      "descriptionProps",
      "wrapperProps",
      "id",
      "size",
      "style",
      "inputContainer",
      "inputWrapperOrder",
      "withAsterisk",
      "variant",
      "vars",
    ]),
    { styleProps: me, rest: fe } = hd(he),
    ue = ll(
      {
        label: h,
        description: p,
        error: v,
        required: b,
        classNames: P,
        className: R,
        __staticSelector: z,
        __stylesApiProps: M || a,
        errorProps: F,
        labelProps: G,
        descriptionProps: $,
        unstyled: L,
        styles: k,
        size: N,
        style: B,
        inputContainer: U,
        inputWrapperOrder: Q,
        withAsterisk: ee,
        variant: ne,
        id: X,
      },
      O,
    );
  return Qz(ll({}, fe), {
    classNames: P,
    styles: k,
    unstyled: L,
    wrapperProps: ll(ll({}, ue), me),
    inputProps: {
      required: b,
      classNames: P,
      styles: k,
      unstyled: L,
      size: N,
      __staticSelector: z,
      __stylesApiProps: M || a,
      error: v,
      variant: ne,
      id: X,
    },
  });
}
var tF = Object.defineProperty,
  rF = Object.defineProperties,
  nF = Object.getOwnPropertyDescriptors,
  Kc = Object.getOwnPropertySymbols,
  bC = Object.prototype.hasOwnProperty,
  wC = Object.prototype.propertyIsEnumerable,
  qx = (e, t, r) =>
    t in e
      ? tF(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  zo = (e, t) => {
    for (var r in t || (t = {})) bC.call(t, r) && qx(e, r, t[r]);
    if (Kc) for (var r of Kc(t)) wC.call(t, r) && qx(e, r, t[r]);
    return e;
  },
  iF = (e, t) => rF(e, nF(t)),
  aF = (e, t) => {
    var r = {};
    for (var a in e) bC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Kc)
      for (var a of Kc(e)) t.indexOf(a) < 0 && wC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const oF = { __staticSelector: "InputBase", withAria: !0 },
  Pd = Cr((e, t) => {
    const r = eF("InputBase", oF, e),
      { inputProps: a, wrapperProps: c } = r,
      h = aF(r, ["inputProps", "wrapperProps"]);
    return q.createElement(
      Xt.Wrapper,
      zo({}, c),
      q.createElement(Xt, iF(zo(zo({}, a), h), { ref: t })),
    );
  });
Pd.classes = zo(zo({}, Xt.classes), Xt.Wrapper.classes);
Pd.displayName = "@mantine/core/InputBase";
var sF = { root: "m-849cf0da" };
const SC = sF;
var lF = { root: "m-b6d8b162" };
const PC = lF;
var cF = Object.defineProperty,
  uF = Object.defineProperties,
  dF = Object.getOwnPropertyDescriptors,
  Qc = Object.getOwnPropertySymbols,
  _C = Object.prototype.hasOwnProperty,
  CC = Object.prototype.propertyIsEnumerable,
  Zx = (e, t, r) =>
    t in e
      ? cF(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Kx = (e, t) => {
    for (var r in t || (t = {})) _C.call(t, r) && Zx(e, r, t[r]);
    if (Qc) for (var r of Qc(t)) CC.call(t, r) && Zx(e, r, t[r]);
    return e;
  },
  hF = (e, t) => uF(e, dF(t)),
  fF = (e, t) => {
    var r = {};
    for (var a in e) _C.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Qc)
      for (var a of Qc(e)) t.indexOf(a) < 0 && CC.call(e, a) && (r[a] = e[a]);
    return r;
  };
function pF(e) {
  if (e === "start") return "start";
  if (e === "end" || e) return "end";
}
const gF = { inherit: !1 },
  mF = (e, { variant: t, lineClamp: r, gradient: a, size: c, color: h }) => ({
    root: {
      "--text-fz": Xr(c),
      "--text-lh": hR(c),
      "--text-gradient": t === "gradient" ? Bf(a, e) : void 0,
      "--text-line-clamp": typeof r == "number" ? r.toString() : void 0,
      "--text-color": h ? ai(h, e) : void 0,
    },
  }),
  Ti = Cr((e, t) => {
    const r = Pe("Text", gF, e),
      a = r,
      {
        lineClamp: c,
        truncate: h,
        inline: p,
        inherit: v,
        gradient: b,
        span: P,
        __staticSelector: k,
        vars: R,
        className: L,
        style: z,
        classNames: M,
        styles: F,
        unstyled: G,
        variant: $,
        mod: O,
        size: X,
      } = a,
      N = fF(a, [
        "lineClamp",
        "truncate",
        "inline",
        "inherit",
        "gradient",
        "span",
        "__staticSelector",
        "vars",
        "className",
        "style",
        "classNames",
        "styles",
        "unstyled",
        "variant",
        "mod",
        "size",
      ]),
      B = Ke({
        name: ["Text", k],
        props: r,
        classes: PC,
        className: L,
        style: z,
        classNames: M,
        styles: F,
        unstyled: G,
        vars: R,
        varsResolver: mF,
      });
    return q.createElement(
      Te,
      Kx(
        hF(Kx({}, B("root", { focusable: !0 })), {
          ref: t,
          component: P ? "span" : "p",
          variant: $,
          mod: [
            {
              "data-truncate": pF(h),
              "data-line-clamp": typeof c == "number",
              "data-inline": p,
              "data-inherit": v,
            },
            O,
          ],
          size: X,
        }),
        N,
      ),
    );
  });
Ti.classes = PC;
Ti.displayName = "@mantine/core/Text";
var vF = Object.defineProperty,
  yF = Object.defineProperties,
  xF = Object.getOwnPropertyDescriptors,
  Jc = Object.getOwnPropertySymbols,
  OC = Object.prototype.hasOwnProperty,
  kC = Object.prototype.propertyIsEnumerable,
  Qx = (e, t, r) =>
    t in e
      ? vF(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  bF = (e, t) => {
    for (var r in t || (t = {})) OC.call(t, r) && Qx(e, r, t[r]);
    if (Jc) for (var r of Jc(t)) kC.call(t, r) && Qx(e, r, t[r]);
    return e;
  },
  wF = (e, t) => yF(e, xF(t)),
  SF = (e, t) => {
    var r = {};
    for (var a in e) OC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Jc)
      for (var a of Jc(e)) t.indexOf(a) < 0 && kC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const PF = { underline: "hover" },
  $g = Cr((e, t) => {
    const r = Pe("Anchor", PF, e),
      { underline: a, className: c, unstyled: h } = r,
      p = SF(r, ["underline", "className", "unstyled"]);
    return q.createElement(
      Ti,
      wF(
        bF({ component: "a", ref: t, className: kt({ [SC.root]: !h }, c) }, p),
        { mod: { underline: a }, __staticSelector: "Anchor", unstyled: h },
      ),
    );
  });
$g.classes = SC;
$g.displayName = "@mantine/core/Anchor";
const [_F, Ua] = hi("AppShell was not found in tree");
var CF = {
  root: "m-89ab340",
  navbar: "m-45252eee",
  aside: "m-9cdde9a",
  header: "m-3b16f56b",
  main: "m-8983817",
  footer: "m-3840c879",
  section: "m-6dcfc7c7",
};
const gi = CF;
var OF = Object.defineProperty,
  kF = Object.defineProperties,
  AF = Object.getOwnPropertyDescriptors,
  eu = Object.getOwnPropertySymbols,
  AC = Object.prototype.hasOwnProperty,
  EC = Object.prototype.propertyIsEnumerable,
  Jx = (e, t, r) =>
    t in e
      ? OF(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  eb = (e, t) => {
    for (var r in t || (t = {})) AC.call(t, r) && Jx(e, r, t[r]);
    if (eu) for (var r of eu(t)) EC.call(t, r) && Jx(e, r, t[r]);
    return e;
  },
  EF = (e, t) => kF(e, AF(t)),
  RF = (e, t) => {
    var r = {};
    for (var a in e) AC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && eu)
      for (var a of eu(e)) t.indexOf(a) < 0 && EC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const LF = {},
  Dg = Ne((e, t) => {
    const a = Pe("AppShellNavbar", LF, e),
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        withBorder: k,
        zIndex: R,
      } = a,
      L = RF(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "withBorder",
        "zIndex",
      ]),
      z = Ua();
    return z.disabled
      ? null
      : q.createElement(
          Te,
          EF(
            eb(
              eb(
                {
                  component: "nav",
                  ref: t,
                  mod: { "with-border": k ?? z.withBorder },
                },
                z.getStyles("navbar", {
                  className: h,
                  classNames: c,
                  styles: v,
                  style: p,
                }),
              ),
              L,
            ),
            {
              __vars: {
                "--app-shell-navbar-z-index": `calc(${R ?? z.zIndex} + 1)`,
              },
            },
          ),
        );
  });
Dg.classes = gi;
Dg.displayName = "@mantine/core/AppShellNavbar";
var TF = Object.defineProperty,
  IF = Object.defineProperties,
  NF = Object.getOwnPropertyDescriptors,
  tu = Object.getOwnPropertySymbols,
  RC = Object.prototype.hasOwnProperty,
  LC = Object.prototype.propertyIsEnumerable,
  tb = (e, t, r) =>
    t in e
      ? TF(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  rb = (e, t) => {
    for (var r in t || (t = {})) RC.call(t, r) && tb(e, r, t[r]);
    if (tu) for (var r of tu(t)) LC.call(t, r) && tb(e, r, t[r]);
    return e;
  },
  MF = (e, t) => IF(e, NF(t)),
  $F = (e, t) => {
    var r = {};
    for (var a in e) RC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && tu)
      for (var a of tu(e)) t.indexOf(a) < 0 && LC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const DF = {},
  zg = Ne((e, t) => {
    var r;
    const c = Pe("AppShellHeader", DF, e),
      {
        classNames: h,
        className: p,
        style: v,
        styles: b,
        unstyled: P,
        vars: k,
        withBorder: R,
        zIndex: L,
      } = c,
      z = $F(c, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "withBorder",
        "zIndex",
      ]),
      M = Ua();
    return M.disabled
      ? null
      : q.createElement(
          Te,
          MF(
            rb(
              rb(
                {
                  component: "header",
                  ref: t,
                  mod: { "with-border": R ?? M.withBorder },
                },
                M.getStyles("header", {
                  className: kt(ag.classNames.zeroRight, p),
                  classNames: h,
                  styles: b,
                  style: v,
                }),
              ),
              z,
            ),
            {
              __vars: {
                "--app-shell-header-z-index":
                  (r = L ?? M.zIndex) == null ? void 0 : r.toString(),
              },
            },
          ),
        );
  });
zg.classes = gi;
zg.displayName = "@mantine/core/AppShellHeader";
var zF = Object.defineProperty,
  FF = Object.defineProperties,
  jF = Object.getOwnPropertyDescriptors,
  ru = Object.getOwnPropertySymbols,
  TC = Object.prototype.hasOwnProperty,
  IC = Object.prototype.propertyIsEnumerable,
  nb = (e, t, r) =>
    t in e
      ? zF(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  ib = (e, t) => {
    for (var r in t || (t = {})) TC.call(t, r) && nb(e, r, t[r]);
    if (ru) for (var r of ru(t)) IC.call(t, r) && nb(e, r, t[r]);
    return e;
  },
  HF = (e, t) => FF(e, jF(t)),
  XF = (e, t) => {
    var r = {};
    for (var a in e) TC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && ru)
      for (var a of ru(e)) t.indexOf(a) < 0 && IC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const BF = {},
  Fg = Ne((e, t) => {
    var r;
    const c = Pe("AppShellFooter", BF, e),
      {
        classNames: h,
        className: p,
        style: v,
        styles: b,
        unstyled: P,
        vars: k,
        withBorder: R,
        zIndex: L,
      } = c,
      z = XF(c, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "withBorder",
        "zIndex",
      ]),
      M = Ua();
    return M.disabled
      ? null
      : q.createElement(
          Te,
          HF(
            ib(
              ib(
                {
                  component: "footer",
                  ref: t,
                  mod: { "with-border": R ?? M.withBorder },
                },
                M.getStyles("footer", {
                  className: kt(ag.classNames.zeroRight, p),
                  classNames: h,
                  styles: b,
                  style: v,
                }),
              ),
              z,
            ),
            {
              __vars: {
                "--app-shell-footer-z-index":
                  (r = L ?? M.zIndex) == null ? void 0 : r.toString(),
              },
            },
          ),
        );
  });
Fg.classes = gi;
Fg.displayName = "@mantine/core/AppShellFooter";
var YF = Object.defineProperty,
  WF = Object.defineProperties,
  VF = Object.getOwnPropertyDescriptors,
  nu = Object.getOwnPropertySymbols,
  NC = Object.prototype.hasOwnProperty,
  MC = Object.prototype.propertyIsEnumerable,
  ab = (e, t, r) =>
    t in e
      ? YF(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  ob = (e, t) => {
    for (var r in t || (t = {})) NC.call(t, r) && ab(e, r, t[r]);
    if (nu) for (var r of nu(t)) MC.call(t, r) && ab(e, r, t[r]);
    return e;
  },
  GF = (e, t) => WF(e, VF(t)),
  UF = (e, t) => {
    var r = {};
    for (var a in e) NC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && nu)
      for (var a of nu(e)) t.indexOf(a) < 0 && MC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const qF = {},
  jg = Ne((e, t) => {
    const a = Pe("AppShellAside", qF, e),
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        withBorder: k,
        zIndex: R,
      } = a,
      L = UF(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "withBorder",
        "zIndex",
      ]),
      z = Ua();
    return z.disabled
      ? null
      : q.createElement(
          Te,
          GF(
            ob(
              ob(
                {
                  component: "aside",
                  ref: t,
                  mod: { "with-border": k ?? z.withBorder },
                },
                z.getStyles("aside", {
                  className: h,
                  classNames: c,
                  styles: v,
                  style: p,
                }),
              ),
              L,
            ),
            {
              __vars: {
                "--app-shell-aside-z-index": `calc(${R ?? z.zIndex} + 1)`,
              },
            },
          ),
        );
  });
jg.classes = gi;
jg.displayName = "@mantine/core/AppShellAside";
var ZF = Object.defineProperty,
  iu = Object.getOwnPropertySymbols,
  $C = Object.prototype.hasOwnProperty,
  DC = Object.prototype.propertyIsEnumerable,
  sb = (e, t, r) =>
    t in e
      ? ZF(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  lb = (e, t) => {
    for (var r in t || (t = {})) $C.call(t, r) && sb(e, r, t[r]);
    if (iu) for (var r of iu(t)) DC.call(t, r) && sb(e, r, t[r]);
    return e;
  },
  KF = (e, t) => {
    var r = {};
    for (var a in e) $C.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && iu)
      for (var a of iu(e)) t.indexOf(a) < 0 && DC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const QF = {},
  Hg = Ne((e, t) => {
    const a = Pe("AppShellMain", QF, e),
      { classNames: c, className: h, style: p, styles: v, vars: b } = a,
      P = KF(a, ["classNames", "className", "style", "styles", "vars"]),
      k = Ua();
    return q.createElement(
      Te,
      lb(
        lb(
          { component: "main", ref: t },
          k.getStyles("main", {
            className: h,
            style: p,
            classNames: c,
            styles: v,
          }),
        ),
        P,
      ),
    );
  });
Hg.classes = gi;
Hg.displayName = "@mantine/core/AppShellMain";
var JF = Object.defineProperty,
  au = Object.getOwnPropertySymbols,
  zC = Object.prototype.hasOwnProperty,
  FC = Object.prototype.propertyIsEnumerable,
  cb = (e, t, r) =>
    t in e
      ? JF(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  ub = (e, t) => {
    for (var r in t || (t = {})) zC.call(t, r) && cb(e, r, t[r]);
    if (au) for (var r of au(t)) FC.call(t, r) && cb(e, r, t[r]);
    return e;
  },
  ej = (e, t) => {
    var r = {};
    for (var a in e) zC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && au)
      for (var a of au(e)) t.indexOf(a) < 0 && FC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const tj = {},
  Xg = Cr((e, t) => {
    const a = Pe("AppShellSection", tj, e),
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        vars: b,
        grow: P,
      } = a,
      k = ej(a, ["classNames", "className", "style", "styles", "vars", "grow"]),
      R = Ua();
    return q.createElement(
      Te,
      ub(
        ub(
          { ref: t, mod: { grow: P } },
          R.getStyles("section", {
            className: h,
            style: p,
            classNames: c,
            styles: v,
          }),
        ),
        k,
      ),
    );
  });
Xg.classes = gi;
Xg.displayName = "@mantine/core/AppShellSection";
function xs(e) {
  return !(
    typeof e != "object" ||
    e === null ||
    (Object.keys(e).length === 1 && "base" in e)
  );
}
function bs(e) {
  const t =
    typeof e == "object" &&
    e !== null &&
    typeof e.base < "u" &&
    Object.keys(e).length === 1;
  return typeof e == "number" || typeof e == "string" || t;
}
function ws(e) {
  return typeof e == "object" ? e.base : e;
}
function rj({
  baseStyles: e,
  minMediaStyles: t,
  maxMediaStyles: r,
  aside: a,
  theme: c,
}) {
  var h, p, v;
  const b = a == null ? void 0 : a.width,
    P = "translateX(var(--app-shell-aside-width))",
    k = "translateX(calc(var(--app-shell-aside-width) * -1))";
  if (
    (a != null &&
      a.breakpoint &&
      !((h = a == null ? void 0 : a.collapsed) != null && h.mobile) &&
      ((r[a == null ? void 0 : a.breakpoint] =
        r[a == null ? void 0 : a.breakpoint] || {}),
      (r[a == null ? void 0 : a.breakpoint]["--app-shell-aside-width"] =
        "100%"),
      (r[a == null ? void 0 : a.breakpoint]["--app-shell-aside-offset"] =
        "0px")),
    bs(b))
  ) {
    const R = ae(ws(b));
    (e["--app-shell-aside-width"] = R), (e["--app-shell-aside-offset"] = R);
  }
  if (
    (xs(b) &&
      (typeof b.base < "u" &&
        ((e["--app-shell-aside-width"] = ae(b.base)),
        (e["--app-shell-aside-offset"] = ae(b.base))),
      Nt(b).forEach((R) => {
        R !== "base" &&
          ((t[R] = t[R] || {}),
          (t[R]["--app-shell-aside-width"] = ae(b[R])),
          (t[R]["--app-shell-aside-offset"] = ae(b[R])));
      })),
    (p = a == null ? void 0 : a.collapsed) != null && p.desktop)
  ) {
    const R = a.breakpoint;
    (t[R] = t[R] || {}),
      (t[R]["--app-shell-aside-transform"] = P),
      (t[R]["--app-shell-aside-transform-rtl"] = k),
      (t[R]["--app-shell-aside-offset"] = "0px !important");
  }
  if ((v = a == null ? void 0 : a.collapsed) != null && v.mobile) {
    const R = cg(a.breakpoint, c) - 0.1;
    (r[R] = r[R] || {}),
      (r[R]["--app-shell-aside-width"] = "100%"),
      (r[R]["--app-shell-aside-offset"] = "0px"),
      (r[R]["--app-shell-aside-transform"] = P),
      (r[R]["--app-shell-aside-transform-rtl"] = k);
  }
}
function nj({ baseStyles: e, minMediaStyles: t, footer: r }) {
  var a;
  const c = r == null ? void 0 : r.height,
    h = "translateY(var(--app-shell-footer-height))",
    p = (a = r == null ? void 0 : r.offset) != null ? a : !0;
  if (bs(c)) {
    const v = ae(ws(c));
    (e["--app-shell-footer-height"] = v),
      p && (e["--app-shell-footer-offset"] = v);
  }
  xs(c) &&
    (typeof c.base < "u" &&
      ((e["--app-shell-footer-height"] = ae(c.base)),
      p && (e["--app-shell-footer-offset"] = ae(c.base))),
    Nt(c).forEach((v) => {
      v !== "base" &&
        ((t[v] = t[v] || {}),
        (t[v]["--app-shell-footer-height"] = ae(c[v])),
        p && (t[v]["--app-shell-footer-offset"] = ae(c[v])));
    })),
    r != null &&
      r.collapsed &&
      ((e["--app-shell-footer-transform"] = h),
      (e["--app-shell-footer-offset"] = "0px !important"));
}
function ij({ baseStyles: e, minMediaStyles: t, header: r }) {
  var a;
  const c = r == null ? void 0 : r.height,
    h = "translateY(calc(var(--app-shell-header-height) * -1))",
    p = (a = r == null ? void 0 : r.offset) != null ? a : !0;
  if (bs(c)) {
    const v = ae(ws(c));
    (e["--app-shell-header-height"] = v),
      p && (e["--app-shell-header-offset"] = v);
  }
  xs(c) &&
    (typeof c.base < "u" &&
      ((e["--app-shell-header-height"] = ae(c.base)),
      p && (e["--app-shell-header-offset"] = ae(c.base))),
    Nt(c).forEach((v) => {
      v !== "base" &&
        ((t[v] = t[v] || {}),
        (t[v]["--app-shell-header-height"] = ae(c[v])),
        p && (t[v]["--app-shell-header-offset"] = ae(c[v])));
    })),
    r != null &&
      r.collapsed &&
      ((e["--app-shell-header-transform"] = h),
      (e["--app-shell-header-offset"] = "0px !important"));
}
function aj({
  baseStyles: e,
  minMediaStyles: t,
  maxMediaStyles: r,
  navbar: a,
  theme: c,
}) {
  var h, p, v;
  const b = a == null ? void 0 : a.width,
    P = "translateX(calc(var(--app-shell-navbar-width) * -1))",
    k = "translateX(var(--app-shell-navbar-width))";
  if (
    (a != null &&
      a.breakpoint &&
      !((h = a == null ? void 0 : a.collapsed) != null && h.mobile) &&
      ((r[a == null ? void 0 : a.breakpoint] =
        r[a == null ? void 0 : a.breakpoint] || {}),
      (r[a == null ? void 0 : a.breakpoint]["--app-shell-navbar-width"] =
        "100%"),
      (r[a == null ? void 0 : a.breakpoint]["--app-shell-navbar-offset"] =
        "0px")),
    bs(b))
  ) {
    const R = ae(ws(b));
    (e["--app-shell-navbar-width"] = R), (e["--app-shell-navbar-offset"] = R);
  }
  if (
    (xs(b) &&
      (typeof b.base < "u" &&
        ((e["--app-shell-navbar-width"] = ae(b.base)),
        (e["--app-shell-navbar-offset"] = ae(b.base))),
      Nt(b).forEach((R) => {
        R !== "base" &&
          ((t[R] = t[R] || {}),
          (t[R]["--app-shell-navbar-width"] = ae(b[R])),
          (t[R]["--app-shell-navbar-offset"] = ae(b[R])));
      })),
    (p = a == null ? void 0 : a.collapsed) != null && p.desktop)
  ) {
    const R = a.breakpoint;
    (t[R] = t[R] || {}),
      (t[R]["--app-shell-navbar-transform"] = P),
      (t[R]["--app-shell-navbar-transform-rtl"] = k),
      (t[R]["--app-shell-navbar-offset"] = "0px !important");
  }
  if ((v = a == null ? void 0 : a.collapsed) != null && v.mobile) {
    const R = cg(a.breakpoint, c) - 0.1;
    (r[R] = r[R] || {}),
      (r[R]["--app-shell-navbar-width"] = "100%"),
      (r[R]["--app-shell-navbar-offset"] = "0px"),
      (r[R]["--app-shell-navbar-transform"] = P),
      (r[R]["--app-shell-navbar-transform-rtl"] = k);
  }
}
function $h(e) {
  return Number(e) === 0 ? "0px" : Wa(e);
}
function oj({ padding: e, baseStyles: t, minMediaStyles: r }) {
  bs(e) && (t["--app-shell-padding"] = $h(ws(e))),
    xs(e) &&
      (e.base && (t["--app-shell-padding"] = $h(e.base)),
      Nt(e).forEach((a) => {
        a !== "base" &&
          ((r[a] = r[a] || {}), (r[a]["--app-shell-padding"] = $h(e[a])));
      }));
}
function sj({
  navbar: e,
  header: t,
  footer: r,
  aside: a,
  padding: c,
  theme: h,
}) {
  const p = {},
    v = {},
    b = {};
  aj({
    baseStyles: b,
    minMediaStyles: p,
    maxMediaStyles: v,
    navbar: e,
    theme: h,
  }),
    rj({
      baseStyles: b,
      minMediaStyles: p,
      maxMediaStyles: v,
      aside: a,
      theme: h,
    }),
    ij({ baseStyles: b, minMediaStyles: p, header: t }),
    nj({ baseStyles: b, minMediaStyles: p, footer: r }),
    oj({ baseStyles: b, minMediaStyles: p, padding: c });
  const P = kv(Nt(p), h).map((L) => ({
      query: `(min-width: ${ec(L.px)})`,
      styles: p[L.value],
    })),
    k = kv(Nt(v), h).map((L) => ({
      query: `(max-width: ${ec(L.px)})`,
      styles: v[L.value],
    })),
    R = [...P, ...k];
  return { baseStyles: b, media: R };
}
function lj({ navbar: e, header: t, aside: r, footer: a, padding: c }) {
  const h = cn(),
    p = ud(),
    { media: v, baseStyles: b } = sj({
      navbar: e,
      header: t,
      footer: a,
      aside: r,
      padding: c,
      theme: h,
    });
  return q.createElement(zS, {
    media: v,
    styles: b,
    selector: p.cssVariablesSelector,
  });
}
function cj({ transitionDuration: e, disabled: t }) {
  const [r, a] = j.useState(!1),
    c = j.useRef(),
    h = j.useRef();
  return (
    TS("resize", () => {
      a(!0),
        clearTimeout(c.current),
        (c.current = window.setTimeout(() => a(!1), 200));
    }),
    Va(() => {
      a(!0),
        clearTimeout(h.current),
        (h.current = window.setTimeout(() => a(!1), e || 0));
    }, [t, e]),
    r
  );
}
var uj = Object.defineProperty,
  dj = Object.defineProperties,
  hj = Object.getOwnPropertyDescriptors,
  ou = Object.getOwnPropertySymbols,
  jC = Object.prototype.hasOwnProperty,
  HC = Object.prototype.propertyIsEnumerable,
  db = (e, t, r) =>
    t in e
      ? uj(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  hb = (e, t) => {
    for (var r in t || (t = {})) jC.call(t, r) && db(e, r, t[r]);
    if (ou) for (var r of ou(t)) HC.call(t, r) && db(e, r, t[r]);
    return e;
  },
  fj = (e, t) => dj(e, hj(t)),
  pj = (e, t) => {
    var r = {};
    for (var a in e) jC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && ou)
      for (var a of ou(e)) t.indexOf(a) < 0 && HC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const gj = {
    withBorder: !0,
    padding: 0,
    transitionDuration: 200,
    transitionTimingFunction: "ease",
    zIndex: fi("app"),
  },
  mj = (e, { transitionDuration: t, transitionTimingFunction: r }) => ({
    root: {
      "--app-shell-transition-duration": `${t}ms`,
      "--app-shell-transition-timing-function": r,
    },
  }),
  Br = Ne((e, t) => {
    const r = Pe("AppShell", gj, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        navbar: k,
        withBorder: R,
        padding: L,
        transitionDuration: z,
        transitionTimingFunction: M,
        header: F,
        zIndex: G,
        layout: $,
        disabled: O,
        aside: X,
        footer: N,
      } = a,
      B = pj(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "navbar",
        "withBorder",
        "padding",
        "transitionDuration",
        "transitionTimingFunction",
        "header",
        "zIndex",
        "layout",
        "disabled",
        "aside",
        "footer",
      ]),
      U = Ke({
        name: "AppShell",
        classes: gi,
        props: r,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        vars: P,
        varsResolver: mj,
      }),
      Q = cj({ disabled: O, transitionDuration: z });
    return q.createElement(
      _F,
      { value: { getStyles: U, withBorder: R, zIndex: G, disabled: O } },
      q.createElement(lj, {
        navbar: k,
        header: F,
        aside: X,
        footer: N,
        padding: L,
      }),
      q.createElement(
        Te,
        hb(
          fj(hb({ ref: t }, U("root")), {
            mod: { resizing: Q, layout: $, disabled: O },
          }),
          B,
        ),
      ),
    );
  });
Br.classes = gi;
Br.displayName = "@mantine/core/AppShell";
Br.Navbar = Dg;
Br.Header = zg;
Br.Main = Hg;
Br.Aside = jg;
Br.Footer = Fg;
Br.Section = Xg;
function XC(e) {
  return typeof e == "string"
    ? { value: e, label: e }
    : typeof e == "number"
    ? { value: e.toString(), label: e.toString() }
    : "group" in e
    ? { group: e.group, items: e.items.map((t) => XC(t)) }
    : e;
}
function vj(e) {
  return e ? e.map(XC) : [];
}
var yj = Object.defineProperty,
  fb = Object.getOwnPropertySymbols,
  xj = Object.prototype.hasOwnProperty,
  bj = Object.prototype.propertyIsEnumerable,
  pb = (e, t, r) =>
    t in e
      ? yj(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  gb = (e, t) => {
    for (var r in t || (t = {})) xj.call(t, r) && pb(e, r, t[r]);
    if (fb) for (var r of fb(t)) bj.call(t, r) && pb(e, r, t[r]);
    return e;
  };
function BC(e) {
  return e.reduce(
    (t, r) =>
      "group" in r ? gb(gb({}, t), BC(r.items)) : ((t[r.value] = r), t),
    {},
  );
}
function wj(e, t, r) {
  for (let a = e - 1; a >= 0; a -= 1)
    if (!t[a].hasAttribute("data-combobox-disabled")) return a;
  if (r) {
    for (let a = t.length - 1; a > -1; a -= 1)
      if (!t[a].hasAttribute("data-combobox-disabled")) return a;
  }
  return e;
}
function Sj(e, t, r) {
  for (let a = e + 1; a < t.length; a += 1)
    if (!t[a].hasAttribute("data-combobox-disabled")) return a;
  if (r) {
    for (let a = 0; a < t.length; a += 1)
      if (!t[a].hasAttribute("data-combobox-disabled")) return a;
  }
  return e;
}
function Pj(e) {
  for (let t = 0; t < e.length; t += 1)
    if (!e[t].hasAttribute("data-combobox-disabled")) return t;
  return -1;
}
function YC({
  defaultOpened: e,
  opened: t,
  onOpenedChange: r,
  onDropdownClose: a,
  onDropdownOpen: c,
  loop: h = !0,
  scrollBehavior: p = "instant",
} = {}) {
  const [v, b] = $a({ value: t, defaultValue: e, finalValue: !1, onChange: r }),
    P = j.useRef(null),
    k = j.useRef(-1),
    R = j.useRef(null),
    L = j.useRef(null),
    z = j.useRef(-1),
    M = j.useRef(-1),
    F = j.useRef(-1),
    G = j.useCallback(
      (oe = "unknown") => {
        v || (b(!0), c == null || c(oe));
      },
      [b, c, v],
    ),
    $ = j.useCallback(
      (oe = "unknown") => {
        v && (b(!1), a == null || a(oe));
      },
      [b, a, v],
    ),
    O = j.useCallback(
      (oe = "unknown") => {
        v ? $(oe) : G(oe);
      },
      [$, G, v],
    ),
    X = j.useCallback(() => {
      const oe = document.querySelector(
        `#${P.current} [data-combobox-selected]`,
      );
      oe == null || oe.removeAttribute("data-combobox-selected"),
        oe == null || oe.removeAttribute("aria-selected");
    }, []),
    N = j.useCallback(
      (oe) => {
        const ve = document.getElementById(P.current),
          ye =
            ve == null ? void 0 : ve.querySelectorAll("[data-combobox-option]");
        if (!ye) return null;
        const te = oe >= ye.length ? 0 : oe < 0 ? ye.length - 1 : oe;
        return (
          (k.current = te),
          ye != null && ye[te] && !ye[te].hasAttribute("data-combobox-disabled")
            ? (X(),
              ye[te].setAttribute("data-combobox-selected", "true"),
              ye[te].setAttribute("aria-selected", "true"),
              ye[te].scrollIntoView({ block: "nearest", behavior: p }),
              ye[te].id)
            : null
        );
      },
      [p, X],
    ),
    B = j.useCallback(() => {
      const oe = document.querySelector(`#${P.current} [data-combobox-active]`);
      if (oe) {
        const ve = document.querySelectorAll(
            `#${P.current} [data-combobox-option]`,
          ),
          ye = Array.from(ve).findIndex((te) => te === oe);
        return N(ye);
      }
      return N(0);
    }, [N]),
    U = j.useCallback(
      () =>
        N(
          Sj(
            k.current,
            document.querySelectorAll(`#${P.current} [data-combobox-option]`),
            h,
          ),
        ),
      [N, h],
    ),
    Q = j.useCallback(
      () =>
        N(
          wj(
            k.current,
            document.querySelectorAll(`#${P.current} [data-combobox-option]`),
            h,
          ),
        ),
      [N, h],
    ),
    ee = j.useCallback(
      () =>
        N(
          Pj(document.querySelectorAll(`#${P.current} [data-combobox-option]`)),
        ),
      [N],
    ),
    ne = j.useCallback((oe = "selected") => {
      F.current = window.setTimeout(() => {
        const ve = document.querySelectorAll(
            `#${P.current} [data-combobox-option]`,
          ),
          ye = Array.from(ve).findIndex((te) =>
            te.hasAttribute(`data-combobox-${oe}`),
          );
        k.current = ye;
      }, 0);
    }, []),
    le = j.useCallback(() => {
      (k.current = -1), X();
    }, [X]),
    he = j.useCallback(() => {
      const oe = document.querySelectorAll(
          `#${P.current} [data-combobox-option]`,
        ),
        ve = oe == null ? void 0 : oe[k.current];
      ve == null || ve.click();
    }, []),
    me = j.useCallback((oe) => {
      P.current = oe;
    }, []),
    fe = j.useCallback(() => {
      z.current = window.setTimeout(() => R.current.focus(), 0);
    }, []),
    ue = j.useCallback(() => {
      M.current = window.setTimeout(() => L.current.focus(), 0);
    }, []);
  return (
    j.useEffect(
      () => () => {
        window.clearTimeout(z.current),
          window.clearTimeout(M.current),
          window.clearTimeout(F.current);
      },
      [],
    ),
    {
      dropdownOpened: v,
      openDropdown: G,
      closeDropdown: $,
      toggleDropdown: O,
      selectedOptionIndex: k.current,
      selectOption: N,
      selectFirstOption: ee,
      selectActiveOption: B,
      selectNextOption: U,
      selectPreviousOption: Q,
      resetSelectedOption: le,
      updateSelectedOptionIndex: ne,
      listId: P.current,
      setListId: me,
      clickSelectedOption: he,
      searchRef: R,
      focusSearchInput: fe,
      targetRef: L,
      focusTarget: ue,
    }
  );
}
const [_j, Ar] = hi("Combobox component was not found in tree");
var Cj = Object.defineProperty,
  Oj = Object.defineProperties,
  kj = Object.getOwnPropertyDescriptors,
  mb = Object.getOwnPropertySymbols,
  Aj = Object.prototype.hasOwnProperty,
  Ej = Object.prototype.propertyIsEnumerable,
  vb = (e, t, r) =>
    t in e
      ? Cj(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Rj = (e, t) => {
    for (var r in t || (t = {})) Aj.call(t, r) && vb(e, r, t[r]);
    if (mb) for (var r of mb(t)) Ej.call(t, r) && vb(e, r, t[r]);
    return e;
  },
  Lj = (e, t) => Oj(e, kj(t));
function Bg({
  onKeyDown: e,
  withKeyboardNavigation: t,
  withAriaAttributes: r,
  withExpandedAttribute: a,
  targetType: c,
}) {
  const h = Ar(),
    [p, v] = j.useState(null),
    b = (k) => {
      e == null || e(k),
        !h.readOnly &&
          t &&
          (k.nativeEvent.code === "ArrowDown" &&
            (k.preventDefault(),
            h.store.dropdownOpened
              ? v(h.store.selectNextOption())
              : (h.store.openDropdown("keyboard"),
                v(h.store.selectActiveOption()))),
          k.nativeEvent.code === "ArrowUp" &&
            (k.preventDefault(),
            h.store.dropdownOpened
              ? v(h.store.selectPreviousOption())
              : (h.store.openDropdown("keyboard"),
                v(h.store.selectActiveOption()))),
          k.nativeEvent.code === "Enter" &&
            (h.store.dropdownOpened
              ? (k.preventDefault(), h.store.clickSelectedOption())
              : c === "button" &&
                (k.preventDefault(), h.store.openDropdown("keyboard"))),
          k.nativeEvent.code === "Escape" && h.store.closeDropdown("keyboard"),
          k.nativeEvent.code === "Space" &&
            c === "button" &&
            (k.preventDefault(), h.store.toggleDropdown("keyboard")));
    },
    P = r
      ? {
          "aria-haspopup": "listbox",
          "aria-expanded":
            (a && !!(h.store.listId && h.store.dropdownOpened)) || void 0,
          "aria-controls": h.store.listId,
          "aria-activedescendant": (h.store.dropdownOpened && p) || void 0,
          autoComplete: "off",
          "data-expanded": h.store.dropdownOpened ? !0 : void 0,
        }
      : {};
  return Lj(Rj({}, P), { onKeyDown: b });
}
var Tj = Object.defineProperty,
  su = Object.getOwnPropertySymbols,
  WC = Object.prototype.hasOwnProperty,
  VC = Object.prototype.propertyIsEnumerable,
  yb = (e, t, r) =>
    t in e
      ? Tj(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  xb = (e, t) => {
    for (var r in t || (t = {})) WC.call(t, r) && yb(e, r, t[r]);
    if (su) for (var r of su(t)) VC.call(t, r) && yb(e, r, t[r]);
    return e;
  },
  Ij = (e, t) => {
    var r = {};
    for (var a in e) WC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && su)
      for (var a of su(e)) t.indexOf(a) < 0 && VC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Nj = {
    refProp: "ref",
    targetType: "input",
    withKeyboardNavigation: !0,
    withAriaAttributes: !0,
    withExpandedAttribute: !1,
  },
  GC = Ne((e, t) => {
    const r = Pe("ComboboxTarget", Nj, e),
      {
        children: a,
        refProp: c,
        withKeyboardNavigation: h,
        withAriaAttributes: p,
        withExpandedAttribute: v,
        targetType: b,
      } = r,
      P = Ij(r, [
        "children",
        "refProp",
        "withKeyboardNavigation",
        "withAriaAttributes",
        "withExpandedAttribute",
        "targetType",
      ]);
    if (!Wi(a))
      throw new Error(
        "Combobox.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported",
      );
    const k = Ar(),
      R = Bg({
        targetType: b,
        withAriaAttributes: p,
        withKeyboardNavigation: h,
        withExpandedAttribute: v,
        onKeyDown: a.props.onKeyDown,
      }),
      L = j.cloneElement(a, xb(xb({}, R), P));
    return q.createElement(pi.Target, { ref: or(t, k.store.targetRef) }, L);
  });
GC.displayName = "@mantine/core/ComboboxTarget";
var Mj = {
  dropdown: "m-88b62a41",
  options: "m-b2821a6e",
  option: "m-92253aa5",
  search: "m-985517d8",
  empty: "m-2530cd1d",
  header: "m-858f94bd",
  footer: "m-82b967cb",
  group: "m-254f3e4f",
  groupLabel: "m-2bb2e9e5",
  chevron: "m-2943220b",
  optionsDropdownScrollArea: "m-71d052f9",
  optionsDropdownOption: "m-390b5f4",
  optionsDropdownCheckIcon: "m-8ee53fc2",
};
const qt = Mj;
var $j = Object.defineProperty,
  Dj = Object.defineProperties,
  zj = Object.getOwnPropertyDescriptors,
  lu = Object.getOwnPropertySymbols,
  UC = Object.prototype.hasOwnProperty,
  qC = Object.prototype.propertyIsEnumerable,
  bb = (e, t, r) =>
    t in e
      ? $j(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  wb = (e, t) => {
    for (var r in t || (t = {})) UC.call(t, r) && bb(e, r, t[r]);
    if (lu) for (var r of lu(t)) qC.call(t, r) && bb(e, r, t[r]);
    return e;
  },
  Fj = (e, t) => Dj(e, zj(t)),
  jj = (e, t) => {
    var r = {};
    for (var a in e) UC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && lu)
      for (var a of lu(e)) t.indexOf(a) < 0 && qC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Hj = {},
  Yg = Ne((e, t) => {
    const r = Pe("ComboboxDropdown", Hj, e),
      { classNames: a, styles: c, className: h, style: p, hidden: v } = r,
      b = jj(r, ["classNames", "styles", "className", "style", "hidden"]),
      P = Ar();
    return q.createElement(
      pi.Dropdown,
      wb(
        Fj(wb({}, b), {
          ref: t,
          role: "presentation",
          "data-hidden": v || void 0,
        }),
        P.getStyles("dropdown", {
          className: h,
          style: p,
          classNames: a,
          styles: c,
        }),
      ),
    );
  });
Yg.classes = qt;
Yg.displayName = "@mantine/core/ComboboxDropdown";
var Xj = Object.defineProperty,
  Bj = Object.defineProperties,
  Yj = Object.getOwnPropertyDescriptors,
  cu = Object.getOwnPropertySymbols,
  ZC = Object.prototype.hasOwnProperty,
  KC = Object.prototype.propertyIsEnumerable,
  Sb = (e, t, r) =>
    t in e
      ? Xj(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Pb = (e, t) => {
    for (var r in t || (t = {})) ZC.call(t, r) && Sb(e, r, t[r]);
    if (cu) for (var r of cu(t)) KC.call(t, r) && Sb(e, r, t[r]);
    return e;
  },
  Wj = (e, t) => Bj(e, Yj(t)),
  Vj = (e, t) => {
    var r = {};
    for (var a in e) ZC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && cu)
      for (var a of cu(e)) t.indexOf(a) < 0 && KC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Gj = {},
  Wg = Ne((e, t) => {
    const a = Pe("ComboboxOptions", Gj, e),
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        id: b,
        onMouseDown: P,
        labelledBy: k,
      } = a,
      R = Vj(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "id",
        "onMouseDown",
        "labelledBy",
      ]),
      L = Ar(),
      z = Vi(b);
    return (
      j.useEffect(() => {
        L.store.setListId(z);
      }, [z]),
      q.createElement(
        Te,
        Wj(
          Pb(
            Pb(
              { ref: t },
              L.getStyles("options", {
                className: h,
                style: p,
                classNames: c,
                styles: v,
              }),
            ),
            R,
          ),
          {
            id: z,
            role: "listbox",
            "aria-labelledby": k,
            onMouseDown: (M) => {
              M.preventDefault(), P == null || P(M);
            },
          },
        ),
      )
    );
  });
Wg.classes = qt;
Wg.displayName = "@mantine/core/ComboboxOptions";
var Uj = Object.defineProperty,
  qj = Object.defineProperties,
  Zj = Object.getOwnPropertyDescriptors,
  uu = Object.getOwnPropertySymbols,
  QC = Object.prototype.hasOwnProperty,
  JC = Object.prototype.propertyIsEnumerable,
  _b = (e, t, r) =>
    t in e
      ? Uj(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Cb = (e, t) => {
    for (var r in t || (t = {})) QC.call(t, r) && _b(e, r, t[r]);
    if (uu) for (var r of uu(t)) JC.call(t, r) && _b(e, r, t[r]);
    return e;
  },
  Kj = (e, t) => qj(e, Zj(t)),
  Qj = (e, t) => {
    var r = {};
    for (var a in e) QC.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && uu)
      for (var a of uu(e)) t.indexOf(a) < 0 && JC.call(e, a) && (r[a] = e[a]);
    return r;
  };
const Jj = {},
  Vg = Ne((e, t) => {
    const r = Pe("ComboboxOption", Jj, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        vars: b,
        onClick: P,
        id: k,
        active: R,
        onMouseDown: L,
        onMouseOver: z,
        disabled: M,
        selected: F,
      } = a,
      G = Qj(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "vars",
        "onClick",
        "id",
        "active",
        "onMouseDown",
        "onMouseOver",
        "disabled",
        "selected",
      ]),
      $ = Ar(),
      O = j.useId(),
      X = k || O;
    return q.createElement(
      Te,
      Kj(
        Cb(
          Cb(
            {},
            $.getStyles("option", {
              className: h,
              classNames: c,
              styles: v,
              style: p,
            }),
          ),
          G,
        ),
        {
          ref: t,
          id: X,
          mod: [
            "combobox-option",
            {
              "combobox-active": R,
              "combobox-disabled": M,
              "combobox-selected": F,
            },
          ],
          role: "option",
          onClick: (N) => {
            var B;
            M
              ? N.preventDefault()
              : ((B = $.onOptionSubmit) == null || B.call($, r.value, r),
                P == null || P(N));
          },
          onMouseDown: (N) => {
            N.preventDefault(), L == null || L(N);
          },
          onMouseOver: (N) => {
            $.resetSelectionOnOptionHover && $.store.resetSelectedOption(),
              z == null || z(N);
          },
        },
      ),
    );
  });
Vg.classes = qt;
Vg.displayName = "@mantine/core/ComboboxOption";
var eH = Object.defineProperty,
  tH = Object.defineProperties,
  rH = Object.getOwnPropertyDescriptors,
  du = Object.getOwnPropertySymbols,
  eO = Object.prototype.hasOwnProperty,
  tO = Object.prototype.propertyIsEnumerable,
  Ob = (e, t, r) =>
    t in e
      ? eH(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  kb = (e, t) => {
    for (var r in t || (t = {})) eO.call(t, r) && Ob(e, r, t[r]);
    if (du) for (var r of du(t)) tO.call(t, r) && Ob(e, r, t[r]);
    return e;
  },
  nH = (e, t) => tH(e, rH(t)),
  iH = (e, t) => {
    var r = {};
    for (var a in e) eO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && du)
      for (var a of du(e)) t.indexOf(a) < 0 && tO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const aH = { withAriaAttributes: !0, withKeyboardNavigation: !0 },
  Gg = Ne((e, t) => {
    const a = Pe("ComboboxSearch", aH, e),
      {
        classNames: c,
        styles: h,
        unstyled: p,
        vars: v,
        withAriaAttributes: b,
        onKeyDown: P,
        withKeyboardNavigation: k,
        size: R,
      } = a,
      L = iH(a, [
        "classNames",
        "styles",
        "unstyled",
        "vars",
        "withAriaAttributes",
        "onKeyDown",
        "withKeyboardNavigation",
        "size",
      ]),
      z = Ar(),
      M = z.getStyles("search"),
      F = Bg({
        targetType: "input",
        withAriaAttributes: b,
        withKeyboardNavigation: k,
        withExpandedAttribute: !1,
        onKeyDown: P,
      });
    return q.createElement(
      Xt,
      nH(
        kb(
          kb(
            {
              ref: or(t, z.store.searchRef),
              classNames: [{ input: M.className }, c],
              styles: [{ input: M.style }, h],
              size: R || z.size,
            },
            F,
          ),
          L,
        ),
        { __staticSelector: "Combobox" },
      ),
    );
  });
Gg.classes = qt;
Gg.displayName = "@mantine/core/ComboboxSearch";
var oH = Object.defineProperty,
  hu = Object.getOwnPropertySymbols,
  rO = Object.prototype.hasOwnProperty,
  nO = Object.prototype.propertyIsEnumerable,
  Ab = (e, t, r) =>
    t in e
      ? oH(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Eb = (e, t) => {
    for (var r in t || (t = {})) rO.call(t, r) && Ab(e, r, t[r]);
    if (hu) for (var r of hu(t)) nO.call(t, r) && Ab(e, r, t[r]);
    return e;
  },
  sH = (e, t) => {
    var r = {};
    for (var a in e) rO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && hu)
      for (var a of hu(e)) t.indexOf(a) < 0 && nO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const lH = {},
  Ug = Ne((e, t) => {
    const r = Pe("ComboboxEmpty", lH, e),
      { classNames: a, className: c, style: h, styles: p, vars: v } = r,
      b = sH(r, ["classNames", "className", "style", "styles", "vars"]),
      P = Ar();
    return q.createElement(
      Te,
      Eb(
        Eb(
          { ref: t },
          P.getStyles("empty", {
            className: c,
            classNames: a,
            styles: p,
            style: h,
          }),
        ),
        b,
      ),
    );
  });
Ug.classes = qt;
Ug.displayName = "@mantine/core/ComboboxEmpty";
var cH = Object.defineProperty,
  uH = Object.defineProperties,
  dH = Object.getOwnPropertyDescriptors,
  fu = Object.getOwnPropertySymbols,
  iO = Object.prototype.hasOwnProperty,
  aO = Object.prototype.propertyIsEnumerable,
  Rb = (e, t, r) =>
    t in e
      ? cH(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Lb = (e, t) => {
    for (var r in t || (t = {})) iO.call(t, r) && Rb(e, r, t[r]);
    if (fu) for (var r of fu(t)) aO.call(t, r) && Rb(e, r, t[r]);
    return e;
  },
  hH = (e, t) => uH(e, dH(t)),
  fH = (e, t) => {
    var r = {};
    for (var a in e) iO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && fu)
      for (var a of fu(e)) t.indexOf(a) < 0 && aO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const pH = { error: null },
  gH = (e, { size: t }) => ({
    chevron: { "--combobox-chevron-size": wt(t, "combobox-chevron-size") },
  }),
  qg = Ne((e, t) => {
    const r = Pe("ComboboxChevron", pH, e),
      a = r,
      {
        size: c,
        error: h,
        style: p,
        className: v,
        classNames: b,
        styles: P,
        unstyled: k,
        vars: R,
      } = a,
      L = fH(a, [
        "size",
        "error",
        "style",
        "className",
        "classNames",
        "styles",
        "unstyled",
        "vars",
      ]),
      z = Ke({
        name: "ComboboxChevron",
        classes: qt,
        props: r,
        style: p,
        className: v,
        classNames: b,
        styles: P,
        unstyled: k,
        vars: R,
        varsResolver: gH,
        rootSelector: "chevron",
      });
    return q.createElement(
      Te,
      hH(Lb(Lb({ component: "svg" }, L), z("chevron")), {
        size: c,
        viewBox: "0 0 15 15",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        mod: ["combobox-chevron", { error: h }],
        ref: t,
      }),
      q.createElement("path", {
        d: "M4.93179 5.43179C4.75605 5.60753 4.75605 5.89245 4.93179 6.06819C5.10753 6.24392 5.39245 6.24392 5.56819 6.06819L7.49999 4.13638L9.43179 6.06819C9.60753 6.24392 9.89245 6.24392 10.0682 6.06819C10.2439 5.89245 10.2439 5.60753 10.0682 5.43179L7.81819 3.18179C7.73379 3.0974 7.61933 3.04999 7.49999 3.04999C7.38064 3.04999 7.26618 3.0974 7.18179 3.18179L4.93179 5.43179ZM10.0682 9.56819C10.2439 9.39245 10.2439 9.10753 10.0682 8.93179C9.89245 8.75606 9.60753 8.75606 9.43179 8.93179L7.49999 10.8636L5.56819 8.93179C5.39245 8.75606 5.10753 8.75606 4.93179 8.93179C4.75605 9.10753 4.75605 9.39245 4.93179 9.56819L7.18179 11.8182C7.35753 11.9939 7.64245 11.9939 7.81819 11.8182L10.0682 9.56819Z",
        fill: "currentColor",
        fillRule: "evenodd",
        clipRule: "evenodd",
      }),
    );
  });
qg.classes = qt;
qg.displayName = "@mantine/core/ComboboxChevron";
var mH = Object.defineProperty,
  pu = Object.getOwnPropertySymbols,
  oO = Object.prototype.hasOwnProperty,
  sO = Object.prototype.propertyIsEnumerable,
  Tb = (e, t, r) =>
    t in e
      ? mH(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Ib = (e, t) => {
    for (var r in t || (t = {})) oO.call(t, r) && Tb(e, r, t[r]);
    if (pu) for (var r of pu(t)) sO.call(t, r) && Tb(e, r, t[r]);
    return e;
  },
  vH = (e, t) => {
    var r = {};
    for (var a in e) oO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && pu)
      for (var a of pu(e)) t.indexOf(a) < 0 && sO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const yH = {},
  Zg = Ne((e, t) => {
    const r = Pe("ComboboxFooter", yH, e),
      { classNames: a, className: c, style: h, styles: p, vars: v } = r,
      b = vH(r, ["classNames", "className", "style", "styles", "vars"]),
      P = Ar();
    return q.createElement(
      Te,
      Ib(
        Ib(
          { ref: t },
          P.getStyles("footer", {
            className: c,
            classNames: a,
            style: h,
            styles: p,
          }),
        ),
        b,
      ),
    );
  });
Zg.classes = qt;
Zg.displayName = "@mantine/core/ComboboxFooter";
var xH = Object.defineProperty,
  gu = Object.getOwnPropertySymbols,
  lO = Object.prototype.hasOwnProperty,
  cO = Object.prototype.propertyIsEnumerable,
  Nb = (e, t, r) =>
    t in e
      ? xH(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Mb = (e, t) => {
    for (var r in t || (t = {})) lO.call(t, r) && Nb(e, r, t[r]);
    if (gu) for (var r of gu(t)) cO.call(t, r) && Nb(e, r, t[r]);
    return e;
  },
  bH = (e, t) => {
    var r = {};
    for (var a in e) lO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && gu)
      for (var a of gu(e)) t.indexOf(a) < 0 && cO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const wH = {},
  Kg = Ne((e, t) => {
    const r = Pe("ComboboxHeader", wH, e),
      { classNames: a, className: c, style: h, styles: p, vars: v } = r,
      b = bH(r, ["classNames", "className", "style", "styles", "vars"]),
      P = Ar();
    return q.createElement(
      Te,
      Mb(
        Mb(
          { ref: t },
          P.getStyles("header", {
            className: c,
            classNames: a,
            style: h,
            styles: p,
          }),
        ),
        b,
      ),
    );
  });
Kg.classes = qt;
Kg.displayName = "@mantine/core/ComboboxHeader";
var SH = Object.defineProperty,
  PH = Object.defineProperties,
  _H = Object.getOwnPropertyDescriptors,
  mu = Object.getOwnPropertySymbols,
  uO = Object.prototype.hasOwnProperty,
  dO = Object.prototype.propertyIsEnumerable,
  $b = (e, t, r) =>
    t in e
      ? SH(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Db = (e, t) => {
    for (var r in t || (t = {})) uO.call(t, r) && $b(e, r, t[r]);
    if (mu) for (var r of mu(t)) dO.call(t, r) && $b(e, r, t[r]);
    return e;
  },
  CH = (e, t) => PH(e, _H(t)),
  OH = (e, t) => {
    var r = {};
    for (var a in e) uO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && mu)
      for (var a of mu(e)) t.indexOf(a) < 0 && dO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const kH = {
    refProp: "ref",
    targetType: "input",
    withKeyboardNavigation: !0,
    withAriaAttributes: !0,
    withExpandedAttribute: !1,
  },
  hO = Ne((e, t) => {
    const r = Pe("ComboboxEventsTarget", kH, e),
      {
        children: a,
        refProp: c,
        withKeyboardNavigation: h,
        withAriaAttributes: p,
        withExpandedAttribute: v,
        targetType: b,
      } = r,
      P = OH(r, [
        "children",
        "refProp",
        "withKeyboardNavigation",
        "withAriaAttributes",
        "withExpandedAttribute",
        "targetType",
      ]);
    if (!Wi(a))
      throw new Error(
        "Combobox.EventsTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported",
      );
    const k = Ar(),
      R = Bg({
        targetType: b,
        withAriaAttributes: p,
        withKeyboardNavigation: h,
        withExpandedAttribute: v,
        onKeyDown: a.props.onKeyDown,
      });
    return j.cloneElement(
      a,
      CH(Db(Db({}, R), P), {
        [c]: or(t, k.store.targetRef, a == null ? void 0 : a.ref),
      }),
    );
  });
hO.displayName = "@mantine/core/ComboboxEventsTarget";
const AH = { refProp: "ref" },
  fO = Ne((e, t) => {
    const { children: r, refProp: a } = Pe("ComboboxDropdownTarget", AH, e);
    if ((Ar(), !Wi(r)))
      throw new Error(
        "Combobox.DropdownTarget component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported",
      );
    return q.createElement(pi.Target, { ref: t, refProp: a }, r);
  });
fO.displayName = "@mantine/core/ComboboxDropdownTarget";
var EH = Object.defineProperty,
  vu = Object.getOwnPropertySymbols,
  pO = Object.prototype.hasOwnProperty,
  gO = Object.prototype.propertyIsEnumerable,
  zb = (e, t, r) =>
    t in e
      ? EH(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Dh = (e, t) => {
    for (var r in t || (t = {})) pO.call(t, r) && zb(e, r, t[r]);
    if (vu) for (var r of vu(t)) gO.call(t, r) && zb(e, r, t[r]);
    return e;
  },
  RH = (e, t) => {
    var r = {};
    for (var a in e) pO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && vu)
      for (var a of vu(e)) t.indexOf(a) < 0 && gO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const LH = {},
  Qg = Ne((e, t) => {
    const r = Pe("ComboboxGroup", LH, e),
      {
        classNames: a,
        className: c,
        style: h,
        styles: p,
        vars: v,
        children: b,
        label: P,
      } = r,
      k = RH(r, [
        "classNames",
        "className",
        "style",
        "styles",
        "vars",
        "children",
        "label",
      ]),
      R = Ar();
    return q.createElement(
      Te,
      Dh(
        Dh(
          { ref: t },
          R.getStyles("group", {
            className: c,
            classNames: a,
            style: h,
            styles: p,
          }),
        ),
        k,
      ),
      P &&
        q.createElement(
          "div",
          Dh({}, R.getStyles("groupLabel", { classNames: a, styles: p })),
          P,
        ),
      b,
    );
  });
Qg.classes = qt;
Qg.displayName = "@mantine/core/ComboboxGroup";
var TH = Object.defineProperty,
  IH = Object.defineProperties,
  NH = Object.getOwnPropertyDescriptors,
  yu = Object.getOwnPropertySymbols,
  mO = Object.prototype.hasOwnProperty,
  vO = Object.prototype.propertyIsEnumerable,
  Fb = (e, t, r) =>
    t in e
      ? TH(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  MH = (e, t) => {
    for (var r in t || (t = {})) mO.call(t, r) && Fb(e, r, t[r]);
    if (yu) for (var r of yu(t)) vO.call(t, r) && Fb(e, r, t[r]);
    return e;
  },
  $H = (e, t) => IH(e, NH(t)),
  DH = (e, t) => {
    var r = {};
    for (var a in e) mO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && yu)
      for (var a of yu(e)) t.indexOf(a) < 0 && vO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const yO = j.forwardRef((e, t) => {
  var r = e,
    { size: a, onMouseDown: c, onClick: h, onClear: p } = r,
    v = DH(r, ["size", "onMouseDown", "onClick", "onClear"]);
  return q.createElement(
    xd,
    $H(
      MH(
        {
          ref: t,
          size: a || "sm",
          variant: "transparent",
          tabIndex: -1,
          "aria-hidden": !0,
        },
        v,
      ),
      {
        onMouseDown: (b) => {
          b.preventDefault(), c == null || c(b);
        },
        onClick: (b) => {
          p(), h == null || h(b);
        },
      },
    ),
  );
});
yO.displayName = "@mantine/core/ComboboxClearButton";
var zH = Object.defineProperty,
  FH = Object.defineProperties,
  jH = Object.getOwnPropertyDescriptors,
  xu = Object.getOwnPropertySymbols,
  xO = Object.prototype.hasOwnProperty,
  bO = Object.prototype.propertyIsEnumerable,
  jb = (e, t, r) =>
    t in e
      ? zH(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  HH = (e, t) => {
    for (var r in t || (t = {})) xO.call(t, r) && jb(e, r, t[r]);
    if (xu) for (var r of xu(t)) bO.call(t, r) && jb(e, r, t[r]);
    return e;
  },
  XH = (e, t) => FH(e, jH(t)),
  BH = (e, t) => {
    var r = {};
    for (var a in e) xO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && xu)
      for (var a of xu(e)) t.indexOf(a) < 0 && bO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const YH = {
    keepMounted: !0,
    withinPortal: !0,
    resetSelectionOnOptionHover: !1,
    width: "target",
    transitionProps: { transition: "fade", duration: 0 },
  },
  WH = (e, { size: t, dropdownPadding: r }) => ({
    options: {
      "--combobox-option-fz": Xr(t),
      "--combobox-option-padding": wt(t, "combobox-option-padding"),
    },
    dropdown: {
      "--combobox-padding": r === void 0 ? void 0 : ae(r),
      "--combobox-option-fz": Xr(t),
      "--combobox-option-padding": wt(t, "combobox-option-padding"),
    },
  });
function rt(e) {
  const t = Pe("Combobox", YH, e),
    r = t,
    {
      classNames: a,
      styles: c,
      unstyled: h,
      children: p,
      store: v,
      vars: b,
      onOptionSubmit: P,
      size: k,
      dropdownPadding: R,
      resetSelectionOnOptionHover: L,
      __staticSelector: z,
      readOnly: M,
    } = r,
    F = BH(r, [
      "classNames",
      "styles",
      "unstyled",
      "children",
      "store",
      "vars",
      "onOptionSubmit",
      "size",
      "dropdownPadding",
      "resetSelectionOnOptionHover",
      "__staticSelector",
      "readOnly",
    ]),
    G = YC(),
    $ = v || G,
    O = Ke({
      name: z || "Combobox",
      classes: qt,
      props: t,
      classNames: a,
      styles: c,
      unstyled: h,
      vars: b,
      varsResolver: WH,
    });
  return q.createElement(
    _j,
    {
      value: {
        getStyles: O,
        store: $,
        onOptionSubmit: P,
        size: k,
        resetSelectionOnOptionHover: L,
        readOnly: M,
      },
    },
    q.createElement(
      pi,
      XH(HH({ opened: $.dropdownOpened }, F), {
        onClose: $.closeDropdown,
        withRoles: !1,
        unstyled: h,
      }),
      p,
    ),
  );
}
const VH = (e) => e;
rt.extend = VH;
rt.classes = qt;
rt.displayName = "@mantine/core/Combobox";
rt.Target = GC;
rt.Dropdown = Yg;
rt.Options = Wg;
rt.Option = Vg;
rt.Search = Gg;
rt.Empty = Ug;
rt.Chevron = qg;
rt.Footer = Zg;
rt.Header = Kg;
rt.EventsTarget = hO;
rt.DropdownTarget = fO;
rt.Group = Qg;
rt.ClearButton = yO;
function is(e) {
  return "group" in e;
}
function wO({ options: e, search: t, limit: r }) {
  const a = t.trim().toLowerCase(),
    c = [];
  for (let h = 0; h < e.length; h += 1) {
    const p = e[h];
    if (c.length === r) return c;
    is(p) &&
      c.push({
        group: p.group,
        items: wO({ options: p.items, search: t, limit: r - c.length }),
      }),
      is(p) || (p.label.toLowerCase().includes(a) && c.push(p));
  }
  return c;
}
function GH(e) {
  if (e.length === 0) return !0;
  for (const t of e) if (!("group" in t) || t.items.length > 0) return !1;
  return !0;
}
function SO(e, t = new Set()) {
  if (Array.isArray(e))
    for (const r of e)
      if (is(r)) SO(r.items, t);
      else {
        if (typeof r.value > "u")
          throw new Error(
            "[@mantine/core] Each option must have value property",
          );
        if (typeof r.value != "string")
          throw new Error(
            `[@mantine/core] Option value must be a string, other data formats are not supported, got ${typeof r.value}`,
          );
        if (t.has(r.value))
          throw new Error(
            `[@mantine/core] Duplicate options are not supported. Option with value "${r.value}" was provided more than once`,
          );
        t.add(r.value);
      }
}
var UH = Object.defineProperty,
  bu = Object.getOwnPropertySymbols,
  PO = Object.prototype.hasOwnProperty,
  _O = Object.prototype.propertyIsEnumerable,
  Hb = (e, t, r) =>
    t in e
      ? UH(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Xb = (e, t) => {
    for (var r in t || (t = {})) PO.call(t, r) && Hb(e, r, t[r]);
    if (bu) for (var r of bu(t)) _O.call(t, r) && Hb(e, r, t[r]);
    return e;
  },
  qH = (e, t) => {
    var r = {};
    for (var a in e) PO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && bu)
      for (var a of bu(e)) t.indexOf(a) < 0 && _O.call(e, a) && (r[a] = e[a]);
    return r;
  };
function ZH(e) {
  var t = e,
    { size: r, style: a } = t,
    c = qH(t, ["size", "style"]);
  const h = r !== void 0 ? Xb({ width: ae(r), height: ae(r) }, a) : a;
  return q.createElement(
    "svg",
    Xb(
      {
        viewBox: "0 0 10 7",
        fill: "none",
        xmlns: "http://www.w3.org/2000/svg",
        style: h,
      },
      c,
    ),
    q.createElement("path", {
      d: "M4 4.586L1.707 2.293A1 1 0 1 0 .293 3.707l3 3a.997.997 0 0 0 1.414 0l5-5A1 1 0 1 0 8.293.293L4 4.586z",
      fill: "currentColor",
      fillRule: "evenodd",
      clipRule: "evenodd",
    }),
  );
}
function zh(e, t) {
  return Array.isArray(e) ? e.includes(t) : e === t;
}
function CO({
  data: e,
  withCheckIcon: t,
  value: r,
  checkIconPosition: a,
  unstyled: c,
}) {
  if (!is(e)) {
    const p =
      t &&
      zh(r, e.value) &&
      q.createElement(ZH, { className: qt.optionsDropdownCheckIcon });
    return q.createElement(
      rt.Option,
      {
        value: e.value,
        disabled: e.disabled,
        className: kt({ [qt.optionsDropdownOption]: !c }),
        "data-reverse": a === "right" || void 0,
        "data-checked": zh(r, e.value) || void 0,
        "aria-selected": zh(r, e.value),
      },
      a === "left" && p,
      e.label,
      a === "right" && p,
    );
  }
  const h = e.items.map((p) =>
    q.createElement(CO, {
      data: p,
      value: r,
      key: p.value,
      unstyled: c,
      withCheckIcon: t,
      checkIconPosition: a,
    }),
  );
  return q.createElement(rt.Group, { label: e.group }, h);
}
function KH({
  data: e,
  hidden: t,
  hiddenWhenEmpty: r,
  filter: a,
  search: c,
  limit: h,
  maxDropdownHeight: p,
  withScrollArea: v = !0,
  filterOptions: b = !0,
  withCheckIcon: P = !1,
  value: k,
  checkIconPosition: R,
  nothingFoundMessage: L,
  unstyled: z,
  labelId: M,
}) {
  SO(e);
  const G =
      typeof c == "string"
        ? (a || wO)({ options: e, search: b ? c : "", limit: h ?? 1 / 0 })
        : e,
    $ = GH(G),
    O = G.map((X) =>
      q.createElement(CO, {
        data: X,
        key: is(X) ? X.group : X.value,
        withCheckIcon: P,
        value: k,
        checkIconPosition: R,
        unstyled: z,
      }),
    );
  return q.createElement(
    rt.Dropdown,
    { hidden: t || (r && $) },
    q.createElement(
      rt.Options,
      { labelledBy: M },
      v
        ? q.createElement(
            hs.Autosize,
            {
              mah: p ?? 220,
              type: "scroll",
              scrollbarSize: "var(--_combobox-padding)",
              offsetScrollbars: "y",
              className: qt.optionsDropdownScrollArea,
            },
            O,
          )
        : O,
      $ && L && q.createElement(rt.Empty, null, L),
    ),
  );
}
const [QH, JH] = hi("Card component was not found in tree");
var eX = { root: "m-e615b15f", section: "m-599a2148" };
const Jg = eX;
var tX = Object.defineProperty,
  wu = Object.getOwnPropertySymbols,
  OO = Object.prototype.hasOwnProperty,
  kO = Object.prototype.propertyIsEnumerable,
  Bb = (e, t, r) =>
    t in e
      ? tX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Yb = (e, t) => {
    for (var r in t || (t = {})) OO.call(t, r) && Bb(e, r, t[r]);
    if (wu) for (var r of wu(t)) kO.call(t, r) && Bb(e, r, t[r]);
    return e;
  },
  rX = (e, t) => {
    var r = {};
    for (var a in e) OO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && wu)
      for (var a of wu(e)) t.indexOf(a) < 0 && kO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const nX = {},
  _d = Cr((e, t) => {
    const a = Pe("CardSection", nX, e),
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        vars: b,
        withBorder: P,
        inheritPadding: k,
      } = a,
      R = rX(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "vars",
        "withBorder",
        "inheritPadding",
      ]),
      L = JH();
    return q.createElement(
      Te,
      Yb(
        Yb(
          { ref: t, mod: { "with-border": P, "inherit-padding": k } },
          L.getStyles("section", {
            className: h,
            style: p,
            styles: v,
            classNames: c,
          }),
        ),
        R,
      ),
    );
  });
_d.classes = Jg;
_d.displayName = "@mantine/core/CardSection";
var iX = Object.defineProperty,
  Su = Object.getOwnPropertySymbols,
  AO = Object.prototype.hasOwnProperty,
  EO = Object.prototype.propertyIsEnumerable,
  Wb = (e, t, r) =>
    t in e
      ? iX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Vb = (e, t) => {
    for (var r in t || (t = {})) AO.call(t, r) && Wb(e, r, t[r]);
    if (Su) for (var r of Su(t)) EO.call(t, r) && Wb(e, r, t[r]);
    return e;
  },
  aX = (e, t) => {
    var r = {};
    for (var a in e) AO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Su)
      for (var a of Su(e)) t.indexOf(a) < 0 && EO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const oX = {},
  sX = (e, { padding: t }) => ({ root: { "--card-padding": Wa(t) } }),
  as = Cr((e, t) => {
    const r = Pe("Card", oX, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        children: k,
        padding: R,
      } = a,
      L = aX(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "children",
        "padding",
      ]),
      z = Ke({
        name: "Card",
        props: r,
        classes: Jg,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        vars: P,
        varsResolver: sX,
      }),
      M = j.Children.toArray(k),
      F = M.map((G, $) =>
        typeof G == "object" && G && "type" in G && G.type === _d
          ? j.cloneElement(G, {
              "data-first-section": $ === 0 || void 0,
              "data-last-section": $ === M.length - 1 || void 0,
            })
          : G,
      );
    return q.createElement(
      QH,
      { value: { getStyles: z } },
      q.createElement(ps, Vb(Vb({ ref: t, unstyled: b }, z("root")), L), F),
    );
  });
as.classes = Jg;
as.displayName = "@mantine/core/Card";
as.Section = _d;
function lX({ children: e, role: t }) {
  const r = ys();
  return r
    ? q.createElement(
        "div",
        {
          role: t,
          "aria-labelledby": r.labelId,
          "aria-describedby": r.describedBy,
        },
        e,
      )
    : q.createElement(q.Fragment, null, e);
}
var cX = {
  root: "m-5f75b09e",
  body: "m-5f6e695e",
  labelWrapper: "m-d3ea56bb",
  label: "m-8ee546b8",
  description: "m-328f68c0",
  error: "m-8e8a99cc",
};
const RO = cX;
var uX = Object.defineProperty,
  dX = Object.defineProperties,
  hX = Object.getOwnPropertyDescriptors,
  Pu = Object.getOwnPropertySymbols,
  LO = Object.prototype.hasOwnProperty,
  TO = Object.prototype.propertyIsEnumerable,
  Gb = (e, t, r) =>
    t in e
      ? uX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  yi = (e, t) => {
    for (var r in t || (t = {})) LO.call(t, r) && Gb(e, r, t[r]);
    if (Pu) for (var r of Pu(t)) TO.call(t, r) && Gb(e, r, t[r]);
    return e;
  },
  Ub = (e, t) => dX(e, hX(t)),
  fX = (e, t) => {
    var r = {};
    for (var a in e) LO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Pu)
      for (var a of Pu(e)) t.indexOf(a) < 0 && TO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const pX = RO,
  IO = j.forwardRef((e, t) => {
    var r = e,
      {
        __staticSelector: a,
        __stylesApiProps: c,
        className: h,
        classNames: p,
        styles: v,
        unstyled: b,
        children: P,
        label: k,
        description: R,
        id: L,
        disabled: z,
        error: M,
        size: F,
        labelPosition: G = "left",
        variant: $,
        style: O,
        vars: X,
      } = r,
      N = fX(r, [
        "__staticSelector",
        "__stylesApiProps",
        "className",
        "classNames",
        "styles",
        "unstyled",
        "children",
        "label",
        "description",
        "id",
        "disabled",
        "error",
        "size",
        "labelPosition",
        "variant",
        "style",
        "vars",
      ]);
    const B = Ke({
      name: a,
      props: c,
      className: h,
      style: O,
      classes: RO,
      classNames: p,
      styles: v,
      unstyled: b,
    });
    return q.createElement(
      Te,
      yi(
        Ub(yi({}, B("root")), {
          ref: t,
          __vars: { "--label-fz": Xr(F), "--label-lh": wt(F, "label-lh") },
          mod: { "label-position": G },
          variant: $,
          size: F,
        }),
        N,
      ),
      q.createElement(
        "div",
        yi({}, B("body")),
        P,
        q.createElement(
          "div",
          yi({}, B("labelWrapper")),
          k &&
            q.createElement(
              "label",
              Ub(yi({}, B("label")), {
                "data-disabled": z || void 0,
                htmlFor: L,
              }),
              k,
            ),
          R &&
            q.createElement(
              Xt.Description,
              yi({ size: F, __inheritStyles: !1 }, B("description")),
              R,
            ),
          M &&
            M !== "boolean" &&
            q.createElement(
              Xt.Error,
              yi({ size: F, __inheritStyles: !1 }, B("error")),
              M,
            ),
        ),
      ),
    );
  });
IO.displayName = "@mantine/core/InlineInput";
var gX = { root: "m-3eebeb36", label: "m-9e365f20" };
const NO = gX;
var mX = Object.defineProperty,
  vX = Object.defineProperties,
  yX = Object.getOwnPropertyDescriptors,
  _u = Object.getOwnPropertySymbols,
  MO = Object.prototype.hasOwnProperty,
  $O = Object.prototype.propertyIsEnumerable,
  qb = (e, t, r) =>
    t in e
      ? mX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Fh = (e, t) => {
    for (var r in t || (t = {})) MO.call(t, r) && qb(e, r, t[r]);
    if (_u) for (var r of _u(t)) $O.call(t, r) && qb(e, r, t[r]);
    return e;
  },
  xX = (e, t) => vX(e, yX(t)),
  bX = (e, t) => {
    var r = {};
    for (var a in e) MO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && _u)
      for (var a of _u(e)) t.indexOf(a) < 0 && $O.call(e, a) && (r[a] = e[a]);
    return r;
  };
const wX = { orientation: "horizontal" },
  SX = (e, { color: t, variant: r, size: a }) => ({
    root: {
      "--divider-color": t ? ai(t, e) : void 0,
      "--divider-border-style": r,
      "--divider-size": wt(a, "divider-size"),
    },
  }),
  em = Ne((e, t) => {
    const r = Pe("Divider", wX, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        color: k,
        orientation: R,
        label: L,
        labelPosition: z,
      } = a,
      M = bX(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "color",
        "orientation",
        "label",
        "labelPosition",
      ]),
      F = Ke({
        name: "Divider",
        classes: NO,
        props: r,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        vars: P,
        varsResolver: SX,
      });
    return q.createElement(
      Te,
      xX(
        Fh(
          Fh({ ref: t, mod: { orientation: R, "with-label": !!L } }, F("root")),
          M,
        ),
        { role: "separator" },
      ),
      L &&
        q.createElement(
          Te,
          Fh({ component: "span", mod: { position: z } }, F("label")),
          L,
        ),
    );
  });
em.classes = NO;
em.displayName = "@mantine/core/Divider";
const [PX, qa] = hi("Modal component was not found in tree");
var _X = {
  root: "m-9df02822",
  content: "m-54c44539",
  inner: "m-1f958f16",
  header: "m-d0e2b9cd",
};
const Tn = _X;
var CX = Object.defineProperty,
  OX = Object.defineProperties,
  kX = Object.getOwnPropertyDescriptors,
  Cu = Object.getOwnPropertySymbols,
  DO = Object.prototype.hasOwnProperty,
  zO = Object.prototype.propertyIsEnumerable,
  Zb = (e, t, r) =>
    t in e
      ? CX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Kb = (e, t) => {
    for (var r in t || (t = {})) DO.call(t, r) && Zb(e, r, t[r]);
    if (Cu) for (var r of Cu(t)) zO.call(t, r) && Zb(e, r, t[r]);
    return e;
  },
  AX = (e, t) => OX(e, kX(t)),
  EX = (e, t) => {
    var r = {};
    for (var a in e) DO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Cu)
      for (var a of Cu(e)) t.indexOf(a) < 0 && zO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const RX = {
    __staticSelector: "Modal",
    closeOnClickOutside: !0,
    withinPortal: !0,
    lockScroll: !0,
    trapFocus: !0,
    returnFocus: !0,
    closeOnEscape: !0,
    keepMounted: !1,
    zIndex: fi("modal"),
    transitionProps: { duration: 200, transition: "pop" },
  },
  LX = (e, { radius: t, size: r, yOffset: a, xOffset: c }) => ({
    root: {
      "--modal-radius": t === void 0 ? void 0 : ln(t),
      "--modal-size": wt(r, "modal-size"),
      "--modal-y-offset": ae(a),
      "--modal-x-offset": ae(c),
    },
  }),
  Cd = Ne((e, t) => {
    const r = Pe("ModalRoot", RX, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        yOffset: k,
        scrollAreaComponent: R,
        radius: L,
        fullScreen: z,
        centered: M,
        xOffset: F,
        __staticSelector: G,
      } = a,
      $ = EX(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "yOffset",
        "scrollAreaComponent",
        "radius",
        "fullScreen",
        "centered",
        "xOffset",
        "__staticSelector",
      ]),
      O = Ke({
        name: G,
        classes: Tn,
        props: r,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        vars: P,
        varsResolver: LX,
      });
    return q.createElement(
      PX,
      { value: { yOffset: k, scrollAreaComponent: R, getStyles: O } },
      q.createElement(
        RD,
        Kb(
          AX(Kb({ ref: t }, O("root")), {
            "data-full-screen": z || void 0,
            "data-centered": M || void 0,
            unstyled: b,
          }),
          $,
        ),
      ),
    );
  });
Cd.classes = Tn;
Cd.displayName = "@mantine/core/ModalRoot";
var TX = Object.defineProperty,
  Ou = Object.getOwnPropertySymbols,
  FO = Object.prototype.hasOwnProperty,
  jO = Object.prototype.propertyIsEnumerable,
  Qb = (e, t, r) =>
    t in e
      ? TX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Jb = (e, t) => {
    for (var r in t || (t = {})) FO.call(t, r) && Qb(e, r, t[r]);
    if (Ou) for (var r of Ou(t)) jO.call(t, r) && Qb(e, r, t[r]);
    return e;
  },
  IX = (e, t) => {
    var r = {};
    for (var a in e) FO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Ou)
      for (var a of Ou(e)) t.indexOf(a) < 0 && jO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const NX = {},
  Od = Ne((e, t) => {
    const a = Pe("ModalBody", NX, e),
      { classNames: c, className: h, style: p, styles: v, vars: b } = a,
      P = IX(a, ["classNames", "className", "style", "styles", "vars"]),
      k = qa();
    return q.createElement(
      W_,
      Jb(
        Jb(
          { ref: t },
          k.getStyles("body", {
            classNames: c,
            style: p,
            styles: v,
            className: h,
          }),
        ),
        P,
      ),
    );
  });
Od.classes = Tn;
Od.displayName = "@mantine/core/ModalBody";
var MX = Object.defineProperty,
  ku = Object.getOwnPropertySymbols,
  HO = Object.prototype.hasOwnProperty,
  XO = Object.prototype.propertyIsEnumerable,
  e0 = (e, t, r) =>
    t in e
      ? MX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  t0 = (e, t) => {
    for (var r in t || (t = {})) HO.call(t, r) && e0(e, r, t[r]);
    if (ku) for (var r of ku(t)) XO.call(t, r) && e0(e, r, t[r]);
    return e;
  },
  $X = (e, t) => {
    var r = {};
    for (var a in e) HO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && ku)
      for (var a of ku(e)) t.indexOf(a) < 0 && XO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const DX = {},
  kd = Ne((e, t) => {
    const a = Pe("ModalCloseButton", DX, e),
      { classNames: c, className: h, style: p, styles: v, vars: b } = a,
      P = $X(a, ["classNames", "className", "style", "styles", "vars"]),
      k = qa();
    return q.createElement(
      U_,
      t0(
        t0(
          { ref: t },
          k.getStyles("close", {
            classNames: c,
            style: p,
            styles: v,
            className: h,
          }),
        ),
        P,
      ),
    );
  });
kd.classes = Tn;
kd.displayName = "@mantine/core/ModalCloseButton";
var zX = Object.defineProperty,
  Au = Object.getOwnPropertySymbols,
  BO = Object.prototype.hasOwnProperty,
  YO = Object.prototype.propertyIsEnumerable,
  r0 = (e, t, r) =>
    t in e
      ? zX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  n0 = (e, t) => {
    for (var r in t || (t = {})) BO.call(t, r) && r0(e, r, t[r]);
    if (Au) for (var r of Au(t)) YO.call(t, r) && r0(e, r, t[r]);
    return e;
  },
  FX = (e, t) => {
    var r = {};
    for (var a in e) BO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Au)
      for (var a of Au(e)) t.indexOf(a) < 0 && YO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const jX = {},
  Ad = Ne((e, t) => {
    const a = Pe("ModalOverlay", jX, e),
      { classNames: c, className: h, style: p, styles: v, vars: b } = a,
      P = FX(a, ["classNames", "className", "style", "styles", "vars"]),
      k = qa();
    return q.createElement(
      rC,
      n0(
        n0(
          { ref: t },
          k.getStyles("overlay", {
            classNames: c,
            style: p,
            styles: v,
            className: h,
          }),
        ),
        P,
      ),
    );
  });
Ad.classes = Tn;
Ad.displayName = "@mantine/core/ModalOverlay";
var HX = Object.defineProperty,
  XX = Object.defineProperties,
  BX = Object.getOwnPropertyDescriptors,
  Eu = Object.getOwnPropertySymbols,
  WO = Object.prototype.hasOwnProperty,
  VO = Object.prototype.propertyIsEnumerable,
  i0 = (e, t, r) =>
    t in e
      ? HX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  a0 = (e, t) => {
    for (var r in t || (t = {})) WO.call(t, r) && i0(e, r, t[r]);
    if (Eu) for (var r of Eu(t)) VO.call(t, r) && i0(e, r, t[r]);
    return e;
  },
  YX = (e, t) => XX(e, BX(t)),
  WX = (e, t) => {
    var r = {};
    for (var a in e) WO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Eu)
      for (var a of Eu(e)) t.indexOf(a) < 0 && VO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const VX = {},
  Ed = Ne((e, t) => {
    const a = Pe("ModalContent", VX, e),
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        vars: b,
        children: P,
      } = a,
      k = WX(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "vars",
        "children",
      ]),
      R = qa(),
      L = R.scrollAreaComponent || mz;
    return q.createElement(
      qD,
      a0(
        YX(
          a0(
            {},
            R.getStyles("content", {
              className: h,
              style: p,
              styles: v,
              classNames: c,
            }),
          ),
          {
            innerProps: R.getStyles("inner", {
              className: h,
              style: p,
              styles: v,
              classNames: c,
            }),
            ref: t,
          },
        ),
        k,
      ),
      q.createElement(
        L,
        { style: { maxHeight: `calc(100vh - (${ae(R.yOffset)} * 2))` } },
        P,
      ),
    );
  });
Ed.classes = Tn;
Ed.displayName = "@mantine/core/ModalContent";
var GX = Object.defineProperty,
  Ru = Object.getOwnPropertySymbols,
  GO = Object.prototype.hasOwnProperty,
  UO = Object.prototype.propertyIsEnumerable,
  o0 = (e, t, r) =>
    t in e
      ? GX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  s0 = (e, t) => {
    for (var r in t || (t = {})) GO.call(t, r) && o0(e, r, t[r]);
    if (Ru) for (var r of Ru(t)) UO.call(t, r) && o0(e, r, t[r]);
    return e;
  },
  UX = (e, t) => {
    var r = {};
    for (var a in e) GO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Ru)
      for (var a of Ru(e)) t.indexOf(a) < 0 && UO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const qX = {},
  Rd = Ne((e, t) => {
    const a = Pe("ModalTitle", qX, e),
      { classNames: c, className: h, style: p, styles: v, vars: b } = a,
      P = UX(a, ["classNames", "className", "style", "styles", "vars"]),
      k = qa();
    return q.createElement(
      aC,
      s0(
        s0(
          { ref: t },
          k.getStyles("title", {
            classNames: c,
            style: p,
            styles: v,
            className: h,
          }),
        ),
        P,
      ),
    );
  });
Rd.classes = Tn;
Rd.displayName = "@mantine/core/ModalTitle";
var ZX = Object.defineProperty,
  Lu = Object.getOwnPropertySymbols,
  qO = Object.prototype.hasOwnProperty,
  ZO = Object.prototype.propertyIsEnumerable,
  l0 = (e, t, r) =>
    t in e
      ? ZX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  c0 = (e, t) => {
    for (var r in t || (t = {})) qO.call(t, r) && l0(e, r, t[r]);
    if (Lu) for (var r of Lu(t)) ZO.call(t, r) && l0(e, r, t[r]);
    return e;
  },
  KX = (e, t) => {
    var r = {};
    for (var a in e) qO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Lu)
      for (var a of Lu(e)) t.indexOf(a) < 0 && ZO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const QX = {},
  Ld = Ne((e, t) => {
    const a = Pe("ModalHeader", QX, e),
      { classNames: c, className: h, style: p, styles: v, vars: b } = a,
      P = KX(a, ["classNames", "className", "style", "styles", "vars"]),
      k = qa();
    return q.createElement(
      J_,
      c0(
        c0(
          { ref: t },
          k.getStyles("header", {
            classNames: c,
            style: p,
            styles: v,
            className: h,
          }),
        ),
        P,
      ),
    );
  });
Ld.classes = Tn;
Ld.displayName = "@mantine/core/ModalHeader";
var JX = Object.defineProperty,
  Tu = Object.getOwnPropertySymbols,
  KO = Object.prototype.hasOwnProperty,
  QO = Object.prototype.propertyIsEnumerable,
  u0 = (e, t, r) =>
    t in e
      ? JX(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  jh = (e, t) => {
    for (var r in t || (t = {})) KO.call(t, r) && u0(e, r, t[r]);
    if (Tu) for (var r of Tu(t)) QO.call(t, r) && u0(e, r, t[r]);
    return e;
  },
  eB = (e, t) => {
    var r = {};
    for (var a in e) KO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Tu)
      for (var a of Tu(e)) t.indexOf(a) < 0 && QO.call(e, a) && (r[a] = e[a]);
    return r;
  };
const tB = {
    closeOnClickOutside: !0,
    withinPortal: !0,
    lockScroll: !0,
    trapFocus: !0,
    returnFocus: !0,
    closeOnEscape: !0,
    keepMounted: !1,
    zIndex: fi("modal"),
    transitionProps: { duration: 200, transition: "pop" },
    withOverlay: !0,
    withCloseButton: !0,
  },
  un = Ne((e, t) => {
    const r = Pe("Modal", tB, e),
      {
        title: a,
        withOverlay: c,
        overlayProps: h,
        withCloseButton: p,
        closeButtonProps: v,
        children: b,
        radius: P,
      } = r,
      k = eB(r, [
        "title",
        "withOverlay",
        "overlayProps",
        "withCloseButton",
        "closeButtonProps",
        "children",
        "radius",
      ]),
      R = !!a || p;
    return q.createElement(
      Cd,
      jh({ ref: t, radius: P }, k),
      c && q.createElement(Ad, jh({}, h)),
      q.createElement(
        Ed,
        { radius: P },
        R &&
          q.createElement(
            Ld,
            null,
            a && q.createElement(Rd, null, a),
            p && q.createElement(kd, jh({}, v)),
          ),
        q.createElement(Od, null, b),
      ),
    );
  });
un.classes = Tn;
un.displayName = "@mantine/core/Modal";
un.Root = Cd;
un.Overlay = Ad;
un.Content = Ed;
un.Body = Od;
un.Header = Ld;
un.Title = Rd;
un.CloseButton = kd;
var rB = { tooltip: "m-1b3c8819", arrow: "m-f898399f" };
const Td = rB;
function nB({ offset: e, position: t }) {
  const [r, a] = j.useState(!1),
    c = j.useRef(),
    {
      x: h,
      y: p,
      elements: v,
      refs: b,
      update: P,
      placement: k,
    } = kg({
      placement: t,
      middleware: [Sg({ crossAxis: !0, padding: 5, rootBoundary: "document" })],
    }),
    R = k.includes("right") ? e : t.includes("left") ? e * -1 : 0,
    L = k.includes("bottom") ? e : t.includes("top") ? e * -1 : 0,
    z = j.useCallback(
      ({ clientX: M, clientY: F }) => {
        b.setPositionReference({
          getBoundingClientRect() {
            return {
              width: 0,
              height: 0,
              x: M,
              y: F,
              left: M + R,
              top: F + L,
              right: M,
              bottom: F,
            };
          },
        });
      },
      [v.reference],
    );
  return (
    j.useEffect(() => {
      if (b.floating.current) {
        const M = c.current;
        M.addEventListener("mousemove", z);
        const F = bn(b.floating.current);
        return (
          F.forEach((G) => {
            G.addEventListener("scroll", P);
          }),
          () => {
            M.removeEventListener("mousemove", z),
              F.forEach((G) => {
                G.removeEventListener("scroll", P);
              });
          }
        );
      }
    }, [v.reference, b.floating.current, P, z, r]),
    {
      handleMouseMove: z,
      x: h,
      y: p,
      opened: r,
      setOpened: a,
      boundaryRef: c,
      floating: b.setFloating,
    }
  );
}
var iB = Object.defineProperty,
  aB = Object.defineProperties,
  oB = Object.getOwnPropertyDescriptors,
  Iu = Object.getOwnPropertySymbols,
  JO = Object.prototype.hasOwnProperty,
  ek = Object.prototype.propertyIsEnumerable,
  d0 = (e, t, r) =>
    t in e
      ? iB(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  vo = (e, t) => {
    for (var r in t || (t = {})) JO.call(t, r) && d0(e, r, t[r]);
    if (Iu) for (var r of Iu(t)) ek.call(t, r) && d0(e, r, t[r]);
    return e;
  },
  cl = (e, t) => aB(e, oB(t)),
  sB = (e, t) => {
    var r = {};
    for (var a in e) JO.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Iu)
      for (var a of Iu(e)) t.indexOf(a) < 0 && ek.call(e, a) && (r[a] = e[a]);
    return r;
  };
const lB = {
    refProp: "ref",
    withinPortal: !0,
    offset: 10,
    position: "right",
    zIndex: fi("popover"),
  },
  cB = (e, { radius: t, color: r }) => ({
    tooltip: {
      "--tooltip-radius": t === void 0 ? void 0 : ln(t),
      "--tooltip-bg": r ? ai(r, e) : void 0,
    },
  }),
  tm = Ne((e, t) => {
    var r, a;
    const c = Pe("TooltipFloating", lB, e),
      h = c,
      {
        children: p,
        refProp: v,
        withinPortal: b,
        style: P,
        className: k,
        classNames: R,
        styles: L,
        unstyled: z,
        radius: M,
        color: F,
        label: G,
        offset: $,
        position: O,
        multiline: X,
        zIndex: N,
        disabled: B,
        variant: U,
        vars: Q,
        portalProps: ee,
      } = h,
      ne = sB(h, [
        "children",
        "refProp",
        "withinPortal",
        "style",
        "className",
        "classNames",
        "styles",
        "unstyled",
        "radius",
        "color",
        "label",
        "offset",
        "position",
        "multiline",
        "zIndex",
        "disabled",
        "variant",
        "vars",
        "portalProps",
      ]),
      le = cn(),
      he = Ke({
        name: "TooltipFloating",
        props: c,
        classes: Td,
        className: k,
        style: P,
        classNames: R,
        styles: L,
        unstyled: z,
        rootSelector: "tooltip",
        vars: Q,
        varsResolver: cB,
      }),
      {
        handleMouseMove: me,
        x: fe,
        y: ue,
        opened: oe,
        boundaryRef: ve,
        floating: ye,
        setOpened: te,
      } = nB({ offset: $, position: O });
    if (!Wi(p))
      throw new Error(
        "[@mantine/core] Tooltip.Floating component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported",
      );
    const pe = or(ve, p.ref, t),
      Se = (Ce) => {
        var ze, $e;
        ($e = (ze = p.props).onMouseEnter) == null || $e.call(ze, Ce),
          me(Ce),
          te(!0);
      },
      ke = (Ce) => {
        var ze, $e;
        ($e = (ze = p.props).onMouseLeave) == null || $e.call(ze, Ce), te(!1);
      };
    return q.createElement(
      q.Fragment,
      null,
      q.createElement(
        ms,
        cl(vo({}, ee), { withinPortal: b }),
        q.createElement(
          Te,
          cl(
            vo(
              vo({}, ne),
              he("tooltip", {
                style: cl(vo({}, FS(P, le)), {
                  zIndex: N,
                  display: !B && oe ? "block" : "none",
                  top: (r = ue && Math.round(ue)) != null ? r : "",
                  left: (a = fe && Math.round(fe)) != null ? a : "",
                }),
              }),
            ),
            { variant: U, ref: ye },
          ),
          G,
        ),
      ),
      j.cloneElement(
        p,
        cl(vo({}, p.props), { [v]: pe, onMouseEnter: Se, onMouseLeave: ke }),
      ),
    );
  });
tm.classes = Td;
tm.displayName = "@mantine/core/TooltipFloating";
const tk = j.createContext(!1),
  uB = tk.Provider,
  dB = () => j.useContext(tk),
  hB = { openDelay: 0, closeDelay: 0 };
function rk(e) {
  const {
    openDelay: t,
    closeDelay: r,
    children: a,
  } = Pe("TooltipGroup", hB, e);
  return q.createElement(
    uB,
    { value: !0 },
    q.createElement(qN, { delay: { open: t, close: r } }, a),
  );
}
rk.displayName = "@mantine/core/TooltipGroup";
function fB(e) {
  var t, r, a;
  const [c, h] = j.useState(!1),
    v = typeof e.opened == "boolean" ? e.opened : c,
    b = dB(),
    P = Vi(),
    { delay: k, currentId: R, setCurrentId: L } = r_(),
    z = j.useCallback(
      (ne) => {
        h(ne), ne && L(P);
      },
      [L, P],
    ),
    {
      x: M,
      y: F,
      context: G,
      refs: $,
      update: O,
      placement: X,
      middlewareData: { arrow: { x: N, y: B } = {} },
    } = kg({
      placement: e.position,
      open: v,
      onOpenChange: z,
      middleware: [
        jP(e.offset),
        Sg({ padding: 8 }),
        DP(),
        UP({ element: e.arrowRef, padding: e.arrowOffset }),
        ...(e.inline ? [FP()] : []),
      ],
    }),
    { getReferenceProps: U, getFloatingProps: Q } = oM([
      UN(G, {
        enabled: (t = e.events) == null ? void 0 : t.hover,
        delay: b ? k : { open: e.openDelay, close: e.closeDelay },
        mouseOnly: !((r = e.events) != null && r.touch),
      }),
      aM(G, {
        enabled: (a = e.events) == null ? void 0 : a.focus,
        keyboardOnly: !0,
      }),
      sM(G, { role: "tooltip" }),
      iM(G, { enabled: typeof e.opened === void 0 }),
      ZN(G, { id: P }),
    ]);
  n_({
    opened: v,
    position: e.position,
    positionDependencies: e.positionDependencies,
    floating: { refs: $, update: O },
  }),
    Fi(() => {
      var ne;
      (ne = e.onPositionChange) == null || ne.call(e, X);
    }, [X]);
  const ee = v && R && R !== P;
  return {
    x: M,
    y: F,
    arrowX: N,
    arrowY: B,
    reference: $.setReference,
    floating: $.setFloating,
    getFloatingProps: Q,
    getReferenceProps: U,
    isGroupPhase: ee,
    opened: v,
    placement: X,
  };
}
var pB = Object.defineProperty,
  h0 = Object.getOwnPropertySymbols,
  gB = Object.prototype.hasOwnProperty,
  mB = Object.prototype.propertyIsEnumerable,
  f0 = (e, t, r) =>
    t in e
      ? pB(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Hh = (e, t) => {
    for (var r in t || (t = {})) gB.call(t, r) && f0(e, r, t[r]);
    if (h0) for (var r of h0(t)) mB.call(t, r) && f0(e, r, t[r]);
    return e;
  };
const vB = { duration: 100, transition: "fade" };
function yB(e, t) {
  return Hh(Hh(Hh({}, vB), t), e);
}
var xB = Object.defineProperty,
  bB = Object.defineProperties,
  wB = Object.getOwnPropertyDescriptors,
  Nu = Object.getOwnPropertySymbols,
  nk = Object.prototype.hasOwnProperty,
  ik = Object.prototype.propertyIsEnumerable,
  p0 = (e, t, r) =>
    t in e
      ? xB(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Fn = (e, t) => {
    for (var r in t || (t = {})) nk.call(t, r) && p0(e, r, t[r]);
    if (Nu) for (var r of Nu(t)) ik.call(t, r) && p0(e, r, t[r]);
    return e;
  },
  ul = (e, t) => bB(e, wB(t)),
  SB = (e, t) => {
    var r = {};
    for (var a in e) nk.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Nu)
      for (var a of Nu(e)) t.indexOf(a) < 0 && ik.call(e, a) && (r[a] = e[a]);
    return r;
  };
const g0 = {
    position: "top",
    refProp: "ref",
    withinPortal: !0,
    inline: !1,
    arrowSize: 4,
    arrowOffset: 5,
    arrowRadius: 0,
    arrowPosition: "side",
    offset: 5,
    transitionProps: { duration: 100, transition: "fade" },
    events: { hover: !0, focus: !1, touch: !1 },
    zIndex: fi("popover"),
    positionDependencies: [],
  },
  PB = (e, { radius: t, color: r }) => ({
    tooltip: {
      "--tooltip-radius": t === void 0 ? void 0 : ln(t),
      "--tooltip-bg": r ? ai(r, e) : void 0,
    },
  }),
  Ii = Ne((e, t) => {
    const r = Pe("Tooltip", g0, e),
      a = Pe("Tooltip", g0, r),
      {
        children: c,
        position: h,
        refProp: p,
        label: v,
        openDelay: b,
        closeDelay: P,
        onPositionChange: k,
        opened: R,
        withinPortal: L,
        radius: z,
        color: M,
        classNames: F,
        styles: G,
        unstyled: $,
        style: O,
        className: X,
        withArrow: N,
        arrowSize: B,
        arrowOffset: U,
        arrowRadius: Q,
        arrowPosition: ee,
        offset: ne,
        transitionProps: le,
        multiline: he,
        events: me,
        zIndex: fe,
        disabled: ue,
        positionDependencies: oe,
        onClick: ve,
        onMouseEnter: ye,
        onMouseLeave: te,
        inline: pe,
        variant: Se,
        keepMounted: ke,
        vars: Ce,
        portalProps: ze,
      } = a,
      $e = SB(a, [
        "children",
        "position",
        "refProp",
        "label",
        "openDelay",
        "closeDelay",
        "onPositionChange",
        "opened",
        "withinPortal",
        "radius",
        "color",
        "classNames",
        "styles",
        "unstyled",
        "style",
        "className",
        "withArrow",
        "arrowSize",
        "arrowOffset",
        "arrowRadius",
        "arrowPosition",
        "offset",
        "transitionProps",
        "multiline",
        "events",
        "zIndex",
        "disabled",
        "positionDependencies",
        "onClick",
        "onMouseEnter",
        "onMouseLeave",
        "inline",
        "variant",
        "keepMounted",
        "vars",
        "portalProps",
      ]),
      { dir: Qe } = fd(),
      Be = j.useRef(null),
      Ue = fB({
        position: m_(Qe, h),
        closeDelay: P,
        openDelay: b,
        onPositionChange: k,
        opened: R,
        events: me,
        arrowRef: Be,
        arrowOffset: U,
        offset: typeof ne == "number" ? ne + (N ? B / 2 : 0) : ne,
        positionDependencies: [...oe, c],
        inline: pe,
      }),
      mt = Ke({
        name: "Tooltip",
        props: r,
        classes: Td,
        className: X,
        style: O,
        classNames: F,
        styles: G,
        unstyled: $,
        rootSelector: "tooltip",
        vars: Ce,
        varsResolver: PB,
      });
    if (!Wi(c))
      throw new Error(
        "[@mantine/core] Tooltip component children should be an element or a component that accepts ref, fragments, strings, numbers and other primitive values are not supported",
      );
    const Xe = or(Ue.reference, c.ref, t),
      St = yB(le, { duration: 100, transition: "fade" });
    return q.createElement(
      q.Fragment,
      null,
      q.createElement(
        ms,
        ul(Fn({}, ze), { withinPortal: L }),
        q.createElement(
          vs,
          ul(Fn({}, St), {
            keepMounted: ke,
            mounted: !ue && !!Ue.opened,
            duration: Ue.isGroupPhase ? 10 : St.duration,
          }),
          (Bt) => {
            var vt, Pt;
            return q.createElement(
              Te,
              Fn(
                ul(Fn({}, $e), { variant: Se, mod: { multiline: he } }),
                Ue.getFloatingProps({
                  ref: Ue.floating,
                  className: mt("tooltip").className,
                  style: ul(Fn(Fn({}, mt("tooltip").style), Bt), {
                    zIndex: fe,
                    top: (vt = Ue.y) != null ? vt : 0,
                    left: (Pt = Ue.x) != null ? Pt : 0,
                  }),
                }),
              ),
              v,
              q.createElement(
                Eg,
                Fn(
                  {
                    ref: Be,
                    arrowX: Ue.arrowX,
                    arrowY: Ue.arrowY,
                    visible: N,
                    position: Ue.placement,
                    arrowSize: B,
                    arrowOffset: U,
                    arrowRadius: Q,
                    arrowPosition: ee,
                  },
                  mt("arrow"),
                ),
              ),
            );
          },
        ),
      ),
      j.cloneElement(
        c,
        Ue.getReferenceProps(
          Fn(
            {
              onClick: ve,
              onMouseEnter: ye,
              onMouseLeave: te,
              onMouseMove: r.onMouseMove,
              onPointerDown: r.onPointerDown,
              onPointerEnter: r.onPointerEnter,
              [p]: Xe,
              className: kt(X, c.props.className),
            },
            c.props,
          ),
        ),
      ),
    );
  });
Ii.classes = Td;
Ii.displayName = "@mantine/core/Tooltip";
Ii.Floating = tm;
Ii.Group = rk;
var _B = Object.defineProperty,
  CB = Object.defineProperties,
  OB = Object.getOwnPropertyDescriptors,
  Mu = Object.getOwnPropertySymbols,
  ak = Object.prototype.hasOwnProperty,
  ok = Object.prototype.propertyIsEnumerable,
  m0 = (e, t, r) =>
    t in e
      ? _B(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  va = (e, t) => {
    for (var r in t || (t = {})) ak.call(t, r) && m0(e, r, t[r]);
    if (Mu) for (var r of Mu(t)) ok.call(t, r) && m0(e, r, t[r]);
    return e;
  },
  v0 = (e, t) => CB(e, OB(t)),
  kB = (e, t) => {
    var r = {};
    for (var a in e) ak.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Mu)
      for (var a of Mu(e)) t.indexOf(a) < 0 && ok.call(e, a) && (r[a] = e[a]);
    return r;
  };
const AB = {
    searchable: !1,
    withCheckIcon: !0,
    allowDeselect: !0,
    checkIconPosition: "left",
  },
  ka = Ne((e, t) => {
    const r = Pe("Select", AB, e),
      a = r,
      {
        classNames: c,
        styles: h,
        unstyled: p,
        vars: v,
        dropdownOpened: b,
        defaultDropdownOpened: P,
        onDropdownClose: k,
        onDropdownOpen: R,
        onFocus: L,
        onBlur: z,
        onClick: M,
        onChange: F,
        data: G,
        value: $,
        defaultValue: O,
        selectFirstOptionOnChange: X,
        onOptionSubmit: N,
        comboboxProps: B,
        readOnly: U,
        disabled: Q,
        filter: ee,
        limit: ne,
        withScrollArea: le,
        maxDropdownHeight: he,
        size: me,
        searchable: fe,
        rightSection: ue,
        checkIconPosition: oe,
        withCheckIcon: ve,
        nothingFoundMessage: ye,
        name: te,
        form: pe,
        searchValue: Se,
        defaultSearchValue: ke,
        onSearchChange: Ce,
        allowDeselect: ze,
        error: $e,
        rightSectionPointerEvents: Qe,
        id: Be,
        clearable: Ue,
        clearButtonProps: mt,
        hiddenInputProps: Xe,
      } = a,
      St = kB(a, [
        "classNames",
        "styles",
        "unstyled",
        "vars",
        "dropdownOpened",
        "defaultDropdownOpened",
        "onDropdownClose",
        "onDropdownOpen",
        "onFocus",
        "onBlur",
        "onClick",
        "onChange",
        "data",
        "value",
        "defaultValue",
        "selectFirstOptionOnChange",
        "onOptionSubmit",
        "comboboxProps",
        "readOnly",
        "disabled",
        "filter",
        "limit",
        "withScrollArea",
        "maxDropdownHeight",
        "size",
        "searchable",
        "rightSection",
        "checkIconPosition",
        "withCheckIcon",
        "nothingFoundMessage",
        "name",
        "form",
        "searchValue",
        "defaultSearchValue",
        "onSearchChange",
        "allowDeselect",
        "error",
        "rightSectionPointerEvents",
        "id",
        "clearable",
        "clearButtonProps",
        "hiddenInputProps",
      ]),
      Bt = j.useMemo(() => vj(G), [G]),
      vt = j.useMemo(() => BC(Bt), [Bt]),
      Pt = Vi(Be),
      [Rt, Mn] = $a({
        value: $,
        defaultValue: O,
        finalValue: null,
        onChange: F,
      }),
      Qt = Rt ? vt[Rt] : void 0,
      [dn, Jt] = $a({
        value: Se,
        defaultValue: ke,
        finalValue: Qt ? Qt.label : "",
        onChange: Ce,
      }),
      Lt = YC({
        opened: b,
        defaultOpened: P,
        onDropdownOpen: R,
        onDropdownClose: () => {
          k == null || k(), Lt.resetSelectedOption();
        },
      }),
      { resolvedClassNames: nt, resolvedStyles: hn } = kR({
        props: r,
        styles: h,
        classNames: c,
      });
    j.useEffect(() => {
      X && Lt.selectFirstOption();
    }, [X, Rt]),
      j.useEffect(() => {
        $ === null && Jt(""), typeof $ == "string" && Qt && Jt(Qt.label);
      }, [$, Qt]);
    const Gr =
      Ue &&
      !!Rt &&
      !Q &&
      !U &&
      q.createElement(
        rt.ClearButton,
        v0(va({ size: me }, mt), {
          onClear: () => {
            Mn(null), Jt("");
          },
        }),
      );
    return q.createElement(
      q.Fragment,
      null,
      q.createElement(
        rt,
        va(
          {
            store: Lt,
            __staticSelector: "Select",
            classNames: nt,
            styles: hn,
            unstyled: p,
            readOnly: U,
            onOptionSubmit: (Je) => {
              N == null || N(Je);
              const mr = ze && vt[Je].value === Rt ? null : vt[Je].value;
              Mn(mr), Jt(mr ? vt[Je].label : ""), Lt.closeDropdown();
            },
            size: me,
          },
          B,
        ),
        q.createElement(
          rt.Target,
          { targetType: fe ? "input" : "button" },
          q.createElement(
            Pd,
            v0(
              va(
                {
                  id: Pt,
                  ref: t,
                  rightSection:
                    ue ||
                    Gr ||
                    q.createElement(rt.Chevron, {
                      size: me,
                      error: $e,
                      unstyled: p,
                    }),
                  rightSectionPointerEvents: Qe || Gr ? "all" : "none",
                },
                St,
              ),
              {
                size: me,
                __staticSelector: "Select",
                disabled: Q,
                readOnly: U || !fe,
                value: dn,
                onChange: (Je) => {
                  Jt(Je.currentTarget.value),
                    Lt.openDropdown(),
                    X && Lt.selectFirstOption();
                },
                onFocus: (Je) => {
                  fe && Lt.openDropdown(), L == null || L(Je);
                },
                onBlur: (Je) => {
                  var mr;
                  fe && Lt.closeDropdown(),
                    Jt(
                      (Rt && ((mr = vt[Rt]) == null ? void 0 : mr.label)) || "",
                    ),
                    z == null || z(Je);
                },
                onClick: (Je) => {
                  fe ? Lt.openDropdown() : Lt.toggleDropdown(),
                    M == null || M(Je);
                },
                classNames: nt,
                styles: hn,
                unstyled: p,
                pointer: !fe,
                error: $e,
              },
            ),
          ),
        ),
        q.createElement(KH, {
          data: Bt,
          hidden: U || Q,
          filter: ee,
          search: dn,
          limit: ne,
          hiddenWhenEmpty: !fe || !ye,
          withScrollArea: le,
          maxDropdownHeight: he,
          filterOptions: fe && (Qt == null ? void 0 : Qt.label) !== dn,
          value: Rt,
          checkIconPosition: oe,
          withCheckIcon: ve,
          nothingFoundMessage: ye,
          unstyled: p,
          labelId: `${Pt}-label`,
        }),
      ),
      q.createElement(
        "input",
        va(
          { type: "hidden", name: te, value: Rt || "", form: pe, disabled: Q },
          Xe,
        ),
      ),
    );
  });
ka.classes = va(va({}, Pd.classes), rt.classes);
ka.displayName = "@mantine/core/Select";
var EB = Object.defineProperty,
  RB = Object.defineProperties,
  LB = Object.getOwnPropertyDescriptors,
  $u = Object.getOwnPropertySymbols,
  sk = Object.prototype.hasOwnProperty,
  lk = Object.prototype.propertyIsEnumerable,
  y0 = (e, t, r) =>
    t in e
      ? EB(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  TB = (e, t) => {
    for (var r in t || (t = {})) sk.call(t, r) && y0(e, r, t[r]);
    if ($u) for (var r of $u(t)) lk.call(t, r) && y0(e, r, t[r]);
    return e;
  },
  IB = (e, t) => RB(e, LB(t)),
  NB = (e, t) => {
    var r = {};
    for (var a in e) sk.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && $u)
      for (var a of $u(e)) t.indexOf(a) < 0 && lk.call(e, a) && (r[a] = e[a]);
    return r;
  };
const MB = {},
  Jf = Ne((e, t) => {
    const r = Pe("Space", MB, e),
      { w: a, h: c, miw: h, mih: p } = r,
      v = NB(r, ["w", "h", "miw", "mih"]);
    return q.createElement(
      Te,
      IB(TB({ ref: t }, v), { w: a, miw: h ?? a, h: c, mih: p ?? c }),
    );
  });
Jf.displayName = "@mantine/core/Space";
var $B = { root: "m-6d731127" };
const ck = $B;
var DB = Object.defineProperty,
  zB = Object.defineProperties,
  FB = Object.getOwnPropertyDescriptors,
  Du = Object.getOwnPropertySymbols,
  uk = Object.prototype.hasOwnProperty,
  dk = Object.prototype.propertyIsEnumerable,
  x0 = (e, t, r) =>
    t in e
      ? DB(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  b0 = (e, t) => {
    for (var r in t || (t = {})) uk.call(t, r) && x0(e, r, t[r]);
    if (Du) for (var r of Du(t)) dk.call(t, r) && x0(e, r, t[r]);
    return e;
  },
  jB = (e, t) => zB(e, FB(t)),
  HB = (e, t) => {
    var r = {};
    for (var a in e) uk.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Du)
      for (var a of Du(e)) t.indexOf(a) < 0 && dk.call(e, a) && (r[a] = e[a]);
    return r;
  };
const XB = { gap: "md", align: "stretch", justify: "flex-start" },
  BB = (e, { gap: t, align: r, justify: a }) => ({
    root: { "--stack-gap": Wa(t), "--stack-align": r, "--stack-justify": a },
  }),
  zu = Ne((e, t) => {
    const r = Pe("Stack", XB, e),
      a = r,
      {
        classNames: c,
        className: h,
        style: p,
        styles: v,
        unstyled: b,
        vars: P,
        align: k,
        justify: R,
        gap: L,
        variant: z,
      } = a,
      M = HB(a, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "align",
        "justify",
        "gap",
        "variant",
      ]),
      F = Ke({
        name: "Stack",
        props: r,
        classes: ck,
        className: h,
        style: p,
        classNames: c,
        styles: v,
        unstyled: b,
        vars: P,
        varsResolver: BB,
      });
    return q.createElement(
      Te,
      b0(jB(b0({ ref: t }, F("root")), { variant: z }), M),
    );
  });
zu.classes = ck;
zu.displayName = "@mantine/core/Stack";
const hk = j.createContext(null),
  YB = hk.Provider,
  WB = () => j.useContext(hk);
var VB = Object.defineProperty,
  GB = Object.defineProperties,
  UB = Object.getOwnPropertyDescriptors,
  Fu = Object.getOwnPropertySymbols,
  fk = Object.prototype.hasOwnProperty,
  pk = Object.prototype.propertyIsEnumerable,
  w0 = (e, t, r) =>
    t in e
      ? VB(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  S0 = (e, t) => {
    for (var r in t || (t = {})) fk.call(t, r) && w0(e, r, t[r]);
    if (Fu) for (var r of Fu(t)) pk.call(t, r) && w0(e, r, t[r]);
    return e;
  },
  qB = (e, t) => GB(e, UB(t)),
  ZB = (e, t) => {
    var r = {};
    for (var a in e) fk.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Fu)
      for (var a of Fu(e)) t.indexOf(a) < 0 && pk.call(e, a) && (r[a] = e[a]);
    return r;
  };
const KB = {},
  rm = Ne((e, t) => {
    const r = Pe("SwitchGroup", KB, e),
      {
        value: a,
        defaultValue: c,
        onChange: h,
        size: p,
        wrapperProps: v,
        children: b,
      } = r,
      P = ZB(r, [
        "value",
        "defaultValue",
        "onChange",
        "size",
        "wrapperProps",
        "children",
      ]),
      [k, R] = $a({ value: a, defaultValue: c, finalValue: [], onChange: h }),
      L = (z) => {
        const M = z.currentTarget.value;
        R(k.includes(M) ? k.filter((F) => F !== M) : [...k, M]);
      };
    return q.createElement(
      YB,
      { value: { value: k, onChange: L, size: p } },
      q.createElement(
        Xt.Wrapper,
        qB(S0(S0({ size: p, ref: t }, v), P), {
          labelElement: "div",
          __staticSelector: "SwitchGroup",
        }),
        q.createElement(lX, { role: "group" }, b),
      ),
    );
  });
rm.classes = Xt.Wrapper.classes;
rm.displayName = "@mantine/core/SwitchGroup";
var QB = {
  root: "m-5f93f3bb",
  input: "m-926b4011",
  track: "m-9307d992",
  thumb: "m-93039a1d",
  trackLabel: "m-8277e082",
};
const gk = QB;
var JB = Object.defineProperty,
  e3 = Object.defineProperties,
  t3 = Object.getOwnPropertyDescriptors,
  ju = Object.getOwnPropertySymbols,
  mk = Object.prototype.hasOwnProperty,
  vk = Object.prototype.propertyIsEnumerable,
  P0 = (e, t, r) =>
    t in e
      ? JB(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  en = (e, t) => {
    for (var r in t || (t = {})) mk.call(t, r) && P0(e, r, t[r]);
    if (ju) for (var r of ju(t)) vk.call(t, r) && P0(e, r, t[r]);
    return e;
  },
  _0 = (e, t) => e3(e, t3(t)),
  r3 = (e, t) => {
    var r = {};
    for (var a in e) mk.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && ju)
      for (var a of ju(e)) t.indexOf(a) < 0 && vk.call(e, a) && (r[a] = e[a]);
    return r;
  };
const n3 = { labelPosition: "right" },
  i3 = (e, { radius: t, color: r, size: a }) => ({
    root: {
      "--switch-radius": t === void 0 ? void 0 : ln(t),
      "--switch-height": wt(a, "switch-height"),
      "--switch-width": wt(a, "switch-width"),
      "--switch-thumb-size": wt(a, "switch-thumb-size"),
      "--switch-label-font-size": wt(a, "switch-label-font-size"),
      "--switch-track-label-padding": wt(a, "switch-track-label-padding"),
      "--switch-color": r ? ai(r, e) : void 0,
    },
  }),
  Id = Ne((e, t) => {
    var r;
    const a = Pe("Switch", n3, e),
      c = a,
      {
        classNames: h,
        className: p,
        style: v,
        styles: b,
        unstyled: P,
        vars: k,
        color: R,
        label: L,
        offLabel: z,
        onLabel: M,
        id: F,
        size: G,
        radius: $,
        wrapperProps: O,
        children: X,
        thumbIcon: N,
        checked: B,
        defaultChecked: U,
        onChange: Q,
        labelPosition: ee,
        description: ne,
        error: le,
        disabled: he,
        variant: me,
        rootRef: fe,
      } = c,
      ue = r3(c, [
        "classNames",
        "className",
        "style",
        "styles",
        "unstyled",
        "vars",
        "color",
        "label",
        "offLabel",
        "onLabel",
        "id",
        "size",
        "radius",
        "wrapperProps",
        "children",
        "thumbIcon",
        "checked",
        "defaultChecked",
        "onChange",
        "labelPosition",
        "description",
        "error",
        "disabled",
        "variant",
        "rootRef",
      ]),
      oe = WB(),
      ve = G || (oe == null ? void 0 : oe.size),
      ye = Ke({
        name: "Switch",
        props: a,
        classes: gk,
        className: p,
        style: v,
        classNames: h,
        styles: b,
        unstyled: P,
        vars: k,
        varsResolver: i3,
      }),
      { styleProps: te, rest: pe } = hd(ue),
      Se = Vi(F),
      ke = oe
        ? { checked: oe.value.includes(pe.value), onChange: oe.onChange }
        : {},
      [Ce, ze] = $a({
        value: (r = ke.checked) != null ? r : B,
        defaultValue: U,
        finalValue: !1,
      });
    return q.createElement(
      IO,
      en(
        en(
          _0(en({}, ye("root")), {
            __staticSelector: "Switch",
            __stylesApiProps: a,
            id: Se,
            size: ve,
            labelPosition: ee,
            label: L,
            description: ne,
            error: le,
            disabled: he,
            classNames: h,
            styles: b,
            unstyled: P,
            "data-checked": ke.checked || void 0,
            variant: me,
            ref: fe,
          }),
          te,
        ),
        O,
      ),
      q.createElement(
        "input",
        en(
          _0(en({}, pe), {
            disabled: he,
            checked: Ce,
            onChange: ($e) => {
              var Qe;
              oe
                ? (Qe = ke.onChange) == null || Qe.call(ke, $e)
                : Q == null || Q($e),
                ze($e.currentTarget.checked);
            },
            id: Se,
            ref: t,
            type: "checkbox",
          }),
          ye("input"),
        ),
      ),
      q.createElement(
        Te,
        en(
          {
            component: "label",
            htmlFor: Se,
            mod: { error: le, "label-position": ee },
          },
          ye("track"),
        ),
        q.createElement(
          Te,
          en({ component: "span", mod: "reduce-motion" }, ye("thumb")),
          N,
        ),
        q.createElement("span", en({}, ye("trackLabel")), Ce ? M : z),
      ),
    );
  });
Id.classes = en(en({}, gk), pX);
Id.displayName = "@mantine/core/Switch";
Id.Group = rm;
class Nd {
  constructor() {
    (this.listeners = new Set()), (this.subscribe = this.subscribe.bind(this));
  }
  subscribe(t) {
    const r = { listener: t };
    return (
      this.listeners.add(r),
      this.onSubscribe(),
      () => {
        this.listeners.delete(r), this.onUnsubscribe();
      }
    );
  }
  hasListeners() {
    return this.listeners.size > 0;
  }
  onSubscribe() {}
  onUnsubscribe() {}
}
const nm = typeof window > "u" || "Deno" in window;
function Mr() {}
function a3(e, t) {
  return typeof e == "function" ? e(t) : e;
}
function o3(e) {
  return typeof e == "number" && e >= 0 && e !== 1 / 0;
}
function s3(e, t) {
  return Math.max(e + (t || 0) - Date.now(), 0);
}
function dl(e, t, r) {
  return Md(e)
    ? typeof t == "function"
      ? { ...r, queryKey: e, queryFn: t }
      : { ...t, queryKey: e }
    : e;
}
function Bn(e, t, r) {
  return Md(e) ? [{ ...t, queryKey: e }, r] : [e || {}, t];
}
function C0(e, t) {
  const {
    type: r = "all",
    exact: a,
    fetchStatus: c,
    predicate: h,
    queryKey: p,
    stale: v,
  } = e;
  if (Md(p)) {
    if (a) {
      if (t.queryHash !== im(p, t.options)) return !1;
    } else if (!Hu(t.queryKey, p)) return !1;
  }
  if (r !== "all") {
    const b = t.isActive();
    if ((r === "active" && !b) || (r === "inactive" && b)) return !1;
  }
  return !(
    (typeof v == "boolean" && t.isStale() !== v) ||
    (typeof c < "u" && c !== t.state.fetchStatus) ||
    (h && !h(t))
  );
}
function O0(e, t) {
  const { exact: r, fetching: a, predicate: c, mutationKey: h } = e;
  if (Md(h)) {
    if (!t.options.mutationKey) return !1;
    if (r) {
      if (ki(t.options.mutationKey) !== ki(h)) return !1;
    } else if (!Hu(t.options.mutationKey, h)) return !1;
  }
  return !(
    (typeof a == "boolean" && (t.state.status === "loading") !== a) ||
    (c && !c(t))
  );
}
function im(e, t) {
  return ((t == null ? void 0 : t.queryKeyHashFn) || ki)(e);
}
function ki(e) {
  return JSON.stringify(e, (t, r) =>
    ep(r)
      ? Object.keys(r)
          .sort()
          .reduce((a, c) => ((a[c] = r[c]), a), {})
      : r,
  );
}
function Hu(e, t) {
  return yk(e, t);
}
function yk(e, t) {
  return e === t
    ? !0
    : typeof e != typeof t
    ? !1
    : e && t && typeof e == "object" && typeof t == "object"
    ? !Object.keys(t).some((r) => !yk(e[r], t[r]))
    : !1;
}
function xk(e, t) {
  if (e === t) return e;
  const r = k0(e) && k0(t);
  if (r || (ep(e) && ep(t))) {
    const a = r ? e.length : Object.keys(e).length,
      c = r ? t : Object.keys(t),
      h = c.length,
      p = r ? [] : {};
    let v = 0;
    for (let b = 0; b < h; b++) {
      const P = r ? b : c[b];
      (p[P] = xk(e[P], t[P])), p[P] === e[P] && v++;
    }
    return a === h && v === a ? e : p;
  }
  return t;
}
function k0(e) {
  return Array.isArray(e) && e.length === Object.keys(e).length;
}
function ep(e) {
  if (!A0(e)) return !1;
  const t = e.constructor;
  if (typeof t > "u") return !0;
  const r = t.prototype;
  return !(!A0(r) || !r.hasOwnProperty("isPrototypeOf"));
}
function A0(e) {
  return Object.prototype.toString.call(e) === "[object Object]";
}
function Md(e) {
  return Array.isArray(e);
}
function bk(e) {
  return new Promise((t) => {
    setTimeout(t, e);
  });
}
function E0(e) {
  bk(0).then(e);
}
function l3() {
  if (typeof AbortController == "function") return new AbortController();
}
function c3(e, t, r) {
  return r.isDataEqual != null && r.isDataEqual(e, t)
    ? e
    : typeof r.structuralSharing == "function"
    ? r.structuralSharing(e, t)
    : r.structuralSharing !== !1
    ? xk(e, t)
    : t;
}
class u3 extends Nd {
  constructor() {
    super(),
      (this.setup = (t) => {
        if (!nm && window.addEventListener) {
          const r = () => t();
          return (
            window.addEventListener("visibilitychange", r, !1),
            window.addEventListener("focus", r, !1),
            () => {
              window.removeEventListener("visibilitychange", r),
                window.removeEventListener("focus", r);
            }
          );
        }
      });
  }
  onSubscribe() {
    this.cleanup || this.setEventListener(this.setup);
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      var t;
      (t = this.cleanup) == null || t.call(this), (this.cleanup = void 0);
    }
  }
  setEventListener(t) {
    var r;
    (this.setup = t),
      (r = this.cleanup) == null || r.call(this),
      (this.cleanup = t((a) => {
        typeof a == "boolean" ? this.setFocused(a) : this.onFocus();
      }));
  }
  setFocused(t) {
    this.focused !== t && ((this.focused = t), this.onFocus());
  }
  onFocus() {
    this.listeners.forEach(({ listener: t }) => {
      t();
    });
  }
  isFocused() {
    return typeof this.focused == "boolean"
      ? this.focused
      : typeof document > "u"
      ? !0
      : [void 0, "visible", "prerender"].includes(document.visibilityState);
  }
}
const tp = new u3(),
  R0 = ["online", "offline"];
class d3 extends Nd {
  constructor() {
    super(),
      (this.setup = (t) => {
        if (!nm && window.addEventListener) {
          const r = () => t();
          return (
            R0.forEach((a) => {
              window.addEventListener(a, r, !1);
            }),
            () => {
              R0.forEach((a) => {
                window.removeEventListener(a, r);
              });
            }
          );
        }
      });
  }
  onSubscribe() {
    this.cleanup || this.setEventListener(this.setup);
  }
  onUnsubscribe() {
    if (!this.hasListeners()) {
      var t;
      (t = this.cleanup) == null || t.call(this), (this.cleanup = void 0);
    }
  }
  setEventListener(t) {
    var r;
    (this.setup = t),
      (r = this.cleanup) == null || r.call(this),
      (this.cleanup = t((a) => {
        typeof a == "boolean" ? this.setOnline(a) : this.onOnline();
      }));
  }
  setOnline(t) {
    this.online !== t && ((this.online = t), this.onOnline());
  }
  onOnline() {
    this.listeners.forEach(({ listener: t }) => {
      t();
    });
  }
  isOnline() {
    return typeof this.online == "boolean"
      ? this.online
      : typeof navigator > "u" || typeof navigator.onLine > "u"
      ? !0
      : navigator.onLine;
  }
}
const Xu = new d3();
function h3(e) {
  return Math.min(1e3 * 2 ** e, 3e4);
}
function am(e) {
  return (e ?? "online") === "online" ? Xu.isOnline() : !0;
}
class wk {
  constructor(t) {
    (this.revert = t == null ? void 0 : t.revert),
      (this.silent = t == null ? void 0 : t.silent);
  }
}
function Xh(e) {
  return e instanceof wk;
}
function Sk(e) {
  let t = !1,
    r = 0,
    a = !1,
    c,
    h,
    p;
  const v = new Promise((G, $) => {
      (h = G), (p = $);
    }),
    b = (G) => {
      a || (z(new wk(G)), e.abort == null || e.abort());
    },
    P = () => {
      t = !0;
    },
    k = () => {
      t = !1;
    },
    R = () => !tp.isFocused() || (e.networkMode !== "always" && !Xu.isOnline()),
    L = (G) => {
      a ||
        ((a = !0),
        e.onSuccess == null || e.onSuccess(G),
        c == null || c(),
        h(G));
    },
    z = (G) => {
      a ||
        ((a = !0), e.onError == null || e.onError(G), c == null || c(), p(G));
    },
    M = () =>
      new Promise((G) => {
        (c = ($) => {
          const O = a || !R();
          return O && G($), O;
        }),
          e.onPause == null || e.onPause();
      }).then(() => {
        (c = void 0), a || e.onContinue == null || e.onContinue();
      }),
    F = () => {
      if (a) return;
      let G;
      try {
        G = e.fn();
      } catch ($) {
        G = Promise.reject($);
      }
      Promise.resolve(G)
        .then(L)
        .catch(($) => {
          var O, X;
          if (a) return;
          const N = (O = e.retry) != null ? O : 3,
            B = (X = e.retryDelay) != null ? X : h3,
            U = typeof B == "function" ? B(r, $) : B,
            Q =
              N === !0 ||
              (typeof N == "number" && r < N) ||
              (typeof N == "function" && N(r, $));
          if (t || !Q) {
            z($);
            return;
          }
          r++,
            e.onFail == null || e.onFail(r, $),
            bk(U)
              .then(() => {
                if (R()) return M();
              })
              .then(() => {
                t ? z($) : F();
              });
        });
    };
  return (
    am(e.networkMode) ? F() : M().then(F),
    {
      promise: v,
      cancel: b,
      continue: () => ((c == null ? void 0 : c()) ? v : Promise.resolve()),
      cancelRetry: P,
      continueRetry: k,
    }
  );
}
const om = console;
function f3() {
  let e = [],
    t = 0,
    r = (k) => {
      k();
    },
    a = (k) => {
      k();
    };
  const c = (k) => {
      let R;
      t++;
      try {
        R = k();
      } finally {
        t--, t || v();
      }
      return R;
    },
    h = (k) => {
      t
        ? e.push(k)
        : E0(() => {
            r(k);
          });
    },
    p =
      (k) =>
      (...R) => {
        h(() => {
          k(...R);
        });
      },
    v = () => {
      const k = e;
      (e = []),
        k.length &&
          E0(() => {
            a(() => {
              k.forEach((R) => {
                r(R);
              });
            });
          });
    };
  return {
    batch: c,
    batchCalls: p,
    schedule: h,
    setNotifyFunction: (k) => {
      r = k;
    },
    setBatchNotifyFunction: (k) => {
      a = k;
    },
  };
}
const Gt = f3();
class Pk {
  destroy() {
    this.clearGcTimeout();
  }
  scheduleGc() {
    this.clearGcTimeout(),
      o3(this.cacheTime) &&
        (this.gcTimeout = setTimeout(() => {
          this.optionalRemove();
        }, this.cacheTime));
  }
  updateCacheTime(t) {
    this.cacheTime = Math.max(
      this.cacheTime || 0,
      t ?? (nm ? 1 / 0 : 5 * 60 * 1e3),
    );
  }
  clearGcTimeout() {
    this.gcTimeout && (clearTimeout(this.gcTimeout), (this.gcTimeout = void 0));
  }
}
class p3 extends Pk {
  constructor(t) {
    super(),
      (this.abortSignalConsumed = !1),
      (this.defaultOptions = t.defaultOptions),
      this.setOptions(t.options),
      (this.observers = []),
      (this.cache = t.cache),
      (this.logger = t.logger || om),
      (this.queryKey = t.queryKey),
      (this.queryHash = t.queryHash),
      (this.initialState = t.state || g3(this.options)),
      (this.state = this.initialState),
      this.scheduleGc();
  }
  get meta() {
    return this.options.meta;
  }
  setOptions(t) {
    (this.options = { ...this.defaultOptions, ...t }),
      this.updateCacheTime(this.options.cacheTime);
  }
  optionalRemove() {
    !this.observers.length &&
      this.state.fetchStatus === "idle" &&
      this.cache.remove(this);
  }
  setData(t, r) {
    const a = c3(this.state.data, t, this.options);
    return (
      this.dispatch({
        data: a,
        type: "success",
        dataUpdatedAt: r == null ? void 0 : r.updatedAt,
        manual: r == null ? void 0 : r.manual,
      }),
      a
    );
  }
  setState(t, r) {
    this.dispatch({ type: "setState", state: t, setStateOptions: r });
  }
  cancel(t) {
    var r;
    const a = this.promise;
    return (
      (r = this.retryer) == null || r.cancel(t),
      a ? a.then(Mr).catch(Mr) : Promise.resolve()
    );
  }
  destroy() {
    super.destroy(), this.cancel({ silent: !0 });
  }
  reset() {
    this.destroy(), this.setState(this.initialState);
  }
  isActive() {
    return this.observers.some((t) => t.options.enabled !== !1);
  }
  isDisabled() {
    return this.getObserversCount() > 0 && !this.isActive();
  }
  isStale() {
    return (
      this.state.isInvalidated ||
      !this.state.dataUpdatedAt ||
      this.observers.some((t) => t.getCurrentResult().isStale)
    );
  }
  isStaleByTime(t = 0) {
    return (
      this.state.isInvalidated ||
      !this.state.dataUpdatedAt ||
      !s3(this.state.dataUpdatedAt, t)
    );
  }
  onFocus() {
    var t;
    const r = this.observers.find((a) => a.shouldFetchOnWindowFocus());
    r && r.refetch({ cancelRefetch: !1 }),
      (t = this.retryer) == null || t.continue();
  }
  onOnline() {
    var t;
    const r = this.observers.find((a) => a.shouldFetchOnReconnect());
    r && r.refetch({ cancelRefetch: !1 }),
      (t = this.retryer) == null || t.continue();
  }
  addObserver(t) {
    this.observers.includes(t) ||
      (this.observers.push(t),
      this.clearGcTimeout(),
      this.cache.notify({ type: "observerAdded", query: this, observer: t }));
  }
  removeObserver(t) {
    this.observers.includes(t) &&
      ((this.observers = this.observers.filter((r) => r !== t)),
      this.observers.length ||
        (this.retryer &&
          (this.abortSignalConsumed
            ? this.retryer.cancel({ revert: !0 })
            : this.retryer.cancelRetry()),
        this.scheduleGc()),
      this.cache.notify({ type: "observerRemoved", query: this, observer: t }));
  }
  getObserversCount() {
    return this.observers.length;
  }
  invalidate() {
    this.state.isInvalidated || this.dispatch({ type: "invalidate" });
  }
  fetch(t, r) {
    var a, c;
    if (this.state.fetchStatus !== "idle") {
      if (this.state.dataUpdatedAt && r != null && r.cancelRefetch)
        this.cancel({ silent: !0 });
      else if (this.promise) {
        var h;
        return (h = this.retryer) == null || h.continueRetry(), this.promise;
      }
    }
    if ((t && this.setOptions(t), !this.options.queryFn)) {
      const z = this.observers.find((M) => M.options.queryFn);
      z && this.setOptions(z.options);
    }
    const p = l3(),
      v = { queryKey: this.queryKey, pageParam: void 0, meta: this.meta },
      b = (z) => {
        Object.defineProperty(z, "signal", {
          enumerable: !0,
          get: () => {
            if (p) return (this.abortSignalConsumed = !0), p.signal;
          },
        });
      };
    b(v);
    const P = () =>
        this.options.queryFn
          ? ((this.abortSignalConsumed = !1), this.options.queryFn(v))
          : Promise.reject(
              "Missing queryFn for queryKey '" + this.options.queryHash + "'",
            ),
      k = {
        fetchOptions: r,
        options: this.options,
        queryKey: this.queryKey,
        state: this.state,
        fetchFn: P,
      };
    if (
      (b(k),
      (a = this.options.behavior) == null || a.onFetch(k),
      (this.revertState = this.state),
      this.state.fetchStatus === "idle" ||
        this.state.fetchMeta !==
          ((c = k.fetchOptions) == null ? void 0 : c.meta))
    ) {
      var R;
      this.dispatch({
        type: "fetch",
        meta: (R = k.fetchOptions) == null ? void 0 : R.meta,
      });
    }
    const L = (z) => {
      if (
        ((Xh(z) && z.silent) || this.dispatch({ type: "error", error: z }),
        !Xh(z))
      ) {
        var M, F, G, $;
        (M = (F = this.cache.config).onError) == null || M.call(F, z, this),
          (G = ($ = this.cache.config).onSettled) == null ||
            G.call($, this.state.data, z, this);
      }
      this.isFetchingOptimistic || this.scheduleGc(),
        (this.isFetchingOptimistic = !1);
    };
    return (
      (this.retryer = Sk({
        fn: k.fetchFn,
        abort: p == null ? void 0 : p.abort.bind(p),
        onSuccess: (z) => {
          var M, F, G, $;
          if (typeof z > "u") {
            L(new Error(this.queryHash + " data is undefined"));
            return;
          }
          this.setData(z),
            (M = (F = this.cache.config).onSuccess) == null ||
              M.call(F, z, this),
            (G = ($ = this.cache.config).onSettled) == null ||
              G.call($, z, this.state.error, this),
            this.isFetchingOptimistic || this.scheduleGc(),
            (this.isFetchingOptimistic = !1);
        },
        onError: L,
        onFail: (z, M) => {
          this.dispatch({ type: "failed", failureCount: z, error: M });
        },
        onPause: () => {
          this.dispatch({ type: "pause" });
        },
        onContinue: () => {
          this.dispatch({ type: "continue" });
        },
        retry: k.options.retry,
        retryDelay: k.options.retryDelay,
        networkMode: k.options.networkMode,
      })),
      (this.promise = this.retryer.promise),
      this.promise
    );
  }
  dispatch(t) {
    const r = (a) => {
      var c, h;
      switch (t.type) {
        case "failed":
          return {
            ...a,
            fetchFailureCount: t.failureCount,
            fetchFailureReason: t.error,
          };
        case "pause":
          return { ...a, fetchStatus: "paused" };
        case "continue":
          return { ...a, fetchStatus: "fetching" };
        case "fetch":
          return {
            ...a,
            fetchFailureCount: 0,
            fetchFailureReason: null,
            fetchMeta: (c = t.meta) != null ? c : null,
            fetchStatus: am(this.options.networkMode) ? "fetching" : "paused",
            ...(!a.dataUpdatedAt && { error: null, status: "loading" }),
          };
        case "success":
          return {
            ...a,
            data: t.data,
            dataUpdateCount: a.dataUpdateCount + 1,
            dataUpdatedAt: (h = t.dataUpdatedAt) != null ? h : Date.now(),
            error: null,
            isInvalidated: !1,
            status: "success",
            ...(!t.manual && {
              fetchStatus: "idle",
              fetchFailureCount: 0,
              fetchFailureReason: null,
            }),
          };
        case "error":
          const p = t.error;
          return Xh(p) && p.revert && this.revertState
            ? { ...this.revertState, fetchStatus: "idle" }
            : {
                ...a,
                error: p,
                errorUpdateCount: a.errorUpdateCount + 1,
                errorUpdatedAt: Date.now(),
                fetchFailureCount: a.fetchFailureCount + 1,
                fetchFailureReason: p,
                fetchStatus: "idle",
                status: "error",
              };
        case "invalidate":
          return { ...a, isInvalidated: !0 };
        case "setState":
          return { ...a, ...t.state };
      }
    };
    (this.state = r(this.state)),
      Gt.batch(() => {
        this.observers.forEach((a) => {
          a.onQueryUpdate(t);
        }),
          this.cache.notify({ query: this, type: "updated", action: t });
      });
  }
}
function g3(e) {
  const t =
      typeof e.initialData == "function" ? e.initialData() : e.initialData,
    r = typeof t < "u",
    a = r
      ? typeof e.initialDataUpdatedAt == "function"
        ? e.initialDataUpdatedAt()
        : e.initialDataUpdatedAt
      : 0;
  return {
    data: t,
    dataUpdateCount: 0,
    dataUpdatedAt: r ? a ?? Date.now() : 0,
    error: null,
    errorUpdateCount: 0,
    errorUpdatedAt: 0,
    fetchFailureCount: 0,
    fetchFailureReason: null,
    fetchMeta: null,
    isInvalidated: !1,
    status: r ? "success" : "loading",
    fetchStatus: "idle",
  };
}
class m3 extends Nd {
  constructor(t) {
    super(),
      (this.config = t || {}),
      (this.queries = []),
      (this.queriesMap = {});
  }
  build(t, r, a) {
    var c;
    const h = r.queryKey,
      p = (c = r.queryHash) != null ? c : im(h, r);
    let v = this.get(p);
    return (
      v ||
        ((v = new p3({
          cache: this,
          logger: t.getLogger(),
          queryKey: h,
          queryHash: p,
          options: t.defaultQueryOptions(r),
          state: a,
          defaultOptions: t.getQueryDefaults(h),
        })),
        this.add(v)),
      v
    );
  }
  add(t) {
    this.queriesMap[t.queryHash] ||
      ((this.queriesMap[t.queryHash] = t),
      this.queries.push(t),
      this.notify({ type: "added", query: t }));
  }
  remove(t) {
    const r = this.queriesMap[t.queryHash];
    r &&
      (t.destroy(),
      (this.queries = this.queries.filter((a) => a !== t)),
      r === t && delete this.queriesMap[t.queryHash],
      this.notify({ type: "removed", query: t }));
  }
  clear() {
    Gt.batch(() => {
      this.queries.forEach((t) => {
        this.remove(t);
      });
    });
  }
  get(t) {
    return this.queriesMap[t];
  }
  getAll() {
    return this.queries;
  }
  find(t, r) {
    const [a] = Bn(t, r);
    return (
      typeof a.exact > "u" && (a.exact = !0), this.queries.find((c) => C0(a, c))
    );
  }
  findAll(t, r) {
    const [a] = Bn(t, r);
    return Object.keys(a).length > 0
      ? this.queries.filter((c) => C0(a, c))
      : this.queries;
  }
  notify(t) {
    Gt.batch(() => {
      this.listeners.forEach(({ listener: r }) => {
        r(t);
      });
    });
  }
  onFocus() {
    Gt.batch(() => {
      this.queries.forEach((t) => {
        t.onFocus();
      });
    });
  }
  onOnline() {
    Gt.batch(() => {
      this.queries.forEach((t) => {
        t.onOnline();
      });
    });
  }
}
class v3 extends Pk {
  constructor(t) {
    super(),
      (this.defaultOptions = t.defaultOptions),
      (this.mutationId = t.mutationId),
      (this.mutationCache = t.mutationCache),
      (this.logger = t.logger || om),
      (this.observers = []),
      (this.state = t.state || y3()),
      this.setOptions(t.options),
      this.scheduleGc();
  }
  setOptions(t) {
    (this.options = { ...this.defaultOptions, ...t }),
      this.updateCacheTime(this.options.cacheTime);
  }
  get meta() {
    return this.options.meta;
  }
  setState(t) {
    this.dispatch({ type: "setState", state: t });
  }
  addObserver(t) {
    this.observers.includes(t) ||
      (this.observers.push(t),
      this.clearGcTimeout(),
      this.mutationCache.notify({
        type: "observerAdded",
        mutation: this,
        observer: t,
      }));
  }
  removeObserver(t) {
    (this.observers = this.observers.filter((r) => r !== t)),
      this.scheduleGc(),
      this.mutationCache.notify({
        type: "observerRemoved",
        mutation: this,
        observer: t,
      });
  }
  optionalRemove() {
    this.observers.length ||
      (this.state.status === "loading"
        ? this.scheduleGc()
        : this.mutationCache.remove(this));
  }
  continue() {
    var t, r;
    return (t = (r = this.retryer) == null ? void 0 : r.continue()) != null
      ? t
      : this.execute();
  }
  async execute() {
    const t = () => {
        var Q;
        return (
          (this.retryer = Sk({
            fn: () =>
              this.options.mutationFn
                ? this.options.mutationFn(this.state.variables)
                : Promise.reject("No mutationFn found"),
            onFail: (ee, ne) => {
              this.dispatch({ type: "failed", failureCount: ee, error: ne });
            },
            onPause: () => {
              this.dispatch({ type: "pause" });
            },
            onContinue: () => {
              this.dispatch({ type: "continue" });
            },
            retry: (Q = this.options.retry) != null ? Q : 0,
            retryDelay: this.options.retryDelay,
            networkMode: this.options.networkMode,
          })),
          this.retryer.promise
        );
      },
      r = this.state.status === "loading";
    try {
      var a, c, h, p, v, b, P, k;
      if (!r) {
        var R, L, z, M;
        this.dispatch({ type: "loading", variables: this.options.variables }),
          await ((R = (L = this.mutationCache.config).onMutate) == null
            ? void 0
            : R.call(L, this.state.variables, this));
        const ee = await ((z = (M = this.options).onMutate) == null
          ? void 0
          : z.call(M, this.state.variables));
        ee !== this.state.context &&
          this.dispatch({
            type: "loading",
            context: ee,
            variables: this.state.variables,
          });
      }
      const Q = await t();
      return (
        await ((a = (c = this.mutationCache.config).onSuccess) == null
          ? void 0
          : a.call(c, Q, this.state.variables, this.state.context, this)),
        await ((h = (p = this.options).onSuccess) == null
          ? void 0
          : h.call(p, Q, this.state.variables, this.state.context)),
        await ((v = (b = this.mutationCache.config).onSettled) == null
          ? void 0
          : v.call(b, Q, null, this.state.variables, this.state.context, this)),
        await ((P = (k = this.options).onSettled) == null
          ? void 0
          : P.call(k, Q, null, this.state.variables, this.state.context)),
        this.dispatch({ type: "success", data: Q }),
        Q
      );
    } catch (Q) {
      try {
        var F, G, $, O, X, N, B, U;
        throw (
          (await ((F = (G = this.mutationCache.config).onError) == null
            ? void 0
            : F.call(G, Q, this.state.variables, this.state.context, this)),
          await (($ = (O = this.options).onError) == null
            ? void 0
            : $.call(O, Q, this.state.variables, this.state.context)),
          await ((X = (N = this.mutationCache.config).onSettled) == null
            ? void 0
            : X.call(
                N,
                void 0,
                Q,
                this.state.variables,
                this.state.context,
                this,
              )),
          await ((B = (U = this.options).onSettled) == null
            ? void 0
            : B.call(U, void 0, Q, this.state.variables, this.state.context)),
          Q)
        );
      } finally {
        this.dispatch({ type: "error", error: Q });
      }
    }
  }
  dispatch(t) {
    const r = (a) => {
      switch (t.type) {
        case "failed":
          return { ...a, failureCount: t.failureCount, failureReason: t.error };
        case "pause":
          return { ...a, isPaused: !0 };
        case "continue":
          return { ...a, isPaused: !1 };
        case "loading":
          return {
            ...a,
            context: t.context,
            data: void 0,
            failureCount: 0,
            failureReason: null,
            error: null,
            isPaused: !am(this.options.networkMode),
            status: "loading",
            variables: t.variables,
          };
        case "success":
          return {
            ...a,
            data: t.data,
            failureCount: 0,
            failureReason: null,
            error: null,
            status: "success",
            isPaused: !1,
          };
        case "error":
          return {
            ...a,
            data: void 0,
            error: t.error,
            failureCount: a.failureCount + 1,
            failureReason: t.error,
            isPaused: !1,
            status: "error",
          };
        case "setState":
          return { ...a, ...t.state };
      }
    };
    (this.state = r(this.state)),
      Gt.batch(() => {
        this.observers.forEach((a) => {
          a.onMutationUpdate(t);
        }),
          this.mutationCache.notify({
            mutation: this,
            type: "updated",
            action: t,
          });
      });
  }
}
function y3() {
  return {
    context: void 0,
    data: void 0,
    error: null,
    failureCount: 0,
    failureReason: null,
    isPaused: !1,
    status: "idle",
    variables: void 0,
  };
}
class x3 extends Nd {
  constructor(t) {
    super(),
      (this.config = t || {}),
      (this.mutations = []),
      (this.mutationId = 0);
  }
  build(t, r, a) {
    const c = new v3({
      mutationCache: this,
      logger: t.getLogger(),
      mutationId: ++this.mutationId,
      options: t.defaultMutationOptions(r),
      state: a,
      defaultOptions: r.mutationKey
        ? t.getMutationDefaults(r.mutationKey)
        : void 0,
    });
    return this.add(c), c;
  }
  add(t) {
    this.mutations.push(t), this.notify({ type: "added", mutation: t });
  }
  remove(t) {
    (this.mutations = this.mutations.filter((r) => r !== t)),
      this.notify({ type: "removed", mutation: t });
  }
  clear() {
    Gt.batch(() => {
      this.mutations.forEach((t) => {
        this.remove(t);
      });
    });
  }
  getAll() {
    return this.mutations;
  }
  find(t) {
    return (
      typeof t.exact > "u" && (t.exact = !0),
      this.mutations.find((r) => O0(t, r))
    );
  }
  findAll(t) {
    return this.mutations.filter((r) => O0(t, r));
  }
  notify(t) {
    Gt.batch(() => {
      this.listeners.forEach(({ listener: r }) => {
        r(t);
      });
    });
  }
  resumePausedMutations() {
    var t;
    return (
      (this.resuming = ((t = this.resuming) != null ? t : Promise.resolve())
        .then(() => {
          const r = this.mutations.filter((a) => a.state.isPaused);
          return Gt.batch(() =>
            r.reduce(
              (a, c) => a.then(() => c.continue().catch(Mr)),
              Promise.resolve(),
            ),
          );
        })
        .then(() => {
          this.resuming = void 0;
        })),
      this.resuming
    );
  }
}
function b3() {
  return {
    onFetch: (e) => {
      e.fetchFn = () => {
        var t, r, a, c, h, p;
        const v =
            (t = e.fetchOptions) == null || (r = t.meta) == null
              ? void 0
              : r.refetchPage,
          b =
            (a = e.fetchOptions) == null || (c = a.meta) == null
              ? void 0
              : c.fetchMore,
          P = b == null ? void 0 : b.pageParam,
          k = (b == null ? void 0 : b.direction) === "forward",
          R = (b == null ? void 0 : b.direction) === "backward",
          L = ((h = e.state.data) == null ? void 0 : h.pages) || [],
          z = ((p = e.state.data) == null ? void 0 : p.pageParams) || [];
        let M = z,
          F = !1;
        const G = (U) => {
            Object.defineProperty(U, "signal", {
              enumerable: !0,
              get: () => {
                var Q;
                if ((Q = e.signal) != null && Q.aborted) F = !0;
                else {
                  var ee;
                  (ee = e.signal) == null ||
                    ee.addEventListener("abort", () => {
                      F = !0;
                    });
                }
                return e.signal;
              },
            });
          },
          $ =
            e.options.queryFn ||
            (() =>
              Promise.reject(
                "Missing queryFn for queryKey '" + e.options.queryHash + "'",
              )),
          O = (U, Q, ee, ne) => (
            (M = ne ? [Q, ...M] : [...M, Q]), ne ? [ee, ...U] : [...U, ee]
          ),
          X = (U, Q, ee, ne) => {
            if (F) return Promise.reject("Cancelled");
            if (typeof ee > "u" && !Q && U.length) return Promise.resolve(U);
            const le = {
              queryKey: e.queryKey,
              pageParam: ee,
              meta: e.options.meta,
            };
            G(le);
            const he = $(le);
            return Promise.resolve(he).then((fe) => O(U, ee, fe, ne));
          };
        let N;
        if (!L.length) N = X([]);
        else if (k) {
          const U = typeof P < "u",
            Q = U ? P : L0(e.options, L);
          N = X(L, U, Q);
        } else if (R) {
          const U = typeof P < "u",
            Q = U ? P : w3(e.options, L);
          N = X(L, U, Q, !0);
        } else {
          M = [];
          const U = typeof e.options.getNextPageParam > "u";
          N = (v && L[0] ? v(L[0], 0, L) : !0)
            ? X([], U, z[0])
            : Promise.resolve(O([], z[0], L[0]));
          for (let ee = 1; ee < L.length; ee++)
            N = N.then((ne) => {
              if (v && L[ee] ? v(L[ee], ee, L) : !0) {
                const he = U ? z[ee] : L0(e.options, ne);
                return X(ne, U, he);
              }
              return Promise.resolve(O(ne, z[ee], L[ee]));
            });
        }
        return N.then((U) => ({ pages: U, pageParams: M }));
      };
    },
  };
}
function L0(e, t) {
  return e.getNextPageParam == null
    ? void 0
    : e.getNextPageParam(t[t.length - 1], t);
}
function w3(e, t) {
  return e.getPreviousPageParam == null
    ? void 0
    : e.getPreviousPageParam(t[0], t);
}
class S3 {
  constructor(t = {}) {
    (this.queryCache = t.queryCache || new m3()),
      (this.mutationCache = t.mutationCache || new x3()),
      (this.logger = t.logger || om),
      (this.defaultOptions = t.defaultOptions || {}),
      (this.queryDefaults = []),
      (this.mutationDefaults = []),
      (this.mountCount = 0);
  }
  mount() {
    this.mountCount++,
      this.mountCount === 1 &&
        ((this.unsubscribeFocus = tp.subscribe(() => {
          tp.isFocused() &&
            (this.resumePausedMutations(), this.queryCache.onFocus());
        })),
        (this.unsubscribeOnline = Xu.subscribe(() => {
          Xu.isOnline() &&
            (this.resumePausedMutations(), this.queryCache.onOnline());
        })));
  }
  unmount() {
    var t, r;
    this.mountCount--,
      this.mountCount === 0 &&
        ((t = this.unsubscribeFocus) == null || t.call(this),
        (this.unsubscribeFocus = void 0),
        (r = this.unsubscribeOnline) == null || r.call(this),
        (this.unsubscribeOnline = void 0));
  }
  isFetching(t, r) {
    const [a] = Bn(t, r);
    return (a.fetchStatus = "fetching"), this.queryCache.findAll(a).length;
  }
  isMutating(t) {
    return this.mutationCache.findAll({ ...t, fetching: !0 }).length;
  }
  getQueryData(t, r) {
    var a;
    return (a = this.queryCache.find(t, r)) == null ? void 0 : a.state.data;
  }
  ensureQueryData(t, r, a) {
    const c = dl(t, r, a),
      h = this.getQueryData(c.queryKey);
    return h ? Promise.resolve(h) : this.fetchQuery(c);
  }
  getQueriesData(t) {
    return this.getQueryCache()
      .findAll(t)
      .map(({ queryKey: r, state: a }) => {
        const c = a.data;
        return [r, c];
      });
  }
  setQueryData(t, r, a) {
    const c = this.queryCache.find(t),
      h = c == null ? void 0 : c.state.data,
      p = a3(r, h);
    if (typeof p > "u") return;
    const v = dl(t),
      b = this.defaultQueryOptions(v);
    return this.queryCache.build(this, b).setData(p, { ...a, manual: !0 });
  }
  setQueriesData(t, r, a) {
    return Gt.batch(() =>
      this.getQueryCache()
        .findAll(t)
        .map(({ queryKey: c }) => [c, this.setQueryData(c, r, a)]),
    );
  }
  getQueryState(t, r) {
    var a;
    return (a = this.queryCache.find(t, r)) == null ? void 0 : a.state;
  }
  removeQueries(t, r) {
    const [a] = Bn(t, r),
      c = this.queryCache;
    Gt.batch(() => {
      c.findAll(a).forEach((h) => {
        c.remove(h);
      });
    });
  }
  resetQueries(t, r, a) {
    const [c, h] = Bn(t, r, a),
      p = this.queryCache,
      v = { type: "active", ...c };
    return Gt.batch(
      () => (
        p.findAll(c).forEach((b) => {
          b.reset();
        }),
        this.refetchQueries(v, h)
      ),
    );
  }
  cancelQueries(t, r, a) {
    const [c, h = {}] = Bn(t, r, a);
    typeof h.revert > "u" && (h.revert = !0);
    const p = Gt.batch(() =>
      this.queryCache.findAll(c).map((v) => v.cancel(h)),
    );
    return Promise.all(p).then(Mr).catch(Mr);
  }
  invalidateQueries(t, r, a) {
    const [c, h] = Bn(t, r, a);
    return Gt.batch(() => {
      var p, v;
      if (
        (this.queryCache.findAll(c).forEach((P) => {
          P.invalidate();
        }),
        c.refetchType === "none")
      )
        return Promise.resolve();
      const b = {
        ...c,
        type:
          (p = (v = c.refetchType) != null ? v : c.type) != null ? p : "active",
      };
      return this.refetchQueries(b, h);
    });
  }
  refetchQueries(t, r, a) {
    const [c, h] = Bn(t, r, a),
      p = Gt.batch(() =>
        this.queryCache
          .findAll(c)
          .filter((b) => !b.isDisabled())
          .map((b) => {
            var P;
            return b.fetch(void 0, {
              ...h,
              cancelRefetch:
                (P = h == null ? void 0 : h.cancelRefetch) != null ? P : !0,
              meta: { refetchPage: c.refetchPage },
            });
          }),
      );
    let v = Promise.all(p).then(Mr);
    return (h != null && h.throwOnError) || (v = v.catch(Mr)), v;
  }
  fetchQuery(t, r, a) {
    const c = dl(t, r, a),
      h = this.defaultQueryOptions(c);
    typeof h.retry > "u" && (h.retry = !1);
    const p = this.queryCache.build(this, h);
    return p.isStaleByTime(h.staleTime)
      ? p.fetch(h)
      : Promise.resolve(p.state.data);
  }
  prefetchQuery(t, r, a) {
    return this.fetchQuery(t, r, a).then(Mr).catch(Mr);
  }
  fetchInfiniteQuery(t, r, a) {
    const c = dl(t, r, a);
    return (c.behavior = b3()), this.fetchQuery(c);
  }
  prefetchInfiniteQuery(t, r, a) {
    return this.fetchInfiniteQuery(t, r, a).then(Mr).catch(Mr);
  }
  resumePausedMutations() {
    return this.mutationCache.resumePausedMutations();
  }
  getQueryCache() {
    return this.queryCache;
  }
  getMutationCache() {
    return this.mutationCache;
  }
  getLogger() {
    return this.logger;
  }
  getDefaultOptions() {
    return this.defaultOptions;
  }
  setDefaultOptions(t) {
    this.defaultOptions = t;
  }
  setQueryDefaults(t, r) {
    const a = this.queryDefaults.find((c) => ki(t) === ki(c.queryKey));
    a
      ? (a.defaultOptions = r)
      : this.queryDefaults.push({ queryKey: t, defaultOptions: r });
  }
  getQueryDefaults(t) {
    if (!t) return;
    const r = this.queryDefaults.find((a) => Hu(t, a.queryKey));
    return r == null ? void 0 : r.defaultOptions;
  }
  setMutationDefaults(t, r) {
    const a = this.mutationDefaults.find((c) => ki(t) === ki(c.mutationKey));
    a
      ? (a.defaultOptions = r)
      : this.mutationDefaults.push({ mutationKey: t, defaultOptions: r });
  }
  getMutationDefaults(t) {
    if (!t) return;
    const r = this.mutationDefaults.find((a) => Hu(t, a.mutationKey));
    return r == null ? void 0 : r.defaultOptions;
  }
  defaultQueryOptions(t) {
    if (t != null && t._defaulted) return t;
    const r = {
      ...this.defaultOptions.queries,
      ...this.getQueryDefaults(t == null ? void 0 : t.queryKey),
      ...t,
      _defaulted: !0,
    };
    return (
      !r.queryHash && r.queryKey && (r.queryHash = im(r.queryKey, r)),
      typeof r.refetchOnReconnect > "u" &&
        (r.refetchOnReconnect = r.networkMode !== "always"),
      typeof r.useErrorBoundary > "u" && (r.useErrorBoundary = !!r.suspense),
      r
    );
  }
  defaultMutationOptions(t) {
    return t != null && t._defaulted
      ? t
      : {
          ...this.defaultOptions.mutations,
          ...this.getMutationDefaults(t == null ? void 0 : t.mutationKey),
          ...t,
          _defaulted: !0,
        };
  }
  clear() {
    this.queryCache.clear(), this.mutationCache.clear();
  }
}
const T0 = j.createContext(void 0),
  P3 = j.createContext(!1);
function _3(e, t) {
  return (
    e ||
    (t && typeof window < "u"
      ? (window.ReactQueryClientContext ||
          (window.ReactQueryClientContext = T0),
        window.ReactQueryClientContext)
      : T0)
  );
}
const C3 = ({ client: e, children: t, context: r, contextSharing: a = !1 }) => {
  j.useEffect(
    () => (
      e.mount(),
      () => {
        e.unmount();
      }
    ),
    [e],
  );
  const c = _3(r, a);
  return j.createElement(
    P3.Provider,
    { value: !r && a },
    j.createElement(c.Provider, { value: e }, t),
  );
};
/**
 * @remix-run/router v1.11.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function gt() {
  return (
    (gt = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var r = arguments[t];
            for (var a in r)
              Object.prototype.hasOwnProperty.call(r, a) && (e[a] = r[a]);
          }
          return e;
        }),
    gt.apply(this, arguments)
  );
}
var yt;
(function (e) {
  (e.Pop = "POP"), (e.Push = "PUSH"), (e.Replace = "REPLACE");
})(yt || (yt = {}));
const I0 = "popstate";
function O3(e) {
  e === void 0 && (e = {});
  function t(a, c) {
    let { pathname: h, search: p, hash: v } = a.location;
    return os(
      "",
      { pathname: h, search: p, hash: v },
      (c.state && c.state.usr) || null,
      (c.state && c.state.key) || "default",
    );
  }
  function r(a, c) {
    return typeof c == "string" ? c : Xi(c);
  }
  return A3(t, r, null, e);
}
function De(e, t) {
  if (e === !1 || e === null || typeof e > "u") throw new Error(t);
}
function Hi(e, t) {
  if (!e) {
    typeof console < "u" && console.warn(t);
    try {
      throw new Error(t);
    } catch {}
  }
}
function k3() {
  return Math.random().toString(36).substr(2, 8);
}
function N0(e, t) {
  return { usr: e.state, key: e.key, idx: t };
}
function os(e, t, r, a) {
  return (
    r === void 0 && (r = null),
    gt(
      { pathname: typeof e == "string" ? e : e.pathname, search: "", hash: "" },
      typeof t == "string" ? In(t) : t,
      { state: r, key: (t && t.key) || a || k3() },
    )
  );
}
function Xi(e) {
  let { pathname: t = "/", search: r = "", hash: a = "" } = e;
  return (
    r && r !== "?" && (t += r.charAt(0) === "?" ? r : "?" + r),
    a && a !== "#" && (t += a.charAt(0) === "#" ? a : "#" + a),
    t
  );
}
function In(e) {
  let t = {};
  if (e) {
    let r = e.indexOf("#");
    r >= 0 && ((t.hash = e.substr(r)), (e = e.substr(0, r)));
    let a = e.indexOf("?");
    a >= 0 && ((t.search = e.substr(a)), (e = e.substr(0, a))),
      e && (t.pathname = e);
  }
  return t;
}
function A3(e, t, r, a) {
  a === void 0 && (a = {});
  let { window: c = document.defaultView, v5Compat: h = !1 } = a,
    p = c.history,
    v = yt.Pop,
    b = null,
    P = k();
  P == null && ((P = 0), p.replaceState(gt({}, p.state, { idx: P }), ""));
  function k() {
    return (p.state || { idx: null }).idx;
  }
  function R() {
    v = yt.Pop;
    let G = k(),
      $ = G == null ? null : G - P;
    (P = G), b && b({ action: v, location: F.location, delta: $ });
  }
  function L(G, $) {
    v = yt.Push;
    let O = os(F.location, G, $);
    r && r(O, G), (P = k() + 1);
    let X = N0(O, P),
      N = F.createHref(O);
    try {
      p.pushState(X, "", N);
    } catch (B) {
      if (B instanceof DOMException && B.name === "DataCloneError") throw B;
      c.location.assign(N);
    }
    h && b && b({ action: v, location: F.location, delta: 1 });
  }
  function z(G, $) {
    v = yt.Replace;
    let O = os(F.location, G, $);
    r && r(O, G), (P = k());
    let X = N0(O, P),
      N = F.createHref(O);
    p.replaceState(X, "", N),
      h && b && b({ action: v, location: F.location, delta: 0 });
  }
  function M(G) {
    let $ = c.location.origin !== "null" ? c.location.origin : c.location.href,
      O = typeof G == "string" ? G : Xi(G);
    return (
      De(
        $,
        "No window.location.(origin|href) available to create URL for href: " +
          O,
      ),
      new URL(O, $)
    );
  }
  let F = {
    get action() {
      return v;
    },
    get location() {
      return e(c, p);
    },
    listen(G) {
      if (b) throw new Error("A history only accepts one active listener");
      return (
        c.addEventListener(I0, R),
        (b = G),
        () => {
          c.removeEventListener(I0, R), (b = null);
        }
      );
    },
    createHref(G) {
      return t(c, G);
    },
    createURL: M,
    encodeLocation(G) {
      let $ = M(G);
      return { pathname: $.pathname, search: $.search, hash: $.hash };
    },
    push: L,
    replace: z,
    go(G) {
      return p.go(G);
    },
  };
  return F;
}
var xt;
(function (e) {
  (e.data = "data"),
    (e.deferred = "deferred"),
    (e.redirect = "redirect"),
    (e.error = "error");
})(xt || (xt = {}));
const E3 = new Set([
  "lazy",
  "caseSensitive",
  "path",
  "id",
  "index",
  "children",
]);
function R3(e) {
  return e.index === !0;
}
function rp(e, t, r, a) {
  return (
    r === void 0 && (r = []),
    a === void 0 && (a = {}),
    e.map((c, h) => {
      let p = [...r, h],
        v = typeof c.id == "string" ? c.id : p.join("-");
      if (
        (De(
          c.index !== !0 || !c.children,
          "Cannot specify children on an index route",
        ),
        De(
          !a[v],
          'Found a route id collision on id "' +
            v +
            `".  Route id's must be globally unique within Data Router usages`,
        ),
        R3(c))
      ) {
        let b = gt({}, c, t(c), { id: v });
        return (a[v] = b), b;
      } else {
        let b = gt({}, c, t(c), { id: v, children: void 0 });
        return (
          (a[v] = b), c.children && (b.children = rp(c.children, t, p, a)), b
        );
      }
    })
  );
}
function ya(e, t, r) {
  r === void 0 && (r = "/");
  let a = typeof t == "string" ? In(t) : t,
    c = li(a.pathname || "/", r);
  if (c == null) return null;
  let h = _k(e);
  T3(h);
  let p = null;
  for (let v = 0; p == null && v < h.length; ++v) p = H3(h[v], B3(c));
  return p;
}
function L3(e, t) {
  let { route: r, pathname: a, params: c } = e;
  return { id: r.id, pathname: a, params: c, data: t[r.id], handle: r.handle };
}
function _k(e, t, r, a) {
  t === void 0 && (t = []), r === void 0 && (r = []), a === void 0 && (a = "");
  let c = (h, p, v) => {
    let b = {
      relativePath: v === void 0 ? h.path || "" : v,
      caseSensitive: h.caseSensitive === !0,
      childrenIndex: p,
      route: h,
    };
    b.relativePath.startsWith("/") &&
      (De(
        b.relativePath.startsWith(a),
        'Absolute route path "' +
          b.relativePath +
          '" nested under path ' +
          ('"' + a + '" is not valid. An absolute child route path ') +
          "must start with the combined path of all its parent routes.",
      ),
      (b.relativePath = b.relativePath.slice(a.length)));
    let P = Sn([a, b.relativePath]),
      k = r.concat(b);
    h.children &&
      h.children.length > 0 &&
      (De(
        h.index !== !0,
        "Index routes must not have child routes. Please remove " +
          ('all child routes from route path "' + P + '".'),
      ),
      _k(h.children, t, k, P)),
      !(h.path == null && !h.index) &&
        t.push({ path: P, score: F3(P, h.index), routesMeta: k });
  };
  return (
    e.forEach((h, p) => {
      var v;
      if (h.path === "" || !((v = h.path) != null && v.includes("?"))) c(h, p);
      else for (let b of Ck(h.path)) c(h, p, b);
    }),
    t
  );
}
function Ck(e) {
  let t = e.split("/");
  if (t.length === 0) return [];
  let [r, ...a] = t,
    c = r.endsWith("?"),
    h = r.replace(/\?$/, "");
  if (a.length === 0) return c ? [h, ""] : [h];
  let p = Ck(a.join("/")),
    v = [];
  return (
    v.push(...p.map((b) => (b === "" ? h : [h, b].join("/")))),
    c && v.push(...p),
    v.map((b) => (e.startsWith("/") && b === "" ? "/" : b))
  );
}
function T3(e) {
  e.sort((t, r) =>
    t.score !== r.score
      ? r.score - t.score
      : j3(
          t.routesMeta.map((a) => a.childrenIndex),
          r.routesMeta.map((a) => a.childrenIndex),
        ),
  );
}
const I3 = /^:\w+$/,
  N3 = 3,
  M3 = 2,
  $3 = 1,
  D3 = 10,
  z3 = -2,
  M0 = (e) => e === "*";
function F3(e, t) {
  let r = e.split("/"),
    a = r.length;
  return (
    r.some(M0) && (a += z3),
    t && (a += M3),
    r
      .filter((c) => !M0(c))
      .reduce((c, h) => c + (I3.test(h) ? N3 : h === "" ? $3 : D3), a)
  );
}
function j3(e, t) {
  return e.length === t.length && e.slice(0, -1).every((a, c) => a === t[c])
    ? e[e.length - 1] - t[t.length - 1]
    : 0;
}
function H3(e, t) {
  let { routesMeta: r } = e,
    a = {},
    c = "/",
    h = [];
  for (let p = 0; p < r.length; ++p) {
    let v = r[p],
      b = p === r.length - 1,
      P = c === "/" ? t : t.slice(c.length) || "/",
      k = np(
        { path: v.relativePath, caseSensitive: v.caseSensitive, end: b },
        P,
      );
    if (!k) return null;
    Object.assign(a, k.params);
    let R = v.route;
    h.push({
      params: a,
      pathname: Sn([c, k.pathname]),
      pathnameBase: G3(Sn([c, k.pathnameBase])),
      route: R,
    }),
      k.pathnameBase !== "/" && (c = Sn([c, k.pathnameBase]));
  }
  return h;
}
function np(e, t) {
  typeof e == "string" && (e = { path: e, caseSensitive: !1, end: !0 });
  let [r, a] = X3(e.path, e.caseSensitive, e.end),
    c = t.match(r);
  if (!c) return null;
  let h = c[0],
    p = h.replace(/(.)\/+$/, "$1"),
    v = c.slice(1);
  return {
    params: a.reduce((P, k, R) => {
      let { paramName: L, isOptional: z } = k;
      if (L === "*") {
        let F = v[R] || "";
        p = h.slice(0, h.length - F.length).replace(/(.)\/+$/, "$1");
      }
      const M = v[R];
      return z && !M ? (P[L] = void 0) : (P[L] = Y3(M || "", L)), P;
    }, {}),
    pathname: h,
    pathnameBase: p,
    pattern: e,
  };
}
function X3(e, t, r) {
  t === void 0 && (t = !1),
    r === void 0 && (r = !0),
    Hi(
      e === "*" || !e.endsWith("*") || e.endsWith("/*"),
      'Route path "' +
        e +
        '" will be treated as if it were ' +
        ('"' + e.replace(/\*$/, "/*") + '" because the `*` character must ') +
        "always follow a `/` in the pattern. To get rid of this warning, " +
        ('please change the route path to "' + e.replace(/\*$/, "/*") + '".'),
    );
  let a = [],
    c =
      "^" +
      e
        .replace(/\/*\*?$/, "")
        .replace(/^\/*/, "/")
        .replace(/[\\.*+^${}|()[\]]/g, "\\$&")
        .replace(
          /\/:(\w+)(\?)?/g,
          (p, v, b) => (
            a.push({ paramName: v, isOptional: b != null }),
            b ? "/?([^\\/]+)?" : "/([^\\/]+)"
          ),
        );
  return (
    e.endsWith("*")
      ? (a.push({ paramName: "*" }),
        (c += e === "*" || e === "/*" ? "(.*)$" : "(?:\\/(.+)|\\/*)$"))
      : r
      ? (c += "\\/*$")
      : e !== "" && e !== "/" && (c += "(?:(?=\\/|$))"),
    [new RegExp(c, t ? void 0 : "i"), a]
  );
}
function B3(e) {
  try {
    return decodeURI(e);
  } catch (t) {
    return (
      Hi(
        !1,
        'The URL path "' +
          e +
          '" could not be decoded because it is is a malformed URL segment. This is probably due to a bad percent ' +
          ("encoding (" + t + ")."),
      ),
      e
    );
  }
}
function Y3(e, t) {
  try {
    return decodeURIComponent(e);
  } catch (r) {
    return (
      Hi(
        !1,
        'The value for the URL param "' +
          t +
          '" will not be decoded because' +
          (' the string "' +
            e +
            '" is a malformed URL segment. This is probably') +
          (" due to a bad percent encoding (" + r + ")."),
      ),
      e
    );
  }
}
function li(e, t) {
  if (t === "/") return e;
  if (!e.toLowerCase().startsWith(t.toLowerCase())) return null;
  let r = t.endsWith("/") ? t.length - 1 : t.length,
    a = e.charAt(r);
  return a && a !== "/" ? null : e.slice(r) || "/";
}
function W3(e, t) {
  t === void 0 && (t = "/");
  let {
    pathname: r,
    search: a = "",
    hash: c = "",
  } = typeof e == "string" ? In(e) : e;
  return {
    pathname: r ? (r.startsWith("/") ? r : V3(r, t)) : t,
    search: U3(a),
    hash: q3(c),
  };
}
function V3(e, t) {
  let r = t.replace(/\/+$/, "").split("/");
  return (
    e.split("/").forEach((c) => {
      c === ".." ? r.length > 1 && r.pop() : c !== "." && r.push(c);
    }),
    r.length > 1 ? r.join("/") : "/"
  );
}
function Bh(e, t, r, a) {
  return (
    "Cannot include a '" +
    e +
    "' character in a manually specified " +
    ("`to." +
      t +
      "` field [" +
      JSON.stringify(a) +
      "].  Please separate it out to the ") +
    ("`to." + r + "` field. Alternatively you may provide the full path as ") +
    'a string in <Link to="..."> and the router will parse it for you.'
  );
}
function Ss(e) {
  return e.filter(
    (t, r) => r === 0 || (t.route.path && t.route.path.length > 0),
  );
}
function $d(e, t, r, a) {
  a === void 0 && (a = !1);
  let c;
  typeof e == "string"
    ? (c = In(e))
    : ((c = gt({}, e)),
      De(
        !c.pathname || !c.pathname.includes("?"),
        Bh("?", "pathname", "search", c),
      ),
      De(
        !c.pathname || !c.pathname.includes("#"),
        Bh("#", "pathname", "hash", c),
      ),
      De(!c.search || !c.search.includes("#"), Bh("#", "search", "hash", c)));
  let h = e === "" || c.pathname === "",
    p = h ? "/" : c.pathname,
    v;
  if (a || p == null) v = r;
  else {
    let R = t.length - 1;
    if (p.startsWith("..")) {
      let L = p.split("/");
      for (; L[0] === ".."; ) L.shift(), (R -= 1);
      c.pathname = L.join("/");
    }
    v = R >= 0 ? t[R] : "/";
  }
  let b = W3(c, v),
    P = p && p !== "/" && p.endsWith("/"),
    k = (h || p === ".") && r.endsWith("/");
  return !b.pathname.endsWith("/") && (P || k) && (b.pathname += "/"), b;
}
const Sn = (e) => e.join("/").replace(/\/\/+/g, "/"),
  G3 = (e) => e.replace(/\/+$/, "").replace(/^\/*/, "/"),
  U3 = (e) => (!e || e === "?" ? "" : e.startsWith("?") ? e : "?" + e),
  q3 = (e) => (!e || e === "#" ? "" : e.startsWith("#") ? e : "#" + e);
class sm {
  constructor(t, r, a, c) {
    c === void 0 && (c = !1),
      (this.status = t),
      (this.statusText = r || ""),
      (this.internal = c),
      a instanceof Error
        ? ((this.data = a.toString()), (this.error = a))
        : (this.data = a);
  }
}
function Ok(e) {
  return (
    e != null &&
    typeof e.status == "number" &&
    typeof e.statusText == "string" &&
    typeof e.internal == "boolean" &&
    "data" in e
  );
}
const kk = ["post", "put", "patch", "delete"],
  Z3 = new Set(kk),
  K3 = ["get", ...kk],
  Q3 = new Set(K3),
  J3 = new Set([301, 302, 303, 307, 308]),
  eY = new Set([307, 308]),
  Yh = {
    state: "idle",
    location: void 0,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
  },
  tY = {
    state: "idle",
    data: void 0,
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
  },
  yo = { state: "unblocked", proceed: void 0, reset: void 0, location: void 0 },
  Ak = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
  rY = (e) => ({ hasErrorBoundary: !!e.hasErrorBoundary }),
  Ek = "remix-router-transitions";
function nY(e) {
  const t = e.window ? e.window : typeof window < "u" ? window : void 0,
    r =
      typeof t < "u" &&
      typeof t.document < "u" &&
      typeof t.document.createElement < "u",
    a = !r;
  De(
    e.routes.length > 0,
    "You must provide a non-empty routes array to createRouter",
  );
  let c;
  if (e.mapRouteProperties) c = e.mapRouteProperties;
  else if (e.detectErrorBoundary) {
    let J = e.detectErrorBoundary;
    c = (ie) => ({ hasErrorBoundary: J(ie) });
  } else c = rY;
  let h = {},
    p = rp(e.routes, c, void 0, h),
    v,
    b = e.basename || "/",
    P = gt(
      {
        v7_fetcherPersist: !1,
        v7_normalizeFormMethod: !1,
        v7_prependBasename: !1,
      },
      e.future,
    ),
    k = null,
    R = new Set(),
    L = null,
    z = null,
    M = null,
    F = e.hydrationData != null,
    G = ya(p, e.history.location, b),
    $ = null;
  if (G == null) {
    let J = vr(404, { pathname: e.history.location.pathname }),
      { matches: ie, route: de } = B0(p);
    (G = ie), ($ = { [de.id]: J });
  }
  let O =
      !G.some((J) => J.route.lazy) &&
      (!G.some((J) => J.route.loader) || e.hydrationData != null),
    X,
    N = {
      historyAction: e.history.action,
      location: e.history.location,
      matches: G,
      initialized: O,
      navigation: Yh,
      restoreScrollPosition: e.hydrationData != null ? !1 : null,
      preventScrollReset: !1,
      revalidation: "idle",
      loaderData: (e.hydrationData && e.hydrationData.loaderData) || {},
      actionData: (e.hydrationData && e.hydrationData.actionData) || null,
      errors: (e.hydrationData && e.hydrationData.errors) || $,
      fetchers: new Map(),
      blockers: new Map(),
    },
    B = yt.Pop,
    U = !1,
    Q,
    ee = !1,
    ne = new Map(),
    le = null,
    he = !1,
    me = !1,
    fe = [],
    ue = [],
    oe = new Map(),
    ve = 0,
    ye = -1,
    te = new Map(),
    pe = new Set(),
    Se = new Map(),
    ke = new Map(),
    Ce = new Set(),
    ze = new Map(),
    $e = new Map(),
    Qe = !1;
  function Be() {
    if (
      ((k = e.history.listen((J) => {
        let { action: ie, location: de, delta: we } = J;
        if (Qe) {
          Qe = !1;
          return;
        }
        Hi(
          $e.size === 0 || we != null,
          "You are trying to use a blocker on a POP navigation to a location that was not created by @remix-run/router. This will fail silently in production. This can happen if you are navigating outside the router via `window.history.pushState`/`window.location.hash` instead of using router navigation APIs.  This can also happen if you are using createHashRouter and the user manually changes the URL.",
        );
        let Ee = eo({
          currentLocation: N.location,
          nextLocation: de,
          historyAction: ie,
        });
        if (Ee && we != null) {
          (Qe = !0),
            e.history.go(we * -1),
            Zi(Ee, {
              state: "blocked",
              location: de,
              proceed() {
                Zi(Ee, {
                  state: "proceeding",
                  proceed: void 0,
                  reset: void 0,
                  location: de,
                }),
                  e.history.go(we);
              },
              reset() {
                let Re = new Map(N.blockers);
                Re.set(Ee, yo), Xe({ blockers: Re });
              },
            });
          return;
        }
        return Pt(ie, de);
      })),
      r)
    ) {
      pY(t, ne);
      let J = () => gY(t, ne);
      t.addEventListener("pagehide", J),
        (le = () => t.removeEventListener("pagehide", J));
    }
    return N.initialized || Pt(yt.Pop, N.location), X;
  }
  function Ue() {
    k && k(),
      le && le(),
      R.clear(),
      Q && Q.abort(),
      N.fetchers.forEach((J, ie) => mr(ie)),
      N.blockers.forEach((J, ie) => Ja(ie));
  }
  function mt(J) {
    return R.add(J), () => R.delete(J);
  }
  function Xe(J, ie) {
    N = gt({}, N, J);
    let de = [],
      we = [];
    P.v7_fetcherPersist &&
      N.fetchers.forEach((Ee, Re) => {
        Ee.state === "idle" && (Ce.has(Re) ? we.push(Re) : de.push(Re));
      }),
      R.forEach((Ee) =>
        Ee(N, { deletedFetchers: we, unstable_viewTransitionOpts: ie }),
      ),
      P.v7_fetcherPersist &&
        (de.forEach((Ee) => N.fetchers.delete(Ee)), we.forEach((Ee) => mr(Ee)));
  }
  function St(J, ie) {
    var de, we;
    let Ee =
        N.actionData != null &&
        N.navigation.formMethod != null &&
        Dr(N.navigation.formMethod) &&
        N.navigation.state === "loading" &&
        ((de = J.state) == null ? void 0 : de._isRedirect) !== !0,
      Re;
    ie.actionData
      ? Object.keys(ie.actionData).length > 0
        ? (Re = ie.actionData)
        : (Re = null)
      : Ee
      ? (Re = N.actionData)
      : (Re = null);
    let Me = ie.loaderData
        ? X0(N.loaderData, ie.loaderData, ie.matches || [], ie.errors)
        : N.loaderData,
      Le = N.blockers;
    Le.size > 0 && ((Le = new Map(Le)), Le.forEach((it, je) => Le.set(je, yo)));
    let Ae =
      U === !0 ||
      (N.navigation.formMethod != null &&
        Dr(N.navigation.formMethod) &&
        ((we = J.state) == null ? void 0 : we._isRedirect) !== !0);
    v && ((p = v), (v = void 0)),
      he ||
        B === yt.Pop ||
        (B === yt.Push
          ? e.history.push(J, J.state)
          : B === yt.Replace && e.history.replace(J, J.state));
    let qe;
    if (B === yt.Pop) {
      let it = ne.get(N.location.pathname);
      it && it.has(J.pathname)
        ? (qe = { currentLocation: N.location, nextLocation: J })
        : ne.has(J.pathname) &&
          (qe = { currentLocation: J, nextLocation: N.location });
    } else if (ee) {
      let it = ne.get(N.location.pathname);
      it
        ? it.add(J.pathname)
        : ((it = new Set([J.pathname])), ne.set(N.location.pathname, it)),
        (qe = { currentLocation: N.location, nextLocation: J });
    }
    Xe(
      gt({}, ie, {
        actionData: Re,
        loaderData: Me,
        historyAction: B,
        location: J,
        initialized: !0,
        navigation: Yh,
        revalidation: "idle",
        restoreScrollPosition: As(J, ie.matches || N.matches),
        preventScrollReset: Ae,
        blockers: Le,
      }),
      qe,
    ),
      (B = yt.Pop),
      (U = !1),
      (ee = !1),
      (he = !1),
      (me = !1),
      (fe = []),
      (ue = []);
  }
  async function Bt(J, ie) {
    if (typeof J == "number") {
      e.history.go(J);
      return;
    }
    let de = ip(
        N.location,
        N.matches,
        b,
        P.v7_prependBasename,
        J,
        ie == null ? void 0 : ie.fromRouteId,
        ie == null ? void 0 : ie.relative,
      ),
      {
        path: we,
        submission: Ee,
        error: Re,
      } = $0(P.v7_normalizeFormMethod, !1, de, ie),
      Me = N.location,
      Le = os(N.location, we, ie && ie.state);
    Le = gt({}, Le, e.history.encodeLocation(Le));
    let Ae = ie && ie.replace != null ? ie.replace : void 0,
      qe = yt.Push;
    Ae === !0
      ? (qe = yt.Replace)
      : Ae === !1 ||
        (Ee != null &&
          Dr(Ee.formMethod) &&
          Ee.formAction === N.location.pathname + N.location.search &&
          (qe = yt.Replace));
    let it =
        ie && "preventScrollReset" in ie
          ? ie.preventScrollReset === !0
          : void 0,
      je = eo({ currentLocation: Me, nextLocation: Le, historyAction: qe });
    if (je) {
      Zi(je, {
        state: "blocked",
        location: Le,
        proceed() {
          Zi(je, {
            state: "proceeding",
            proceed: void 0,
            reset: void 0,
            location: Le,
          }),
            Bt(J, ie);
        },
        reset() {
          let Ve = new Map(N.blockers);
          Ve.set(je, yo), Xe({ blockers: Ve });
        },
      });
      return;
    }
    return await Pt(qe, Le, {
      submission: Ee,
      pendingError: Re,
      preventScrollReset: it,
      replace: ie && ie.replace,
      enableViewTransition: ie && ie.unstable_viewTransition,
    });
  }
  function vt() {
    if (
      (Gr(),
      Xe({ revalidation: "loading" }),
      N.navigation.state !== "submitting")
    ) {
      if (N.navigation.state === "idle") {
        Pt(N.historyAction, N.location, { startUninterruptedRevalidation: !0 });
        return;
      }
      Pt(B || N.historyAction, N.navigation.location, {
        overrideNavigation: N.navigation,
      });
    }
  }
  async function Pt(J, ie, de) {
    Q && Q.abort(),
      (Q = null),
      (B = J),
      (he = (de && de.startUninterruptedRevalidation) === !0),
      ks(N.location, N.matches),
      (U = (de && de.preventScrollReset) === !0),
      (ee = (de && de.enableViewTransition) === !0);
    let we = v || p,
      Ee = de && de.overrideNavigation,
      Re = ya(we, ie, b);
    if (!Re) {
      let Ve = vr(404, { pathname: ie.pathname }),
        { matches: ht, route: Er } = B0(we);
      to(), St(ie, { matches: ht, loaderData: {}, errors: { [Er.id]: Ve } });
      return;
    }
    if (
      N.initialized &&
      !me &&
      lY(N.location, ie) &&
      !(de && de.submission && Dr(de.submission.formMethod))
    ) {
      St(ie, { matches: Re });
      return;
    }
    Q = new AbortController();
    let Me = bo(e.history, ie, Q.signal, de && de.submission),
      Le,
      Ae;
    if (de && de.pendingError) Ae = { [Fo(Re).route.id]: de.pendingError };
    else if (de && de.submission && Dr(de.submission.formMethod)) {
      let Ve = await Rt(Me, ie, de.submission, Re, { replace: de.replace });
      if (Ve.shortCircuited) return;
      (Le = Ve.pendingActionData),
        (Ae = Ve.pendingActionError),
        (Ee = Wh(ie, de.submission)),
        (Me = new Request(Me.url, { signal: Me.signal }));
    }
    let {
      shortCircuited: qe,
      loaderData: it,
      errors: je,
    } = await Mn(
      Me,
      ie,
      Re,
      Ee,
      de && de.submission,
      de && de.fetcherSubmission,
      de && de.replace,
      Le,
      Ae,
    );
    qe ||
      ((Q = null),
      St(
        ie,
        gt({ matches: Re }, Le ? { actionData: Le } : {}, {
          loaderData: it,
          errors: je,
        }),
      ));
  }
  async function Rt(J, ie, de, we, Ee) {
    Ee === void 0 && (Ee = {}), Gr();
    let Re = hY(ie, de);
    Xe({ navigation: Re });
    let Me,
      Le = op(we, ie);
    if (!Le.route.action && !Le.route.lazy)
      Me = {
        type: xt.error,
        error: vr(405, {
          method: J.method,
          pathname: ie.pathname,
          routeId: Le.route.id,
        }),
      };
    else if (((Me = await xo("action", J, Le, we, h, c, b)), J.signal.aborted))
      return { shortCircuited: !0 };
    if (Aa(Me)) {
      let Ae;
      return (
        Ee && Ee.replace != null
          ? (Ae = Ee.replace)
          : (Ae = Me.location === N.location.pathname + N.location.search),
        await nt(N, Me, { submission: de, replace: Ae }),
        { shortCircuited: !0 }
      );
    }
    if (jo(Me)) {
      let Ae = Fo(we, Le.route.id);
      return (
        (Ee && Ee.replace) !== !0 && (B = yt.Push),
        {
          pendingActionData: {},
          pendingActionError: { [Ae.route.id]: Me.error },
        }
      );
    }
    if (Ai(Me)) throw vr(400, { type: "defer-action" });
    return { pendingActionData: { [Le.route.id]: Me.data } };
  }
  async function Mn(J, ie, de, we, Ee, Re, Me, Le, Ae) {
    let qe = we || Wh(ie, Ee),
      it = Ee || Re || V0(qe),
      je = v || p,
      [Ve, ht] = D0(
        e.history,
        N,
        de,
        it,
        ie,
        me,
        fe,
        ue,
        Se,
        pe,
        je,
        b,
        Le,
        Ae,
      );
    if (
      (to(
        (Ge) =>
          !(de && de.some((Yt) => Yt.route.id === Ge)) ||
          (Ve && Ve.some((Yt) => Yt.route.id === Ge)),
      ),
      (ye = ++ve),
      Ve.length === 0 && ht.length === 0)
    ) {
      let Ge = Ka();
      return (
        St(
          ie,
          gt(
            { matches: de, loaderData: {}, errors: Ae || null },
            Le ? { actionData: Le } : {},
            Ge ? { fetchers: new Map(N.fetchers) } : {},
          ),
        ),
        { shortCircuited: !0 }
      );
    }
    if (!he) {
      ht.forEach((Yt) => {
        let qr = N.fetchers.get(Yt.key),
          T = wo(void 0, qr ? qr.data : void 0);
        N.fetchers.set(Yt.key, T);
      });
      let Ge = Le || N.actionData;
      Xe(
        gt(
          { navigation: qe },
          Ge
            ? Object.keys(Ge).length === 0
              ? { actionData: null }
              : { actionData: Ge }
            : {},
          ht.length > 0 ? { fetchers: new Map(N.fetchers) } : {},
        ),
      );
    }
    ht.forEach((Ge) => {
      oe.has(Ge.key) && sr(Ge.key),
        Ge.controller && oe.set(Ge.key, Ge.controller);
    });
    let Er = () => ht.forEach((Ge) => sr(Ge.key));
    Q && Q.signal.addEventListener("abort", Er);
    let {
      results: Rr,
      loaderResults: lr,
      fetcherResults: $n,
    } = await hn(N.matches, de, Ve, ht, J);
    if (J.signal.aborted) return { shortCircuited: !0 };
    Q && Q.signal.removeEventListener("abort", Er),
      ht.forEach((Ge) => oe.delete(Ge.key));
    let Lr = Y0(Rr);
    if (Lr) {
      if (Lr.idx >= Ve.length) {
        let Ge = ht[Lr.idx - Ve.length].key;
        pe.add(Ge);
      }
      return await nt(N, Lr.result, { replace: Me }), { shortCircuited: !0 };
    }
    let { loaderData: Ur, errors: Ki } = H0(N, de, Ve, lr, Ae, ht, $n, ze);
    ze.forEach((Ge, Yt) => {
      Ge.subscribe((qr) => {
        (qr || Ge.done) && ze.delete(Yt);
      });
    });
    let ro = Ka(),
      no = Qa(ye),
      Qi = ro || no || ht.length > 0;
    return gt(
      { loaderData: Ur, errors: Ki },
      Qi ? { fetchers: new Map(N.fetchers) } : {},
    );
  }
  function Qt(J) {
    return (
      P.v7_fetcherPersist &&
        (ke.set(J, (ke.get(J) || 0) + 1), Ce.has(J) && Ce.delete(J)),
      N.fetchers.get(J) || tY
    );
  }
  function dn(J, ie, de, we) {
    if (a)
      throw new Error(
        "router.fetch() was called during the server render, but it shouldn't be. You are likely calling a useFetcher() method in the body of your component. Try moving it to a useEffect or a callback.",
      );
    oe.has(J) && sr(J);
    let Ee = v || p,
      Re = ip(
        N.location,
        N.matches,
        b,
        P.v7_prependBasename,
        de,
        ie,
        we == null ? void 0 : we.relative,
      ),
      Me = ya(Ee, Re, b);
    if (!Me) {
      Je(J, ie, vr(404, { pathname: Re }));
      return;
    }
    let {
      path: Le,
      submission: Ae,
      error: qe,
    } = $0(P.v7_normalizeFormMethod, !0, Re, we);
    if (qe) {
      Je(J, ie, qe);
      return;
    }
    let it = op(Me, Le);
    if (((U = (we && we.preventScrollReset) === !0), Ae && Dr(Ae.formMethod))) {
      Jt(J, ie, Le, it, Me, Ae);
      return;
    }
    Se.set(J, { routeId: ie, path: Le }), Lt(J, ie, Le, it, Me, Ae);
  }
  async function Jt(J, ie, de, we, Ee, Re) {
    if ((Gr(), Se.delete(J), !we.route.action && !we.route.lazy)) {
      let T = vr(405, { method: Re.formMethod, pathname: de, routeId: ie });
      Je(J, ie, T);
      return;
    }
    let Me = N.fetchers.get(J),
      Le = fY(Re, Me);
    N.fetchers.set(J, Le), Xe({ fetchers: new Map(N.fetchers) });
    let Ae = new AbortController(),
      qe = bo(e.history, de, Ae.signal, Re);
    oe.set(J, Ae);
    let it = ve,
      je = await xo("action", qe, we, Ee, h, c, b);
    if (qe.signal.aborted) {
      oe.get(J) === Ae && oe.delete(J);
      return;
    }
    if (Ce.has(J)) {
      N.fetchers.set(J, jn(void 0)), Xe({ fetchers: new Map(N.fetchers) });
      return;
    }
    if (Aa(je))
      if ((oe.delete(J), ye > it)) {
        let T = jn(void 0);
        N.fetchers.set(J, T), Xe({ fetchers: new Map(N.fetchers) });
        return;
      } else {
        pe.add(J);
        let T = wo(Re);
        return (
          N.fetchers.set(J, T),
          Xe({ fetchers: new Map(N.fetchers) }),
          nt(N, je, { fetcherSubmission: Re })
        );
      }
    if (jo(je)) {
      Je(J, ie, je.error);
      return;
    }
    if (Ai(je)) throw vr(400, { type: "defer-action" });
    let Ve = N.navigation.location || N.location,
      ht = bo(e.history, Ve, Ae.signal),
      Er = v || p,
      Rr =
        N.navigation.state !== "idle"
          ? ya(Er, N.navigation.location, b)
          : N.matches;
    De(Rr, "Didn't find any matches after fetcher action");
    let lr = ++ve;
    te.set(J, lr);
    let $n = wo(Re, je.data);
    N.fetchers.set(J, $n);
    let [Lr, Ur] = D0(
      e.history,
      N,
      Rr,
      Re,
      Ve,
      me,
      fe,
      ue,
      Se,
      pe,
      Er,
      b,
      { [we.route.id]: je.data },
      void 0,
    );
    Ur.filter((T) => T.key !== J).forEach((T) => {
      let n = T.key,
        i = N.fetchers.get(n),
        o = wo(void 0, i ? i.data : void 0);
      N.fetchers.set(n, o),
        oe.has(n) && sr(n),
        T.controller && oe.set(n, T.controller);
    }),
      Xe({ fetchers: new Map(N.fetchers) });
    let Ki = () => Ur.forEach((T) => sr(T.key));
    Ae.signal.addEventListener("abort", Ki);
    let {
      results: ro,
      loaderResults: no,
      fetcherResults: Qi,
    } = await hn(N.matches, Rr, Lr, Ur, ht);
    if (Ae.signal.aborted) return;
    Ae.signal.removeEventListener("abort", Ki),
      te.delete(J),
      oe.delete(J),
      Ur.forEach((T) => oe.delete(T.key));
    let Ge = Y0(ro);
    if (Ge) {
      if (Ge.idx >= Lr.length) {
        let T = Ur[Ge.idx - Lr.length].key;
        pe.add(T);
      }
      return nt(N, Ge.result);
    }
    let { loaderData: Yt, errors: qr } = H0(
      N,
      N.matches,
      Lr,
      no,
      void 0,
      Ur,
      Qi,
      ze,
    );
    if (N.fetchers.has(J)) {
      let T = jn(je.data);
      N.fetchers.set(J, T);
    }
    Qa(lr),
      N.navigation.state === "loading" && lr > ye
        ? (De(B, "Expected pending action"),
          Q && Q.abort(),
          St(N.navigation.location, {
            matches: Rr,
            loaderData: Yt,
            errors: qr,
            fetchers: new Map(N.fetchers),
          }))
        : (Xe({
            errors: qr,
            loaderData: X0(N.loaderData, Yt, Rr, qr),
            fetchers: new Map(N.fetchers),
          }),
          (me = !1));
  }
  async function Lt(J, ie, de, we, Ee, Re) {
    let Me = N.fetchers.get(J),
      Le = wo(Re, Me ? Me.data : void 0);
    N.fetchers.set(J, Le), Xe({ fetchers: new Map(N.fetchers) });
    let Ae = new AbortController(),
      qe = bo(e.history, de, Ae.signal);
    oe.set(J, Ae);
    let it = ve,
      je = await xo("loader", qe, we, Ee, h, c, b);
    if (
      (Ai(je) && (je = (await Tk(je, qe.signal, !0)) || je),
      oe.get(J) === Ae && oe.delete(J),
      qe.signal.aborted)
    )
      return;
    if (Ce.has(J)) {
      N.fetchers.set(J, jn(void 0)), Xe({ fetchers: new Map(N.fetchers) });
      return;
    }
    if (Aa(je))
      if (ye > it) {
        let ht = jn(void 0);
        N.fetchers.set(J, ht), Xe({ fetchers: new Map(N.fetchers) });
        return;
      } else {
        pe.add(J), await nt(N, je);
        return;
      }
    if (jo(je)) {
      Je(J, ie, je.error);
      return;
    }
    De(!Ai(je), "Unhandled fetcher deferred data");
    let Ve = jn(je.data);
    N.fetchers.set(J, Ve), Xe({ fetchers: new Map(N.fetchers) });
  }
  async function nt(J, ie, de) {
    let {
      submission: we,
      fetcherSubmission: Ee,
      replace: Re,
    } = de === void 0 ? {} : de;
    ie.revalidate && (me = !0);
    let Me = os(J.location, ie.location, { _isRedirect: !0 });
    if ((De(Me, "Expected a location on the redirect navigation"), r)) {
      let Ve = !1;
      if (ie.reloadDocument) Ve = !0;
      else if (Ak.test(ie.location)) {
        const ht = e.history.createURL(ie.location);
        Ve = ht.origin !== t.location.origin || li(ht.pathname, b) == null;
      }
      if (Ve) {
        Re ? t.location.replace(ie.location) : t.location.assign(ie.location);
        return;
      }
    }
    Q = null;
    let Le = Re === !0 ? yt.Replace : yt.Push,
      { formMethod: Ae, formAction: qe, formEncType: it } = J.navigation;
    !we && !Ee && Ae && qe && it && (we = V0(J.navigation));
    let je = we || Ee;
    if (eY.has(ie.status) && je && Dr(je.formMethod))
      await Pt(Le, Me, {
        submission: gt({}, je, { formAction: ie.location }),
        preventScrollReset: U,
      });
    else {
      let Ve = Wh(Me, we);
      await Pt(Le, Me, {
        overrideNavigation: Ve,
        fetcherSubmission: Ee,
        preventScrollReset: U,
      });
    }
  }
  async function hn(J, ie, de, we, Ee) {
    let Re = await Promise.all([
        ...de.map((Ae) => xo("loader", Ee, Ae, ie, h, c, b)),
        ...we.map((Ae) =>
          Ae.matches && Ae.match && Ae.controller
            ? xo(
                "loader",
                bo(e.history, Ae.path, Ae.controller.signal),
                Ae.match,
                Ae.matches,
                h,
                c,
                b,
              )
            : { type: xt.error, error: vr(404, { pathname: Ae.path }) },
        ),
      ]),
      Me = Re.slice(0, de.length),
      Le = Re.slice(de.length);
    return (
      await Promise.all([
        W0(
          J,
          de,
          Me,
          Me.map(() => Ee.signal),
          !1,
          N.loaderData,
        ),
        W0(
          J,
          we.map((Ae) => Ae.match),
          Le,
          we.map((Ae) => (Ae.controller ? Ae.controller.signal : null)),
          !0,
        ),
      ]),
      { results: Re, loaderResults: Me, fetcherResults: Le }
    );
  }
  function Gr() {
    (me = !0),
      fe.push(...to()),
      Se.forEach((J, ie) => {
        oe.has(ie) && (ue.push(ie), sr(ie));
      });
  }
  function Je(J, ie, de) {
    let we = Fo(N.matches, ie);
    mr(J), Xe({ errors: { [we.route.id]: de }, fetchers: new Map(N.fetchers) });
  }
  function mr(J) {
    let ie = N.fetchers.get(J);
    oe.has(J) && !(ie && ie.state === "loading" && te.has(J)) && sr(J),
      Se.delete(J),
      te.delete(J),
      pe.delete(J),
      Ce.delete(J),
      N.fetchers.delete(J);
  }
  function Fd(J) {
    if (P.v7_fetcherPersist) {
      let ie = (ke.get(J) || 0) - 1;
      ie <= 0 ? (ke.delete(J), Ce.add(J)) : ke.set(J, ie);
    } else mr(J);
    Xe({ fetchers: new Map(N.fetchers) });
  }
  function sr(J) {
    let ie = oe.get(J);
    De(ie, "Expected fetch controller: " + J), ie.abort(), oe.delete(J);
  }
  function Cs(J) {
    for (let ie of J) {
      let de = Qt(ie),
        we = jn(de.data);
      N.fetchers.set(ie, we);
    }
  }
  function Ka() {
    let J = [],
      ie = !1;
    for (let de of pe) {
      let we = N.fetchers.get(de);
      De(we, "Expected fetcher: " + de),
        we.state === "loading" && (pe.delete(de), J.push(de), (ie = !0));
    }
    return Cs(J), ie;
  }
  function Qa(J) {
    let ie = [];
    for (let [de, we] of te)
      if (we < J) {
        let Ee = N.fetchers.get(de);
        De(Ee, "Expected fetcher: " + de),
          Ee.state === "loading" && (sr(de), te.delete(de), ie.push(de));
      }
    return Cs(ie), ie.length > 0;
  }
  function jd(J, ie) {
    let de = N.blockers.get(J) || yo;
    return $e.get(J) !== ie && $e.set(J, ie), de;
  }
  function Ja(J) {
    N.blockers.delete(J), $e.delete(J);
  }
  function Zi(J, ie) {
    let de = N.blockers.get(J) || yo;
    De(
      (de.state === "unblocked" && ie.state === "blocked") ||
        (de.state === "blocked" && ie.state === "blocked") ||
        (de.state === "blocked" && ie.state === "proceeding") ||
        (de.state === "blocked" && ie.state === "unblocked") ||
        (de.state === "proceeding" && ie.state === "unblocked"),
      "Invalid blocker state transition: " + de.state + " -> " + ie.state,
    );
    let we = new Map(N.blockers);
    we.set(J, ie), Xe({ blockers: we });
  }
  function eo(J) {
    let { currentLocation: ie, nextLocation: de, historyAction: we } = J;
    if ($e.size === 0) return;
    $e.size > 1 && Hi(!1, "A router only supports one blocker at a time");
    let Ee = Array.from($e.entries()),
      [Re, Me] = Ee[Ee.length - 1],
      Le = N.blockers.get(Re);
    if (
      !(Le && Le.state === "proceeding") &&
      Me({ currentLocation: ie, nextLocation: de, historyAction: we })
    )
      return Re;
  }
  function to(J) {
    let ie = [];
    return (
      ze.forEach((de, we) => {
        (!J || J(we)) && (de.cancel(), ie.push(we), ze.delete(we));
      }),
      ie
    );
  }
  function Hd(J, ie, de) {
    if (((L = J), (M = ie), (z = de || null), !F && N.navigation === Yh)) {
      F = !0;
      let we = As(N.location, N.matches);
      we != null && Xe({ restoreScrollPosition: we });
    }
    return () => {
      (L = null), (M = null), (z = null);
    };
  }
  function Os(J, ie) {
    return (
      (z &&
        z(
          J,
          ie.map((we) => L3(we, N.loaderData)),
        )) ||
      J.key
    );
  }
  function ks(J, ie) {
    if (L && M) {
      let de = Os(J, ie);
      L[de] = M();
    }
  }
  function As(J, ie) {
    if (L) {
      let de = Os(J, ie),
        we = L[de];
      if (typeof we == "number") return we;
    }
    return null;
  }
  function Xd(J) {
    (h = {}), (v = rp(J, c, void 0, h));
  }
  return (
    (X = {
      get basename() {
        return b;
      },
      get state() {
        return N;
      },
      get routes() {
        return p;
      },
      get window() {
        return t;
      },
      initialize: Be,
      subscribe: mt,
      enableScrollRestoration: Hd,
      navigate: Bt,
      fetch: dn,
      revalidate: vt,
      createHref: (J) => e.history.createHref(J),
      encodeLocation: (J) => e.history.encodeLocation(J),
      getFetcher: Qt,
      deleteFetcher: Fd,
      dispose: Ue,
      getBlocker: jd,
      deleteBlocker: Ja,
      _internalFetchControllers: oe,
      _internalActiveDeferreds: ze,
      _internalSetRoutes: Xd,
    }),
    X
  );
}
function iY(e) {
  return (
    e != null &&
    (("formData" in e && e.formData != null) ||
      ("body" in e && e.body !== void 0))
  );
}
function ip(e, t, r, a, c, h, p) {
  let v, b;
  if (h != null && p !== "path") {
    v = [];
    for (let k of t)
      if ((v.push(k), k.route.id === h)) {
        b = k;
        break;
      }
  } else (v = t), (b = t[t.length - 1]);
  let P = $d(
    c || ".",
    Ss(v).map((k) => k.pathnameBase),
    li(e.pathname, r) || e.pathname,
    p === "path",
  );
  return (
    c == null && ((P.search = e.search), (P.hash = e.hash)),
    (c == null || c === "" || c === ".") &&
      b &&
      b.route.index &&
      !lm(P.search) &&
      (P.search = P.search ? P.search.replace(/^\?/, "?index&") : "?index"),
    a &&
      r !== "/" &&
      (P.pathname = P.pathname === "/" ? r : Sn([r, P.pathname])),
    Xi(P)
  );
}
function $0(e, t, r, a) {
  if (!a || !iY(a)) return { path: r };
  if (a.formMethod && !dY(a.formMethod))
    return { path: r, error: vr(405, { method: a.formMethod }) };
  let c = () => ({ path: r, error: vr(400, { type: "invalid-body" }) }),
    h = a.formMethod || "get",
    p = e ? h.toUpperCase() : h.toLowerCase(),
    v = Lk(r);
  if (a.body !== void 0) {
    if (a.formEncType === "text/plain") {
      if (!Dr(p)) return c();
      let L =
        typeof a.body == "string"
          ? a.body
          : a.body instanceof FormData || a.body instanceof URLSearchParams
          ? Array.from(a.body.entries()).reduce((z, M) => {
              let [F, G] = M;
              return (
                "" +
                z +
                F +
                "=" +
                G +
                `
`
              );
            }, "")
          : String(a.body);
      return {
        path: r,
        submission: {
          formMethod: p,
          formAction: v,
          formEncType: a.formEncType,
          formData: void 0,
          json: void 0,
          text: L,
        },
      };
    } else if (a.formEncType === "application/json") {
      if (!Dr(p)) return c();
      try {
        let L = typeof a.body == "string" ? JSON.parse(a.body) : a.body;
        return {
          path: r,
          submission: {
            formMethod: p,
            formAction: v,
            formEncType: a.formEncType,
            formData: void 0,
            json: L,
            text: void 0,
          },
        };
      } catch {
        return c();
      }
    }
  }
  De(
    typeof FormData == "function",
    "FormData is not available in this environment",
  );
  let b, P;
  if (a.formData) (b = ap(a.formData)), (P = a.formData);
  else if (a.body instanceof FormData) (b = ap(a.body)), (P = a.body);
  else if (a.body instanceof URLSearchParams) (b = a.body), (P = j0(b));
  else if (a.body == null) (b = new URLSearchParams()), (P = new FormData());
  else
    try {
      (b = new URLSearchParams(a.body)), (P = j0(b));
    } catch {
      return c();
    }
  let k = {
    formMethod: p,
    formAction: v,
    formEncType: (a && a.formEncType) || "application/x-www-form-urlencoded",
    formData: P,
    json: void 0,
    text: void 0,
  };
  if (Dr(k.formMethod)) return { path: r, submission: k };
  let R = In(r);
  return (
    t && R.search && lm(R.search) && b.append("index", ""),
    (R.search = "?" + b),
    { path: Xi(R), submission: k }
  );
}
function aY(e, t) {
  let r = e;
  if (t) {
    let a = e.findIndex((c) => c.route.id === t);
    a >= 0 && (r = e.slice(0, a));
  }
  return r;
}
function D0(e, t, r, a, c, h, p, v, b, P, k, R, L, z) {
  let M = z ? Object.values(z)[0] : L ? Object.values(L)[0] : void 0,
    F = e.createURL(t.location),
    G = e.createURL(c),
    $ = z ? Object.keys(z)[0] : void 0,
    X = aY(r, $).filter((B, U) => {
      if (B.route.lazy) return !0;
      if (B.route.loader == null) return !1;
      if (
        oY(t.loaderData, t.matches[U], B) ||
        p.some((ne) => ne === B.route.id)
      )
        return !0;
      let Q = t.matches[U],
        ee = B;
      return z0(
        B,
        gt(
          {
            currentUrl: F,
            currentParams: Q.params,
            nextUrl: G,
            nextParams: ee.params,
          },
          a,
          {
            actionResult: M,
            defaultShouldRevalidate:
              h ||
              F.pathname + F.search === G.pathname + G.search ||
              F.search !== G.search ||
              Rk(Q, ee),
          },
        ),
      );
    }),
    N = [];
  return (
    b.forEach((B, U) => {
      if (!r.some((he) => he.route.id === B.routeId)) return;
      let Q = ya(k, B.path, R);
      if (!Q) {
        N.push({
          key: U,
          routeId: B.routeId,
          path: B.path,
          matches: null,
          match: null,
          controller: null,
        });
        return;
      }
      let ee = t.fetchers.get(U),
        ne = op(Q, B.path),
        le = !1;
      P.has(U)
        ? (le = !1)
        : v.includes(U)
        ? (le = !0)
        : ee && ee.state !== "idle" && ee.data === void 0
        ? (le = h)
        : (le = z0(
            ne,
            gt(
              {
                currentUrl: F,
                currentParams: t.matches[t.matches.length - 1].params,
                nextUrl: G,
                nextParams: r[r.length - 1].params,
              },
              a,
              { actionResult: M, defaultShouldRevalidate: h },
            ),
          )),
        le &&
          N.push({
            key: U,
            routeId: B.routeId,
            path: B.path,
            matches: Q,
            match: ne,
            controller: new AbortController(),
          });
    }),
    [X, N]
  );
}
function oY(e, t, r) {
  let a = !t || r.route.id !== t.route.id,
    c = e[r.route.id] === void 0;
  return a || c;
}
function Rk(e, t) {
  let r = e.route.path;
  return (
    e.pathname !== t.pathname ||
    (r != null && r.endsWith("*") && e.params["*"] !== t.params["*"])
  );
}
function z0(e, t) {
  if (e.route.shouldRevalidate) {
    let r = e.route.shouldRevalidate(t);
    if (typeof r == "boolean") return r;
  }
  return t.defaultShouldRevalidate;
}
async function F0(e, t, r) {
  if (!e.lazy) return;
  let a = await e.lazy();
  if (!e.lazy) return;
  let c = r[e.id];
  De(c, "No route found in manifest");
  let h = {};
  for (let p in a) {
    let b = c[p] !== void 0 && p !== "hasErrorBoundary";
    Hi(
      !b,
      'Route "' +
        c.id +
        '" has a static property "' +
        p +
        '" defined but its lazy function is also returning a value for this property. ' +
        ('The lazy route property "' + p + '" will be ignored.'),
    ),
      !b && !E3.has(p) && (h[p] = a[p]);
  }
  Object.assign(c, h), Object.assign(c, gt({}, t(c), { lazy: void 0 }));
}
async function xo(e, t, r, a, c, h, p, v) {
  v === void 0 && (v = {});
  let b,
    P,
    k,
    R = (M) => {
      let F,
        G = new Promise(($, O) => (F = O));
      return (
        (k = () => F()),
        t.signal.addEventListener("abort", k),
        Promise.race([
          M({ request: t, params: r.params, context: v.requestContext }),
          G,
        ])
      );
    };
  try {
    let M = r.route[e];
    if (r.route.lazy)
      if (M) {
        let F,
          G = await Promise.all([
            R(M).catch(($) => {
              F = $;
            }),
            F0(r.route, h, c),
          ]);
        if (F) throw F;
        P = G[0];
      } else if ((await F0(r.route, h, c), (M = r.route[e]), M)) P = await R(M);
      else if (e === "action") {
        let F = new URL(t.url),
          G = F.pathname + F.search;
        throw vr(405, { method: t.method, pathname: G, routeId: r.route.id });
      } else return { type: xt.data, data: void 0 };
    else if (M) P = await R(M);
    else {
      let F = new URL(t.url),
        G = F.pathname + F.search;
      throw vr(404, { pathname: G });
    }
    De(
      P !== void 0,
      "You defined " +
        (e === "action" ? "an action" : "a loader") +
        " for route " +
        ('"' +
          r.route.id +
          "\" but didn't return anything from your `" +
          e +
          "` ") +
        "function. Please return a value or `null`.",
    );
  } catch (M) {
    (b = xt.error), (P = M);
  } finally {
    k && t.signal.removeEventListener("abort", k);
  }
  if (uY(P)) {
    let M = P.status;
    if (J3.has(M)) {
      let $ = P.headers.get("Location");
      if (
        (De(
          $,
          "Redirects returned/thrown from loaders/actions must have a Location header",
        ),
        !Ak.test($))
      )
        $ = ip(new URL(t.url), a.slice(0, a.indexOf(r) + 1), p, !0, $);
      else if (!v.isStaticRequest) {
        let O = new URL(t.url),
          X = $.startsWith("//") ? new URL(O.protocol + $) : new URL($),
          N = li(X.pathname, p) != null;
        X.origin === O.origin && N && ($ = X.pathname + X.search + X.hash);
      }
      if (v.isStaticRequest) throw (P.headers.set("Location", $), P);
      return {
        type: xt.redirect,
        status: M,
        location: $,
        revalidate: P.headers.get("X-Remix-Revalidate") !== null,
        reloadDocument: P.headers.get("X-Remix-Reload-Document") !== null,
      };
    }
    if (v.isRouteRequest)
      throw { type: b === xt.error ? xt.error : xt.data, response: P };
    let F,
      G = P.headers.get("Content-Type");
    return (
      G && /\bapplication\/json\b/.test(G)
        ? (F = await P.json())
        : (F = await P.text()),
      b === xt.error
        ? { type: b, error: new sm(M, P.statusText, F), headers: P.headers }
        : { type: xt.data, data: F, statusCode: P.status, headers: P.headers }
    );
  }
  if (b === xt.error) return { type: b, error: P };
  if (cY(P)) {
    var L, z;
    return {
      type: xt.deferred,
      deferredData: P,
      statusCode: (L = P.init) == null ? void 0 : L.status,
      headers:
        ((z = P.init) == null ? void 0 : z.headers) &&
        new Headers(P.init.headers),
    };
  }
  return { type: xt.data, data: P };
}
function bo(e, t, r, a) {
  let c = e.createURL(Lk(t)).toString(),
    h = { signal: r };
  if (a && Dr(a.formMethod)) {
    let { formMethod: p, formEncType: v } = a;
    (h.method = p.toUpperCase()),
      v === "application/json"
        ? ((h.headers = new Headers({ "Content-Type": v })),
          (h.body = JSON.stringify(a.json)))
        : v === "text/plain"
        ? (h.body = a.text)
        : v === "application/x-www-form-urlencoded" && a.formData
        ? (h.body = ap(a.formData))
        : (h.body = a.formData);
  }
  return new Request(c, h);
}
function ap(e) {
  let t = new URLSearchParams();
  for (let [r, a] of e.entries())
    t.append(r, typeof a == "string" ? a : a.name);
  return t;
}
function j0(e) {
  let t = new FormData();
  for (let [r, a] of e.entries()) t.append(r, a);
  return t;
}
function sY(e, t, r, a, c) {
  let h = {},
    p = null,
    v,
    b = !1,
    P = {};
  return (
    r.forEach((k, R) => {
      let L = t[R].route.id;
      if (
        (De(!Aa(k), "Cannot handle redirect results in processLoaderData"),
        jo(k))
      ) {
        let z = Fo(e, L),
          M = k.error;
        a && ((M = Object.values(a)[0]), (a = void 0)),
          (p = p || {}),
          p[z.route.id] == null && (p[z.route.id] = M),
          (h[L] = void 0),
          b || ((b = !0), (v = Ok(k.error) ? k.error.status : 500)),
          k.headers && (P[L] = k.headers);
      } else
        Ai(k)
          ? (c.set(L, k.deferredData), (h[L] = k.deferredData.data))
          : (h[L] = k.data),
          k.statusCode != null &&
            k.statusCode !== 200 &&
            !b &&
            (v = k.statusCode),
          k.headers && (P[L] = k.headers);
    }),
    a && ((p = a), (h[Object.keys(a)[0]] = void 0)),
    { loaderData: h, errors: p, statusCode: v || 200, loaderHeaders: P }
  );
}
function H0(e, t, r, a, c, h, p, v) {
  let { loaderData: b, errors: P } = sY(t, r, a, c, v);
  for (let k = 0; k < h.length; k++) {
    let { key: R, match: L, controller: z } = h[k];
    De(
      p !== void 0 && p[k] !== void 0,
      "Did not find corresponding fetcher result",
    );
    let M = p[k];
    if (!(z && z.signal.aborted))
      if (jo(M)) {
        let F = Fo(e.matches, L == null ? void 0 : L.route.id);
        (P && P[F.route.id]) || (P = gt({}, P, { [F.route.id]: M.error })),
          e.fetchers.delete(R);
      } else if (Aa(M)) De(!1, "Unhandled fetcher revalidation redirect");
      else if (Ai(M)) De(!1, "Unhandled fetcher deferred data");
      else {
        let F = jn(M.data);
        e.fetchers.set(R, F);
      }
  }
  return { loaderData: b, errors: P };
}
function X0(e, t, r, a) {
  let c = gt({}, t);
  for (let h of r) {
    let p = h.route.id;
    if (
      (t.hasOwnProperty(p)
        ? t[p] !== void 0 && (c[p] = t[p])
        : e[p] !== void 0 && h.route.loader && (c[p] = e[p]),
      a && a.hasOwnProperty(p))
    )
      break;
  }
  return c;
}
function Fo(e, t) {
  return (
    (t ? e.slice(0, e.findIndex((a) => a.route.id === t) + 1) : [...e])
      .reverse()
      .find((a) => a.route.hasErrorBoundary === !0) || e[0]
  );
}
function B0(e) {
  let t =
    e.length === 1
      ? e[0]
      : e.find((r) => r.index || !r.path || r.path === "/") || {
          id: "__shim-error-route__",
        };
  return {
    matches: [{ params: {}, pathname: "", pathnameBase: "", route: t }],
    route: t,
  };
}
function vr(e, t) {
  let { pathname: r, routeId: a, method: c, type: h } = t === void 0 ? {} : t,
    p = "Unknown Server Error",
    v = "Unknown @remix-run/router error";
  return (
    e === 400
      ? ((p = "Bad Request"),
        c && r && a
          ? (v =
              "You made a " +
              c +
              ' request to "' +
              r +
              '" but ' +
              ('did not provide a `loader` for route "' + a + '", ') +
              "so there is no way to handle the request.")
          : h === "defer-action"
          ? (v = "defer() is not supported in actions")
          : h === "invalid-body" && (v = "Unable to encode submission body"))
      : e === 403
      ? ((p = "Forbidden"),
        (v = 'Route "' + a + '" does not match URL "' + r + '"'))
      : e === 404
      ? ((p = "Not Found"), (v = 'No route matches URL "' + r + '"'))
      : e === 405 &&
        ((p = "Method Not Allowed"),
        c && r && a
          ? (v =
              "You made a " +
              c.toUpperCase() +
              ' request to "' +
              r +
              '" but ' +
              ('did not provide an `action` for route "' + a + '", ') +
              "so there is no way to handle the request.")
          : c && (v = 'Invalid request method "' + c.toUpperCase() + '"')),
    new sm(e || 500, p, new Error(v), !0)
  );
}
function Y0(e) {
  for (let t = e.length - 1; t >= 0; t--) {
    let r = e[t];
    if (Aa(r)) return { result: r, idx: t };
  }
}
function Lk(e) {
  let t = typeof e == "string" ? In(e) : e;
  return Xi(gt({}, t, { hash: "" }));
}
function lY(e, t) {
  return e.pathname !== t.pathname || e.search !== t.search
    ? !1
    : e.hash === ""
    ? t.hash !== ""
    : e.hash === t.hash
    ? !0
    : t.hash !== "";
}
function Ai(e) {
  return e.type === xt.deferred;
}
function jo(e) {
  return e.type === xt.error;
}
function Aa(e) {
  return (e && e.type) === xt.redirect;
}
function cY(e) {
  let t = e;
  return (
    t &&
    typeof t == "object" &&
    typeof t.data == "object" &&
    typeof t.subscribe == "function" &&
    typeof t.cancel == "function" &&
    typeof t.resolveData == "function"
  );
}
function uY(e) {
  return (
    e != null &&
    typeof e.status == "number" &&
    typeof e.statusText == "string" &&
    typeof e.headers == "object" &&
    typeof e.body < "u"
  );
}
function dY(e) {
  return Q3.has(e.toLowerCase());
}
function Dr(e) {
  return Z3.has(e.toLowerCase());
}
async function W0(e, t, r, a, c, h) {
  for (let p = 0; p < r.length; p++) {
    let v = r[p],
      b = t[p];
    if (!b) continue;
    let P = e.find((R) => R.route.id === b.route.id),
      k = P != null && !Rk(P, b) && (h && h[b.route.id]) !== void 0;
    if (Ai(v) && (c || k)) {
      let R = a[p];
      De(R, "Expected an AbortSignal for revalidating fetcher deferred result"),
        await Tk(v, R, c).then((L) => {
          L && (r[p] = L || r[p]);
        });
    }
  }
}
async function Tk(e, t, r) {
  if ((r === void 0 && (r = !1), !(await e.deferredData.resolveData(t)))) {
    if (r)
      try {
        return { type: xt.data, data: e.deferredData.unwrappedData };
      } catch (c) {
        return { type: xt.error, error: c };
      }
    return { type: xt.data, data: e.deferredData.data };
  }
}
function lm(e) {
  return new URLSearchParams(e).getAll("index").some((t) => t === "");
}
function op(e, t) {
  let r = typeof t == "string" ? In(t).search : t.search;
  if (e[e.length - 1].route.index && lm(r || "")) return e[e.length - 1];
  let a = Ss(e);
  return a[a.length - 1];
}
function V0(e) {
  let {
    formMethod: t,
    formAction: r,
    formEncType: a,
    text: c,
    formData: h,
    json: p,
  } = e;
  if (!(!t || !r || !a)) {
    if (c != null)
      return {
        formMethod: t,
        formAction: r,
        formEncType: a,
        formData: void 0,
        json: void 0,
        text: c,
      };
    if (h != null)
      return {
        formMethod: t,
        formAction: r,
        formEncType: a,
        formData: h,
        json: void 0,
        text: void 0,
      };
    if (p !== void 0)
      return {
        formMethod: t,
        formAction: r,
        formEncType: a,
        formData: void 0,
        json: p,
        text: void 0,
      };
  }
}
function Wh(e, t) {
  return t
    ? {
        state: "loading",
        location: e,
        formMethod: t.formMethod,
        formAction: t.formAction,
        formEncType: t.formEncType,
        formData: t.formData,
        json: t.json,
        text: t.text,
      }
    : {
        state: "loading",
        location: e,
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
        json: void 0,
        text: void 0,
      };
}
function hY(e, t) {
  return {
    state: "submitting",
    location: e,
    formMethod: t.formMethod,
    formAction: t.formAction,
    formEncType: t.formEncType,
    formData: t.formData,
    json: t.json,
    text: t.text,
  };
}
function wo(e, t) {
  return e
    ? {
        state: "loading",
        formMethod: e.formMethod,
        formAction: e.formAction,
        formEncType: e.formEncType,
        formData: e.formData,
        json: e.json,
        text: e.text,
        data: t,
      }
    : {
        state: "loading",
        formMethod: void 0,
        formAction: void 0,
        formEncType: void 0,
        formData: void 0,
        json: void 0,
        text: void 0,
        data: t,
      };
}
function fY(e, t) {
  return {
    state: "submitting",
    formMethod: e.formMethod,
    formAction: e.formAction,
    formEncType: e.formEncType,
    formData: e.formData,
    json: e.json,
    text: e.text,
    data: t ? t.data : void 0,
  };
}
function jn(e) {
  return {
    state: "idle",
    formMethod: void 0,
    formAction: void 0,
    formEncType: void 0,
    formData: void 0,
    json: void 0,
    text: void 0,
    data: e,
  };
}
function pY(e, t) {
  try {
    let r = e.sessionStorage.getItem(Ek);
    if (r) {
      let a = JSON.parse(r);
      for (let [c, h] of Object.entries(a || {}))
        h && Array.isArray(h) && t.set(c, new Set(h || []));
    }
  } catch {}
}
function gY(e, t) {
  if (t.size > 0) {
    let r = {};
    for (let [a, c] of t) r[a] = [...c];
    try {
      e.sessionStorage.setItem(Ek, JSON.stringify(r));
    } catch (a) {
      Hi(
        !1,
        "Failed to save applied view transitions in sessionStorage (" +
          a +
          ").",
      );
    }
  }
}
/**
 * React Router v6.18.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Bu() {
  return (
    (Bu = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var r = arguments[t];
            for (var a in r)
              Object.prototype.hasOwnProperty.call(r, a) && (e[a] = r[a]);
          }
          return e;
        }),
    Bu.apply(this, arguments)
  );
}
const Ps = j.createContext(null),
  cm = j.createContext(null),
  Ui = j.createContext(null),
  Dd = j.createContext(null),
  Nn = j.createContext({ outlet: null, matches: [], isDataRoute: !1 }),
  Ik = j.createContext(null);
function mY(e, t) {
  let { relative: r } = t === void 0 ? {} : t;
  Za() || De(!1);
  let { basename: a, navigator: c } = j.useContext(Ui),
    { hash: h, pathname: p, search: v } = zd(e, { relative: r }),
    b = p;
  return (
    a !== "/" && (b = p === "/" ? a : Sn([a, p])),
    c.createHref({ pathname: b, search: v, hash: h })
  );
}
function Za() {
  return j.useContext(Dd) != null;
}
function qi() {
  return Za() || De(!1), j.useContext(Dd).location;
}
function Nk(e) {
  j.useContext(Ui).static || j.useLayoutEffect(e);
}
function Mk() {
  let { isDataRoute: e } = j.useContext(Nn);
  return e ? RY() : vY();
}
function vY() {
  Za() || De(!1);
  let e = j.useContext(Ps),
    { basename: t, navigator: r } = j.useContext(Ui),
    { matches: a } = j.useContext(Nn),
    { pathname: c } = qi(),
    h = JSON.stringify(Ss(a).map((b) => b.pathnameBase)),
    p = j.useRef(!1);
  return (
    Nk(() => {
      p.current = !0;
    }),
    j.useCallback(
      function (b, P) {
        if ((P === void 0 && (P = {}), !p.current)) return;
        if (typeof b == "number") {
          r.go(b);
          return;
        }
        let k = $d(b, JSON.parse(h), c, P.relative === "path");
        e == null &&
          t !== "/" &&
          (k.pathname = k.pathname === "/" ? t : Sn([t, k.pathname])),
          (P.replace ? r.replace : r.push)(k, P.state, P);
      },
      [t, r, h, c, e],
    )
  );
}
const yY = j.createContext(null);
function xY(e) {
  let t = j.useContext(Nn).outlet;
  return t && j.createElement(yY.Provider, { value: e }, t);
}
function zd(e, t) {
  let { relative: r } = t === void 0 ? {} : t,
    { matches: a } = j.useContext(Nn),
    { pathname: c } = qi(),
    h = JSON.stringify(Ss(a).map((p) => p.pathnameBase));
  return j.useMemo(() => $d(e, JSON.parse(h), c, r === "path"), [e, h, c, r]);
}
function bY(e, t, r) {
  Za() || De(!1);
  let { navigator: a } = j.useContext(Ui),
    { matches: c } = j.useContext(Nn),
    h = c[c.length - 1],
    p = h ? h.params : {};
  h && h.pathname;
  let v = h ? h.pathnameBase : "/";
  h && h.route;
  let b = qi(),
    P;
  if (t) {
    var k;
    let F = typeof t == "string" ? In(t) : t;
    v === "/" || ((k = F.pathname) != null && k.startsWith(v)) || De(!1),
      (P = F);
  } else P = b;
  let R = P.pathname || "/",
    L = v === "/" ? R : R.slice(v.length) || "/",
    z = ya(e, { pathname: L }),
    M = CY(
      z &&
        z.map((F) =>
          Object.assign({}, F, {
            params: Object.assign({}, p, F.params),
            pathname: Sn([
              v,
              a.encodeLocation
                ? a.encodeLocation(F.pathname).pathname
                : F.pathname,
            ]),
            pathnameBase:
              F.pathnameBase === "/"
                ? v
                : Sn([
                    v,
                    a.encodeLocation
                      ? a.encodeLocation(F.pathnameBase).pathname
                      : F.pathnameBase,
                  ]),
          }),
        ),
      c,
      r,
    );
  return t && M
    ? j.createElement(
        Dd.Provider,
        {
          value: {
            location: Bu(
              {
                pathname: "/",
                search: "",
                hash: "",
                state: null,
                key: "default",
              },
              P,
            ),
            navigationType: yt.Pop,
          },
        },
        M,
      )
    : M;
}
function wY() {
  let e = EY(),
    t = Ok(e)
      ? e.status + " " + e.statusText
      : e instanceof Error
      ? e.message
      : JSON.stringify(e),
    r = e instanceof Error ? e.stack : null,
    c = { padding: "0.5rem", backgroundColor: "rgba(200,200,200, 0.5)" },
    h = null;
  return j.createElement(
    j.Fragment,
    null,
    j.createElement("h2", null, "Unexpected Application Error!"),
    j.createElement("h3", { style: { fontStyle: "italic" } }, t),
    r ? j.createElement("pre", { style: c }, r) : null,
    h,
  );
}
const SY = j.createElement(wY, null);
class PY extends j.Component {
  constructor(t) {
    super(t),
      (this.state = {
        location: t.location,
        revalidation: t.revalidation,
        error: t.error,
      });
  }
  static getDerivedStateFromError(t) {
    return { error: t };
  }
  static getDerivedStateFromProps(t, r) {
    return r.location !== t.location ||
      (r.revalidation !== "idle" && t.revalidation === "idle")
      ? { error: t.error, location: t.location, revalidation: t.revalidation }
      : {
          error: t.error || r.error,
          location: r.location,
          revalidation: t.revalidation || r.revalidation,
        };
  }
  componentDidCatch(t, r) {
    console.error(
      "React Router caught the following error during render",
      t,
      r,
    );
  }
  render() {
    return this.state.error
      ? j.createElement(
          Nn.Provider,
          { value: this.props.routeContext },
          j.createElement(Ik.Provider, {
            value: this.state.error,
            children: this.props.component,
          }),
        )
      : this.props.children;
  }
}
function _Y(e) {
  let { routeContext: t, match: r, children: a } = e,
    c = j.useContext(Ps);
  return (
    c &&
      c.static &&
      c.staticContext &&
      (r.route.errorElement || r.route.ErrorBoundary) &&
      (c.staticContext._deepestRenderedBoundaryId = r.route.id),
    j.createElement(Nn.Provider, { value: t }, a)
  );
}
function CY(e, t, r) {
  var a;
  if ((t === void 0 && (t = []), r === void 0 && (r = null), e == null)) {
    var c;
    if ((c = r) != null && c.errors) e = r.matches;
    else return null;
  }
  let h = e,
    p = (a = r) == null ? void 0 : a.errors;
  if (p != null) {
    let v = h.findIndex(
      (b) => b.route.id && (p == null ? void 0 : p[b.route.id]),
    );
    v >= 0 || De(!1), (h = h.slice(0, Math.min(h.length, v + 1)));
  }
  return h.reduceRight((v, b, P) => {
    let k = b.route.id ? (p == null ? void 0 : p[b.route.id]) : null,
      R = null;
    r && (R = b.route.errorElement || SY);
    let L = t.concat(h.slice(0, P + 1)),
      z = () => {
        let M;
        return (
          k
            ? (M = R)
            : b.route.Component
            ? (M = j.createElement(b.route.Component, null))
            : b.route.element
            ? (M = b.route.element)
            : (M = v),
          j.createElement(_Y, {
            match: b,
            routeContext: { outlet: v, matches: L, isDataRoute: r != null },
            children: M,
          })
        );
      };
    return r && (b.route.ErrorBoundary || b.route.errorElement || P === 0)
      ? j.createElement(PY, {
          location: r.location,
          revalidation: r.revalidation,
          component: R,
          error: k,
          children: z(),
          routeContext: { outlet: null, matches: L, isDataRoute: !0 },
        })
      : z();
  }, null);
}
var $k = (function (e) {
    return (
      (e.UseBlocker = "useBlocker"),
      (e.UseRevalidator = "useRevalidator"),
      (e.UseNavigateStable = "useNavigate"),
      e
    );
  })($k || {}),
  Yu = (function (e) {
    return (
      (e.UseBlocker = "useBlocker"),
      (e.UseLoaderData = "useLoaderData"),
      (e.UseActionData = "useActionData"),
      (e.UseRouteError = "useRouteError"),
      (e.UseNavigation = "useNavigation"),
      (e.UseRouteLoaderData = "useRouteLoaderData"),
      (e.UseMatches = "useMatches"),
      (e.UseRevalidator = "useRevalidator"),
      (e.UseNavigateStable = "useNavigate"),
      (e.UseRouteId = "useRouteId"),
      e
    );
  })(Yu || {});
function OY(e) {
  let t = j.useContext(Ps);
  return t || De(!1), t;
}
function kY(e) {
  let t = j.useContext(cm);
  return t || De(!1), t;
}
function AY(e) {
  let t = j.useContext(Nn);
  return t || De(!1), t;
}
function Dk(e) {
  let t = AY(),
    r = t.matches[t.matches.length - 1];
  return r.route.id || De(!1), r.route.id;
}
function EY() {
  var e;
  let t = j.useContext(Ik),
    r = kY(Yu.UseRouteError),
    a = Dk(Yu.UseRouteError);
  return t || ((e = r.errors) == null ? void 0 : e[a]);
}
function RY() {
  let { router: e } = OY($k.UseNavigateStable),
    t = Dk(Yu.UseNavigateStable),
    r = j.useRef(!1);
  return (
    Nk(() => {
      r.current = !0;
    }),
    j.useCallback(
      function (c, h) {
        h === void 0 && (h = {}),
          r.current &&
            (typeof c == "number"
              ? e.navigate(c)
              : e.navigate(c, Bu({ fromRouteId: t }, h)));
      },
      [e, t],
    )
  );
}
function LY(e) {
  let { to: t, replace: r, state: a, relative: c } = e;
  Za() || De(!1);
  let { matches: h } = j.useContext(Nn),
    { pathname: p } = qi(),
    v = Mk(),
    b = $d(
      t,
      Ss(h).map((k) => k.pathnameBase),
      p,
      c === "path",
    ),
    P = JSON.stringify(b);
  return (
    j.useEffect(
      () => v(JSON.parse(P), { replace: r, state: a, relative: c }),
      [v, P, c, r, a],
    ),
    null
  );
}
function TY(e) {
  return xY(e.context);
}
function IY(e) {
  let {
    basename: t = "/",
    children: r = null,
    location: a,
    navigationType: c = yt.Pop,
    navigator: h,
    static: p = !1,
  } = e;
  Za() && De(!1);
  let v = t.replace(/^\/*/, "/"),
    b = j.useMemo(() => ({ basename: v, navigator: h, static: p }), [v, h, p]);
  typeof a == "string" && (a = In(a));
  let {
      pathname: P = "/",
      search: k = "",
      hash: R = "",
      state: L = null,
      key: z = "default",
    } = a,
    M = j.useMemo(() => {
      let F = li(P, v);
      return F == null
        ? null
        : {
            location: { pathname: F, search: k, hash: R, state: L, key: z },
            navigationType: c,
          };
    }, [v, P, k, R, L, z, c]);
  return M == null
    ? null
    : j.createElement(
        Ui.Provider,
        { value: b },
        j.createElement(Dd.Provider, { children: r, value: M }),
      );
}
new Promise(() => {});
function NY(e) {
  let t = {
    hasErrorBoundary: e.ErrorBoundary != null || e.errorElement != null,
  };
  return (
    e.Component &&
      Object.assign(t, {
        element: j.createElement(e.Component),
        Component: void 0,
      }),
    e.ErrorBoundary &&
      Object.assign(t, {
        errorElement: j.createElement(e.ErrorBoundary),
        ErrorBoundary: void 0,
      }),
    t
  );
}
/**
 * React Router DOM v6.18.0
 *
 * Copyright (c) Remix Software Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE.md file in the root directory of this source tree.
 *
 * @license MIT
 */ function Ha() {
  return (
    (Ha = Object.assign
      ? Object.assign.bind()
      : function (e) {
          for (var t = 1; t < arguments.length; t++) {
            var r = arguments[t];
            for (var a in r)
              Object.prototype.hasOwnProperty.call(r, a) && (e[a] = r[a]);
          }
          return e;
        }),
    Ha.apply(this, arguments)
  );
}
function zk(e, t) {
  if (e == null) return {};
  var r = {},
    a = Object.keys(e),
    c,
    h;
  for (h = 0; h < a.length; h++)
    (c = a[h]), !(t.indexOf(c) >= 0) && (r[c] = e[c]);
  return r;
}
function MY(e) {
  return !!(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey);
}
function $Y(e, t) {
  return e.button === 0 && (!t || t === "_self") && !MY(e);
}
const DY = [
    "onClick",
    "relative",
    "reloadDocument",
    "replace",
    "state",
    "target",
    "to",
    "preventScrollReset",
    "unstable_viewTransition",
  ],
  zY = [
    "aria-current",
    "caseSensitive",
    "className",
    "end",
    "style",
    "to",
    "unstable_viewTransition",
    "children",
  ];
function FY(e, t) {
  return nY({
    basename: t == null ? void 0 : t.basename,
    future: Ha({}, t == null ? void 0 : t.future, { v7_prependBasename: !0 }),
    history: O3({ window: t == null ? void 0 : t.window }),
    hydrationData: (t == null ? void 0 : t.hydrationData) || jY(),
    routes: e,
    mapRouteProperties: NY,
    window: t == null ? void 0 : t.window,
  }).initialize();
}
function jY() {
  var e;
  let t = (e = window) == null ? void 0 : e.__staticRouterHydrationData;
  return t && t.errors && (t = Ha({}, t, { errors: HY(t.errors) })), t;
}
function HY(e) {
  if (!e) return null;
  let t = Object.entries(e),
    r = {};
  for (let [a, c] of t)
    if (c && c.__type === "RouteErrorResponse")
      r[a] = new sm(c.status, c.statusText, c.data, c.internal === !0);
    else if (c && c.__type === "Error") {
      if (c.__subType) {
        let h = window[c.__subType];
        if (typeof h == "function")
          try {
            let p = new h(c.message);
            (p.stack = ""), (r[a] = p);
          } catch {}
      }
      if (r[a] == null) {
        let h = new Error(c.message);
        (h.stack = ""), (r[a] = h);
      }
    } else r[a] = c;
  return r;
}
const Fk = j.createContext({ isTransitioning: !1 }),
  XY = j.createContext(new Map()),
  BY = "startTransition",
  G0 = fp[BY];
function YY(e) {
  G0 ? G0(e) : e();
}
class WY {
  constructor() {
    (this.status = "pending"),
      (this.promise = new Promise((t, r) => {
        (this.resolve = (a) => {
          this.status === "pending" && ((this.status = "resolved"), t(a));
        }),
          (this.reject = (a) => {
            this.status === "pending" && ((this.status = "rejected"), r(a));
          });
      }));
  }
}
function VY(e) {
  let { fallbackElement: t, router: r, future: a } = e,
    [c, h] = j.useState(r.state),
    [p, v] = j.useState(),
    [b, P] = j.useState({ isTransitioning: !1 }),
    [k, R] = j.useState(),
    [L, z] = j.useState(),
    [M, F] = j.useState(),
    G = j.useRef(new Map()),
    { v7_startTransition: $ } = a || {},
    O = j.useCallback(
      (Q) => {
        $ ? YY(Q) : Q();
      },
      [$],
    ),
    X = j.useCallback(
      (Q, ee) => {
        let { deletedFetchers: ne, unstable_viewTransitionOpts: le } = ee;
        ne.forEach((he) => G.current.delete(he)),
          Q.fetchers.forEach((he, me) => {
            he.data !== void 0 && G.current.set(me, he.data);
          }),
          !le ||
          r.window == null ||
          typeof r.window.document.startViewTransition != "function"
            ? O(() => h(Q))
            : L && k
            ? (k.resolve(),
              L.skipTransition(),
              F({
                state: Q,
                currentLocation: le.currentLocation,
                nextLocation: le.nextLocation,
              }))
            : (v(Q),
              P({
                isTransitioning: !0,
                currentLocation: le.currentLocation,
                nextLocation: le.nextLocation,
              }));
      },
      [r.window, L, k, G, O],
    );
  j.useLayoutEffect(() => r.subscribe(X), [r, X]),
    j.useEffect(() => {
      b.isTransitioning && R(new WY());
    }, [b.isTransitioning]),
    j.useEffect(() => {
      if (k && p && r.window) {
        let Q = p,
          ee = k.promise,
          ne = r.window.document.startViewTransition(async () => {
            O(() => h(Q)), await ee;
          });
        ne.finished.finally(() => {
          R(void 0), z(void 0), v(void 0), P({ isTransitioning: !1 });
        }),
          z(ne);
      }
    }, [O, p, k, r.window]),
    j.useEffect(() => {
      k && p && c.location.key === p.location.key && k.resolve();
    }, [k, L, c.location, p]),
    j.useEffect(() => {
      !b.isTransitioning &&
        M &&
        (v(M.state),
        P({
          isTransitioning: !0,
          currentLocation: M.currentLocation,
          nextLocation: M.nextLocation,
        }),
        F(void 0));
    }, [b.isTransitioning, M]);
  let N = j.useMemo(
      () => ({
        createHref: r.createHref,
        encodeLocation: r.encodeLocation,
        go: (Q) => r.navigate(Q),
        push: (Q, ee, ne) =>
          r.navigate(Q, {
            state: ee,
            preventScrollReset: ne == null ? void 0 : ne.preventScrollReset,
          }),
        replace: (Q, ee, ne) =>
          r.navigate(Q, {
            replace: !0,
            state: ee,
            preventScrollReset: ne == null ? void 0 : ne.preventScrollReset,
          }),
      }),
      [r],
    ),
    B = r.basename || "/",
    U = j.useMemo(
      () => ({ router: r, navigator: N, static: !1, basename: B }),
      [r, N, B],
    );
  return j.createElement(
    j.Fragment,
    null,
    j.createElement(
      Ps.Provider,
      { value: U },
      j.createElement(
        cm.Provider,
        { value: c },
        j.createElement(
          XY.Provider,
          { value: G.current },
          j.createElement(
            Fk.Provider,
            { value: b },
            j.createElement(
              IY,
              {
                basename: B,
                location: c.location,
                navigationType: c.historyAction,
                navigator: N,
              },
              c.initialized
                ? j.createElement(GY, { routes: r.routes, state: c })
                : t,
            ),
          ),
        ),
      ),
    ),
    null,
  );
}
function GY(e) {
  let { routes: t, state: r } = e;
  return bY(t, void 0, r);
}
const UY =
    typeof window < "u" &&
    typeof window.document < "u" &&
    typeof window.document.createElement < "u",
  qY = /^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,
  ZY = j.forwardRef(function (t, r) {
    let {
        onClick: a,
        relative: c,
        reloadDocument: h,
        replace: p,
        state: v,
        target: b,
        to: P,
        preventScrollReset: k,
        unstable_viewTransition: R,
      } = t,
      L = zk(t, DY),
      { basename: z } = j.useContext(Ui),
      M,
      F = !1;
    if (typeof P == "string" && qY.test(P) && ((M = P), UY))
      try {
        let X = new URL(window.location.href),
          N = P.startsWith("//") ? new URL(X.protocol + P) : new URL(P),
          B = li(N.pathname, z);
        N.origin === X.origin && B != null
          ? (P = B + N.search + N.hash)
          : (F = !0);
      } catch {}
    let G = mY(P, { relative: c }),
      $ = JY(P, {
        replace: p,
        state: v,
        target: b,
        preventScrollReset: k,
        relative: c,
        unstable_viewTransition: R,
      });
    function O(X) {
      a && a(X), X.defaultPrevented || $(X);
    }
    return j.createElement(
      "a",
      Ha({}, L, { href: M || G, onClick: F || h ? a : O, ref: r, target: b }),
    );
  }),
  KY = j.forwardRef(function (t, r) {
    let {
        "aria-current": a = "page",
        caseSensitive: c = !1,
        className: h = "",
        end: p = !1,
        style: v,
        to: b,
        unstable_viewTransition: P,
        children: k,
      } = t,
      R = zk(t, zY),
      L = zd(b, { relative: R.relative }),
      z = qi(),
      M = j.useContext(cm),
      { navigator: F } = j.useContext(Ui),
      G = M != null && e4(L) && P === !0,
      $ = F.encodeLocation ? F.encodeLocation(L).pathname : L.pathname,
      O = z.pathname,
      X =
        M && M.navigation && M.navigation.location
          ? M.navigation.location.pathname
          : null;
    c ||
      ((O = O.toLowerCase()),
      (X = X ? X.toLowerCase() : null),
      ($ = $.toLowerCase()));
    let N = O === $ || (!p && O.startsWith($) && O.charAt($.length) === "/"),
      B =
        X != null &&
        (X === $ || (!p && X.startsWith($) && X.charAt($.length) === "/")),
      U = { isActive: N, isPending: B, isTransitioning: G },
      Q = N ? a : void 0,
      ee;
    typeof h == "function"
      ? (ee = h(U))
      : (ee = [
          h,
          N ? "active" : null,
          B ? "pending" : null,
          G ? "transitioning" : null,
        ]
          .filter(Boolean)
          .join(" "));
    let ne = typeof v == "function" ? v(U) : v;
    return j.createElement(
      ZY,
      Ha({}, R, {
        "aria-current": Q,
        className: ee,
        ref: r,
        style: ne,
        to: b,
        unstable_viewTransition: P,
      }),
      typeof k == "function" ? k(U) : k,
    );
  });
var sp;
(function (e) {
  (e.UseScrollRestoration = "useScrollRestoration"),
    (e.UseSubmit = "useSubmit"),
    (e.UseSubmitFetcher = "useSubmitFetcher"),
    (e.UseFetcher = "useFetcher"),
    (e.useViewTransitionState = "useViewTransitionState");
})(sp || (sp = {}));
var U0;
(function (e) {
  (e.UseFetcher = "useFetcher"),
    (e.UseFetchers = "useFetchers"),
    (e.UseScrollRestoration = "useScrollRestoration");
})(U0 || (U0 = {}));
function QY(e) {
  let t = j.useContext(Ps);
  return t || De(!1), t;
}
function JY(e, t) {
  let {
      target: r,
      replace: a,
      state: c,
      preventScrollReset: h,
      relative: p,
      unstable_viewTransition: v,
    } = t === void 0 ? {} : t,
    b = Mk(),
    P = qi(),
    k = zd(e, { relative: p });
  return j.useCallback(
    (R) => {
      if ($Y(R, r)) {
        R.preventDefault();
        let L = a !== void 0 ? a : Xi(P) === Xi(k);
        b(e, {
          replace: L,
          state: c,
          preventScrollReset: h,
          relative: p,
          unstable_viewTransition: v,
        });
      }
    },
    [P, b, k, a, c, r, e, h, p, v],
  );
}
function e4(e, t) {
  t === void 0 && (t = {});
  let r = j.useContext(Fk);
  r == null && De(!1);
  let { basename: a } = QY(sp.useViewTransitionState),
    c = zd(e, { relative: t.relative });
  if (!r.isTransitioning) return !1;
  let h = li(r.currentLocation.pathname, a) || r.currentLocation.pathname,
    p = li(r.nextLocation.pathname, a) || r.nextLocation.pathname;
  return np(c.pathname, p) != null || np(c.pathname, h) != null;
}
var jk = { exports: {} },
  t4 = "SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED",
  r4 = t4,
  n4 = r4;
function Hk() {}
function Xk() {}
Xk.resetWarningCache = Hk;
var i4 = function () {
  function e(a, c, h, p, v, b) {
    if (b !== n4) {
      var P = new Error(
        "Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types",
      );
      throw ((P.name = "Invariant Violation"), P);
    }
  }
  e.isRequired = e;
  function t() {
    return e;
  }
  var r = {
    array: e,
    bigint: e,
    bool: e,
    func: e,
    number: e,
    object: e,
    string: e,
    symbol: e,
    any: e,
    arrayOf: t,
    element: e,
    elementType: e,
    instanceOf: t,
    node: e,
    objectOf: t,
    oneOf: t,
    oneOfType: t,
    shape: t,
    exact: t,
    checkPropTypes: Xk,
    resetWarningCache: Hk,
  };
  return (r.PropTypes = r), r;
};
jk.exports = i4();
var Bk = jk.exports;
const xi = J0(Bk);
var a4 = {
    xmlns: "http://www.w3.org/2000/svg",
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    fill: "none",
    stroke: "currentColor",
    strokeWidth: 2,
    strokeLinecap: "round",
    strokeLinejoin: "round",
  },
  o4 = Object.defineProperty,
  s4 = Object.defineProperties,
  l4 = Object.getOwnPropertyDescriptors,
  Wu = Object.getOwnPropertySymbols,
  Yk = Object.prototype.hasOwnProperty,
  Wk = Object.prototype.propertyIsEnumerable,
  q0 = (e, t, r) =>
    t in e
      ? o4(e, t, { enumerable: !0, configurable: !0, writable: !0, value: r })
      : (e[t] = r),
  Z0 = (e, t) => {
    for (var r in t || (t = {})) Yk.call(t, r) && q0(e, r, t[r]);
    if (Wu) for (var r of Wu(t)) Wk.call(t, r) && q0(e, r, t[r]);
    return e;
  },
  c4 = (e, t) => s4(e, l4(t)),
  u4 = (e, t) => {
    var r = {};
    for (var a in e) Yk.call(e, a) && t.indexOf(a) < 0 && (r[a] = e[a]);
    if (e != null && Wu)
      for (var a of Wu(e)) t.indexOf(a) < 0 && Wk.call(e, a) && (r[a] = e[a]);
    return r;
  },
  _s = (e, t, r) => {
    const a = j.forwardRef((c, h) => {
      var p = c,
        {
          color: v = "currentColor",
          size: b = 24,
          stroke: P = 2,
          children: k,
        } = p,
        R = u4(p, ["color", "size", "stroke", "children"]);
      return j.createElement(
        "svg",
        Z0(
          c4(Z0({ ref: h }, a4), {
            width: b,
            height: b,
            stroke: v,
            strokeWidth: P,
            className: `tabler-icon tabler-icon-${e}`,
          }),
          R,
        ),
        [...r.map(([L, z]) => j.createElement(L, z)), ...(k || [])],
      );
    });
    return (
      (a.propTypes = {
        color: xi.string,
        size: xi.oneOfType([xi.string, xi.number]),
        stroke: xi.oneOfType([xi.string, xi.number]),
      }),
      (a.displayName = `${t}`),
      a
    );
  },
  d4 = _s("bookmark", "IconBookmark", [
    [
      "path",
      {
        d: "M18 7v14l-6 -4l-6 4v-14a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4z",
        key: "svg-0",
      },
    ],
  ]),
  h4 = _s("copy", "IconCopy", [
    [
      "path",
      {
        d: "M8 8m0 2a2 2 0 0 1 2 -2h8a2 2 0 0 1 2 2v8a2 2 0 0 1 -2 2h-8a2 2 0 0 1 -2 -2z",
        key: "svg-0",
      },
    ],
    [
      "path",
      {
        d: "M16 8v-2a2 2 0 0 0 -2 -2h-8a2 2 0 0 0 -2 2v8a2 2 0 0 0 2 2h2",
        key: "svg-1",
      },
    ],
  ]),
  f4 = _s("file-export", "IconFileExport", [
    ["path", { d: "M14 3v4a1 1 0 0 0 1 1h4", key: "svg-0" }],
    [
      "path",
      {
        d: "M11.5 21h-4.5a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v5m-5 6h7m-3 -3l3 3l-3 3",
        key: "svg-1",
      },
    ],
  ]),
  p4 = _s("layout-grid", "IconLayoutGrid", [
    [
      "path",
      {
        d: "M4 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z",
        key: "svg-0",
      },
    ],
    [
      "path",
      {
        d: "M14 4m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z",
        key: "svg-1",
      },
    ],
    [
      "path",
      {
        d: "M4 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z",
        key: "svg-2",
      },
    ],
    [
      "path",
      {
        d: "M14 14m0 1a1 1 0 0 1 1 -1h4a1 1 0 0 1 1 1v4a1 1 0 0 1 -1 1h-4a1 1 0 0 1 -1 -1z",
        key: "svg-3",
      },
    ],
  ]),
  g4 = _s("search", "IconSearch", [
    ["path", { d: "M10 10m-7 0a7 7 0 1 0 14 0a7 7 0 1 0 -14 0", key: "svg-0" }],
    ["path", { d: "M21 21l-6 -6", key: "svg-1" }],
  ]);
const m4 = () =>
    Oe.jsxs(Br, {
      navbar: { width: 305, breakpoint: "xs", collapsed: {} },
      children: [
        Oe.jsx(Br.Navbar, {
          styles: { navbar: { border: "none" } },
          style: { background: "#fbfbff" },
          children: Oe.jsxs(zu, {
            align: "center",
            style: { position: "relative" },
            children: [
              Oe.jsx(Jf, { h: "xl" }),
              Oe.jsx(Jf, { h: "xs" }),
              Oe.jsxs(zu, {
                align: "start",
                style: { width: "75%" },
                gap: 0,
                children: [
                  Oe.jsx(K0, {
                    to: "dashboard",
                    icon: p4,
                    children: "Kontrollpanel",
                  }),
                  Oe.jsx(K0, { to: "graphs", icon: g4, children: "Grafer" }),
                ],
              }),
            ],
          }),
        }),
        Oe.jsx(Br.Main, { children: Oe.jsx(TY, {}) }),
      ],
    }),
  K0 = ({ to: e, children: t, icon: r, counter: a }) => {
    const c = qi(),
      h = cn(),
      { hovered: p, ref: v } = yL(),
      b = c.pathname.startsWith("/" + e);
    return Oe.jsx(fs, {
      ref: v,
      component: KY,
      to: e,
      p: "md",
      w: "100%",
      styles: {
        root: {
          display: "flex",
          background: b ? "white" : void 0,
          boxShadow: b ? h.shadows.sm : void 0,
          borderRadius: h.radius.lg,
          color: h.colors[h.primaryColor][h.primaryShade],
        },
      },
      children: Oe.jsxs(Oi, {
        opacity: p || b ? 1 : 0.5,
        children: [
          Oe.jsx(r, { size: 24 }),
          Oe.jsx(Ti, { size: "lg", children: t }),
        ],
      }),
    });
  },
  v4 = () => Oe.jsx("p", { children: "Dashboard" });
var Vk = {},
  lp = { exports: {} };
/*!
 * ApexCharts v3.44.0
 * (c) 2018-2023 ApexCharts
 * Released under the MIT License.
 */ (function (e, t) {
  function r(T, n) {
    var i = Object.keys(T);
    if (Object.getOwnPropertySymbols) {
      var o = Object.getOwnPropertySymbols(T);
      n &&
        (o = o.filter(function (s) {
          return Object.getOwnPropertyDescriptor(T, s).enumerable;
        })),
        i.push.apply(i, o);
    }
    return i;
  }
  function a(T) {
    for (var n = 1; n < arguments.length; n++) {
      var i = arguments[n] != null ? arguments[n] : {};
      n % 2
        ? r(Object(i), !0).forEach(function (o) {
            b(T, o, i[o]);
          })
        : Object.getOwnPropertyDescriptors
        ? Object.defineProperties(T, Object.getOwnPropertyDescriptors(i))
        : r(Object(i)).forEach(function (o) {
            Object.defineProperty(T, o, Object.getOwnPropertyDescriptor(i, o));
          });
    }
    return T;
  }
  function c(T) {
    return (
      (c =
        typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
          ? function (n) {
              return typeof n;
            }
          : function (n) {
              return n &&
                typeof Symbol == "function" &&
                n.constructor === Symbol &&
                n !== Symbol.prototype
                ? "symbol"
                : typeof n;
            }),
      c(T)
    );
  }
  function h(T, n) {
    if (!(T instanceof n))
      throw new TypeError("Cannot call a class as a function");
  }
  function p(T, n) {
    for (var i = 0; i < n.length; i++) {
      var o = n[i];
      (o.enumerable = o.enumerable || !1),
        (o.configurable = !0),
        "value" in o && (o.writable = !0),
        Object.defineProperty(T, o.key, o);
    }
  }
  function v(T, n, i) {
    return n && p(T.prototype, n), i && p(T, i), T;
  }
  function b(T, n, i) {
    return (
      n in T
        ? Object.defineProperty(T, n, {
            value: i,
            enumerable: !0,
            configurable: !0,
            writable: !0,
          })
        : (T[n] = i),
      T
    );
  }
  function P(T, n) {
    if (typeof n != "function" && n !== null)
      throw new TypeError("Super expression must either be null or a function");
    (T.prototype = Object.create(n && n.prototype, {
      constructor: { value: T, writable: !0, configurable: !0 },
    })),
      n && R(T, n);
  }
  function k(T) {
    return (
      (k = Object.setPrototypeOf
        ? Object.getPrototypeOf
        : function (n) {
            return n.__proto__ || Object.getPrototypeOf(n);
          }),
      k(T)
    );
  }
  function R(T, n) {
    return (
      (R =
        Object.setPrototypeOf ||
        function (i, o) {
          return (i.__proto__ = o), i;
        }),
      R(T, n)
    );
  }
  function L(T, n) {
    if (n && (typeof n == "object" || typeof n == "function")) return n;
    if (n !== void 0)
      throw new TypeError(
        "Derived constructors may only return object or undefined",
      );
    return (function (i) {
      if (i === void 0)
        throw new ReferenceError(
          "this hasn't been initialised - super() hasn't been called",
        );
      return i;
    })(T);
  }
  function z(T) {
    var n = (function () {
      if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
        return !1;
      if (typeof Proxy == "function") return !0;
      try {
        return (
          Boolean.prototype.valueOf.call(
            Reflect.construct(Boolean, [], function () {}),
          ),
          !0
        );
      } catch {
        return !1;
      }
    })();
    return function () {
      var i,
        o = k(T);
      if (n) {
        var s = k(this).constructor;
        i = Reflect.construct(o, arguments, s);
      } else i = o.apply(this, arguments);
      return L(this, i);
    };
  }
  function M(T, n) {
    return (
      (function (i) {
        if (Array.isArray(i)) return i;
      })(T) ||
      (function (i, o) {
        var s =
          i == null
            ? null
            : (typeof Symbol < "u" && i[Symbol.iterator]) || i["@@iterator"];
        if (s != null) {
          var l,
            u,
            d = [],
            f = !0,
            m = !1;
          try {
            for (
              s = s.call(i);
              !(f = (l = s.next()).done) &&
              (d.push(l.value), !o || d.length !== o);
              f = !0
            );
          } catch (y) {
            (m = !0), (u = y);
          } finally {
            try {
              f || s.return == null || s.return();
            } finally {
              if (m) throw u;
            }
          }
          return d;
        }
      })(T, n) ||
      G(T, n) ||
      (function () {
        throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      })()
    );
  }
  function F(T) {
    return (
      (function (n) {
        if (Array.isArray(n)) return $(n);
      })(T) ||
      (function (n) {
        if (
          (typeof Symbol < "u" && n[Symbol.iterator] != null) ||
          n["@@iterator"] != null
        )
          return Array.from(n);
      })(T) ||
      G(T) ||
      (function () {
        throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
      })()
    );
  }
  function G(T, n) {
    if (T) {
      if (typeof T == "string") return $(T, n);
      var i = Object.prototype.toString.call(T).slice(8, -1);
      return (
        i === "Object" && T.constructor && (i = T.constructor.name),
        i === "Map" || i === "Set"
          ? Array.from(T)
          : i === "Arguments" ||
            /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(i)
          ? $(T, n)
          : void 0
      );
    }
  }
  function $(T, n) {
    (n == null || n > T.length) && (n = T.length);
    for (var i = 0, o = new Array(n); i < n; i++) o[i] = T[i];
    return o;
  }
  var O = (function () {
      function T() {
        h(this, T);
      }
      return (
        v(
          T,
          [
            {
              key: "shadeRGBColor",
              value: function (n, i) {
                var o = i.split(","),
                  s = n < 0 ? 0 : 255,
                  l = n < 0 ? -1 * n : n,
                  u = parseInt(o[0].slice(4), 10),
                  d = parseInt(o[1], 10),
                  f = parseInt(o[2], 10);
                return (
                  "rgb(" +
                  (Math.round((s - u) * l) + u) +
                  "," +
                  (Math.round((s - d) * l) + d) +
                  "," +
                  (Math.round((s - f) * l) + f) +
                  ")"
                );
              },
            },
            {
              key: "shadeHexColor",
              value: function (n, i) {
                var o = parseInt(i.slice(1), 16),
                  s = n < 0 ? 0 : 255,
                  l = n < 0 ? -1 * n : n,
                  u = o >> 16,
                  d = (o >> 8) & 255,
                  f = 255 & o;
                return (
                  "#" +
                  (
                    16777216 +
                    65536 * (Math.round((s - u) * l) + u) +
                    256 * (Math.round((s - d) * l) + d) +
                    (Math.round((s - f) * l) + f)
                  )
                    .toString(16)
                    .slice(1)
                );
              },
            },
            {
              key: "shadeColor",
              value: function (n, i) {
                return T.isColorHex(i)
                  ? this.shadeHexColor(n, i)
                  : this.shadeRGBColor(n, i);
              },
            },
          ],
          [
            {
              key: "bind",
              value: function (n, i) {
                return function () {
                  return n.apply(i, arguments);
                };
              },
            },
            {
              key: "isObject",
              value: function (n) {
                return n && c(n) === "object" && !Array.isArray(n) && n != null;
              },
            },
            {
              key: "is",
              value: function (n, i) {
                return (
                  Object.prototype.toString.call(i) === "[object " + n + "]"
                );
              },
            },
            {
              key: "listToArray",
              value: function (n) {
                var i,
                  o = [];
                for (i = 0; i < n.length; i++) o[i] = n[i];
                return o;
              },
            },
            {
              key: "extend",
              value: function (n, i) {
                var o = this;
                typeof Object.assign != "function" &&
                  (Object.assign = function (l) {
                    if (l == null)
                      throw new TypeError(
                        "Cannot convert undefined or null to object",
                      );
                    for (var u = Object(l), d = 1; d < arguments.length; d++) {
                      var f = arguments[d];
                      if (f != null)
                        for (var m in f) f.hasOwnProperty(m) && (u[m] = f[m]);
                    }
                    return u;
                  });
                var s = Object.assign({}, n);
                return (
                  this.isObject(n) &&
                    this.isObject(i) &&
                    Object.keys(i).forEach(function (l) {
                      o.isObject(i[l]) && l in n
                        ? (s[l] = o.extend(n[l], i[l]))
                        : Object.assign(s, b({}, l, i[l]));
                    }),
                  s
                );
              },
            },
            {
              key: "extendArray",
              value: function (n, i) {
                var o = [];
                return (
                  n.map(function (s) {
                    o.push(T.extend(i, s));
                  }),
                  (n = o)
                );
              },
            },
            {
              key: "monthMod",
              value: function (n) {
                return n % 12;
              },
            },
            {
              key: "clone",
              value: function (n) {
                if (T.is("Array", n)) {
                  for (var i = [], o = 0; o < n.length; o++)
                    i[o] = this.clone(n[o]);
                  return i;
                }
                if (T.is("Null", n)) return null;
                if (T.is("Date", n)) return n;
                if (c(n) === "object") {
                  var s = {};
                  for (var l in n)
                    n.hasOwnProperty(l) && (s[l] = this.clone(n[l]));
                  return s;
                }
                return n;
              },
            },
            {
              key: "log10",
              value: function (n) {
                return Math.log(n) / Math.LN10;
              },
            },
            {
              key: "roundToBase10",
              value: function (n) {
                return Math.pow(10, Math.floor(Math.log10(n)));
              },
            },
            {
              key: "roundToBase",
              value: function (n, i) {
                return Math.pow(i, Math.floor(Math.log(n) / Math.log(i)));
              },
            },
            {
              key: "parseNumber",
              value: function (n) {
                return n === null ? n : parseFloat(n);
              },
            },
            {
              key: "stripNumber",
              value: function (n) {
                var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : 2;
                return Number.isInteger(n) ? n : parseFloat(n.toPrecision(i));
              },
            },
            {
              key: "randomId",
              value: function () {
                return (Math.random() + 1).toString(36).substring(4);
              },
            },
            {
              key: "noExponents",
              value: function (n) {
                var i = String(n).split(/[eE]/);
                if (i.length === 1) return i[0];
                var o = "",
                  s = n < 0 ? "-" : "",
                  l = i[0].replace(".", ""),
                  u = Number(i[1]) + 1;
                if (u < 0) {
                  for (o = s + "0."; u++; ) o += "0";
                  return o + l.replace(/^-/, "");
                }
                for (u -= l.length; u--; ) o += "0";
                return l + o;
              },
            },
            {
              key: "getDimensions",
              value: function (n) {
                var i = getComputedStyle(n, null),
                  o = n.clientHeight,
                  s = n.clientWidth;
                return (
                  (o -= parseFloat(i.paddingTop) + parseFloat(i.paddingBottom)),
                  [
                    (s -=
                      parseFloat(i.paddingLeft) + parseFloat(i.paddingRight)),
                    o,
                  ]
                );
              },
            },
            {
              key: "getBoundingClientRect",
              value: function (n) {
                var i = n.getBoundingClientRect();
                return {
                  top: i.top,
                  right: i.right,
                  bottom: i.bottom,
                  left: i.left,
                  width: n.clientWidth,
                  height: n.clientHeight,
                  x: i.left,
                  y: i.top,
                };
              },
            },
            {
              key: "getLargestStringFromArr",
              value: function (n) {
                return n.reduce(function (i, o) {
                  return (
                    Array.isArray(o) &&
                      (o = o.reduce(function (s, l) {
                        return s.length > l.length ? s : l;
                      })),
                    i.length > o.length ? i : o
                  );
                }, 0);
              },
            },
            {
              key: "hexToRgba",
              value: function () {
                var n =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : "#999999",
                  i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0.6;
                n.substring(0, 1) !== "#" && (n = "#999999");
                var o = n.replace("#", "");
                o = o.match(new RegExp("(.{" + o.length / 3 + "})", "g"));
                for (var s = 0; s < o.length; s++)
                  o[s] = parseInt(o[s].length === 1 ? o[s] + o[s] : o[s], 16);
                return i !== void 0 && o.push(i), "rgba(" + o.join(",") + ")";
              },
            },
            {
              key: "getOpacityFromRGBA",
              value: function (n) {
                return parseFloat(n.replace(/^.*,(.+)\)/, "$1"));
              },
            },
            {
              key: "rgb2hex",
              value: function (n) {
                return (n = n.match(
                  /^rgba?[\s+]?\([\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?,[\s+]?(\d+)[\s+]?/i,
                )) && n.length === 4
                  ? "#" +
                      ("0" + parseInt(n[1], 10).toString(16)).slice(-2) +
                      ("0" + parseInt(n[2], 10).toString(16)).slice(-2) +
                      ("0" + parseInt(n[3], 10).toString(16)).slice(-2)
                  : "";
              },
            },
            {
              key: "isColorHex",
              value: function (n) {
                return /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)|(^#[0-9A-F]{8}$)/i.test(
                  n,
                );
              },
            },
            {
              key: "getPolygonPos",
              value: function (n, i) {
                for (var o = [], s = (2 * Math.PI) / i, l = 0; l < i; l++) {
                  var u = {};
                  (u.x = n * Math.sin(l * s)),
                    (u.y = -n * Math.cos(l * s)),
                    o.push(u);
                }
                return o;
              },
            },
            {
              key: "polarToCartesian",
              value: function (n, i, o, s) {
                var l = ((s - 90) * Math.PI) / 180;
                return { x: n + o * Math.cos(l), y: i + o * Math.sin(l) };
              },
            },
            {
              key: "escapeString",
              value: function (n) {
                var i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : "x",
                  o = n.toString().slice();
                return (o = o.replace(
                  /[` ~!@#$%^&*()|+\=?;:'",.<>{}[\]\\/]/gi,
                  i,
                ));
              },
            },
            {
              key: "negToZero",
              value: function (n) {
                return n < 0 ? 0 : n;
              },
            },
            {
              key: "moveIndexInArray",
              value: function (n, i, o) {
                if (o >= n.length)
                  for (var s = o - n.length + 1; s--; ) n.push(void 0);
                return n.splice(o, 0, n.splice(i, 1)[0]), n;
              },
            },
            {
              key: "extractNumber",
              value: function (n) {
                return parseFloat(n.replace(/[^\d.]*/g, ""));
              },
            },
            {
              key: "findAncestor",
              value: function (n, i) {
                for (; (n = n.parentElement) && !n.classList.contains(i); );
                return n;
              },
            },
            {
              key: "setELstyles",
              value: function (n, i) {
                for (var o in i) i.hasOwnProperty(o) && (n.style.key = i[o]);
              },
            },
            {
              key: "isNumber",
              value: function (n) {
                return (
                  !isNaN(n) &&
                  parseFloat(Number(n)) === n &&
                  !isNaN(parseInt(n, 10))
                );
              },
            },
            {
              key: "isFloat",
              value: function (n) {
                return Number(n) === n && n % 1 != 0;
              },
            },
            {
              key: "isSafari",
              value: function () {
                return /^((?!chrome|android).)*safari/i.test(
                  navigator.userAgent,
                );
              },
            },
            {
              key: "isFirefox",
              value: function () {
                return (
                  navigator.userAgent.toLowerCase().indexOf("firefox") > -1
                );
              },
            },
            {
              key: "isIE11",
              value: function () {
                if (
                  window.navigator.userAgent.indexOf("MSIE") !== -1 ||
                  window.navigator.appVersion.indexOf("Trident/") > -1
                )
                  return !0;
              },
            },
            {
              key: "isIE",
              value: function () {
                var n = window.navigator.userAgent,
                  i = n.indexOf("MSIE ");
                if (i > 0)
                  return parseInt(n.substring(i + 5, n.indexOf(".", i)), 10);
                if (n.indexOf("Trident/") > 0) {
                  var o = n.indexOf("rv:");
                  return parseInt(n.substring(o + 3, n.indexOf(".", o)), 10);
                }
                var s = n.indexOf("Edge/");
                return (
                  s > 0 && parseInt(n.substring(s + 5, n.indexOf(".", s)), 10)
                );
              },
            },
          ],
        ),
        T
      );
    })(),
    X = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w), this.setEasingFunctions();
      }
      return (
        v(T, [
          {
            key: "setEasingFunctions",
            value: function () {
              var n;
              if (!this.w.globals.easing) {
                switch (this.w.config.chart.animations.easing) {
                  case "linear":
                    n = "-";
                    break;
                  case "easein":
                    n = "<";
                    break;
                  case "easeout":
                    n = ">";
                    break;
                  case "easeinout":
                  default:
                    n = "<>";
                    break;
                  case "swing":
                    n = function (i) {
                      var o = 1.70158;
                      return (i -= 1) * i * ((o + 1) * i + o) + 1;
                    };
                    break;
                  case "bounce":
                    n = function (i) {
                      return i < 1 / 2.75
                        ? 7.5625 * i * i
                        : i < 2 / 2.75
                        ? 7.5625 * (i -= 1.5 / 2.75) * i + 0.75
                        : i < 2.5 / 2.75
                        ? 7.5625 * (i -= 2.25 / 2.75) * i + 0.9375
                        : 7.5625 * (i -= 2.625 / 2.75) * i + 0.984375;
                    };
                    break;
                  case "elastic":
                    n = function (i) {
                      return i === !!i
                        ? i
                        : Math.pow(2, -10 * i) *
                            Math.sin(((i - 0.075) * (2 * Math.PI)) / 0.3) +
                            1;
                    };
                }
                this.w.globals.easing = n;
              }
            },
          },
          {
            key: "animateLine",
            value: function (n, i, o, s) {
              n.attr(i).animate(s).attr(o);
            },
          },
          {
            key: "animateMarker",
            value: function (n, i, o, s, l, u) {
              i || (i = 0),
                n
                  .attr({ r: i, width: i, height: i })
                  .animate(s, l)
                  .attr({ r: o, width: o.width, height: o.height })
                  .afterAll(function () {
                    u();
                  });
            },
          },
          {
            key: "animateCircle",
            value: function (n, i, o, s, l) {
              n.attr({ r: i.r, cx: i.cx, cy: i.cy })
                .animate(s, l)
                .attr({ r: o.r, cx: o.cx, cy: o.cy });
            },
          },
          {
            key: "animateRect",
            value: function (n, i, o, s, l) {
              n.attr(i)
                .animate(s)
                .attr(o)
                .afterAll(function () {
                  return l();
                });
            },
          },
          {
            key: "animatePathsGradually",
            value: function (n) {
              var i = n.el,
                o = n.realIndex,
                s = n.j,
                l = n.fill,
                u = n.pathFrom,
                d = n.pathTo,
                f = n.speed,
                m = n.delay,
                y = this.w,
                x = 0;
              y.config.chart.animations.animateGradually.enabled &&
                (x = y.config.chart.animations.animateGradually.delay),
                y.config.chart.animations.dynamicAnimation.enabled &&
                  y.globals.dataChanged &&
                  y.config.chart.type !== "bar" &&
                  (x = 0),
                this.morphSVG(
                  i,
                  o,
                  s,
                  y.config.chart.type !== "line" || y.globals.comboCharts
                    ? l
                    : "stroke",
                  u,
                  d,
                  f,
                  m * x,
                );
            },
          },
          {
            key: "showDelayedElements",
            value: function () {
              this.w.globals.delayedElements.forEach(function (n) {
                var i = n.el;
                i.classList.remove("apexcharts-element-hidden"),
                  i.classList.add("apexcharts-hidden-element-shown");
              });
            },
          },
          {
            key: "animationCompleted",
            value: function (n) {
              var i = this.w;
              i.globals.animationEnded ||
                ((i.globals.animationEnded = !0),
                this.showDelayedElements(),
                typeof i.config.chart.events.animationEnd == "function" &&
                  i.config.chart.events.animationEnd(this.ctx, {
                    el: n,
                    w: i,
                  }));
            },
          },
          {
            key: "morphSVG",
            value: function (n, i, o, s, l, u, d, f) {
              var m = this,
                y = this.w;
              l || (l = n.attr("pathFrom")), u || (u = n.attr("pathTo"));
              var x = function (S) {
                return (
                  y.config.chart.type === "radar" && (d = 1),
                  "M 0 ".concat(y.globals.gridHeight)
                );
              };
              (!l || l.indexOf("undefined") > -1 || l.indexOf("NaN") > -1) &&
                (l = x()),
                (!u || u.indexOf("undefined") > -1 || u.indexOf("NaN") > -1) &&
                  (u = x()),
                y.globals.shouldAnimate || (d = 1),
                n
                  .plot(l)
                  .animate(1, y.globals.easing, f)
                  .plot(l)
                  .animate(d, y.globals.easing, f)
                  .plot(u)
                  .afterAll(function () {
                    O.isNumber(o)
                      ? o ===
                          y.globals.series[y.globals.maxValsInArrayIndex]
                            .length -
                            2 &&
                        y.globals.shouldAnimate &&
                        m.animationCompleted(n)
                      : s !== "none" &&
                        y.globals.shouldAnimate &&
                        ((!y.globals.comboCharts &&
                          i === y.globals.series.length - 1) ||
                          y.globals.comboCharts) &&
                        m.animationCompleted(n),
                      m.showDelayedElements();
                  });
            },
          },
        ]),
        T
      );
    })(),
    N = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "getDefaultFilter",
            value: function (n, i) {
              var o = this.w;
              n.unfilter(!0),
                new window.SVG.Filter().size("120%", "180%", "-5%", "-40%"),
                o.config.states.normal.filter !== "none"
                  ? this.applyFilter(
                      n,
                      i,
                      o.config.states.normal.filter.type,
                      o.config.states.normal.filter.value,
                    )
                  : o.config.chart.dropShadow.enabled &&
                    this.dropShadow(n, o.config.chart.dropShadow, i);
            },
          },
          {
            key: "addNormalFilter",
            value: function (n, i) {
              var o = this.w;
              o.config.chart.dropShadow.enabled &&
                !n.node.classList.contains("apexcharts-marker") &&
                this.dropShadow(n, o.config.chart.dropShadow, i);
            },
          },
          {
            key: "addLightenFilter",
            value: function (n, i, o) {
              var s = this,
                l = this.w,
                u = o.intensity;
              n.unfilter(!0),
                new window.SVG.Filter(),
                n.filter(function (d) {
                  var f = l.config.chart.dropShadow;
                  (f.enabled ? s.addShadow(d, i, f) : d).componentTransfer({
                    rgb: { type: "linear", slope: 1.5, intercept: u },
                  });
                }),
                n.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                this._scaleFilterSize(n.filterer.node);
            },
          },
          {
            key: "addDarkenFilter",
            value: function (n, i, o) {
              var s = this,
                l = this.w,
                u = o.intensity;
              n.unfilter(!0),
                new window.SVG.Filter(),
                n.filter(function (d) {
                  var f = l.config.chart.dropShadow;
                  (f.enabled ? s.addShadow(d, i, f) : d).componentTransfer({
                    rgb: { type: "linear", slope: u },
                  });
                }),
                n.filterer.node.setAttribute("filterUnits", "userSpaceOnUse"),
                this._scaleFilterSize(n.filterer.node);
            },
          },
          {
            key: "applyFilter",
            value: function (n, i, o) {
              var s =
                arguments.length > 3 && arguments[3] !== void 0
                  ? arguments[3]
                  : 0.5;
              switch (o) {
                case "none":
                  this.addNormalFilter(n, i);
                  break;
                case "lighten":
                  this.addLightenFilter(n, i, { intensity: s });
                  break;
                case "darken":
                  this.addDarkenFilter(n, i, { intensity: s });
              }
            },
          },
          {
            key: "addShadow",
            value: function (n, i, o) {
              var s = o.blur,
                l = o.top,
                u = o.left,
                d = o.color,
                f = o.opacity,
                m = n
                  .flood(Array.isArray(d) ? d[i] : d, f)
                  .composite(n.sourceAlpha, "in")
                  .offset(u, l)
                  .gaussianBlur(s)
                  .merge(n.source);
              return n.blend(n.source, m);
            },
          },
          {
            key: "dropShadow",
            value: function (n, i) {
              var o =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 0,
                s = i.top,
                l = i.left,
                u = i.blur,
                d = i.color,
                f = i.opacity,
                m = i.noUserSpaceOnUse,
                y = this.w;
              return (
                n.unfilter(!0),
                (O.isIE() && y.config.chart.type === "radialBar") ||
                  ((d = Array.isArray(d) ? d[o] : d),
                  n.filter(function (x) {
                    var S = null;
                    (S =
                      O.isSafari() || O.isFirefox() || O.isIE()
                        ? x
                            .flood(d, f)
                            .composite(x.sourceAlpha, "in")
                            .offset(l, s)
                            .gaussianBlur(u)
                        : x
                            .flood(d, f)
                            .composite(x.sourceAlpha, "in")
                            .offset(l, s)
                            .gaussianBlur(u)
                            .merge(x.source)),
                      x.blend(x.source, S);
                  }),
                  m ||
                    n.filterer.node.setAttribute(
                      "filterUnits",
                      "userSpaceOnUse",
                    ),
                  this._scaleFilterSize(n.filterer.node)),
                n
              );
            },
          },
          {
            key: "setSelectionFilter",
            value: function (n, i, o) {
              var s = this.w;
              if (
                s.globals.selectedDataPoints[i] !== void 0 &&
                s.globals.selectedDataPoints[i].indexOf(o) > -1
              ) {
                n.node.setAttribute("selected", !0);
                var l = s.config.states.active.filter;
                l !== "none" && this.applyFilter(n, i, l.type, l.value);
              }
            },
          },
          {
            key: "_scaleFilterSize",
            value: function (n) {
              (function (i) {
                for (var o in i) i.hasOwnProperty(o) && n.setAttribute(o, i[o]);
              })({ width: "200%", height: "200%", x: "-50%", y: "-50%" });
            },
          },
        ]),
        T
      );
    })(),
    B = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(
          T,
          [
            {
              key: "roundPathCorners",
              value: function (n, i) {
                function o(V, K, Z) {
                  var re = K.x - V.x,
                    ce = K.y - V.y,
                    se = Math.sqrt(re * re + ce * ce);
                  return s(V, K, Math.min(1, Z / se));
                }
                function s(V, K, Z) {
                  return { x: V.x + (K.x - V.x) * Z, y: V.y + (K.y - V.y) * Z };
                }
                function l(V, K) {
                  V.length > 2 &&
                    ((V[V.length - 2] = K.x), (V[V.length - 1] = K.y));
                }
                function u(V) {
                  return {
                    x: parseFloat(V[V.length - 2]),
                    y: parseFloat(V[V.length - 1]),
                  };
                }
                n.indexOf("NaN") > -1 && (n = "");
                var d = n
                    .split(/[,\s]/)
                    .reduce(function (V, K) {
                      var Z = K.match("([a-zA-Z])(.+)");
                      return Z ? (V.push(Z[1]), V.push(Z[2])) : V.push(K), V;
                    }, [])
                    .reduce(function (V, K) {
                      return (
                        parseFloat(K) == K && V.length
                          ? V[V.length - 1].push(K)
                          : V.push([K]),
                        V
                      );
                    }, []),
                  f = [];
                if (d.length > 1) {
                  var m = u(d[0]),
                    y = null;
                  d[d.length - 1][0] == "Z" &&
                    d[0].length > 2 &&
                    ((y = ["L", m.x, m.y]), (d[d.length - 1] = y)),
                    f.push(d[0]);
                  for (var x = 1; x < d.length; x++) {
                    var S = f[f.length - 1],
                      _ = d[x],
                      C = _ == y ? d[1] : d[x + 1];
                    if (
                      C &&
                      S &&
                      S.length > 2 &&
                      _[0] == "L" &&
                      C.length > 2 &&
                      C[0] == "L"
                    ) {
                      var E,
                        I,
                        H = u(S),
                        Y = u(_),
                        g = u(C);
                      (E = o(Y, H, i)),
                        (I = o(Y, g, i)),
                        l(_, E),
                        (_.origPoint = Y),
                        f.push(_);
                      var w = s(E, Y, 0.5),
                        A = s(Y, I, 0.5),
                        D = ["C", w.x, w.y, A.x, A.y, I.x, I.y];
                      (D.origPoint = Y), f.push(D);
                    } else f.push(_);
                  }
                  if (y) {
                    var W = u(f[f.length - 1]);
                    f.push(["Z"]), l(f[0], W);
                  }
                } else f = d;
                return f.reduce(function (V, K) {
                  return V + K.join(" ") + " ";
                }, "");
              },
            },
            {
              key: "drawLine",
              value: function (n, i, o, s) {
                var l =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : "#a8a8a8",
                  u =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : 0,
                  d =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : null,
                  f =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : "butt";
                return this.w.globals.dom.Paper.line().attr({
                  x1: n,
                  y1: i,
                  x2: o,
                  y2: s,
                  stroke: l,
                  "stroke-dasharray": u,
                  "stroke-width": d,
                  "stroke-linecap": f,
                });
              },
            },
            {
              key: "drawRect",
              value: function () {
                var n =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : 0,
                  i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : 0,
                  o =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 0,
                  s =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : 0,
                  l =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : 0,
                  u =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : "#fefefe",
                  d =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : 1,
                  f =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : null,
                  m =
                    arguments.length > 8 && arguments[8] !== void 0
                      ? arguments[8]
                      : null,
                  y =
                    arguments.length > 9 && arguments[9] !== void 0
                      ? arguments[9]
                      : 0,
                  x = this.w.globals.dom.Paper.rect();
                return (
                  x.attr({
                    x: n,
                    y: i,
                    width: o > 0 ? o : 0,
                    height: s > 0 ? s : 0,
                    rx: l,
                    ry: l,
                    opacity: d,
                    "stroke-width": f !== null ? f : 0,
                    stroke: m !== null ? m : "none",
                    "stroke-dasharray": y,
                  }),
                  x.node.setAttribute("fill", u),
                  x
                );
              },
            },
            {
              key: "drawPolygon",
              value: function (n) {
                var i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : "#e1e1e1",
                  o =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : 1,
                  s =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : "none";
                return this.w.globals.dom.Paper.polygon(n).attr({
                  fill: s,
                  stroke: i,
                  "stroke-width": o,
                });
              },
            },
            {
              key: "drawCircle",
              value: function (n) {
                var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null;
                n < 0 && (n = 0);
                var o = this.w.globals.dom.Paper.circle(2 * n);
                return i !== null && o.attr(i), o;
              },
            },
            {
              key: "drawPath",
              value: function (n) {
                var i = n.d,
                  o = i === void 0 ? "" : i,
                  s = n.stroke,
                  l = s === void 0 ? "#a8a8a8" : s,
                  u = n.strokeWidth,
                  d = u === void 0 ? 1 : u,
                  f = n.fill,
                  m = n.fillOpacity,
                  y = m === void 0 ? 1 : m,
                  x = n.strokeOpacity,
                  S = x === void 0 ? 1 : x,
                  _ = n.classes,
                  C = n.strokeLinecap,
                  E = C === void 0 ? null : C,
                  I = n.strokeDashArray,
                  H = I === void 0 ? 0 : I,
                  Y = this.w;
                return (
                  E === null && (E = Y.config.stroke.lineCap),
                  (o.indexOf("undefined") > -1 || o.indexOf("NaN") > -1) &&
                    (o = "M 0 ".concat(Y.globals.gridHeight)),
                  Y.globals.dom.Paper.path(o).attr({
                    fill: f,
                    "fill-opacity": y,
                    stroke: l,
                    "stroke-opacity": S,
                    "stroke-linecap": E,
                    "stroke-width": d,
                    "stroke-dasharray": H,
                    class: _,
                  })
                );
              },
            },
            {
              key: "group",
              value: function () {
                var n =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  i = this.w.globals.dom.Paper.group();
                return n !== null && i.attr(n), i;
              },
            },
            {
              key: "move",
              value: function (n, i) {
                var o = ["M", n, i].join(" ");
                return o;
              },
            },
            {
              key: "line",
              value: function (n, i) {
                var o =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : null,
                  s = null;
                return (
                  o === null
                    ? (s = [" L", n, i].join(" "))
                    : o === "H"
                    ? (s = [" H", n].join(" "))
                    : o === "V" && (s = [" V", i].join(" ")),
                  s
                );
              },
            },
            {
              key: "curve",
              value: function (n, i, o, s, l, u) {
                var d = ["C", n, i, o, s, l, u].join(" ");
                return d;
              },
            },
            {
              key: "quadraticCurve",
              value: function (n, i, o, s) {
                return ["Q", n, i, o, s].join(" ");
              },
            },
            {
              key: "arc",
              value: function (n, i, o, s, l, u, d) {
                var f = "A";
                arguments.length > 7 &&
                  arguments[7] !== void 0 &&
                  arguments[7] &&
                  (f = "a");
                var m = [f, n, i, o, s, l, u, d].join(" ");
                return m;
              },
            },
            {
              key: "renderPaths",
              value: function (n) {
                var i,
                  o = n.j,
                  s = n.realIndex,
                  l = n.pathFrom,
                  u = n.pathTo,
                  d = n.stroke,
                  f = n.strokeWidth,
                  m = n.strokeLinecap,
                  y = n.fill,
                  x = n.animationDelay,
                  S = n.initialSpeed,
                  _ = n.dataChangeSpeed,
                  C = n.className,
                  E = n.shouldClipToGrid,
                  I = E === void 0 || E,
                  H = n.bindEventsOnPaths,
                  Y = H === void 0 || H,
                  g = n.drawShadow,
                  w = g === void 0 || g,
                  A = this.w,
                  D = new N(this.ctx),
                  W = new X(this.ctx),
                  V = this.w.config.chart.animations.enabled,
                  K =
                    V &&
                    this.w.config.chart.animations.dynamicAnimation.enabled,
                  Z = !!(
                    (V && !A.globals.resized) ||
                    (K && A.globals.dataChanged && A.globals.shouldAnimate)
                  );
                Z ? (i = l) : ((i = u), (A.globals.animationEnded = !0));
                var re = A.config.stroke.dashArray,
                  ce = 0;
                ce = Array.isArray(re) ? re[s] : A.config.stroke.dashArray;
                var se = this.drawPath({
                  d: i,
                  stroke: d,
                  strokeWidth: f,
                  fill: y,
                  fillOpacity: 1,
                  classes: C,
                  strokeLinecap: m,
                  strokeDashArray: ce,
                });
                if (
                  (se.attr("index", s),
                  I &&
                    se.attr({
                      "clip-path": "url(#gridRectMask".concat(
                        A.globals.cuid,
                        ")",
                      ),
                    }),
                  A.config.states.normal.filter.type !== "none")
                )
                  D.getDefaultFilter(se, s);
                else if (
                  A.config.chart.dropShadow.enabled &&
                  w &&
                  (!A.config.chart.dropShadow.enabledOnSeries ||
                    (A.config.chart.dropShadow.enabledOnSeries &&
                      A.config.chart.dropShadow.enabledOnSeries.indexOf(s) !==
                        -1))
                ) {
                  var xe = A.config.chart.dropShadow;
                  D.dropShadow(se, xe, s);
                }
                Y &&
                  (se.node.addEventListener(
                    "mouseenter",
                    this.pathMouseEnter.bind(this, se),
                  ),
                  se.node.addEventListener(
                    "mouseleave",
                    this.pathMouseLeave.bind(this, se),
                  ),
                  se.node.addEventListener(
                    "mousedown",
                    this.pathMouseDown.bind(this, se),
                  )),
                  se.attr({ pathTo: u, pathFrom: l });
                var be = {
                  el: se,
                  j: o,
                  realIndex: s,
                  pathFrom: l,
                  pathTo: u,
                  fill: y,
                  strokeWidth: f,
                  delay: x,
                };
                return (
                  !V || A.globals.resized || A.globals.dataChanged
                    ? (!A.globals.resized && A.globals.dataChanged) ||
                      W.showDelayedElements()
                    : W.animatePathsGradually(a(a({}, be), {}, { speed: S })),
                  A.globals.dataChanged &&
                    K &&
                    Z &&
                    W.animatePathsGradually(a(a({}, be), {}, { speed: _ })),
                  se
                );
              },
            },
            {
              key: "drawPattern",
              value: function (n, i, o) {
                var s =
                    arguments.length > 3 && arguments[3] !== void 0
                      ? arguments[3]
                      : "#a8a8a8",
                  l =
                    arguments.length > 4 && arguments[4] !== void 0
                      ? arguments[4]
                      : 0;
                return this.w.globals.dom.Paper.pattern(i, o, function (u) {
                  n === "horizontalLines"
                    ? u.line(0, 0, o, 0).stroke({ color: s, width: l + 1 })
                    : n === "verticalLines"
                    ? u.line(0, 0, 0, i).stroke({ color: s, width: l + 1 })
                    : n === "slantedLines"
                    ? u.line(0, 0, i, o).stroke({ color: s, width: l })
                    : n === "squares"
                    ? u.rect(i, o).fill("none").stroke({ color: s, width: l })
                    : n === "circles" &&
                      u.circle(i).fill("none").stroke({ color: s, width: l });
                });
              },
            },
            {
              key: "drawGradient",
              value: function (n, i, o, s, l) {
                var u,
                  d =
                    arguments.length > 5 && arguments[5] !== void 0
                      ? arguments[5]
                      : null,
                  f =
                    arguments.length > 6 && arguments[6] !== void 0
                      ? arguments[6]
                      : null,
                  m =
                    arguments.length > 7 && arguments[7] !== void 0
                      ? arguments[7]
                      : null,
                  y =
                    arguments.length > 8 && arguments[8] !== void 0
                      ? arguments[8]
                      : 0,
                  x = this.w;
                i.length < 9 && i.indexOf("#") === 0 && (i = O.hexToRgba(i, s)),
                  o.length < 9 &&
                    o.indexOf("#") === 0 &&
                    (o = O.hexToRgba(o, l));
                var S = 0,
                  _ = 1,
                  C = 1,
                  E = null;
                f !== null &&
                  ((S = f[0] !== void 0 ? f[0] / 100 : 0),
                  (_ = f[1] !== void 0 ? f[1] / 100 : 1),
                  (C = f[2] !== void 0 ? f[2] / 100 : 1),
                  (E = f[3] !== void 0 ? f[3] / 100 : null));
                var I = !(
                  x.config.chart.type !== "donut" &&
                  x.config.chart.type !== "pie" &&
                  x.config.chart.type !== "polarArea" &&
                  x.config.chart.type !== "bubble"
                );
                if (
                  ((u =
                    m === null || m.length === 0
                      ? x.globals.dom.Paper.gradient(
                          I ? "radial" : "linear",
                          function (g) {
                            g.at(S, i, s),
                              g.at(_, o, l),
                              g.at(C, o, l),
                              E !== null && g.at(E, i, s);
                          },
                        )
                      : x.globals.dom.Paper.gradient(
                          I ? "radial" : "linear",
                          function (g) {
                            (Array.isArray(m[y]) ? m[y] : m).forEach(
                              function (w) {
                                g.at(w.offset / 100, w.color, w.opacity);
                              },
                            );
                          },
                        )),
                  I)
                ) {
                  var H = x.globals.gridWidth / 2,
                    Y = x.globals.gridHeight / 2;
                  x.config.chart.type !== "bubble"
                    ? u.attr({
                        gradientUnits: "userSpaceOnUse",
                        cx: H,
                        cy: Y,
                        r: d,
                      })
                    : u.attr({ cx: 0.5, cy: 0.5, r: 0.8, fx: 0.2, fy: 0.2 });
                } else
                  n === "vertical"
                    ? u.from(0, 0).to(0, 1)
                    : n === "diagonal"
                    ? u.from(0, 0).to(1, 1)
                    : n === "horizontal"
                    ? u.from(0, 1).to(1, 1)
                    : n === "diagonal2" && u.from(1, 0).to(0, 1);
                return u;
              },
            },
            {
              key: "getTextBasedOnMaxWidth",
              value: function (n) {
                var i = n.text,
                  o = n.maxWidth,
                  s = n.fontSize,
                  l = n.fontFamily,
                  u = this.getTextRects(i, s, l),
                  d = u.width / i.length,
                  f = Math.floor(o / d);
                return o < u.width ? i.slice(0, f - 3) + "..." : i;
              },
            },
            {
              key: "drawText",
              value: function (n) {
                var i = this,
                  o = n.x,
                  s = n.y,
                  l = n.text,
                  u = n.textAnchor,
                  d = n.fontSize,
                  f = n.fontFamily,
                  m = n.fontWeight,
                  y = n.foreColor,
                  x = n.opacity,
                  S = n.maxWidth,
                  _ = n.cssClass,
                  C = _ === void 0 ? "" : _,
                  E = n.isPlainText,
                  I = E === void 0 || E,
                  H = this.w;
                l === void 0 && (l = "");
                var Y = l;
                u || (u = "start"),
                  (y && y.length) || (y = H.config.chart.foreColor),
                  (f = f || H.config.chart.fontFamily),
                  (m = m || "regular");
                var g,
                  w = {
                    maxWidth: S,
                    fontSize: (d = d || "11px"),
                    fontFamily: f,
                  };
                return (
                  Array.isArray(l)
                    ? (g = H.globals.dom.Paper.text(function (A) {
                        for (var D = 0; D < l.length; D++)
                          (Y = l[D]),
                            S &&
                              (Y = i.getTextBasedOnMaxWidth(
                                a({ text: l[D] }, w),
                              )),
                            D === 0 ? A.tspan(Y) : A.tspan(Y).newLine();
                      }))
                    : (S &&
                        (Y = this.getTextBasedOnMaxWidth(a({ text: l }, w))),
                      (g = I
                        ? H.globals.dom.Paper.plain(l)
                        : H.globals.dom.Paper.text(function (A) {
                            return A.tspan(Y);
                          }))),
                  g.attr({
                    x: o,
                    y: s,
                    "text-anchor": u,
                    "dominant-baseline": "auto",
                    "font-size": d,
                    "font-family": f,
                    "font-weight": m,
                    fill: y,
                    class: "apexcharts-text " + C,
                  }),
                  (g.node.style.fontFamily = f),
                  (g.node.style.opacity = x),
                  g
                );
              },
            },
            {
              key: "drawMarker",
              value: function (n, i, o) {
                n = n || 0;
                var s = o.pSize || 0,
                  l = null;
                if (o.shape === "square" || o.shape === "rect") {
                  var u = o.pRadius === void 0 ? s / 2 : o.pRadius;
                  (i !== null && s) || ((s = 0), (u = 0));
                  var d = 1.2 * s + u,
                    f = this.drawRect(d, d, d, d, u);
                  f.attr({
                    x: n - d / 2,
                    y: i - d / 2,
                    cx: n,
                    cy: i,
                    class: o.class ? o.class : "",
                    fill: o.pointFillColor,
                    "fill-opacity": o.pointFillOpacity ? o.pointFillOpacity : 1,
                    stroke: o.pointStrokeColor,
                    "stroke-width": o.pointStrokeWidth ? o.pointStrokeWidth : 0,
                    "stroke-opacity": o.pointStrokeOpacity
                      ? o.pointStrokeOpacity
                      : 1,
                  }),
                    (l = f);
                } else
                  (o.shape !== "circle" && o.shape) ||
                    (O.isNumber(i) || ((s = 0), (i = 0)),
                    (l = this.drawCircle(s, {
                      cx: n,
                      cy: i,
                      class: o.class ? o.class : "",
                      stroke: o.pointStrokeColor,
                      fill: o.pointFillColor,
                      "fill-opacity": o.pointFillOpacity
                        ? o.pointFillOpacity
                        : 1,
                      "stroke-width": o.pointStrokeWidth
                        ? o.pointStrokeWidth
                        : 0,
                      "stroke-opacity": o.pointStrokeOpacity
                        ? o.pointStrokeOpacity
                        : 1,
                    })));
                return l;
              },
            },
            {
              key: "pathMouseEnter",
              value: function (n, i) {
                var o = this.w,
                  s = new N(this.ctx),
                  l = parseInt(n.node.getAttribute("index"), 10),
                  u = parseInt(n.node.getAttribute("j"), 10);
                if (
                  (typeof o.config.chart.events.dataPointMouseEnter ==
                    "function" &&
                    o.config.chart.events.dataPointMouseEnter(i, this.ctx, {
                      seriesIndex: l,
                      dataPointIndex: u,
                      w: o,
                    }),
                  this.ctx.events.fireEvent("dataPointMouseEnter", [
                    i,
                    this.ctx,
                    { seriesIndex: l, dataPointIndex: u, w: o },
                  ]),
                  (o.config.states.active.filter.type === "none" ||
                    n.node.getAttribute("selected") !== "true") &&
                    o.config.states.hover.filter.type !== "none" &&
                    !o.globals.isTouchDevice)
                ) {
                  var d = o.config.states.hover.filter;
                  s.applyFilter(n, l, d.type, d.value);
                }
              },
            },
            {
              key: "pathMouseLeave",
              value: function (n, i) {
                var o = this.w,
                  s = new N(this.ctx),
                  l = parseInt(n.node.getAttribute("index"), 10),
                  u = parseInt(n.node.getAttribute("j"), 10);
                typeof o.config.chart.events.dataPointMouseLeave ==
                  "function" &&
                  o.config.chart.events.dataPointMouseLeave(i, this.ctx, {
                    seriesIndex: l,
                    dataPointIndex: u,
                    w: o,
                  }),
                  this.ctx.events.fireEvent("dataPointMouseLeave", [
                    i,
                    this.ctx,
                    { seriesIndex: l, dataPointIndex: u, w: o },
                  ]),
                  (o.config.states.active.filter.type !== "none" &&
                    n.node.getAttribute("selected") === "true") ||
                    (o.config.states.hover.filter.type !== "none" &&
                      s.getDefaultFilter(n, l));
              },
            },
            {
              key: "pathMouseDown",
              value: function (n, i) {
                var o = this.w,
                  s = new N(this.ctx),
                  l = parseInt(n.node.getAttribute("index"), 10),
                  u = parseInt(n.node.getAttribute("j"), 10),
                  d = "false";
                if (n.node.getAttribute("selected") === "true") {
                  if (
                    (n.node.setAttribute("selected", "false"),
                    o.globals.selectedDataPoints[l].indexOf(u) > -1)
                  ) {
                    var f = o.globals.selectedDataPoints[l].indexOf(u);
                    o.globals.selectedDataPoints[l].splice(f, 1);
                  }
                } else {
                  if (
                    !o.config.states.active.allowMultipleDataPointsSelection &&
                    o.globals.selectedDataPoints.length > 0
                  ) {
                    o.globals.selectedDataPoints = [];
                    var m = o.globals.dom.Paper.select(
                        ".apexcharts-series path",
                      ).members,
                      y = o.globals.dom.Paper.select(
                        ".apexcharts-series circle, .apexcharts-series rect",
                      ).members,
                      x = function (C) {
                        Array.prototype.forEach.call(C, function (E) {
                          E.node.setAttribute("selected", "false"),
                            s.getDefaultFilter(E, l);
                        });
                      };
                    x(m), x(y);
                  }
                  n.node.setAttribute("selected", "true"),
                    (d = "true"),
                    o.globals.selectedDataPoints[l] === void 0 &&
                      (o.globals.selectedDataPoints[l] = []),
                    o.globals.selectedDataPoints[l].push(u);
                }
                if (d === "true") {
                  var S = o.config.states.active.filter;
                  if (S !== "none") s.applyFilter(n, l, S.type, S.value);
                  else if (
                    o.config.states.hover.filter !== "none" &&
                    !o.globals.isTouchDevice
                  ) {
                    var _ = o.config.states.hover.filter;
                    s.applyFilter(n, l, _.type, _.value);
                  }
                } else
                  o.config.states.active.filter.type !== "none" &&
                    (o.config.states.hover.filter.type === "none" ||
                    o.globals.isTouchDevice
                      ? s.getDefaultFilter(n, l)
                      : ((_ = o.config.states.hover.filter),
                        s.applyFilter(n, l, _.type, _.value)));
                typeof o.config.chart.events.dataPointSelection == "function" &&
                  o.config.chart.events.dataPointSelection(i, this.ctx, {
                    selectedDataPoints: o.globals.selectedDataPoints,
                    seriesIndex: l,
                    dataPointIndex: u,
                    w: o,
                  }),
                  i &&
                    this.ctx.events.fireEvent("dataPointSelection", [
                      i,
                      this.ctx,
                      {
                        selectedDataPoints: o.globals.selectedDataPoints,
                        seriesIndex: l,
                        dataPointIndex: u,
                        w: o,
                      },
                    ]);
              },
            },
            {
              key: "rotateAroundCenter",
              value: function (n) {
                var i = {};
                return (
                  n && typeof n.getBBox == "function" && (i = n.getBBox()),
                  { x: i.x + i.width / 2, y: i.y + i.height / 2 }
                );
              },
            },
            {
              key: "getTextRects",
              value: function (n, i, o, s) {
                var l =
                    !(arguments.length > 4 && arguments[4] !== void 0) ||
                    arguments[4],
                  u = this.w,
                  d = this.drawText({
                    x: -200,
                    y: -200,
                    text: n,
                    textAnchor: "start",
                    fontSize: i,
                    fontFamily: o,
                    foreColor: "#fff",
                    opacity: 0,
                  });
                s && d.attr("transform", s), u.globals.dom.Paper.add(d);
                var f = d.bbox();
                return (
                  l || (f = d.node.getBoundingClientRect()),
                  d.remove(),
                  { width: f.width, height: f.height }
                );
              },
            },
            {
              key: "placeTextWithEllipsis",
              value: function (n, i, o) {
                if (
                  typeof n.getComputedTextLength == "function" &&
                  ((n.textContent = i),
                  i.length > 0 && n.getComputedTextLength() >= o / 1.1)
                ) {
                  for (var s = i.length - 3; s > 0; s -= 3)
                    if (n.getSubStringLength(0, s) <= o / 1.1)
                      return void (n.textContent = i.substring(0, s) + "...");
                  n.textContent = ".";
                }
              },
            },
          ],
          [
            {
              key: "setAttrs",
              value: function (n, i) {
                for (var o in i) i.hasOwnProperty(o) && n.setAttribute(o, i[o]);
              },
            },
          ],
        ),
        T
      );
    })(),
    U = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(
          T,
          [
            {
              key: "getStackedSeriesTotals",
              value: function () {
                var n =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  i = this.w,
                  o = [];
                if (i.globals.series.length === 0) return o;
                for (
                  var s = 0;
                  s < i.globals.series[i.globals.maxValsInArrayIndex].length;
                  s++
                ) {
                  for (var l = 0, u = 0; u < i.globals.series.length; u++)
                    i.globals.series[u][s] !== void 0 &&
                      n.indexOf(u) === -1 &&
                      (l += i.globals.series[u][s]);
                  o.push(l);
                }
                return o;
              },
            },
            {
              key: "getSeriesTotalByIndex",
              value: function () {
                var n =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null;
                return n === null
                  ? this.w.config.series.reduce(function (i, o) {
                      return i + o;
                    }, 0)
                  : this.w.globals.series[n].reduce(function (i, o) {
                      return i + o;
                    }, 0);
              },
            },
            {
              key: "isSeriesNull",
              value: function () {
                var n =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null;
                return (
                  (n === null
                    ? this.w.config.series.filter(function (i) {
                        return i !== null;
                      })
                    : this.w.config.series[n].data.filter(function (i) {
                        return i !== null;
                      })
                  ).length === 0
                );
              },
            },
            {
              key: "seriesHaveSameValues",
              value: function (n) {
                return this.w.globals.series[n].every(function (i, o, s) {
                  return i === s[0];
                });
              },
            },
            {
              key: "getCategoryLabels",
              value: function (n) {
                var i = this.w,
                  o = n.slice();
                return (
                  i.config.xaxis.convertedCatToNumeric &&
                    (o = n.map(function (s, l) {
                      return i.config.xaxis.labels.formatter(
                        s - i.globals.minX + 1,
                      );
                    })),
                  o
                );
              },
            },
            {
              key: "getLargestSeries",
              value: function () {
                var n = this.w;
                n.globals.maxValsInArrayIndex = n.globals.series
                  .map(function (i) {
                    return i.length;
                  })
                  .indexOf(
                    Math.max.apply(
                      Math,
                      n.globals.series.map(function (i) {
                        return i.length;
                      }),
                    ),
                  );
              },
            },
            {
              key: "getLargestMarkerSize",
              value: function () {
                var n = this.w,
                  i = 0;
                return (
                  n.globals.markers.size.forEach(function (o) {
                    i = Math.max(i, o);
                  }),
                  n.config.markers.discrete &&
                    n.config.markers.discrete.length &&
                    n.config.markers.discrete.forEach(function (o) {
                      i = Math.max(i, o.size);
                    }),
                  i > 0 && (i += n.config.markers.hover.sizeOffset + 1),
                  (n.globals.markers.largestSize = i),
                  i
                );
              },
            },
            {
              key: "getSeriesTotals",
              value: function () {
                var n = this.w;
                n.globals.seriesTotals = n.globals.series.map(function (i, o) {
                  var s = 0;
                  if (Array.isArray(i))
                    for (var l = 0; l < i.length; l++) s += i[l];
                  else s += i;
                  return s;
                });
              },
            },
            {
              key: "getSeriesTotalsXRange",
              value: function (n, i) {
                var o = this.w;
                return o.globals.series.map(function (s, l) {
                  for (var u = 0, d = 0; d < s.length; d++)
                    o.globals.seriesX[l][d] > n &&
                      o.globals.seriesX[l][d] < i &&
                      (u += s[d]);
                  return u;
                });
              },
            },
            {
              key: "getPercentSeries",
              value: function () {
                var n = this.w;
                n.globals.seriesPercent = n.globals.series.map(function (i, o) {
                  var s = [];
                  if (Array.isArray(i))
                    for (var l = 0; l < i.length; l++) {
                      var u = n.globals.stackedSeriesTotals[l],
                        d = 0;
                      u && (d = (100 * i[l]) / u), s.push(d);
                    }
                  else {
                    var f =
                      (100 * i) /
                      n.globals.seriesTotals.reduce(function (m, y) {
                        return m + y;
                      }, 0);
                    s.push(f);
                  }
                  return s;
                });
              },
            },
            {
              key: "getCalculatedRatios",
              value: function () {
                var n,
                  i,
                  o,
                  s,
                  l = this.w.globals,
                  u = [],
                  d = 0,
                  f = [],
                  m = 0.1,
                  y = 0;
                if (((l.yRange = []), l.isMultipleYAxis))
                  for (var x = 0; x < l.minYArr.length; x++)
                    l.yRange.push(Math.abs(l.minYArr[x] - l.maxYArr[x])),
                      f.push(0);
                else l.yRange.push(Math.abs(l.minY - l.maxY));
                (l.xRange = Math.abs(l.maxX - l.minX)),
                  (l.zRange = Math.abs(l.maxZ - l.minZ));
                for (var S = 0; S < l.yRange.length; S++)
                  u.push(l.yRange[S] / l.gridHeight);
                if (
                  ((i = l.xRange / l.gridWidth),
                  (o = Math.abs(l.initialMaxX - l.initialMinX) / l.gridWidth),
                  (n = l.yRange / l.gridWidth),
                  (s = l.xRange / l.gridHeight),
                  (d = (l.zRange / l.gridHeight) * 16) || (d = 1),
                  l.minY !== Number.MIN_VALUE &&
                    Math.abs(l.minY) !== 0 &&
                    (l.hasNegs = !0),
                  l.isMultipleYAxis)
                ) {
                  f = [];
                  for (var _ = 0; _ < u.length; _++)
                    f.push(-l.minYArr[_] / u[_]);
                } else
                  f.push(-l.minY / u[0]),
                    l.minY !== Number.MIN_VALUE &&
                      Math.abs(l.minY) !== 0 &&
                      ((m = -l.minY / n), (y = l.minX / i));
                return {
                  yRatio: u,
                  invertedYRatio: n,
                  zRatio: d,
                  xRatio: i,
                  initialXRatio: o,
                  invertedXRatio: s,
                  baseLineInvertedY: m,
                  baseLineY: f,
                  baseLineX: y,
                };
              },
            },
            {
              key: "getLogSeries",
              value: function (n) {
                var i = this,
                  o = this.w;
                return (
                  (o.globals.seriesLog = n.map(function (s, l) {
                    return o.config.yaxis[l] && o.config.yaxis[l].logarithmic
                      ? s.map(function (u) {
                          return u === null
                            ? null
                            : i.getLogVal(o.config.yaxis[l].logBase, u, l);
                        })
                      : s;
                  })),
                  o.globals.invalidLogScale ? n : o.globals.seriesLog
                );
              },
            },
            {
              key: "getBaseLog",
              value: function (n, i) {
                return Math.log(i) / Math.log(n);
              },
            },
            {
              key: "getLogVal",
              value: function (n, i, o) {
                if (i === 0) return 0;
                var s = this.w,
                  l =
                    s.globals.minYArr[o] === 0
                      ? -1
                      : this.getBaseLog(n, s.globals.minYArr[o]),
                  u =
                    (s.globals.maxYArr[o] === 0
                      ? 0
                      : this.getBaseLog(n, s.globals.maxYArr[o])) - l;
                return i < 1 ? i / u : (this.getBaseLog(n, i) - l) / u;
              },
            },
            {
              key: "getLogYRatios",
              value: function (n) {
                var i = this,
                  o = this.w,
                  s = this.w.globals;
                return (
                  (s.yLogRatio = n.slice()),
                  (s.logYRange = s.yRange.map(function (l, u) {
                    if (o.config.yaxis[u] && i.w.config.yaxis[u].logarithmic) {
                      var d,
                        f = -Number.MAX_VALUE,
                        m = Number.MIN_VALUE;
                      return (
                        s.seriesLog.forEach(function (y, x) {
                          y.forEach(function (S) {
                            o.config.yaxis[x] &&
                              o.config.yaxis[x].logarithmic &&
                              ((f = Math.max(S, f)), (m = Math.min(S, m)));
                          });
                        }),
                        (d = Math.pow(
                          s.yRange[u],
                          Math.abs(m - f) / s.yRange[u],
                        )),
                        (s.yLogRatio[u] = d / s.gridHeight),
                        d
                      );
                    }
                  })),
                  s.invalidLogScale ? n.slice() : s.yLogRatio
                );
              },
            },
          ],
          [
            {
              key: "checkComboSeries",
              value: function (n) {
                var i = !1,
                  o = 0,
                  s = 0;
                return (
                  n.length &&
                    n[0].type !== void 0 &&
                    n.forEach(function (l) {
                      (l.type !== "bar" &&
                        l.type !== "column" &&
                        l.type !== "candlestick" &&
                        l.type !== "boxPlot") ||
                        o++,
                        l.type !== void 0 && s++;
                    }),
                  s > 0 && (i = !0),
                  { comboBarCount: o, comboCharts: i }
                );
              },
            },
            {
              key: "extendArrayProps",
              value: function (n, i, o) {
                return (
                  i.yaxis && (i = n.extendYAxis(i, o)),
                  i.annotations &&
                    (i.annotations.yaxis && (i = n.extendYAxisAnnotations(i)),
                    i.annotations.xaxis && (i = n.extendXAxisAnnotations(i)),
                    i.annotations.points && (i = n.extendPointAnnotations(i))),
                  i
                );
              },
            },
          ],
        ),
        T
      );
    })(),
    Q = (function () {
      function T(n) {
        h(this, T), (this.w = n.w), (this.annoCtx = n);
      }
      return (
        v(T, [
          {
            key: "setOrientations",
            value: function (n) {
              var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null,
                o = this.w;
              if (n.label.orientation === "vertical") {
                var s = i !== null ? i : 0,
                  l = o.globals.dom.baseEl.querySelector(
                    ".apexcharts-xaxis-annotations .apexcharts-xaxis-annotation-label[rel='".concat(
                      s,
                      "']",
                    ),
                  );
                if (l !== null) {
                  var u = l.getBoundingClientRect();
                  l.setAttribute(
                    "x",
                    parseFloat(l.getAttribute("x")) - u.height + 4,
                  ),
                    n.label.position === "top"
                      ? l.setAttribute(
                          "y",
                          parseFloat(l.getAttribute("y")) + u.width,
                        )
                      : l.setAttribute(
                          "y",
                          parseFloat(l.getAttribute("y")) - u.width,
                        );
                  var d = this.annoCtx.graphics.rotateAroundCenter(l),
                    f = d.x,
                    m = d.y;
                  l.setAttribute(
                    "transform",
                    "rotate(-90 ".concat(f, " ").concat(m, ")"),
                  );
                }
              }
            },
          },
          {
            key: "addBackgroundToAnno",
            value: function (n, i) {
              var o = this.w;
              if (
                !n ||
                i.label.text === void 0 ||
                (i.label.text !== void 0 && !String(i.label.text).trim())
              )
                return null;
              var s = o.globals.dom.baseEl
                  .querySelector(".apexcharts-grid")
                  .getBoundingClientRect(),
                l = n.getBoundingClientRect(),
                u = i.label.style.padding.left,
                d = i.label.style.padding.right,
                f = i.label.style.padding.top,
                m = i.label.style.padding.bottom;
              i.label.orientation === "vertical" &&
                ((f = i.label.style.padding.left),
                (m = i.label.style.padding.right),
                (u = i.label.style.padding.top),
                (d = i.label.style.padding.bottom));
              var y = l.left - s.left - u,
                x = l.top - s.top - f,
                S = this.annoCtx.graphics.drawRect(
                  y - o.globals.barPadForNumericAxis,
                  x,
                  l.width + u + d,
                  l.height + f + m,
                  i.label.borderRadius,
                  i.label.style.background,
                  1,
                  i.label.borderWidth,
                  i.label.borderColor,
                  0,
                );
              return i.id && S.node.classList.add(i.id), S;
            },
          },
          {
            key: "annotationsBackground",
            value: function () {
              var n = this,
                i = this.w,
                o = function (s, l, u) {
                  var d = i.globals.dom.baseEl.querySelector(
                    ".apexcharts-"
                      .concat(u, "-annotations .apexcharts-")
                      .concat(u, "-annotation-label[rel='")
                      .concat(l, "']"),
                  );
                  if (d) {
                    var f = d.parentNode,
                      m = n.addBackgroundToAnno(d, s);
                    m &&
                      (f.insertBefore(m.node, d),
                      s.label.mouseEnter &&
                        m.node.addEventListener(
                          "mouseenter",
                          s.label.mouseEnter.bind(n, s),
                        ),
                      s.label.mouseLeave &&
                        m.node.addEventListener(
                          "mouseleave",
                          s.label.mouseLeave.bind(n, s),
                        ),
                      s.label.click &&
                        m.node.addEventListener(
                          "click",
                          s.label.click.bind(n, s),
                        ));
                  }
                };
              i.config.annotations.xaxis.map(function (s, l) {
                o(s, l, "xaxis");
              }),
                i.config.annotations.yaxis.map(function (s, l) {
                  o(s, l, "yaxis");
                }),
                i.config.annotations.points.map(function (s, l) {
                  o(s, l, "point");
                });
            },
          },
          {
            key: "getY1Y2",
            value: function (n, i) {
              var o,
                s = n === "y1" ? i.y : i.y2,
                l = this.w;
              if (this.annoCtx.invertAxis) {
                var u = l.globals.labels.indexOf(s);
                l.config.xaxis.convertedCatToNumeric &&
                  (u = l.globals.categoryLabels.indexOf(s));
                var d = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-yaxis-texts-g text:nth-child(" + (u + 1) + ")",
                );
                d && (o = parseFloat(d.getAttribute("y")));
              } else {
                var f;
                l.config.yaxis[i.yAxisIndex].logarithmic
                  ? (f =
                      (s = new U(this.annoCtx.ctx).getLogVal(s, i.yAxisIndex)) /
                      l.globals.yLogRatio[i.yAxisIndex])
                  : (f =
                      (s - l.globals.minYArr[i.yAxisIndex]) /
                      (l.globals.yRange[i.yAxisIndex] / l.globals.gridHeight)),
                  (o = l.globals.gridHeight - f),
                  !i.marker || (i.y !== void 0 && i.y !== null) || (o = 0),
                  l.config.yaxis[i.yAxisIndex] &&
                    l.config.yaxis[i.yAxisIndex].reversed &&
                    (o = f);
              }
              return (
                typeof s == "string" &&
                  s.indexOf("px") > -1 &&
                  (o = parseFloat(s)),
                o
              );
            },
          },
          {
            key: "getX1X2",
            value: function (n, i) {
              var o = this.w,
                s = this.annoCtx.invertAxis ? o.globals.minY : o.globals.minX,
                l = this.annoCtx.invertAxis ? o.globals.maxY : o.globals.maxX,
                u = this.annoCtx.invertAxis
                  ? o.globals.yRange[0]
                  : o.globals.xRange,
                d = (i.x - s) / (u / o.globals.gridWidth);
              this.annoCtx.inversedReversedAxis &&
                (d = (l - i.x) / (u / o.globals.gridWidth)),
                (o.config.xaxis.type !== "category" &&
                  !o.config.xaxis.convertedCatToNumeric) ||
                  this.annoCtx.invertAxis ||
                  o.globals.dataFormatXNumeric ||
                  (d = this.getStringX(i.x));
              var f = (i.x2 - s) / (u / o.globals.gridWidth);
              return (
                this.annoCtx.inversedReversedAxis &&
                  (f = (l - i.x2) / (u / o.globals.gridWidth)),
                (o.config.xaxis.type !== "category" &&
                  !o.config.xaxis.convertedCatToNumeric) ||
                  this.annoCtx.invertAxis ||
                  o.globals.dataFormatXNumeric ||
                  (f = this.getStringX(i.x2)),
                (i.x !== void 0 && i.x !== null) ||
                  !i.marker ||
                  (d = o.globals.gridWidth),
                n === "x1" &&
                  typeof i.x == "string" &&
                  i.x.indexOf("px") > -1 &&
                  (d = parseFloat(i.x)),
                n === "x2" &&
                  typeof i.x2 == "string" &&
                  i.x2.indexOf("px") > -1 &&
                  (f = parseFloat(i.x2)),
                n === "x1" ? d : f
              );
            },
          },
          {
            key: "getStringX",
            value: function (n) {
              var i = this.w,
                o = n;
              i.config.xaxis.convertedCatToNumeric &&
                i.globals.categoryLabels.length &&
                (n = i.globals.categoryLabels.indexOf(n) + 1);
              var s = i.globals.labels.indexOf(n),
                l = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxis-texts-g text:nth-child(" + (s + 1) + ")",
                );
              return l && (o = parseFloat(l.getAttribute("x"))), o;
            },
          },
        ]),
        T
      );
    })(),
    ee = (function () {
      function T(n) {
        h(this, T),
          (this.w = n.w),
          (this.annoCtx = n),
          (this.invertAxis = this.annoCtx.invertAxis),
          (this.helpers = new Q(this.annoCtx));
      }
      return (
        v(T, [
          {
            key: "addXaxisAnnotation",
            value: function (n, i, o) {
              var s,
                l = this.w,
                u = this.helpers.getX1X2("x1", n),
                d = n.label.text,
                f = n.strokeDashArray;
              if (O.isNumber(u)) {
                if (n.x2 === null || n.x2 === void 0) {
                  var m = this.annoCtx.graphics.drawLine(
                    u + n.offsetX,
                    0 + n.offsetY,
                    u + n.offsetX,
                    l.globals.gridHeight + n.offsetY,
                    n.borderColor,
                    f,
                    n.borderWidth,
                  );
                  i.appendChild(m.node), n.id && m.node.classList.add(n.id);
                } else {
                  if ((s = this.helpers.getX1X2("x2", n)) < u) {
                    var y = u;
                    (u = s), (s = y);
                  }
                  var x = this.annoCtx.graphics.drawRect(
                    u + n.offsetX,
                    0 + n.offsetY,
                    s - u,
                    l.globals.gridHeight + n.offsetY,
                    0,
                    n.fillColor,
                    n.opacity,
                    1,
                    n.borderColor,
                    f,
                  );
                  x.node.classList.add("apexcharts-annotation-rect"),
                    x.attr(
                      "clip-path",
                      "url(#gridRectMask".concat(l.globals.cuid, ")"),
                    ),
                    i.appendChild(x.node),
                    n.id && x.node.classList.add(n.id);
                }
                var S = this.annoCtx.graphics.getTextRects(
                    d,
                    parseFloat(n.label.style.fontSize),
                  ),
                  _ =
                    n.label.position === "top"
                      ? 4
                      : n.label.position === "center"
                      ? l.globals.gridHeight / 2 +
                        (n.label.orientation === "vertical" ? S.width / 2 : 0)
                      : l.globals.gridHeight,
                  C = this.annoCtx.graphics.drawText({
                    x: u + n.label.offsetX,
                    y:
                      _ +
                      n.label.offsetY -
                      (n.label.orientation === "vertical"
                        ? n.label.position === "top"
                          ? S.width / 2 - 12
                          : -S.width / 2
                        : 0),
                    text: d,
                    textAnchor: n.label.textAnchor,
                    fontSize: n.label.style.fontSize,
                    fontFamily: n.label.style.fontFamily,
                    fontWeight: n.label.style.fontWeight,
                    foreColor: n.label.style.color,
                    cssClass: "apexcharts-xaxis-annotation-label "
                      .concat(n.label.style.cssClass, " ")
                      .concat(n.id ? n.id : ""),
                  });
                C.attr({ rel: o }),
                  i.appendChild(C.node),
                  this.annoCtx.helpers.setOrientations(n, o);
              }
            },
          },
          {
            key: "drawXAxisAnnotations",
            value: function () {
              var n = this,
                i = this.w,
                o = this.annoCtx.graphics.group({
                  class: "apexcharts-xaxis-annotations",
                });
              return (
                i.config.annotations.xaxis.map(function (s, l) {
                  n.addXaxisAnnotation(s, o.node, l);
                }),
                o
              );
            },
          },
        ]),
        T
      );
    })(),
    ne = (function () {
      function T(n) {
        h(this, T),
          (this.w = n.w),
          (this.annoCtx = n),
          (this.helpers = new Q(this.annoCtx));
      }
      return (
        v(T, [
          {
            key: "addYaxisAnnotation",
            value: function (n, i, o) {
              var s,
                l = this.w,
                u = n.strokeDashArray,
                d = this.helpers.getY1Y2("y1", n),
                f = n.label.text;
              if (n.y2 === null || n.y2 === void 0) {
                var m = this.annoCtx.graphics.drawLine(
                  0 + n.offsetX,
                  d + n.offsetY,
                  this._getYAxisAnnotationWidth(n),
                  d + n.offsetY,
                  n.borderColor,
                  u,
                  n.borderWidth,
                );
                i.appendChild(m.node), n.id && m.node.classList.add(n.id);
              } else {
                if ((s = this.helpers.getY1Y2("y2", n)) > d) {
                  var y = d;
                  (d = s), (s = y);
                }
                var x = this.annoCtx.graphics.drawRect(
                  0 + n.offsetX,
                  s + n.offsetY,
                  this._getYAxisAnnotationWidth(n),
                  d - s,
                  0,
                  n.fillColor,
                  n.opacity,
                  1,
                  n.borderColor,
                  u,
                );
                x.node.classList.add("apexcharts-annotation-rect"),
                  x.attr(
                    "clip-path",
                    "url(#gridRectMask".concat(l.globals.cuid, ")"),
                  ),
                  i.appendChild(x.node),
                  n.id && x.node.classList.add(n.id);
              }
              var S =
                  n.label.position === "right"
                    ? l.globals.gridWidth
                    : n.label.position === "center"
                    ? l.globals.gridWidth / 2
                    : 0,
                _ = this.annoCtx.graphics.drawText({
                  x: S + n.label.offsetX,
                  y: (s ?? d) + n.label.offsetY - 3,
                  text: f,
                  textAnchor: n.label.textAnchor,
                  fontSize: n.label.style.fontSize,
                  fontFamily: n.label.style.fontFamily,
                  fontWeight: n.label.style.fontWeight,
                  foreColor: n.label.style.color,
                  cssClass: "apexcharts-yaxis-annotation-label "
                    .concat(n.label.style.cssClass, " ")
                    .concat(n.id ? n.id : ""),
                });
              _.attr({ rel: o }), i.appendChild(_.node);
            },
          },
          {
            key: "_getYAxisAnnotationWidth",
            value: function (n) {
              var i = this.w;
              return (
                i.globals.gridWidth,
                (n.width.indexOf("%") > -1
                  ? (i.globals.gridWidth * parseInt(n.width, 10)) / 100
                  : parseInt(n.width, 10)) + n.offsetX
              );
            },
          },
          {
            key: "drawYAxisAnnotations",
            value: function () {
              var n = this,
                i = this.w,
                o = this.annoCtx.graphics.group({
                  class: "apexcharts-yaxis-annotations",
                });
              return (
                i.config.annotations.yaxis.map(function (s, l) {
                  n.addYaxisAnnotation(s, o.node, l);
                }),
                o
              );
            },
          },
        ]),
        T
      );
    })(),
    le = (function () {
      function T(n) {
        h(this, T),
          (this.w = n.w),
          (this.annoCtx = n),
          (this.helpers = new Q(this.annoCtx));
      }
      return (
        v(T, [
          {
            key: "addPointAnnotation",
            value: function (n, i, o) {
              this.w;
              var s = this.helpers.getX1X2("x1", n),
                l = this.helpers.getY1Y2("y1", n);
              if (O.isNumber(s)) {
                var u = {
                    pSize: n.marker.size,
                    pointStrokeWidth: n.marker.strokeWidth,
                    pointFillColor: n.marker.fillColor,
                    pointStrokeColor: n.marker.strokeColor,
                    shape: n.marker.shape,
                    pRadius: n.marker.radius,
                    class: "apexcharts-point-annotation-marker "
                      .concat(n.marker.cssClass, " ")
                      .concat(n.id ? n.id : ""),
                  },
                  d = this.annoCtx.graphics.drawMarker(
                    s + n.marker.offsetX,
                    l + n.marker.offsetY,
                    u,
                  );
                i.appendChild(d.node);
                var f = n.label.text ? n.label.text : "",
                  m = this.annoCtx.graphics.drawText({
                    x: s + n.label.offsetX,
                    y:
                      l +
                      n.label.offsetY -
                      n.marker.size -
                      parseFloat(n.label.style.fontSize) / 1.6,
                    text: f,
                    textAnchor: n.label.textAnchor,
                    fontSize: n.label.style.fontSize,
                    fontFamily: n.label.style.fontFamily,
                    fontWeight: n.label.style.fontWeight,
                    foreColor: n.label.style.color,
                    cssClass: "apexcharts-point-annotation-label "
                      .concat(n.label.style.cssClass, " ")
                      .concat(n.id ? n.id : ""),
                  });
                if (
                  (m.attr({ rel: o }), i.appendChild(m.node), n.customSVG.SVG)
                ) {
                  var y = this.annoCtx.graphics.group({
                    class:
                      "apexcharts-point-annotations-custom-svg " +
                      n.customSVG.cssClass,
                  });
                  y.attr({
                    transform: "translate("
                      .concat(s + n.customSVG.offsetX, ", ")
                      .concat(l + n.customSVG.offsetY, ")"),
                  }),
                    (y.node.innerHTML = n.customSVG.SVG),
                    i.appendChild(y.node);
                }
                if (n.image.path) {
                  var x = n.image.width ? n.image.width : 20,
                    S = n.image.height ? n.image.height : 20;
                  d = this.annoCtx.addImage({
                    x: s + n.image.offsetX - x / 2,
                    y: l + n.image.offsetY - S / 2,
                    width: x,
                    height: S,
                    path: n.image.path,
                    appendTo: ".apexcharts-point-annotations",
                  });
                }
                n.mouseEnter &&
                  d.node.addEventListener(
                    "mouseenter",
                    n.mouseEnter.bind(this, n),
                  ),
                  n.mouseLeave &&
                    d.node.addEventListener(
                      "mouseleave",
                      n.mouseLeave.bind(this, n),
                    ),
                  n.click &&
                    d.node.addEventListener("click", n.click.bind(this, n));
              }
            },
          },
          {
            key: "drawPointAnnotations",
            value: function () {
              var n = this,
                i = this.w,
                o = this.annoCtx.graphics.group({
                  class: "apexcharts-point-annotations",
                });
              return (
                i.config.annotations.points.map(function (s, l) {
                  n.addPointAnnotation(s, o.node, l);
                }),
                o
              );
            },
          },
        ]),
        T
      );
    })(),
    he = {
      name: "en",
      options: {
        months: [
          "January",
          "February",
          "March",
          "April",
          "May",
          "June",
          "July",
          "August",
          "September",
          "October",
          "November",
          "December",
        ],
        shortMonths: [
          "Jan",
          "Feb",
          "Mar",
          "Apr",
          "May",
          "Jun",
          "Jul",
          "Aug",
          "Sep",
          "Oct",
          "Nov",
          "Dec",
        ],
        days: [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday",
        ],
        shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        toolbar: {
          exportToSVG: "Download SVG",
          exportToPNG: "Download PNG",
          exportToCSV: "Download CSV",
          menu: "Menu",
          selection: "Selection",
          selectionZoom: "Selection Zoom",
          zoomIn: "Zoom In",
          zoomOut: "Zoom Out",
          pan: "Panning",
          reset: "Reset Zoom",
        },
      },
    },
    me = (function () {
      function T() {
        h(this, T),
          (this.yAxis = {
            show: !0,
            showAlways: !1,
            showForNullSeries: !0,
            seriesName: void 0,
            opposite: !1,
            reversed: !1,
            logarithmic: !1,
            logBase: 10,
            tickAmount: void 0,
            forceNiceScale: !1,
            max: void 0,
            min: void 0,
            floating: !1,
            decimalsInFloat: void 0,
            labels: {
              show: !0,
              minWidth: 0,
              maxWidth: 160,
              offsetX: 0,
              offsetY: 0,
              align: void 0,
              rotate: 0,
              padding: 20,
              style: {
                colors: [],
                fontSize: "11px",
                fontWeight: 400,
                fontFamily: void 0,
                cssClass: "",
              },
              formatter: void 0,
            },
            axisBorder: {
              show: !1,
              color: "#e0e0e0",
              width: 1,
              offsetX: 0,
              offsetY: 0,
            },
            axisTicks: {
              show: !1,
              color: "#e0e0e0",
              width: 6,
              offsetX: 0,
              offsetY: 0,
            },
            title: {
              text: void 0,
              rotate: -90,
              offsetY: 0,
              offsetX: 0,
              style: {
                color: void 0,
                fontSize: "11px",
                fontWeight: 900,
                fontFamily: void 0,
                cssClass: "",
              },
            },
            tooltip: { enabled: !1, offsetX: 0 },
            crosshairs: {
              show: !0,
              position: "front",
              stroke: { color: "#b6b6b6", width: 1, dashArray: 0 },
            },
          }),
          (this.pointAnnotation = {
            id: void 0,
            x: 0,
            y: null,
            yAxisIndex: 0,
            seriesIndex: 0,
            mouseEnter: void 0,
            mouseLeave: void 0,
            click: void 0,
            marker: {
              size: 4,
              fillColor: "#fff",
              strokeWidth: 2,
              strokeColor: "#333",
              shape: "circle",
              offsetX: 0,
              offsetY: 0,
              radius: 2,
              cssClass: "",
            },
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "middle",
              offsetX: 0,
              offsetY: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
            customSVG: {
              SVG: void 0,
              cssClass: void 0,
              offsetX: 0,
              offsetY: 0,
            },
            image: {
              path: void 0,
              width: 20,
              height: 20,
              offsetX: 0,
              offsetY: 0,
            },
          }),
          (this.yAxisAnnotation = {
            id: void 0,
            y: 0,
            y2: null,
            strokeDashArray: 1,
            fillColor: "#c2c2c2",
            borderColor: "#c2c2c2",
            borderWidth: 1,
            opacity: 0.3,
            offsetX: 0,
            offsetY: 0,
            width: "100%",
            yAxisIndex: 0,
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "end",
              position: "right",
              offsetX: 0,
              offsetY: -3,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
          }),
          (this.xAxisAnnotation = {
            id: void 0,
            x: 0,
            x2: null,
            strokeDashArray: 1,
            fillColor: "#c2c2c2",
            borderColor: "#c2c2c2",
            borderWidth: 1,
            opacity: 0.3,
            offsetX: 0,
            offsetY: 0,
            label: {
              borderColor: "#c2c2c2",
              borderWidth: 1,
              borderRadius: 2,
              text: void 0,
              textAnchor: "middle",
              orientation: "vertical",
              position: "top",
              offsetX: 0,
              offsetY: 0,
              mouseEnter: void 0,
              mouseLeave: void 0,
              click: void 0,
              style: {
                background: "#fff",
                color: void 0,
                fontSize: "11px",
                fontFamily: void 0,
                fontWeight: 400,
                cssClass: "",
                padding: { left: 5, right: 5, top: 2, bottom: 2 },
              },
            },
          }),
          (this.text = {
            x: 0,
            y: 0,
            text: "",
            textAnchor: "start",
            foreColor: void 0,
            fontSize: "13px",
            fontFamily: void 0,
            fontWeight: 400,
            appendTo: ".apexcharts-annotations",
            backgroundColor: "transparent",
            borderColor: "#c2c2c2",
            borderRadius: 0,
            borderWidth: 0,
            paddingLeft: 4,
            paddingRight: 4,
            paddingTop: 2,
            paddingBottom: 2,
          });
      }
      return (
        v(T, [
          {
            key: "init",
            value: function () {
              return {
                annotations: {
                  yaxis: [this.yAxisAnnotation],
                  xaxis: [this.xAxisAnnotation],
                  points: [this.pointAnnotation],
                  texts: [],
                  images: [],
                  shapes: [],
                },
                chart: {
                  animations: {
                    enabled: !0,
                    easing: "easeinout",
                    speed: 800,
                    animateGradually: { delay: 150, enabled: !0 },
                    dynamicAnimation: { enabled: !0, speed: 350 },
                  },
                  background: "transparent",
                  locales: [he],
                  defaultLocale: "en",
                  dropShadow: {
                    enabled: !1,
                    enabledOnSeries: void 0,
                    top: 2,
                    left: 2,
                    blur: 4,
                    color: "#000",
                    opacity: 0.35,
                  },
                  events: {
                    animationEnd: void 0,
                    beforeMount: void 0,
                    mounted: void 0,
                    updated: void 0,
                    click: void 0,
                    mouseMove: void 0,
                    mouseLeave: void 0,
                    xAxisLabelClick: void 0,
                    legendClick: void 0,
                    markerClick: void 0,
                    selection: void 0,
                    dataPointSelection: void 0,
                    dataPointMouseEnter: void 0,
                    dataPointMouseLeave: void 0,
                    beforeZoom: void 0,
                    beforeResetZoom: void 0,
                    zoomed: void 0,
                    scrolled: void 0,
                    brushScrolled: void 0,
                  },
                  foreColor: "#373d3f",
                  fontFamily: "Helvetica, Arial, sans-serif",
                  height: "auto",
                  parentHeightOffset: 15,
                  redrawOnParentResize: !0,
                  redrawOnWindowResize: !0,
                  id: void 0,
                  group: void 0,
                  offsetX: 0,
                  offsetY: 0,
                  selection: {
                    enabled: !1,
                    type: "x",
                    fill: { color: "#24292e", opacity: 0.1 },
                    stroke: {
                      width: 1,
                      color: "#24292e",
                      opacity: 0.4,
                      dashArray: 3,
                    },
                    xaxis: { min: void 0, max: void 0 },
                    yaxis: { min: void 0, max: void 0 },
                  },
                  sparkline: { enabled: !1 },
                  brush: {
                    enabled: !1,
                    autoScaleYaxis: !0,
                    target: void 0,
                    targets: void 0,
                  },
                  stacked: !1,
                  stackType: "normal",
                  toolbar: {
                    show: !0,
                    offsetX: 0,
                    offsetY: 0,
                    tools: {
                      download: !0,
                      selection: !0,
                      zoom: !0,
                      zoomin: !0,
                      zoomout: !0,
                      pan: !0,
                      reset: !0,
                      customIcons: [],
                    },
                    export: {
                      csv: {
                        filename: void 0,
                        columnDelimiter: ",",
                        headerCategory: "category",
                        headerValue: "value",
                        dateFormatter: function (n) {
                          return new Date(n).toDateString();
                        },
                      },
                      png: { filename: void 0 },
                      svg: { filename: void 0 },
                    },
                    autoSelected: "zoom",
                  },
                  type: "line",
                  width: "100%",
                  zoom: {
                    enabled: !0,
                    type: "x",
                    autoScaleYaxis: !1,
                    zoomedArea: {
                      fill: { color: "#90CAF9", opacity: 0.4 },
                      stroke: { color: "#0D47A1", opacity: 0.4, width: 1 },
                    },
                  },
                },
                plotOptions: {
                  area: { fillTo: "origin" },
                  bar: {
                    horizontal: !1,
                    columnWidth: "70%",
                    barHeight: "70%",
                    distributed: !1,
                    borderRadius: 0,
                    borderRadiusApplication: "around",
                    borderRadiusWhenStacked: "last",
                    rangeBarOverlap: !0,
                    rangeBarGroupRows: !1,
                    hideZeroBarsWhenGrouped: !1,
                    isDumbbell: !1,
                    dumbbellColors: void 0,
                    isFunnel: !1,
                    isFunnel3d: !0,
                    colors: {
                      ranges: [],
                      backgroundBarColors: [],
                      backgroundBarOpacity: 1,
                      backgroundBarRadius: 0,
                    },
                    dataLabels: {
                      position: "top",
                      maxItems: 100,
                      hideOverflowingLabels: !0,
                      orientation: "horizontal",
                      total: {
                        enabled: !1,
                        formatter: void 0,
                        offsetX: 0,
                        offsetY: 0,
                        style: {
                          color: "#373d3f",
                          fontSize: "12px",
                          fontFamily: void 0,
                          fontWeight: 600,
                        },
                      },
                    },
                  },
                  bubble: {
                    zScaling: !0,
                    minBubbleRadius: void 0,
                    maxBubbleRadius: void 0,
                  },
                  candlestick: {
                    colors: { upward: "#00B746", downward: "#EF403C" },
                    wick: { useFillColor: !0 },
                  },
                  boxPlot: { colors: { upper: "#00E396", lower: "#008FFB" } },
                  heatmap: {
                    radius: 2,
                    enableShades: !0,
                    shadeIntensity: 0.5,
                    reverseNegativeShade: !1,
                    distributed: !1,
                    useFillColorAsStroke: !1,
                    colorScale: {
                      inverse: !1,
                      ranges: [],
                      min: void 0,
                      max: void 0,
                    },
                  },
                  treemap: {
                    enableShades: !0,
                    shadeIntensity: 0.5,
                    distributed: !1,
                    reverseNegativeShade: !1,
                    useFillColorAsStroke: !1,
                    dataLabels: { format: "scale" },
                    colorScale: {
                      inverse: !1,
                      ranges: [],
                      min: void 0,
                      max: void 0,
                    },
                  },
                  radialBar: {
                    inverseOrder: !1,
                    startAngle: 0,
                    endAngle: 360,
                    offsetX: 0,
                    offsetY: 0,
                    hollow: {
                      margin: 5,
                      size: "50%",
                      background: "transparent",
                      image: void 0,
                      imageWidth: 150,
                      imageHeight: 150,
                      imageOffsetX: 0,
                      imageOffsetY: 0,
                      imageClipped: !0,
                      position: "front",
                      dropShadow: {
                        enabled: !1,
                        top: 0,
                        left: 0,
                        blur: 3,
                        color: "#000",
                        opacity: 0.5,
                      },
                    },
                    track: {
                      show: !0,
                      startAngle: void 0,
                      endAngle: void 0,
                      background: "#f2f2f2",
                      strokeWidth: "97%",
                      opacity: 1,
                      margin: 5,
                      dropShadow: {
                        enabled: !1,
                        top: 0,
                        left: 0,
                        blur: 3,
                        color: "#000",
                        opacity: 0.5,
                      },
                    },
                    dataLabels: {
                      show: !0,
                      name: {
                        show: !0,
                        fontSize: "16px",
                        fontFamily: void 0,
                        fontWeight: 600,
                        color: void 0,
                        offsetY: 0,
                        formatter: function (n) {
                          return n;
                        },
                      },
                      value: {
                        show: !0,
                        fontSize: "14px",
                        fontFamily: void 0,
                        fontWeight: 400,
                        color: void 0,
                        offsetY: 16,
                        formatter: function (n) {
                          return n + "%";
                        },
                      },
                      total: {
                        show: !1,
                        label: "Total",
                        fontSize: "16px",
                        fontWeight: 600,
                        fontFamily: void 0,
                        color: void 0,
                        formatter: function (n) {
                          return (
                            n.globals.seriesTotals.reduce(function (i, o) {
                              return i + o;
                            }, 0) /
                              n.globals.series.length +
                            "%"
                          );
                        },
                      },
                    },
                  },
                  pie: {
                    customScale: 1,
                    offsetX: 0,
                    offsetY: 0,
                    startAngle: 0,
                    endAngle: 360,
                    expandOnClick: !0,
                    dataLabels: { offset: 0, minAngleToShowLabel: 10 },
                    donut: {
                      size: "65%",
                      background: "transparent",
                      labels: {
                        show: !1,
                        name: {
                          show: !0,
                          fontSize: "16px",
                          fontFamily: void 0,
                          fontWeight: 600,
                          color: void 0,
                          offsetY: -10,
                          formatter: function (n) {
                            return n;
                          },
                        },
                        value: {
                          show: !0,
                          fontSize: "20px",
                          fontFamily: void 0,
                          fontWeight: 400,
                          color: void 0,
                          offsetY: 10,
                          formatter: function (n) {
                            return n;
                          },
                        },
                        total: {
                          show: !1,
                          showAlways: !1,
                          label: "Total",
                          fontSize: "16px",
                          fontWeight: 400,
                          fontFamily: void 0,
                          color: void 0,
                          formatter: function (n) {
                            return n.globals.seriesTotals.reduce(function (
                              i,
                              o,
                            ) {
                              return i + o;
                            }, 0);
                          },
                        },
                      },
                    },
                  },
                  polarArea: {
                    rings: { strokeWidth: 1, strokeColor: "#e8e8e8" },
                    spokes: { strokeWidth: 1, connectorColors: "#e8e8e8" },
                  },
                  radar: {
                    size: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    polygons: {
                      strokeWidth: 1,
                      strokeColors: "#e8e8e8",
                      connectorColors: "#e8e8e8",
                      fill: { colors: void 0 },
                    },
                  },
                },
                colors: void 0,
                dataLabels: {
                  enabled: !0,
                  enabledOnSeries: void 0,
                  formatter: function (n) {
                    return n !== null ? n : "";
                  },
                  textAnchor: "middle",
                  distributed: !1,
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    fontSize: "12px",
                    fontFamily: void 0,
                    fontWeight: 600,
                    colors: void 0,
                  },
                  background: {
                    enabled: !0,
                    foreColor: "#fff",
                    borderRadius: 2,
                    padding: 4,
                    opacity: 0.9,
                    borderWidth: 1,
                    borderColor: "#fff",
                    dropShadow: {
                      enabled: !1,
                      top: 1,
                      left: 1,
                      blur: 1,
                      color: "#000",
                      opacity: 0.45,
                    },
                  },
                  dropShadow: {
                    enabled: !1,
                    top: 1,
                    left: 1,
                    blur: 1,
                    color: "#000",
                    opacity: 0.45,
                  },
                },
                fill: {
                  type: "solid",
                  colors: void 0,
                  opacity: 0.85,
                  gradient: {
                    shade: "dark",
                    type: "horizontal",
                    shadeIntensity: 0.5,
                    gradientToColors: void 0,
                    inverseColors: !0,
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [0, 50, 100],
                    colorStops: [],
                  },
                  image: { src: [], width: void 0, height: void 0 },
                  pattern: {
                    style: "squares",
                    width: 6,
                    height: 6,
                    strokeWidth: 2,
                  },
                },
                forecastDataPoints: {
                  count: 0,
                  fillOpacity: 0.5,
                  strokeWidth: void 0,
                  dashArray: 4,
                },
                grid: {
                  show: !0,
                  borderColor: "#e0e0e0",
                  strokeDashArray: 0,
                  position: "back",
                  xaxis: { lines: { show: !1 } },
                  yaxis: { lines: { show: !0 } },
                  row: { colors: void 0, opacity: 0.5 },
                  column: { colors: void 0, opacity: 0.5 },
                  padding: { top: 0, right: 10, bottom: 0, left: 12 },
                },
                labels: [],
                legend: {
                  show: !0,
                  showForSingleSeries: !1,
                  showForNullSeries: !0,
                  showForZeroSeries: !0,
                  floating: !1,
                  position: "bottom",
                  horizontalAlign: "center",
                  inverseOrder: !1,
                  fontSize: "12px",
                  fontFamily: void 0,
                  fontWeight: 400,
                  width: void 0,
                  height: void 0,
                  formatter: void 0,
                  tooltipHoverFormatter: void 0,
                  offsetX: -20,
                  offsetY: 4,
                  customLegendItems: [],
                  labels: { colors: void 0, useSeriesColors: !1 },
                  markers: {
                    width: 12,
                    height: 12,
                    strokeWidth: 0,
                    fillColors: void 0,
                    strokeColor: "#fff",
                    radius: 12,
                    customHTML: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    onClick: void 0,
                  },
                  itemMargin: { horizontal: 5, vertical: 2 },
                  onItemClick: { toggleDataSeries: !0 },
                  onItemHover: { highlightDataSeries: !0 },
                },
                markers: {
                  discrete: [],
                  size: 0,
                  colors: void 0,
                  strokeColors: "#fff",
                  strokeWidth: 2,
                  strokeOpacity: 0.9,
                  strokeDashArray: 0,
                  fillOpacity: 1,
                  shape: "circle",
                  width: 8,
                  height: 8,
                  radius: 2,
                  offsetX: 0,
                  offsetY: 0,
                  onClick: void 0,
                  onDblClick: void 0,
                  showNullDataPoints: !0,
                  hover: { size: void 0, sizeOffset: 3 },
                },
                noData: {
                  text: void 0,
                  align: "center",
                  verticalAlign: "middle",
                  offsetX: 0,
                  offsetY: 0,
                  style: {
                    color: void 0,
                    fontSize: "14px",
                    fontFamily: void 0,
                  },
                },
                responsive: [],
                series: void 0,
                states: {
                  normal: { filter: { type: "none", value: 0 } },
                  hover: { filter: { type: "lighten", value: 0.1 } },
                  active: {
                    allowMultipleDataPointsSelection: !1,
                    filter: { type: "darken", value: 0.5 },
                  },
                },
                title: {
                  text: void 0,
                  align: "left",
                  margin: 5,
                  offsetX: 0,
                  offsetY: 0,
                  floating: !1,
                  style: {
                    fontSize: "14px",
                    fontWeight: 900,
                    fontFamily: void 0,
                    color: void 0,
                  },
                },
                subtitle: {
                  text: void 0,
                  align: "left",
                  margin: 5,
                  offsetX: 0,
                  offsetY: 30,
                  floating: !1,
                  style: {
                    fontSize: "12px",
                    fontWeight: 400,
                    fontFamily: void 0,
                    color: void 0,
                  },
                },
                stroke: {
                  show: !0,
                  curve: "smooth",
                  lineCap: "butt",
                  width: 2,
                  colors: void 0,
                  dashArray: 0,
                  fill: {
                    type: "solid",
                    colors: void 0,
                    opacity: 0.85,
                    gradient: {
                      shade: "dark",
                      type: "horizontal",
                      shadeIntensity: 0.5,
                      gradientToColors: void 0,
                      inverseColors: !0,
                      opacityFrom: 1,
                      opacityTo: 1,
                      stops: [0, 50, 100],
                      colorStops: [],
                    },
                  },
                },
                tooltip: {
                  enabled: !0,
                  enabledOnSeries: void 0,
                  shared: !0,
                  followCursor: !1,
                  intersect: !1,
                  inverseOrder: !1,
                  custom: void 0,
                  fillSeriesColor: !1,
                  theme: "light",
                  cssClass: "",
                  style: { fontSize: "12px", fontFamily: void 0 },
                  onDatasetHover: { highlightDataSeries: !1 },
                  x: { show: !0, format: "dd MMM", formatter: void 0 },
                  y: {
                    formatter: void 0,
                    title: {
                      formatter: function (n) {
                        return n ? n + ": " : "";
                      },
                    },
                  },
                  z: { formatter: void 0, title: "Size: " },
                  marker: { show: !0, fillColors: void 0 },
                  items: { display: "flex" },
                  fixed: {
                    enabled: !1,
                    position: "topRight",
                    offsetX: 0,
                    offsetY: 0,
                  },
                },
                xaxis: {
                  type: "category",
                  categories: [],
                  convertedCatToNumeric: !1,
                  offsetX: 0,
                  offsetY: 0,
                  overwriteCategories: void 0,
                  labels: {
                    show: !0,
                    rotate: -45,
                    rotateAlways: !1,
                    hideOverlappingLabels: !0,
                    trim: !1,
                    minHeight: void 0,
                    maxHeight: 120,
                    showDuplicates: !0,
                    style: {
                      colors: [],
                      fontSize: "12px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                    offsetX: 0,
                    offsetY: 0,
                    format: void 0,
                    formatter: void 0,
                    datetimeUTC: !0,
                    datetimeFormatter: {
                      year: "yyyy",
                      month: "MMM 'yy",
                      day: "dd MMM",
                      hour: "HH:mm",
                      minute: "HH:mm:ss",
                      second: "HH:mm:ss",
                    },
                  },
                  group: {
                    groups: [],
                    style: {
                      colors: [],
                      fontSize: "12px",
                      fontWeight: 400,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                  },
                  axisBorder: {
                    show: !0,
                    color: "#e0e0e0",
                    width: "100%",
                    height: 1,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  axisTicks: {
                    show: !0,
                    color: "#e0e0e0",
                    height: 6,
                    offsetX: 0,
                    offsetY: 0,
                  },
                  tickAmount: void 0,
                  tickPlacement: "on",
                  min: void 0,
                  max: void 0,
                  range: void 0,
                  floating: !1,
                  decimalsInFloat: void 0,
                  position: "bottom",
                  title: {
                    text: void 0,
                    offsetX: 0,
                    offsetY: 0,
                    style: {
                      color: void 0,
                      fontSize: "12px",
                      fontWeight: 900,
                      fontFamily: void 0,
                      cssClass: "",
                    },
                  },
                  crosshairs: {
                    show: !0,
                    width: 1,
                    position: "back",
                    opacity: 0.9,
                    stroke: { color: "#b6b6b6", width: 1, dashArray: 3 },
                    fill: {
                      type: "solid",
                      color: "#B1B9C4",
                      gradient: {
                        colorFrom: "#D8E3F0",
                        colorTo: "#BED1E6",
                        stops: [0, 100],
                        opacityFrom: 0.4,
                        opacityTo: 0.5,
                      },
                    },
                    dropShadow: {
                      enabled: !1,
                      left: 0,
                      top: 0,
                      blur: 1,
                      opacity: 0.4,
                    },
                  },
                  tooltip: {
                    enabled: !0,
                    offsetY: 0,
                    formatter: void 0,
                    style: { fontSize: "12px", fontFamily: void 0 },
                  },
                },
                yaxis: this.yAxis,
                theme: {
                  mode: "light",
                  palette: "palette1",
                  monochrome: {
                    enabled: !1,
                    color: "#008FFB",
                    shadeTo: "light",
                    shadeIntensity: 0.65,
                  },
                },
              };
            },
          },
        ]),
        T
      );
    })(),
    fe = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.graphics = new B(this.ctx)),
          this.w.globals.isBarHorizontal && (this.invertAxis = !0),
          (this.helpers = new Q(this)),
          (this.xAxisAnnotations = new ee(this)),
          (this.yAxisAnnotations = new ne(this)),
          (this.pointsAnnotations = new le(this)),
          this.w.globals.isBarHorizontal &&
            this.w.config.yaxis[0].reversed &&
            (this.inversedReversedAxis = !0),
          (this.xDivision =
            this.w.globals.gridWidth / this.w.globals.dataPoints);
      }
      return (
        v(T, [
          {
            key: "drawAxesAnnotations",
            value: function () {
              var n = this.w;
              if (n.globals.axisCharts) {
                for (
                  var i = this.yAxisAnnotations.drawYAxisAnnotations(),
                    o = this.xAxisAnnotations.drawXAxisAnnotations(),
                    s = this.pointsAnnotations.drawPointAnnotations(),
                    l = n.config.chart.animations.enabled,
                    u = [i, o, s],
                    d = [o.node, i.node, s.node],
                    f = 0;
                  f < 3;
                  f++
                )
                  n.globals.dom.elGraphical.add(u[f]),
                    !l ||
                      n.globals.resized ||
                      n.globals.dataChanged ||
                      (n.config.chart.type !== "scatter" &&
                        n.config.chart.type !== "bubble" &&
                        n.globals.dataPoints > 1 &&
                        d[f].classList.add("apexcharts-element-hidden")),
                    n.globals.delayedElements.push({ el: d[f], index: 0 });
                this.helpers.annotationsBackground();
              }
            },
          },
          {
            key: "drawImageAnnos",
            value: function () {
              var n = this;
              this.w.config.annotations.images.map(function (i, o) {
                n.addImage(i, o);
              });
            },
          },
          {
            key: "drawTextAnnos",
            value: function () {
              var n = this;
              this.w.config.annotations.texts.map(function (i, o) {
                n.addText(i, o);
              });
            },
          },
          {
            key: "addXaxisAnnotation",
            value: function (n, i, o) {
              this.xAxisAnnotations.addXaxisAnnotation(n, i, o);
            },
          },
          {
            key: "addYaxisAnnotation",
            value: function (n, i, o) {
              this.yAxisAnnotations.addYaxisAnnotation(n, i, o);
            },
          },
          {
            key: "addPointAnnotation",
            value: function (n, i, o) {
              this.pointsAnnotations.addPointAnnotation(n, i, o);
            },
          },
          {
            key: "addText",
            value: function (n, i) {
              var o = n.x,
                s = n.y,
                l = n.text,
                u = n.textAnchor,
                d = n.foreColor,
                f = n.fontSize,
                m = n.fontFamily,
                y = n.fontWeight,
                x = n.cssClass,
                S = n.backgroundColor,
                _ = n.borderWidth,
                C = n.strokeDashArray,
                E = n.borderRadius,
                I = n.borderColor,
                H = n.appendTo,
                Y = H === void 0 ? ".apexcharts-annotations" : H,
                g = n.paddingLeft,
                w = g === void 0 ? 4 : g,
                A = n.paddingRight,
                D = A === void 0 ? 4 : A,
                W = n.paddingBottom,
                V = W === void 0 ? 2 : W,
                K = n.paddingTop,
                Z = K === void 0 ? 2 : K,
                re = this.w,
                ce = this.graphics.drawText({
                  x: o,
                  y: s,
                  text: l,
                  textAnchor: u || "start",
                  fontSize: f || "12px",
                  fontWeight: y || "regular",
                  fontFamily: m || re.config.chart.fontFamily,
                  foreColor: d || re.config.chart.foreColor,
                  cssClass: x,
                }),
                se = re.globals.dom.baseEl.querySelector(Y);
              se && se.appendChild(ce.node);
              var xe = ce.bbox();
              if (l) {
                var be = this.graphics.drawRect(
                  xe.x - w,
                  xe.y - Z,
                  xe.width + w + D,
                  xe.height + V + Z,
                  E,
                  S || "transparent",
                  1,
                  _,
                  I,
                  C,
                );
                se.insertBefore(be.node, ce.node);
              }
            },
          },
          {
            key: "addImage",
            value: function (n, i) {
              var o = this.w,
                s = n.path,
                l = n.x,
                u = l === void 0 ? 0 : l,
                d = n.y,
                f = d === void 0 ? 0 : d,
                m = n.width,
                y = m === void 0 ? 20 : m,
                x = n.height,
                S = x === void 0 ? 20 : x,
                _ = n.appendTo,
                C = _ === void 0 ? ".apexcharts-annotations" : _,
                E = o.globals.dom.Paper.image(s);
              E.size(y, S).move(u, f);
              var I = o.globals.dom.baseEl.querySelector(C);
              return I && I.appendChild(E.node), E;
            },
          },
          {
            key: "addXaxisAnnotationExternal",
            value: function (n, i, o) {
              return (
                this.addAnnotationExternal({
                  params: n,
                  pushToMemory: i,
                  context: o,
                  type: "xaxis",
                  contextMethod: o.addXaxisAnnotation,
                }),
                o
              );
            },
          },
          {
            key: "addYaxisAnnotationExternal",
            value: function (n, i, o) {
              return (
                this.addAnnotationExternal({
                  params: n,
                  pushToMemory: i,
                  context: o,
                  type: "yaxis",
                  contextMethod: o.addYaxisAnnotation,
                }),
                o
              );
            },
          },
          {
            key: "addPointAnnotationExternal",
            value: function (n, i, o) {
              return (
                this.invertAxis === void 0 &&
                  (this.invertAxis = o.w.globals.isBarHorizontal),
                this.addAnnotationExternal({
                  params: n,
                  pushToMemory: i,
                  context: o,
                  type: "point",
                  contextMethod: o.addPointAnnotation,
                }),
                o
              );
            },
          },
          {
            key: "addAnnotationExternal",
            value: function (n) {
              var i = n.params,
                o = n.pushToMemory,
                s = n.context,
                l = n.type,
                u = n.contextMethod,
                d = s,
                f = d.w,
                m = f.globals.dom.baseEl.querySelector(
                  ".apexcharts-".concat(l, "-annotations"),
                ),
                y = m.childNodes.length + 1,
                x = new me(),
                S = Object.assign(
                  {},
                  l === "xaxis"
                    ? x.xAxisAnnotation
                    : l === "yaxis"
                    ? x.yAxisAnnotation
                    : x.pointAnnotation,
                ),
                _ = O.extend(S, i);
              switch (l) {
                case "xaxis":
                  this.addXaxisAnnotation(_, m, y);
                  break;
                case "yaxis":
                  this.addYaxisAnnotation(_, m, y);
                  break;
                case "point":
                  this.addPointAnnotation(_, m, y);
              }
              var C = f.globals.dom.baseEl.querySelector(
                  ".apexcharts-"
                    .concat(l, "-annotations .apexcharts-")
                    .concat(l, "-annotation-label[rel='")
                    .concat(y, "']"),
                ),
                E = this.helpers.addBackgroundToAnno(C, _);
              return (
                E && m.insertBefore(E.node, C),
                o &&
                  f.globals.memory.methodsToExec.push({
                    context: d,
                    id: _.id ? _.id : O.randomId(),
                    method: u,
                    label: "addAnnotation",
                    params: i,
                  }),
                s
              );
            },
          },
          {
            key: "clearAnnotations",
            value: function (n) {
              var i = n.w,
                o = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxis-annotations, .apexcharts-xaxis-annotations, .apexcharts-point-annotations",
                );
              i.globals.memory.methodsToExec.map(function (s, l) {
                (s.label !== "addText" && s.label !== "addAnnotation") ||
                  i.globals.memory.methodsToExec.splice(l, 1);
              }),
                (o = O.listToArray(o)),
                Array.prototype.forEach.call(o, function (s) {
                  for (; s.firstChild; ) s.removeChild(s.firstChild);
                });
            },
          },
          {
            key: "removeAnnotation",
            value: function (n, i) {
              var o = n.w,
                s = o.globals.dom.baseEl.querySelectorAll(".".concat(i));
              s &&
                (o.globals.memory.methodsToExec.map(function (l, u) {
                  l.id === i && o.globals.memory.methodsToExec.splice(u, 1);
                }),
                Array.prototype.forEach.call(s, function (l) {
                  l.parentElement.removeChild(l);
                }));
            },
          },
        ]),
        T
      );
    })(),
    ue = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.months31 = [1, 3, 5, 7, 8, 10, 12]),
          (this.months30 = [2, 4, 6, 9, 11]),
          (this.daysCntOfYear = [
            0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334,
          ]);
      }
      return (
        v(T, [
          {
            key: "isValidDate",
            value: function (n) {
              return !isNaN(this.parseDate(n));
            },
          },
          {
            key: "getTimeStamp",
            value: function (n) {
              return Date.parse(n)
                ? this.w.config.xaxis.labels.datetimeUTC
                  ? new Date(new Date(n).toISOString().substr(0, 25)).getTime()
                  : new Date(n).getTime()
                : n;
            },
          },
          {
            key: "getDate",
            value: function (n) {
              return this.w.config.xaxis.labels.datetimeUTC
                ? new Date(new Date(n).toUTCString())
                : new Date(n);
            },
          },
          {
            key: "parseDate",
            value: function (n) {
              var i = Date.parse(n);
              if (!isNaN(i)) return this.getTimeStamp(n);
              var o = Date.parse(n.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
              return (o = this.getTimeStamp(o));
            },
          },
          {
            key: "parseDateWithTimezone",
            value: function (n) {
              return Date.parse(n.replace(/-/g, "/").replace(/[a-z]+/gi, " "));
            },
          },
          {
            key: "formatDate",
            value: function (n, i) {
              var o = this.w.globals.locale,
                s = this.w.config.xaxis.labels.datetimeUTC,
                l = ["\0"].concat(F(o.months)),
                u = [""].concat(F(o.shortMonths)),
                d = [""].concat(F(o.days)),
                f = [""].concat(F(o.shortDays));
              function m(V, K) {
                var Z = V + "";
                for (K = K || 2; Z.length < K; ) Z = "0" + Z;
                return Z;
              }
              var y = s ? n.getUTCFullYear() : n.getFullYear();
              i = (i = (i = i.replace(/(^|[^\\])yyyy+/g, "$1" + y)).replace(
                /(^|[^\\])yy/g,
                "$1" + y.toString().substr(2, 2),
              )).replace(/(^|[^\\])y/g, "$1" + y);
              var x = (s ? n.getUTCMonth() : n.getMonth()) + 1;
              i = (i = (i = (i = i.replace(
                /(^|[^\\])MMMM+/g,
                "$1" + l[0],
              )).replace(/(^|[^\\])MMM/g, "$1" + u[0])).replace(
                /(^|[^\\])MM/g,
                "$1" + m(x),
              )).replace(/(^|[^\\])M/g, "$1" + x);
              var S = s ? n.getUTCDate() : n.getDate();
              i = (i = (i = (i = i.replace(
                /(^|[^\\])dddd+/g,
                "$1" + d[0],
              )).replace(/(^|[^\\])ddd/g, "$1" + f[0])).replace(
                /(^|[^\\])dd/g,
                "$1" + m(S),
              )).replace(/(^|[^\\])d/g, "$1" + S);
              var _ = s ? n.getUTCHours() : n.getHours(),
                C = _ > 12 ? _ - 12 : _ === 0 ? 12 : _;
              i = (i = (i = (i = i.replace(
                /(^|[^\\])HH+/g,
                "$1" + m(_),
              )).replace(/(^|[^\\])H/g, "$1" + _)).replace(
                /(^|[^\\])hh+/g,
                "$1" + m(C),
              )).replace(/(^|[^\\])h/g, "$1" + C);
              var E = s ? n.getUTCMinutes() : n.getMinutes();
              i = (i = i.replace(/(^|[^\\])mm+/g, "$1" + m(E))).replace(
                /(^|[^\\])m/g,
                "$1" + E,
              );
              var I = s ? n.getUTCSeconds() : n.getSeconds();
              i = (i = i.replace(/(^|[^\\])ss+/g, "$1" + m(I))).replace(
                /(^|[^\\])s/g,
                "$1" + I,
              );
              var H = s ? n.getUTCMilliseconds() : n.getMilliseconds();
              (i = i.replace(/(^|[^\\])fff+/g, "$1" + m(H, 3))),
                (H = Math.round(H / 10)),
                (i = i.replace(/(^|[^\\])ff/g, "$1" + m(H))),
                (H = Math.round(H / 10));
              var Y = _ < 12 ? "AM" : "PM";
              i = (i = (i = i.replace(/(^|[^\\])f/g, "$1" + H)).replace(
                /(^|[^\\])TT+/g,
                "$1" + Y,
              )).replace(/(^|[^\\])T/g, "$1" + Y.charAt(0));
              var g = Y.toLowerCase();
              i = (i = i.replace(/(^|[^\\])tt+/g, "$1" + g)).replace(
                /(^|[^\\])t/g,
                "$1" + g.charAt(0),
              );
              var w = -n.getTimezoneOffset(),
                A = s || !w ? "Z" : w > 0 ? "+" : "-";
              if (!s) {
                var D = (w = Math.abs(w)) % 60;
                A += m(Math.floor(w / 60)) + ":" + m(D);
              }
              i = i.replace(/(^|[^\\])K/g, "$1" + A);
              var W = (s ? n.getUTCDay() : n.getDay()) + 1;
              return (i = (i = (i = (i = (i = i.replace(
                new RegExp(d[0], "g"),
                d[W],
              )).replace(new RegExp(f[0], "g"), f[W])).replace(
                new RegExp(l[0], "g"),
                l[x],
              )).replace(new RegExp(u[0], "g"), u[x])).replace(/\\(.)/g, "$1"));
            },
          },
          {
            key: "getTimeUnitsfromTimestamp",
            value: function (n, i, o) {
              var s = this.w;
              s.config.xaxis.min !== void 0 && (n = s.config.xaxis.min),
                s.config.xaxis.max !== void 0 && (i = s.config.xaxis.max);
              var l = this.getDate(n),
                u = this.getDate(i),
                d = this.formatDate(l, "yyyy MM dd HH mm ss fff").split(" "),
                f = this.formatDate(u, "yyyy MM dd HH mm ss fff").split(" ");
              return {
                minMillisecond: parseInt(d[6], 10),
                maxMillisecond: parseInt(f[6], 10),
                minSecond: parseInt(d[5], 10),
                maxSecond: parseInt(f[5], 10),
                minMinute: parseInt(d[4], 10),
                maxMinute: parseInt(f[4], 10),
                minHour: parseInt(d[3], 10),
                maxHour: parseInt(f[3], 10),
                minDate: parseInt(d[2], 10),
                maxDate: parseInt(f[2], 10),
                minMonth: parseInt(d[1], 10) - 1,
                maxMonth: parseInt(f[1], 10) - 1,
                minYear: parseInt(d[0], 10),
                maxYear: parseInt(f[0], 10),
              };
            },
          },
          {
            key: "isLeapYear",
            value: function (n) {
              return (n % 4 == 0 && n % 100 != 0) || n % 400 == 0;
            },
          },
          {
            key: "calculcateLastDaysOfMonth",
            value: function (n, i, o) {
              return this.determineDaysOfMonths(n, i) - o;
            },
          },
          {
            key: "determineDaysOfYear",
            value: function (n) {
              var i = 365;
              return this.isLeapYear(n) && (i = 366), i;
            },
          },
          {
            key: "determineRemainingDaysOfYear",
            value: function (n, i, o) {
              var s = this.daysCntOfYear[i] + o;
              return i > 1 && this.isLeapYear() && s++, s;
            },
          },
          {
            key: "determineDaysOfMonths",
            value: function (n, i) {
              var o = 30;
              switch (((n = O.monthMod(n)), !0)) {
                case this.months30.indexOf(n) > -1:
                  n === 2 && (o = this.isLeapYear(i) ? 29 : 28);
                  break;
                case this.months31.indexOf(n) > -1:
                default:
                  o = 31;
              }
              return o;
            },
          },
        ]),
        T
      );
    })(),
    oe = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.tooltipKeyFormat = "dd MMM");
      }
      return (
        v(T, [
          {
            key: "xLabelFormat",
            value: function (n, i, o, s) {
              var l = this.w;
              if (
                l.config.xaxis.type === "datetime" &&
                l.config.xaxis.labels.formatter === void 0 &&
                l.config.tooltip.x.formatter === void 0
              ) {
                var u = new ue(this.ctx);
                return u.formatDate(u.getDate(i), l.config.tooltip.x.format);
              }
              return n(i, o, s);
            },
          },
          {
            key: "defaultGeneralFormatter",
            value: function (n) {
              return Array.isArray(n)
                ? n.map(function (i) {
                    return i;
                  })
                : n;
            },
          },
          {
            key: "defaultYFormatter",
            value: function (n, i, o) {
              var s = this.w;
              return (
                O.isNumber(n) &&
                  (n =
                    s.globals.yValueDecimal !== 0
                      ? n.toFixed(
                          i.decimalsInFloat !== void 0
                            ? i.decimalsInFloat
                            : s.globals.yValueDecimal,
                        )
                      : s.globals.maxYArr[o] - s.globals.minYArr[o] < 5
                      ? n.toFixed(1)
                      : n.toFixed(0)),
                n
              );
            },
          },
          {
            key: "setLabelFormatters",
            value: function () {
              var n = this,
                i = this.w;
              return (
                (i.globals.xaxisTooltipFormatter = function (o) {
                  return n.defaultGeneralFormatter(o);
                }),
                (i.globals.ttKeyFormatter = function (o) {
                  return n.defaultGeneralFormatter(o);
                }),
                (i.globals.ttZFormatter = function (o) {
                  return o;
                }),
                (i.globals.legendFormatter = function (o) {
                  return n.defaultGeneralFormatter(o);
                }),
                i.config.xaxis.labels.formatter !== void 0
                  ? (i.globals.xLabelFormatter =
                      i.config.xaxis.labels.formatter)
                  : (i.globals.xLabelFormatter = function (o) {
                      if (O.isNumber(o)) {
                        if (
                          !i.config.xaxis.convertedCatToNumeric &&
                          i.config.xaxis.type === "numeric"
                        ) {
                          if (O.isNumber(i.config.xaxis.decimalsInFloat))
                            return o.toFixed(i.config.xaxis.decimalsInFloat);
                          var s = i.globals.maxX - i.globals.minX;
                          return s > 0 && s < 100 ? o.toFixed(1) : o.toFixed(0);
                        }
                        return i.globals.isBarHorizontal &&
                          i.globals.maxY - i.globals.minYArr < 4
                          ? o.toFixed(1)
                          : o.toFixed(0);
                      }
                      return o;
                    }),
                typeof i.config.tooltip.x.formatter == "function"
                  ? (i.globals.ttKeyFormatter = i.config.tooltip.x.formatter)
                  : (i.globals.ttKeyFormatter = i.globals.xLabelFormatter),
                typeof i.config.xaxis.tooltip.formatter == "function" &&
                  (i.globals.xaxisTooltipFormatter =
                    i.config.xaxis.tooltip.formatter),
                (Array.isArray(i.config.tooltip.y) ||
                  i.config.tooltip.y.formatter !== void 0) &&
                  (i.globals.ttVal = i.config.tooltip.y),
                i.config.tooltip.z.formatter !== void 0 &&
                  (i.globals.ttZFormatter = i.config.tooltip.z.formatter),
                i.config.legend.formatter !== void 0 &&
                  (i.globals.legendFormatter = i.config.legend.formatter),
                i.config.yaxis.forEach(function (o, s) {
                  o.labels.formatter !== void 0
                    ? (i.globals.yLabelFormatters[s] = o.labels.formatter)
                    : (i.globals.yLabelFormatters[s] = function (l) {
                        return i.globals.xyCharts
                          ? Array.isArray(l)
                            ? l.map(function (u) {
                                return n.defaultYFormatter(u, o, s);
                              })
                            : n.defaultYFormatter(l, o, s)
                          : l;
                      });
                }),
                i.globals
              );
            },
          },
          {
            key: "heatmapLabelFormatters",
            value: function () {
              var n = this.w;
              if (n.config.chart.type === "heatmap") {
                n.globals.yAxisScale[0].result = n.globals.seriesNames.slice();
                var i = n.globals.seriesNames.reduce(function (o, s) {
                  return o.length > s.length ? o : s;
                }, 0);
                (n.globals.yAxisScale[0].niceMax = i),
                  (n.globals.yAxisScale[0].niceMin = i);
              }
            },
          },
        ]),
        T
      );
    })(),
    ve = function (T) {
      var n,
        i = T.isTimeline,
        o = T.ctx,
        s = T.seriesIndex,
        l = T.dataPointIndex,
        u = T.y1,
        d = T.y2,
        f = T.w,
        m = f.globals.seriesRangeStart[s][l],
        y = f.globals.seriesRangeEnd[s][l],
        x = f.globals.labels[l],
        S = f.config.series[s].name ? f.config.series[s].name : "",
        _ = f.globals.ttKeyFormatter,
        C = f.config.tooltip.y.title.formatter,
        E = { w: f, seriesIndex: s, dataPointIndex: l, start: m, end: y };
      typeof C == "function" && (S = C(S, E)),
        (n = f.config.series[s].data[l]) !== null &&
          n !== void 0 &&
          n.x &&
          (x = f.config.series[s].data[l].x),
        i ||
          (f.config.xaxis.type === "datetime" &&
            (x = new oe(o).xLabelFormat(f.globals.ttKeyFormatter, x, x, {
              i: void 0,
              dateFormatter: new ue(o).formatDate,
              w: f,
            }))),
        typeof _ == "function" && (x = _(x, E)),
        Number.isFinite(u) && Number.isFinite(d) && ((m = u), (y = d));
      var I = "",
        H = "",
        Y = f.globals.colors[s];
      if (f.config.tooltip.x.formatter === void 0)
        if (f.config.xaxis.type === "datetime") {
          var g = new ue(o);
          (I = g.formatDate(g.getDate(m), f.config.tooltip.x.format)),
            (H = g.formatDate(g.getDate(y), f.config.tooltip.x.format));
        } else (I = m), (H = y);
      else
        (I = f.config.tooltip.x.formatter(m)),
          (H = f.config.tooltip.x.formatter(y));
      return {
        start: m,
        end: y,
        startVal: I,
        endVal: H,
        ylabel: x,
        color: Y,
        seriesName: S,
      };
    },
    ye = function (T) {
      var n = T.color,
        i = T.seriesName,
        o = T.ylabel,
        s = T.start,
        l = T.end,
        u = T.seriesIndex,
        d = T.dataPointIndex,
        f = T.ctx.tooltip.tooltipLabels.getFormatters(u);
      (s = f.yLbFormatter(s)), (l = f.yLbFormatter(l));
      var m = f.yLbFormatter(T.w.globals.series[u][d]),
        y = `<span class="value start-value">
  `
          .concat(
            s,
            `
  </span> <span class="separator">-</span> <span class="value end-value">
  `,
          )
          .concat(
            l,
            `
  </span>`,
          );
      return (
        '<div class="apexcharts-tooltip-rangebar"><div> <span class="series-name" style="color: ' +
        n +
        '">' +
        (i || "") +
        '</span></div><div> <span class="category">' +
        o +
        ": </span> " +
        (T.w.globals.comboCharts
          ? T.w.config.series[u].type === "rangeArea" ||
            T.w.config.series[u].type === "rangeBar"
            ? y
            : "<span>".concat(m, "</span>")
          : y) +
        " </div></div>"
      );
    },
    te = (function () {
      function T(n) {
        h(this, T), (this.opts = n);
      }
      return (
        v(T, [
          {
            key: "hideYAxis",
            value: function () {
              (this.opts.yaxis[0].show = !1),
                (this.opts.yaxis[0].title.text = ""),
                (this.opts.yaxis[0].axisBorder.show = !1),
                (this.opts.yaxis[0].axisTicks.show = !1),
                (this.opts.yaxis[0].floating = !0);
            },
          },
          {
            key: "line",
            value: function () {
              return {
                chart: { animations: { easing: "swing" } },
                dataLabels: { enabled: !1 },
                stroke: { width: 5, curve: "straight" },
                markers: { size: 0, hover: { sizeOffset: 6 } },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "sparkline",
            value: function (n) {
              return (
                this.hideYAxis(),
                O.extend(n, {
                  grid: {
                    show: !1,
                    padding: { left: 0, right: 0, top: 0, bottom: 0 },
                  },
                  legend: { show: !1 },
                  xaxis: {
                    labels: { show: !1 },
                    tooltip: { enabled: !1 },
                    axisBorder: { show: !1 },
                    axisTicks: { show: !1 },
                  },
                  chart: { toolbar: { show: !1 }, zoom: { enabled: !1 } },
                  dataLabels: { enabled: !1 },
                })
              );
            },
          },
          {
            key: "bar",
            value: function () {
              return {
                chart: { stacked: !1, animations: { easing: "swing" } },
                plotOptions: { bar: { dataLabels: { position: "center" } } },
                dataLabels: {
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                },
                stroke: { width: 0, lineCap: "round" },
                fill: { opacity: 0.85 },
                legend: { markers: { shape: "square", radius: 2, size: 8 } },
                tooltip: { shared: !1, intersect: !0 },
                xaxis: {
                  tooltip: { enabled: !1 },
                  tickPlacement: "between",
                  crosshairs: {
                    width: "barWidth",
                    position: "back",
                    fill: { type: "gradient" },
                    dropShadow: { enabled: !1 },
                    stroke: { width: 0 },
                  },
                },
              };
            },
          },
          {
            key: "funnel",
            value: function () {
              return (
                this.hideYAxis(),
                a(
                  a({}, this.bar()),
                  {},
                  {
                    chart: {
                      animations: {
                        easing: "linear",
                        speed: 800,
                        animateGradually: { enabled: !1 },
                      },
                    },
                    plotOptions: {
                      bar: {
                        horizontal: !0,
                        borderRadiusApplication: "around",
                        borderRadius: 0,
                        dataLabels: { position: "center" },
                      },
                    },
                    grid: { show: !1, padding: { left: 0, right: 0 } },
                    xaxis: {
                      labels: { show: !1 },
                      tooltip: { enabled: !1 },
                      axisBorder: { show: !1 },
                      axisTicks: { show: !1 },
                    },
                  },
                )
              );
            },
          },
          {
            key: "candlestick",
            value: function () {
              var n = this;
              return {
                stroke: { width: 1, colors: ["#333"] },
                fill: { opacity: 1 },
                dataLabels: { enabled: !1 },
                tooltip: {
                  shared: !0,
                  custom: function (i) {
                    var o = i.seriesIndex,
                      s = i.dataPointIndex,
                      l = i.w;
                    return n._getBoxTooltip(
                      l,
                      o,
                      s,
                      ["Open", "High", "", "Low", "Close"],
                      "candlestick",
                    );
                  },
                },
                states: { active: { filter: { type: "none" } } },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "boxPlot",
            value: function () {
              var n = this;
              return {
                chart: { animations: { dynamicAnimation: { enabled: !1 } } },
                stroke: { width: 1, colors: ["#24292e"] },
                dataLabels: { enabled: !1 },
                tooltip: {
                  shared: !0,
                  custom: function (i) {
                    var o = i.seriesIndex,
                      s = i.dataPointIndex,
                      l = i.w;
                    return n._getBoxTooltip(
                      l,
                      o,
                      s,
                      ["Minimum", "Q1", "Median", "Q3", "Maximum"],
                      "boxPlot",
                    );
                  },
                },
                markers: { size: 5, strokeWidth: 1, strokeColors: "#111" },
                xaxis: { crosshairs: { width: 1 } },
              };
            },
          },
          {
            key: "rangeBar",
            value: function () {
              return {
                chart: { animations: { animateGradually: !1 } },
                stroke: { width: 0, lineCap: "square" },
                plotOptions: {
                  bar: { borderRadius: 0, dataLabels: { position: "center" } },
                },
                dataLabels: {
                  enabled: !1,
                  formatter: function (n, i) {
                    i.ctx;
                    var o = i.seriesIndex,
                      s = i.dataPointIndex,
                      l = i.w,
                      u = function () {
                        var d = l.globals.seriesRangeStart[o][s];
                        return l.globals.seriesRangeEnd[o][s] - d;
                      };
                    return l.globals.comboCharts
                      ? l.config.series[o].type === "rangeBar" ||
                        l.config.series[o].type === "rangeArea"
                        ? u()
                        : n
                      : u();
                  },
                  background: { enabled: !1 },
                  style: { colors: ["#fff"] },
                },
                markers: { size: 10 },
                tooltip: {
                  shared: !1,
                  followCursor: !0,
                  custom: function (n) {
                    return n.w.config.plotOptions &&
                      n.w.config.plotOptions.bar &&
                      n.w.config.plotOptions.bar.horizontal
                      ? (function (i) {
                          var o = ve(a(a({}, i), {}, { isTimeline: !0 })),
                            s = o.color,
                            l = o.seriesName,
                            u = o.ylabel,
                            d = o.startVal,
                            f = o.endVal;
                          return ye(
                            a(
                              a({}, i),
                              {},
                              {
                                color: s,
                                seriesName: l,
                                ylabel: u,
                                start: d,
                                end: f,
                              },
                            ),
                          );
                        })(n)
                      : (function (i) {
                          var o = ve(i),
                            s = o.color,
                            l = o.seriesName,
                            u = o.ylabel,
                            d = o.start,
                            f = o.end;
                          return ye(
                            a(
                              a({}, i),
                              {},
                              {
                                color: s,
                                seriesName: l,
                                ylabel: u,
                                start: d,
                                end: f,
                              },
                            ),
                          );
                        })(n);
                  },
                },
                xaxis: {
                  tickPlacement: "between",
                  tooltip: { enabled: !1 },
                  crosshairs: { stroke: { width: 0 } },
                },
              };
            },
          },
          {
            key: "dumbbell",
            value: function (n) {
              var i, o;
              return (
                ((i = n.plotOptions.bar) !== null &&
                  i !== void 0 &&
                  i.barHeight) ||
                  (n.plotOptions.bar.barHeight = 2),
                ((o = n.plotOptions.bar) !== null &&
                  o !== void 0 &&
                  o.columnWidth) ||
                  (n.plotOptions.bar.columnWidth = 2),
                n
              );
            },
          },
          {
            key: "area",
            value: function () {
              return {
                stroke: {
                  width: 4,
                  fill: {
                    type: "solid",
                    gradient: {
                      inverseColors: !1,
                      shade: "light",
                      type: "vertical",
                      opacityFrom: 0.65,
                      opacityTo: 0.5,
                      stops: [0, 100, 100],
                    },
                  },
                },
                fill: {
                  type: "gradient",
                  gradient: {
                    inverseColors: !1,
                    shade: "light",
                    type: "vertical",
                    opacityFrom: 0.65,
                    opacityTo: 0.5,
                    stops: [0, 100, 100],
                  },
                },
                markers: { size: 0, hover: { sizeOffset: 6 } },
                tooltip: { followCursor: !1 },
              };
            },
          },
          {
            key: "rangeArea",
            value: function () {
              return {
                stroke: { curve: "straight", width: 0 },
                fill: { type: "solid", opacity: 0.6 },
                markers: { size: 0 },
                states: {
                  hover: { filter: { type: "none" } },
                  active: { filter: { type: "none" } },
                },
                tooltip: {
                  intersect: !1,
                  shared: !0,
                  followCursor: !0,
                  custom: function (n) {
                    return (function (i) {
                      var o = ve(i),
                        s = o.color,
                        l = o.seriesName,
                        u = o.ylabel,
                        d = o.start,
                        f = o.end;
                      return ye(
                        a(
                          a({}, i),
                          {},
                          {
                            color: s,
                            seriesName: l,
                            ylabel: u,
                            start: d,
                            end: f,
                          },
                        ),
                      );
                    })(n);
                  },
                },
              };
            },
          },
          {
            key: "brush",
            value: function (n) {
              return O.extend(n, {
                chart: {
                  toolbar: { autoSelected: "selection", show: !1 },
                  zoom: { enabled: !1 },
                },
                dataLabels: { enabled: !1 },
                stroke: { width: 1 },
                tooltip: { enabled: !1 },
                xaxis: { tooltip: { enabled: !1 } },
              });
            },
          },
          {
            key: "stacked100",
            value: function (n) {
              (n.dataLabels = n.dataLabels || {}),
                (n.dataLabels.formatter = n.dataLabels.formatter || void 0);
              var i = n.dataLabels.formatter;
              return (
                n.yaxis.forEach(function (o, s) {
                  (n.yaxis[s].min = 0), (n.yaxis[s].max = 100);
                }),
                n.chart.type === "bar" &&
                  (n.dataLabels.formatter =
                    i ||
                    function (o) {
                      return typeof o == "number" && o ? o.toFixed(0) + "%" : o;
                    }),
                n
              );
            },
          },
          {
            key: "stackedBars",
            value: function () {
              var n = this.bar();
              return a(
                a({}, n),
                {},
                {
                  plotOptions: a(
                    a({}, n.plotOptions),
                    {},
                    {
                      bar: a(
                        a({}, n.plotOptions.bar),
                        {},
                        {
                          borderRadiusApplication: "end",
                          borderRadiusWhenStacked: "last",
                        },
                      ),
                    },
                  ),
                },
              );
            },
          },
          {
            key: "convertCatToNumeric",
            value: function (n) {
              return (n.xaxis.convertedCatToNumeric = !0), n;
            },
          },
          {
            key: "convertCatToNumericXaxis",
            value: function (n, i, o) {
              (n.xaxis.type = "numeric"),
                (n.xaxis.labels = n.xaxis.labels || {}),
                (n.xaxis.labels.formatter =
                  n.xaxis.labels.formatter ||
                  function (u) {
                    return O.isNumber(u) ? Math.floor(u) : u;
                  });
              var s = n.xaxis.labels.formatter,
                l =
                  n.xaxis.categories && n.xaxis.categories.length
                    ? n.xaxis.categories
                    : n.labels;
              return (
                o &&
                  o.length &&
                  (l = o.map(function (u) {
                    return Array.isArray(u) ? u : String(u);
                  })),
                l &&
                  l.length &&
                  (n.xaxis.labels.formatter = function (u) {
                    return O.isNumber(u) ? s(l[Math.floor(u) - 1]) : s(u);
                  }),
                (n.xaxis.categories = []),
                (n.labels = []),
                (n.xaxis.tickAmount = n.xaxis.tickAmount || "dataPoints"),
                n
              );
            },
          },
          {
            key: "bubble",
            value: function () {
              return {
                dataLabels: { style: { colors: ["#fff"] } },
                tooltip: { shared: !1, intersect: !0 },
                xaxis: { crosshairs: { width: 0 } },
                fill: {
                  type: "solid",
                  gradient: {
                    shade: "light",
                    inverse: !0,
                    shadeIntensity: 0.55,
                    opacityFrom: 0.4,
                    opacityTo: 0.8,
                  },
                },
              };
            },
          },
          {
            key: "scatter",
            value: function () {
              return {
                dataLabels: { enabled: !1 },
                tooltip: { shared: !1, intersect: !0 },
                markers: { size: 6, strokeWidth: 1, hover: { sizeOffset: 2 } },
              };
            },
          },
          {
            key: "heatmap",
            value: function () {
              return {
                chart: { stacked: !1 },
                fill: { opacity: 1 },
                dataLabels: { style: { colors: ["#fff"] } },
                stroke: { colors: ["#fff"] },
                tooltip: {
                  followCursor: !0,
                  marker: { show: !1 },
                  x: { show: !1 },
                },
                legend: {
                  position: "top",
                  markers: { shape: "square", size: 10, offsetY: 2 },
                },
                grid: { padding: { right: 20 } },
              };
            },
          },
          {
            key: "treemap",
            value: function () {
              return {
                chart: { zoom: { enabled: !1 } },
                dataLabels: {
                  style: { fontSize: 14, fontWeight: 600, colors: ["#fff"] },
                },
                stroke: { show: !0, width: 2, colors: ["#fff"] },
                legend: { show: !1 },
                fill: { gradient: { stops: [0, 100] } },
                tooltip: { followCursor: !0, x: { show: !1 } },
                grid: { padding: { left: 0, right: 0 } },
                xaxis: { crosshairs: { show: !1 }, tooltip: { enabled: !1 } },
              };
            },
          },
          {
            key: "pie",
            value: function () {
              return {
                chart: { toolbar: { show: !1 } },
                plotOptions: { pie: { donut: { labels: { show: !1 } } } },
                dataLabels: {
                  formatter: function (n) {
                    return n.toFixed(1) + "%";
                  },
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                  dropShadow: { enabled: !0 },
                },
                stroke: { colors: ["#fff"] },
                fill: {
                  opacity: 1,
                  gradient: { shade: "light", stops: [0, 100] },
                },
                tooltip: { theme: "dark", fillSeriesColor: !0 },
                legend: { position: "right" },
              };
            },
          },
          {
            key: "donut",
            value: function () {
              return {
                chart: { toolbar: { show: !1 } },
                dataLabels: {
                  formatter: function (n) {
                    return n.toFixed(1) + "%";
                  },
                  style: { colors: ["#fff"] },
                  background: { enabled: !1 },
                  dropShadow: { enabled: !0 },
                },
                stroke: { colors: ["#fff"] },
                fill: {
                  opacity: 1,
                  gradient: {
                    shade: "light",
                    shadeIntensity: 0.35,
                    stops: [80, 100],
                    opacityFrom: 1,
                    opacityTo: 1,
                  },
                },
                tooltip: { theme: "dark", fillSeriesColor: !0 },
                legend: { position: "right" },
              };
            },
          },
          {
            key: "polarArea",
            value: function () {
              return (
                (this.opts.yaxis[0].tickAmount = this.opts.yaxis[0].tickAmount
                  ? this.opts.yaxis[0].tickAmount
                  : 6),
                {
                  chart: { toolbar: { show: !1 } },
                  dataLabels: {
                    formatter: function (n) {
                      return n.toFixed(1) + "%";
                    },
                    enabled: !1,
                  },
                  stroke: { show: !0, width: 2 },
                  fill: { opacity: 0.7 },
                  tooltip: { theme: "dark", fillSeriesColor: !0 },
                  legend: { position: "right" },
                }
              );
            },
          },
          {
            key: "radar",
            value: function () {
              return (
                (this.opts.yaxis[0].labels.offsetY = this.opts.yaxis[0].labels
                  .offsetY
                  ? this.opts.yaxis[0].labels.offsetY
                  : 6),
                {
                  dataLabels: { enabled: !1, style: { fontSize: "11px" } },
                  stroke: { width: 2 },
                  markers: { size: 3, strokeWidth: 1, strokeOpacity: 1 },
                  fill: { opacity: 0.2 },
                  tooltip: { shared: !1, intersect: !0, followCursor: !0 },
                  grid: { show: !1 },
                  xaxis: {
                    labels: {
                      formatter: function (n) {
                        return n;
                      },
                      style: { colors: ["#a8a8a8"], fontSize: "11px" },
                    },
                    tooltip: { enabled: !1 },
                    crosshairs: { show: !1 },
                  },
                }
              );
            },
          },
          {
            key: "radialBar",
            value: function () {
              return {
                chart: {
                  animations: { dynamicAnimation: { enabled: !0, speed: 800 } },
                  toolbar: { show: !1 },
                },
                fill: {
                  gradient: {
                    shade: "dark",
                    shadeIntensity: 0.4,
                    inverseColors: !1,
                    type: "diagonal2",
                    opacityFrom: 1,
                    opacityTo: 1,
                    stops: [70, 98, 100],
                  },
                },
                legend: { show: !1, position: "right" },
                tooltip: { enabled: !1, fillSeriesColor: !0 },
              };
            },
          },
          {
            key: "_getBoxTooltip",
            value: function (n, i, o, s, l) {
              var u = n.globals.seriesCandleO[i][o],
                d = n.globals.seriesCandleH[i][o],
                f = n.globals.seriesCandleM[i][o],
                m = n.globals.seriesCandleL[i][o],
                y = n.globals.seriesCandleC[i][o];
              return n.config.series[i].type && n.config.series[i].type !== l
                ? `<div class="apexcharts-custom-tooltip">
          `
                    .concat(
                      n.config.series[i].name
                        ? n.config.series[i].name
                        : "series-" + (i + 1),
                      ": <strong>",
                    )
                    .concat(
                      n.globals.series[i][o],
                      `</strong>
        </div>`,
                    )
                : '<div class="apexcharts-tooltip-box apexcharts-tooltip-'.concat(
                    n.config.chart.type,
                    '">',
                  ) +
                    "<div>".concat(s[0], ': <span class="value">') +
                    u +
                    "</span></div>" +
                    "<div>".concat(s[1], ': <span class="value">') +
                    d +
                    "</span></div>" +
                    (f
                      ? "<div>".concat(s[2], ': <span class="value">') +
                        f +
                        "</span></div>"
                      : "") +
                    "<div>".concat(s[3], ': <span class="value">') +
                    m +
                    "</span></div>" +
                    "<div>".concat(s[4], ': <span class="value">') +
                    y +
                    "</span></div></div>";
            },
          },
        ]),
        T
      );
    })(),
    pe = (function () {
      function T(n) {
        h(this, T), (this.opts = n);
      }
      return (
        v(T, [
          {
            key: "init",
            value: function (n) {
              var i = n.responsiveOverride,
                o = this.opts,
                s = new me(),
                l = new te(o);
              (this.chartType = o.chart.type),
                (o = this.extendYAxis(o)),
                (o = this.extendAnnotations(o));
              var u = s.init(),
                d = {};
              if (o && c(o) === "object") {
                var f,
                  m,
                  y,
                  x,
                  S,
                  _,
                  C,
                  E,
                  I,
                  H,
                  Y = {};
                (Y =
                  [
                    "line",
                    "area",
                    "bar",
                    "candlestick",
                    "boxPlot",
                    "rangeBar",
                    "rangeArea",
                    "bubble",
                    "scatter",
                    "heatmap",
                    "treemap",
                    "pie",
                    "polarArea",
                    "donut",
                    "radar",
                    "radialBar",
                  ].indexOf(o.chart.type) !== -1
                    ? l[o.chart.type]()
                    : l.line()),
                  (f = o.plotOptions) !== null &&
                    f !== void 0 &&
                    (m = f.bar) !== null &&
                    m !== void 0 &&
                    m.isFunnel &&
                    (Y = l.funnel()),
                  o.chart.stacked &&
                    o.chart.type === "bar" &&
                    (Y = l.stackedBars()),
                  (y = o.chart.brush) !== null &&
                    y !== void 0 &&
                    y.enabled &&
                    (Y = l.brush(Y)),
                  o.chart.stacked &&
                    o.chart.stackType === "100%" &&
                    (o = l.stacked100(o)),
                  (x = o.plotOptions) !== null &&
                    x !== void 0 &&
                    (S = x.bar) !== null &&
                    S !== void 0 &&
                    S.isDumbbell &&
                    (o = l.dumbbell(o)),
                  ((_ = o) === null ||
                  _ === void 0 ||
                  (C = _.stroke) === null ||
                  C === void 0
                    ? void 0
                    : C.curve) === "monotoneCubic" &&
                    (o.stroke.curve = "smooth"),
                  this.checkForDarkTheme(window.Apex),
                  this.checkForDarkTheme(o),
                  (o.xaxis = o.xaxis || window.Apex.xaxis || {}),
                  i || (o.xaxis.convertedCatToNumeric = !1),
                  (((E = (o = this.checkForCatToNumericXAxis(
                    this.chartType,
                    Y,
                    o,
                  )).chart.sparkline) !== null &&
                    E !== void 0 &&
                    E.enabled) ||
                    ((I = window.Apex.chart) !== null &&
                      I !== void 0 &&
                      (H = I.sparkline) !== null &&
                      H !== void 0 &&
                      H.enabled)) &&
                    (Y = l.sparkline(Y)),
                  (d = O.extend(u, Y));
              }
              var g = O.extend(d, window.Apex);
              return (u = O.extend(g, o)), (u = this.handleUserInputErrors(u));
            },
          },
          {
            key: "checkForCatToNumericXAxis",
            value: function (n, i, o) {
              var s,
                l,
                u = new te(o),
                d =
                  (n === "bar" || n === "boxPlot") &&
                  ((s = o.plotOptions) === null ||
                  s === void 0 ||
                  (l = s.bar) === null ||
                  l === void 0
                    ? void 0
                    : l.horizontal),
                f =
                  n === "pie" ||
                  n === "polarArea" ||
                  n === "donut" ||
                  n === "radar" ||
                  n === "radialBar" ||
                  n === "heatmap",
                m = o.xaxis.type !== "datetime" && o.xaxis.type !== "numeric",
                y = o.xaxis.tickPlacement
                  ? o.xaxis.tickPlacement
                  : i.xaxis && i.xaxis.tickPlacement;
              return (
                d ||
                  f ||
                  !m ||
                  y === "between" ||
                  (o = u.convertCatToNumeric(o)),
                o
              );
            },
          },
          {
            key: "extendYAxis",
            value: function (n, i) {
              var o = new me();
              (n.yaxis === void 0 ||
                !n.yaxis ||
                (Array.isArray(n.yaxis) && n.yaxis.length === 0)) &&
                (n.yaxis = {}),
                n.yaxis.constructor !== Array &&
                  window.Apex.yaxis &&
                  window.Apex.yaxis.constructor !== Array &&
                  (n.yaxis = O.extend(n.yaxis, window.Apex.yaxis)),
                n.yaxis.constructor !== Array
                  ? (n.yaxis = [O.extend(o.yAxis, n.yaxis)])
                  : (n.yaxis = O.extendArray(n.yaxis, o.yAxis));
              var s = !1;
              n.yaxis.forEach(function (u) {
                u.logarithmic && (s = !0);
              });
              var l = n.series;
              return (
                i && !l && (l = i.config.series),
                s &&
                  l.length !== n.yaxis.length &&
                  l.length &&
                  (n.yaxis = l.map(function (u, d) {
                    if (
                      (u.name || (l[d].name = "series-".concat(d + 1)),
                      n.yaxis[d])
                    )
                      return (n.yaxis[d].seriesName = l[d].name), n.yaxis[d];
                    var f = O.extend(o.yAxis, n.yaxis[0]);
                    return (f.show = !1), f;
                  })),
                s &&
                  l.length > 1 &&
                  l.length !== n.yaxis.length &&
                  console.warn(
                    "A multi-series logarithmic chart should have equal number of series and y-axes",
                  ),
                n
              );
            },
          },
          {
            key: "extendAnnotations",
            value: function (n) {
              return (
                n.annotations === void 0 &&
                  ((n.annotations = {}),
                  (n.annotations.yaxis = []),
                  (n.annotations.xaxis = []),
                  (n.annotations.points = [])),
                (n = this.extendYAxisAnnotations(n)),
                (n = this.extendXAxisAnnotations(n)),
                (n = this.extendPointAnnotations(n))
              );
            },
          },
          {
            key: "extendYAxisAnnotations",
            value: function (n) {
              var i = new me();
              return (
                (n.annotations.yaxis = O.extendArray(
                  n.annotations.yaxis !== void 0 ? n.annotations.yaxis : [],
                  i.yAxisAnnotation,
                )),
                n
              );
            },
          },
          {
            key: "extendXAxisAnnotations",
            value: function (n) {
              var i = new me();
              return (
                (n.annotations.xaxis = O.extendArray(
                  n.annotations.xaxis !== void 0 ? n.annotations.xaxis : [],
                  i.xAxisAnnotation,
                )),
                n
              );
            },
          },
          {
            key: "extendPointAnnotations",
            value: function (n) {
              var i = new me();
              return (
                (n.annotations.points = O.extendArray(
                  n.annotations.points !== void 0 ? n.annotations.points : [],
                  i.pointAnnotation,
                )),
                n
              );
            },
          },
          {
            key: "checkForDarkTheme",
            value: function (n) {
              n.theme &&
                n.theme.mode === "dark" &&
                (n.tooltip || (n.tooltip = {}),
                n.tooltip.theme !== "light" && (n.tooltip.theme = "dark"),
                n.chart.foreColor || (n.chart.foreColor = "#f6f7f8"),
                n.chart.background || (n.chart.background = "#424242"),
                n.theme.palette || (n.theme.palette = "palette4"));
            },
          },
          {
            key: "handleUserInputErrors",
            value: function (n) {
              var i = n;
              if (i.tooltip.shared && i.tooltip.intersect)
                throw new Error(
                  "tooltip.shared cannot be enabled when tooltip.intersect is true. Turn off any other option by setting it to false.",
                );
              if (i.chart.type === "bar" && i.plotOptions.bar.horizontal) {
                if (i.yaxis.length > 1)
                  throw new Error(
                    "Multiple Y Axis for bars are not supported. Switch to column chart by setting plotOptions.bar.horizontal=false",
                  );
                i.yaxis[0].reversed && (i.yaxis[0].opposite = !0),
                  (i.xaxis.tooltip.enabled = !1),
                  (i.yaxis[0].tooltip.enabled = !1),
                  (i.chart.zoom.enabled = !1);
              }
              return (
                (i.chart.type !== "bar" && i.chart.type !== "rangeBar") ||
                  (i.tooltip.shared &&
                    i.xaxis.crosshairs.width === "barWidth" &&
                    i.series.length > 1 &&
                    (i.xaxis.crosshairs.width = "tickWidth")),
                (i.chart.type !== "candlestick" &&
                  i.chart.type !== "boxPlot") ||
                  (i.yaxis[0].reversed &&
                    (console.warn(
                      "Reversed y-axis in ".concat(
                        i.chart.type,
                        " chart is not supported.",
                      ),
                    ),
                    (i.yaxis[0].reversed = !1))),
                i
              );
            },
          },
        ]),
        T
      );
    })(),
    Se = (function () {
      function T() {
        h(this, T);
      }
      return (
        v(T, [
          {
            key: "initGlobalVars",
            value: function (n) {
              (n.series = []),
                (n.seriesCandleO = []),
                (n.seriesCandleH = []),
                (n.seriesCandleM = []),
                (n.seriesCandleL = []),
                (n.seriesCandleC = []),
                (n.seriesRangeStart = []),
                (n.seriesRangeEnd = []),
                (n.seriesRange = []),
                (n.seriesPercent = []),
                (n.seriesGoals = []),
                (n.seriesX = []),
                (n.seriesZ = []),
                (n.seriesNames = []),
                (n.seriesTotals = []),
                (n.seriesLog = []),
                (n.seriesColors = []),
                (n.stackedSeriesTotals = []),
                (n.seriesXvalues = []),
                (n.seriesYvalues = []),
                (n.labels = []),
                (n.hasXaxisGroups = !1),
                (n.groups = []),
                (n.hasSeriesGroups = !1),
                (n.seriesGroups = []),
                (n.categoryLabels = []),
                (n.timescaleLabels = []),
                (n.noLabelsProvided = !1),
                (n.resizeTimer = null),
                (n.selectionResizeTimer = null),
                (n.delayedElements = []),
                (n.pointsArray = []),
                (n.dataLabelsRects = []),
                (n.isXNumeric = !1),
                (n.skipLastTimelinelabel = !1),
                (n.skipFirstTimelinelabel = !1),
                (n.isDataXYZ = !1),
                (n.isMultiLineX = !1),
                (n.isMultipleYAxis = !1),
                (n.maxY = -Number.MAX_VALUE),
                (n.minY = Number.MIN_VALUE),
                (n.minYArr = []),
                (n.maxYArr = []),
                (n.maxX = -Number.MAX_VALUE),
                (n.minX = Number.MAX_VALUE),
                (n.initialMaxX = -Number.MAX_VALUE),
                (n.initialMinX = Number.MAX_VALUE),
                (n.maxDate = 0),
                (n.minDate = Number.MAX_VALUE),
                (n.minZ = Number.MAX_VALUE),
                (n.maxZ = -Number.MAX_VALUE),
                (n.minXDiff = Number.MAX_VALUE),
                (n.yAxisScale = []),
                (n.xAxisScale = null),
                (n.xAxisTicksPositions = []),
                (n.yLabelsCoords = []),
                (n.yTitleCoords = []),
                (n.barPadForNumericAxis = 0),
                (n.padHorizontal = 0),
                (n.xRange = 0),
                (n.yRange = []),
                (n.zRange = 0),
                (n.dataPoints = 0),
                (n.xTickAmount = 0);
            },
          },
          {
            key: "globalVars",
            value: function (n) {
              return {
                chartID: null,
                cuid: null,
                events: {
                  beforeMount: [],
                  mounted: [],
                  updated: [],
                  clicked: [],
                  selection: [],
                  dataPointSelection: [],
                  zoomed: [],
                  scrolled: [],
                },
                colors: [],
                clientX: null,
                clientY: null,
                fill: { colors: [] },
                stroke: { colors: [] },
                dataLabels: { style: { colors: [] } },
                radarPolygons: { fill: { colors: [] } },
                markers: { colors: [], size: n.markers.size, largestSize: 0 },
                animationEnded: !1,
                isTouchDevice:
                  "ontouchstart" in window || navigator.msMaxTouchPoints,
                isDirty: !1,
                isExecCalled: !1,
                initialConfig: null,
                initialSeries: [],
                lastXAxis: [],
                lastYAxis: [],
                columnSeries: null,
                labels: [],
                timescaleLabels: [],
                noLabelsProvided: !1,
                allSeriesCollapsed: !1,
                collapsedSeries: [],
                collapsedSeriesIndices: [],
                ancillaryCollapsedSeries: [],
                ancillaryCollapsedSeriesIndices: [],
                risingSeries: [],
                dataFormatXNumeric: !1,
                capturedSeriesIndex: -1,
                capturedDataPointIndex: -1,
                selectedDataPoints: [],
                goldenPadding: 35,
                invalidLogScale: !1,
                ignoreYAxisIndexes: [],
                yAxisSameScaleIndices: [],
                maxValsInArrayIndex: 0,
                radialSize: 0,
                selection: void 0,
                zoomEnabled:
                  n.chart.toolbar.autoSelected === "zoom" &&
                  n.chart.toolbar.tools.zoom &&
                  n.chart.zoom.enabled,
                panEnabled:
                  n.chart.toolbar.autoSelected === "pan" &&
                  n.chart.toolbar.tools.pan,
                selectionEnabled:
                  n.chart.toolbar.autoSelected === "selection" &&
                  n.chart.toolbar.tools.selection,
                yaxis: null,
                mousedown: !1,
                lastClientPosition: {},
                visibleXRange: void 0,
                yValueDecimal: 0,
                total: 0,
                SVGNS: "http://www.w3.org/2000/svg",
                svgWidth: 0,
                svgHeight: 0,
                noData: !1,
                locale: {},
                dom: {},
                memory: { methodsToExec: [] },
                shouldAnimate: !0,
                skipLastTimelinelabel: !1,
                skipFirstTimelinelabel: !1,
                delayedElements: [],
                axisCharts: !0,
                isDataXYZ: !1,
                resized: !1,
                resizeTimer: null,
                comboCharts: !1,
                dataChanged: !1,
                previousPaths: [],
                allSeriesHasEqualX: !0,
                pointsArray: [],
                dataLabelsRects: [],
                lastDrawnDataLabelsIndexes: [],
                hasNullValues: !1,
                easing: null,
                zoomed: !1,
                gridWidth: 0,
                gridHeight: 0,
                rotateXLabels: !1,
                defaultLabels: !1,
                xLabelFormatter: void 0,
                yLabelFormatters: [],
                xaxisTooltipFormatter: void 0,
                ttKeyFormatter: void 0,
                ttVal: void 0,
                ttZFormatter: void 0,
                LINE_HEIGHT_RATIO: 1.618,
                xAxisLabelsHeight: 0,
                xAxisGroupLabelsHeight: 0,
                xAxisLabelsWidth: 0,
                yAxisLabelsWidth: 0,
                scaleX: 1,
                scaleY: 1,
                translateX: 0,
                translateY: 0,
                translateYAxisX: [],
                yAxisWidths: [],
                translateXAxisY: 0,
                translateXAxisX: 0,
                tooltip: null,
              };
            },
          },
          {
            key: "init",
            value: function (n) {
              var i = this.globalVars(n);
              return (
                this.initGlobalVars(i),
                (i.initialConfig = O.extend({}, n)),
                (i.initialSeries = O.clone(n.series)),
                (i.lastXAxis = O.clone(i.initialConfig.xaxis)),
                (i.lastYAxis = O.clone(i.initialConfig.yaxis)),
                i
              );
            },
          },
        ]),
        T
      );
    })(),
    ke = (function () {
      function T(n) {
        h(this, T), (this.opts = n);
      }
      return (
        v(T, [
          {
            key: "init",
            value: function () {
              var n = new pe(this.opts).init({ responsiveOverride: !1 });
              return { config: n, globals: new Se().init(n) };
            },
          },
        ]),
        T
      );
    })(),
    Ce = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.opts = null),
          (this.seriesIndex = 0);
      }
      return (
        v(T, [
          {
            key: "clippedImgArea",
            value: function (n) {
              var i = this.w,
                o = i.config,
                s = parseInt(i.globals.gridWidth, 10),
                l = parseInt(i.globals.gridHeight, 10),
                u = s > l ? s : l,
                d = n.image,
                f = 0,
                m = 0;
              n.width === void 0 && n.height === void 0
                ? o.fill.image.width !== void 0 &&
                  o.fill.image.height !== void 0
                  ? ((f = o.fill.image.width + 1), (m = o.fill.image.height))
                  : ((f = u + 1), (m = u))
                : ((f = n.width), (m = n.height));
              var y = document.createElementNS(i.globals.SVGNS, "pattern");
              B.setAttrs(y, {
                id: n.patternID,
                patternUnits: n.patternUnits
                  ? n.patternUnits
                  : "userSpaceOnUse",
                width: f + "px",
                height: m + "px",
              });
              var x = document.createElementNS(i.globals.SVGNS, "image");
              y.appendChild(x),
                x.setAttributeNS(window.SVG.xlink, "href", d),
                B.setAttrs(x, {
                  x: 0,
                  y: 0,
                  preserveAspectRatio: "none",
                  width: f + "px",
                  height: m + "px",
                }),
                (x.style.opacity = n.opacity),
                i.globals.dom.elDefs.node.appendChild(y);
            },
          },
          {
            key: "getSeriesIndex",
            value: function (n) {
              var i = this.w,
                o = i.config.chart.type;
              return (
                ((o === "bar" || o === "rangeBar") &&
                  i.config.plotOptions.bar.distributed) ||
                o === "heatmap" ||
                o === "treemap"
                  ? (this.seriesIndex = n.seriesNumber)
                  : (this.seriesIndex =
                      n.seriesNumber % i.globals.series.length),
                this.seriesIndex
              );
            },
          },
          {
            key: "fillPath",
            value: function (n) {
              var i = this.w;
              this.opts = n;
              var o,
                s,
                l,
                u = this.w.config;
              this.seriesIndex = this.getSeriesIndex(n);
              var d = this.getFillColors()[this.seriesIndex];
              i.globals.seriesColors[this.seriesIndex] !== void 0 &&
                (d = i.globals.seriesColors[this.seriesIndex]),
                typeof d == "function" &&
                  (d = d({
                    seriesIndex: this.seriesIndex,
                    dataPointIndex: n.dataPointIndex,
                    value: n.value,
                    w: i,
                  }));
              var f = n.fillType
                  ? n.fillType
                  : this.getFillType(this.seriesIndex),
                m = Array.isArray(u.fill.opacity)
                  ? u.fill.opacity[this.seriesIndex]
                  : u.fill.opacity;
              n.color && (d = n.color),
                d ||
                  ((d = "#fff"), console.warn("undefined color - ApexCharts"));
              var y = d;
              if (
                (d.indexOf("rgb") === -1
                  ? d.length < 9 && (y = O.hexToRgba(d, m))
                  : d.indexOf("rgba") > -1 && (m = O.getOpacityFromRGBA(d)),
                n.opacity && (m = n.opacity),
                f === "pattern" &&
                  (s = this.handlePatternFill({
                    fillConfig: n.fillConfig,
                    patternFill: s,
                    fillColor: d,
                    fillOpacity: m,
                    defaultColor: y,
                  })),
                f === "gradient" &&
                  (l = this.handleGradientFill({
                    fillConfig: n.fillConfig,
                    fillColor: d,
                    fillOpacity: m,
                    i: this.seriesIndex,
                  })),
                f === "image")
              ) {
                var x = u.fill.image.src,
                  S = n.patternID ? n.patternID : "";
                this.clippedImgArea({
                  opacity: m,
                  image: Array.isArray(x)
                    ? n.seriesNumber < x.length
                      ? x[n.seriesNumber]
                      : x[0]
                    : x,
                  width: n.width ? n.width : void 0,
                  height: n.height ? n.height : void 0,
                  patternUnits: n.patternUnits,
                  patternID: "pattern"
                    .concat(i.globals.cuid)
                    .concat(n.seriesNumber + 1)
                    .concat(S),
                }),
                  (o = "url(#pattern"
                    .concat(i.globals.cuid)
                    .concat(n.seriesNumber + 1)
                    .concat(S, ")"));
              } else o = f === "gradient" ? l : f === "pattern" ? s : y;
              return n.solid && (o = y), o;
            },
          },
          {
            key: "getFillType",
            value: function (n) {
              var i = this.w;
              return Array.isArray(i.config.fill.type)
                ? i.config.fill.type[n]
                : i.config.fill.type;
            },
          },
          {
            key: "getFillColors",
            value: function () {
              var n = this.w,
                i = n.config,
                o = this.opts,
                s = [];
              return (
                n.globals.comboCharts
                  ? n.config.series[this.seriesIndex].type === "line"
                    ? Array.isArray(n.globals.stroke.colors)
                      ? (s = n.globals.stroke.colors)
                      : s.push(n.globals.stroke.colors)
                    : Array.isArray(n.globals.fill.colors)
                    ? (s = n.globals.fill.colors)
                    : s.push(n.globals.fill.colors)
                  : i.chart.type === "line"
                  ? Array.isArray(n.globals.stroke.colors)
                    ? (s = n.globals.stroke.colors)
                    : s.push(n.globals.stroke.colors)
                  : Array.isArray(n.globals.fill.colors)
                  ? (s = n.globals.fill.colors)
                  : s.push(n.globals.fill.colors),
                o.fillColors !== void 0 &&
                  ((s = []),
                  Array.isArray(o.fillColors)
                    ? (s = o.fillColors.slice())
                    : s.push(o.fillColors)),
                s
              );
            },
          },
          {
            key: "handlePatternFill",
            value: function (n) {
              var i = n.fillConfig,
                o = n.patternFill,
                s = n.fillColor,
                l = n.fillOpacity,
                u = n.defaultColor,
                d = this.w.config.fill;
              i && (d = i);
              var f = this.opts,
                m = new B(this.ctx),
                y = Array.isArray(d.pattern.strokeWidth)
                  ? d.pattern.strokeWidth[this.seriesIndex]
                  : d.pattern.strokeWidth,
                x = s;
              return (
                Array.isArray(d.pattern.style)
                  ? (o =
                      d.pattern.style[f.seriesNumber] !== void 0
                        ? m.drawPattern(
                            d.pattern.style[f.seriesNumber],
                            d.pattern.width,
                            d.pattern.height,
                            x,
                            y,
                            l,
                          )
                        : u)
                  : (o = m.drawPattern(
                      d.pattern.style,
                      d.pattern.width,
                      d.pattern.height,
                      x,
                      y,
                      l,
                    )),
                o
              );
            },
          },
          {
            key: "handleGradientFill",
            value: function (n) {
              var i = n.fillColor,
                o = n.fillOpacity,
                s = n.fillConfig,
                l = n.i,
                u = this.w.config.fill;
              s && (u = a(a({}, u), s));
              var d,
                f = this.opts,
                m = new B(this.ctx),
                y = new O(),
                x = u.gradient.type,
                S = i,
                _ =
                  u.gradient.opacityFrom === void 0
                    ? o
                    : Array.isArray(u.gradient.opacityFrom)
                    ? u.gradient.opacityFrom[l]
                    : u.gradient.opacityFrom;
              S.indexOf("rgba") > -1 && (_ = O.getOpacityFromRGBA(S));
              var C =
                u.gradient.opacityTo === void 0
                  ? o
                  : Array.isArray(u.gradient.opacityTo)
                  ? u.gradient.opacityTo[l]
                  : u.gradient.opacityTo;
              if (
                u.gradient.gradientToColors === void 0 ||
                u.gradient.gradientToColors.length === 0
              )
                d =
                  u.gradient.shade === "dark"
                    ? y.shadeColor(
                        -1 * parseFloat(u.gradient.shadeIntensity),
                        i.indexOf("rgb") > -1 ? O.rgb2hex(i) : i,
                      )
                    : y.shadeColor(
                        parseFloat(u.gradient.shadeIntensity),
                        i.indexOf("rgb") > -1 ? O.rgb2hex(i) : i,
                      );
              else if (u.gradient.gradientToColors[f.seriesNumber]) {
                var E = u.gradient.gradientToColors[f.seriesNumber];
                (d = E),
                  E.indexOf("rgba") > -1 && (C = O.getOpacityFromRGBA(E));
              } else d = i;
              if (
                (u.gradient.gradientFrom && (S = u.gradient.gradientFrom),
                u.gradient.gradientTo && (d = u.gradient.gradientTo),
                u.gradient.inverseColors)
              ) {
                var I = S;
                (S = d), (d = I);
              }
              return (
                S.indexOf("rgb") > -1 && (S = O.rgb2hex(S)),
                d.indexOf("rgb") > -1 && (d = O.rgb2hex(d)),
                m.drawGradient(
                  x,
                  S,
                  d,
                  _,
                  C,
                  f.size,
                  u.gradient.stops,
                  u.gradient.colorStops,
                  l,
                )
              );
            },
          },
        ]),
        T
      );
    })(),
    ze = (function () {
      function T(n, i) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "setGlobalMarkerSize",
            value: function () {
              var n = this.w;
              if (
                ((n.globals.markers.size = Array.isArray(n.config.markers.size)
                  ? n.config.markers.size
                  : [n.config.markers.size]),
                n.globals.markers.size.length > 0)
              ) {
                if (n.globals.markers.size.length < n.globals.series.length + 1)
                  for (var i = 0; i <= n.globals.series.length; i++)
                    n.globals.markers.size[i] === void 0 &&
                      n.globals.markers.size.push(n.globals.markers.size[0]);
              } else
                n.globals.markers.size = n.config.series.map(function (o) {
                  return n.config.markers.size;
                });
            },
          },
          {
            key: "plotChartMarkers",
            value: function (n, i, o, s) {
              var l,
                u =
                  arguments.length > 4 &&
                  arguments[4] !== void 0 &&
                  arguments[4],
                d = this.w,
                f = i,
                m = n,
                y = null,
                x = new B(this.ctx),
                S =
                  d.config.markers.discrete && d.config.markers.discrete.length;
              if (
                ((d.globals.markers.size[i] > 0 || u || S) &&
                  (y = x.group({
                    class: u || S ? "" : "apexcharts-series-markers",
                  })).attr(
                    "clip-path",
                    "url(#gridRectMarkerMask".concat(d.globals.cuid, ")"),
                  ),
                Array.isArray(m.x))
              )
                for (var _ = 0; _ < m.x.length; _++) {
                  var C = o;
                  o === 1 && _ === 0 && (C = 0), o === 1 && _ === 1 && (C = 1);
                  var E = "apexcharts-marker";
                  if (
                    ((d.config.chart.type !== "line" &&
                      d.config.chart.type !== "area") ||
                      d.globals.comboCharts ||
                      d.config.tooltip.intersect ||
                      (E += " no-pointer-events"),
                    (Array.isArray(d.config.markers.size)
                      ? d.globals.markers.size[i] > 0
                      : d.config.markers.size > 0) ||
                      u ||
                      S)
                  ) {
                    O.isNumber(m.y[_])
                      ? (E += " w".concat(O.randomId()))
                      : (E = "apexcharts-nullpoint");
                    var I = this.getMarkerConfig({
                      cssClass: E,
                      seriesIndex: i,
                      dataPointIndex: C,
                    });
                    d.config.series[f].data[C] &&
                      (d.config.series[f].data[C].fillColor &&
                        (I.pointFillColor =
                          d.config.series[f].data[C].fillColor),
                      d.config.series[f].data[C].strokeColor &&
                        (I.pointStrokeColor =
                          d.config.series[f].data[C].strokeColor)),
                      s && (I.pSize = s),
                      (m.x[_] < 0 ||
                        m.x[_] > d.globals.gridWidth ||
                        m.y[_] < -d.globals.markers.largestSize ||
                        m.y[_] >
                          d.globals.gridHeight +
                            d.globals.markers.largestSize) &&
                        (I.pSize = 0),
                      (l = x.drawMarker(m.x[_], m.y[_], I)).attr("rel", C),
                      l.attr("j", C),
                      l.attr("index", i),
                      l.node.setAttribute("default-marker-size", I.pSize),
                      new N(this.ctx).setSelectionFilter(l, i, C),
                      this.addEvents(l),
                      y && y.add(l);
                  } else
                    d.globals.pointsArray[i] === void 0 &&
                      (d.globals.pointsArray[i] = []),
                      d.globals.pointsArray[i].push([m.x[_], m.y[_]]);
                }
              return y;
            },
          },
          {
            key: "getMarkerConfig",
            value: function (n) {
              var i = n.cssClass,
                o = n.seriesIndex,
                s = n.dataPointIndex,
                l = s === void 0 ? null : s,
                u = n.finishRadius,
                d = u === void 0 ? null : u,
                f = this.w,
                m = this.getMarkerStyle(o),
                y = f.globals.markers.size[o],
                x = f.config.markers;
              return (
                l !== null &&
                  x.discrete.length &&
                  x.discrete.map(function (S) {
                    S.seriesIndex === o &&
                      S.dataPointIndex === l &&
                      ((m.pointStrokeColor = S.strokeColor),
                      (m.pointFillColor = S.fillColor),
                      (y = S.size),
                      (m.pointShape = S.shape));
                  }),
                {
                  pSize: d === null ? y : d,
                  pRadius: x.radius,
                  width: Array.isArray(x.width) ? x.width[o] : x.width,
                  height: Array.isArray(x.height) ? x.height[o] : x.height,
                  pointStrokeWidth: Array.isArray(x.strokeWidth)
                    ? x.strokeWidth[o]
                    : x.strokeWidth,
                  pointStrokeColor: m.pointStrokeColor,
                  pointFillColor: m.pointFillColor,
                  shape:
                    m.pointShape ||
                    (Array.isArray(x.shape) ? x.shape[o] : x.shape),
                  class: i,
                  pointStrokeOpacity: Array.isArray(x.strokeOpacity)
                    ? x.strokeOpacity[o]
                    : x.strokeOpacity,
                  pointStrokeDashArray: Array.isArray(x.strokeDashArray)
                    ? x.strokeDashArray[o]
                    : x.strokeDashArray,
                  pointFillOpacity: Array.isArray(x.fillOpacity)
                    ? x.fillOpacity[o]
                    : x.fillOpacity,
                  seriesIndex: o,
                }
              );
            },
          },
          {
            key: "addEvents",
            value: function (n) {
              var i = this.w,
                o = new B(this.ctx);
              n.node.addEventListener(
                "mouseenter",
                o.pathMouseEnter.bind(this.ctx, n),
              ),
                n.node.addEventListener(
                  "mouseleave",
                  o.pathMouseLeave.bind(this.ctx, n),
                ),
                n.node.addEventListener(
                  "mousedown",
                  o.pathMouseDown.bind(this.ctx, n),
                ),
                n.node.addEventListener("click", i.config.markers.onClick),
                n.node.addEventListener(
                  "dblclick",
                  i.config.markers.onDblClick,
                ),
                n.node.addEventListener(
                  "touchstart",
                  o.pathMouseDown.bind(this.ctx, n),
                  { passive: !0 },
                );
            },
          },
          {
            key: "getMarkerStyle",
            value: function (n) {
              var i = this.w,
                o = i.globals.markers.colors,
                s =
                  i.config.markers.strokeColor || i.config.markers.strokeColors;
              return {
                pointStrokeColor: Array.isArray(s) ? s[n] : s,
                pointFillColor: Array.isArray(o) ? o[n] : o,
              };
            },
          },
        ]),
        T
      );
    })(),
    $e = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled);
      }
      return (
        v(T, [
          {
            key: "draw",
            value: function (n, i, o) {
              var s = this.w,
                l = new B(this.ctx),
                u = o.realIndex,
                d = o.pointsPos,
                f = o.zRatio,
                m = o.elParent,
                y = l.group({
                  class: "apexcharts-series-markers apexcharts-series-".concat(
                    s.config.chart.type,
                  ),
                });
              if (
                (y.attr(
                  "clip-path",
                  "url(#gridRectMarkerMask".concat(s.globals.cuid, ")"),
                ),
                Array.isArray(d.x))
              )
                for (var x = 0; x < d.x.length; x++) {
                  var S = i + 1,
                    _ = !0;
                  i === 0 && x === 0 && (S = 0), i === 0 && x === 1 && (S = 1);
                  var C = 0,
                    E = s.globals.markers.size[u];
                  if (f !== 1 / 0) {
                    var I = s.config.plotOptions.bubble;
                    (E = s.globals.seriesZ[u][S]),
                      I.zScaling && (E /= f),
                      I.minBubbleRadius &&
                        E < I.minBubbleRadius &&
                        (E = I.minBubbleRadius),
                      I.maxBubbleRadius &&
                        E > I.maxBubbleRadius &&
                        (E = I.maxBubbleRadius);
                  }
                  s.config.chart.animations.enabled || (C = E);
                  var H = d.x[x],
                    Y = d.y[x];
                  if (
                    ((C = C || 0),
                    (Y !== null && s.globals.series[u][S] !== void 0) ||
                      (_ = !1),
                    _)
                  ) {
                    var g = this.drawPoint(H, Y, C, E, u, S, i);
                    y.add(g);
                  }
                  m.add(y);
                }
            },
          },
          {
            key: "drawPoint",
            value: function (n, i, o, s, l, u, d) {
              var f = this.w,
                m = l,
                y = new X(this.ctx),
                x = new N(this.ctx),
                S = new Ce(this.ctx),
                _ = new ze(this.ctx),
                C = new B(this.ctx),
                E = _.getMarkerConfig({
                  cssClass: "apexcharts-marker",
                  seriesIndex: m,
                  dataPointIndex: u,
                  finishRadius:
                    f.config.chart.type === "bubble" ||
                    (f.globals.comboCharts &&
                      f.config.series[l] &&
                      f.config.series[l].type === "bubble")
                      ? s
                      : null,
                });
              s = E.pSize;
              var I,
                H = S.fillPath({
                  seriesNumber: l,
                  dataPointIndex: u,
                  color: E.pointFillColor,
                  patternUnits: "objectBoundingBox",
                  value: f.globals.series[l][d],
                });
              if (
                (E.shape === "circle"
                  ? (I = C.drawCircle(o))
                  : (E.shape !== "square" && E.shape !== "rect") ||
                    (I = C.drawRect(
                      0,
                      0,
                      E.width - E.pointStrokeWidth / 2,
                      E.height - E.pointStrokeWidth / 2,
                      E.pRadius,
                    )),
                f.config.series[m].data[u] &&
                  f.config.series[m].data[u].fillColor &&
                  (H = f.config.series[m].data[u].fillColor),
                I.attr({
                  x: n - E.width / 2 - E.pointStrokeWidth / 2,
                  y: i - E.height / 2 - E.pointStrokeWidth / 2,
                  cx: n,
                  cy: i,
                  fill: H,
                  "fill-opacity": E.pointFillOpacity,
                  stroke: E.pointStrokeColor,
                  r: s,
                  "stroke-width": E.pointStrokeWidth,
                  "stroke-dasharray": E.pointStrokeDashArray,
                  "stroke-opacity": E.pointStrokeOpacity,
                }),
                f.config.chart.dropShadow.enabled)
              ) {
                var Y = f.config.chart.dropShadow;
                x.dropShadow(I, Y, l);
              }
              if (
                !this.initialAnim ||
                f.globals.dataChanged ||
                f.globals.resized
              )
                f.globals.animationEnded = !0;
              else {
                var g = f.config.chart.animations.speed;
                y.animateMarker(
                  I,
                  0,
                  E.shape === "circle"
                    ? s
                    : { width: E.width, height: E.height },
                  g,
                  f.globals.easing,
                  function () {
                    window.setTimeout(function () {
                      y.animationCompleted(I);
                    }, 100);
                  },
                );
              }
              if (f.globals.dataChanged && E.shape === "circle")
                if (this.dynamicAnim) {
                  var w,
                    A,
                    D,
                    W,
                    V = f.config.chart.animations.dynamicAnimation.speed;
                  (W =
                    f.globals.previousPaths[l] &&
                    f.globals.previousPaths[l][d]) != null &&
                    ((w = W.x), (A = W.y), (D = W.r !== void 0 ? W.r : s));
                  for (var K = 0; K < f.globals.collapsedSeries.length; K++)
                    f.globals.collapsedSeries[K].index === l &&
                      ((V = 1), (s = 0));
                  n === 0 && i === 0 && (s = 0),
                    y.animateCircle(
                      I,
                      { cx: w, cy: A, r: D },
                      { cx: n, cy: i, r: s },
                      V,
                      f.globals.easing,
                    );
                } else I.attr({ r: s });
              return (
                I.attr({ rel: u, j: u, index: l, "default-marker-size": s }),
                x.setSelectionFilter(I, l, u),
                _.addEvents(I),
                I.node.classList.add("apexcharts-marker"),
                I
              );
            },
          },
          {
            key: "centerTextInBubble",
            value: function (n) {
              var i = this.w;
              return {
                y: (n += parseInt(i.config.dataLabels.style.fontSize, 10) / 4),
              };
            },
          },
        ]),
        T
      );
    })(),
    Qe = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "dataLabelsCorrection",
            value: function (n, i, o, s, l, u, d) {
              var f = this.w,
                m = !1,
                y = new B(this.ctx).getTextRects(o, d),
                x = y.width,
                S = y.height;
              i < 0 && (i = 0),
                i > f.globals.gridHeight + S &&
                  (i = f.globals.gridHeight + S / 2),
                f.globals.dataLabelsRects[s] === void 0 &&
                  (f.globals.dataLabelsRects[s] = []),
                f.globals.dataLabelsRects[s].push({
                  x: n,
                  y: i,
                  width: x,
                  height: S,
                });
              var _ = f.globals.dataLabelsRects[s].length - 2,
                C =
                  f.globals.lastDrawnDataLabelsIndexes[s] !== void 0
                    ? f.globals.lastDrawnDataLabelsIndexes[s][
                        f.globals.lastDrawnDataLabelsIndexes[s].length - 1
                      ]
                    : 0;
              if (f.globals.dataLabelsRects[s][_] !== void 0) {
                var E = f.globals.dataLabelsRects[s][C];
                (n > E.x + E.width ||
                  i > E.y + E.height ||
                  i + S < E.y ||
                  n + x < E.x) &&
                  (m = !0);
              }
              return (
                (l === 0 || u) && (m = !0),
                { x: n, y: i, textRects: y, drawnextLabel: m }
              );
            },
          },
          {
            key: "drawDataLabel",
            value: function (n) {
              var i = this,
                o = n.type,
                s = n.pos,
                l = n.i,
                u = n.j,
                d = n.isRangeStart,
                f = n.strokeWidth,
                m = f === void 0 ? 2 : f,
                y = this.w,
                x = new B(this.ctx),
                S = y.config.dataLabels,
                _ = 0,
                C = 0,
                E = u,
                I = null;
              if (!S.enabled || !Array.isArray(s.x)) return I;
              I = x.group({ class: "apexcharts-data-labels" });
              for (var H = 0; H < s.x.length; H++)
                if (
                  ((_ = s.x[H] + S.offsetX),
                  (C = s.y[H] + S.offsetY + m),
                  !isNaN(_))
                ) {
                  u === 1 && H === 0 && (E = 0), u === 1 && H === 1 && (E = 1);
                  var Y = y.globals.series[l][E];
                  o === "rangeArea" &&
                    (Y = d
                      ? y.globals.seriesRangeStart[l][E]
                      : y.globals.seriesRangeEnd[l][E]);
                  var g = "",
                    w = function (A) {
                      return y.config.dataLabels.formatter(A, {
                        ctx: i.ctx,
                        seriesIndex: l,
                        dataPointIndex: E,
                        w: y,
                      });
                    };
                  y.config.chart.type === "bubble"
                    ? ((g = w((Y = y.globals.seriesZ[l][E]))),
                      (C = s.y[H]),
                      (C = new $e(this.ctx).centerTextInBubble(C, l, E).y))
                    : Y !== void 0 && (g = w(Y)),
                    this.plotDataLabelsText({
                      x: _,
                      y: C,
                      text: g,
                      i: l,
                      j: E,
                      parent: I,
                      offsetCorrection: !0,
                      dataLabelsConfig: y.config.dataLabels,
                    });
                }
              return I;
            },
          },
          {
            key: "plotDataLabelsText",
            value: function (n) {
              var i = this.w,
                o = new B(this.ctx),
                s = n.x,
                l = n.y,
                u = n.i,
                d = n.j,
                f = n.text,
                m = n.textAnchor,
                y = n.fontSize,
                x = n.parent,
                S = n.dataLabelsConfig,
                _ = n.color,
                C = n.alwaysDrawDataLabel,
                E = n.offsetCorrection;
              if (
                !(
                  Array.isArray(i.config.dataLabels.enabledOnSeries) &&
                  i.config.dataLabels.enabledOnSeries.indexOf(u) < 0
                )
              ) {
                var I = { x: s, y: l, drawnextLabel: !0, textRects: null };
                E &&
                  (I = this.dataLabelsCorrection(
                    s,
                    l,
                    f,
                    u,
                    d,
                    C,
                    parseInt(S.style.fontSize, 10),
                  )),
                  i.globals.zoomed || ((s = I.x), (l = I.y)),
                  I.textRects &&
                    (s < -10 - I.textRects.width ||
                      s > i.globals.gridWidth + I.textRects.width + 10) &&
                    (f = "");
                var H = i.globals.dataLabels.style.colors[u];
                (((i.config.chart.type === "bar" ||
                  i.config.chart.type === "rangeBar") &&
                  i.config.plotOptions.bar.distributed) ||
                  i.config.dataLabels.distributed) &&
                  (H = i.globals.dataLabels.style.colors[d]),
                  typeof H == "function" &&
                    (H = H({
                      series: i.globals.series,
                      seriesIndex: u,
                      dataPointIndex: d,
                      w: i,
                    })),
                  _ && (H = _);
                var Y = S.offsetX,
                  g = S.offsetY;
                if (
                  ((i.config.chart.type !== "bar" &&
                    i.config.chart.type !== "rangeBar") ||
                    ((Y = 0), (g = 0)),
                  I.drawnextLabel)
                ) {
                  var w = o.drawText({
                    width: 100,
                    height: parseInt(S.style.fontSize, 10),
                    x: s + Y,
                    y: l + g,
                    foreColor: H,
                    textAnchor: m || S.textAnchor,
                    text: f,
                    fontSize: y || S.style.fontSize,
                    fontFamily: S.style.fontFamily,
                    fontWeight: S.style.fontWeight || "normal",
                  });
                  if (
                    (w.attr({ class: "apexcharts-datalabel", cx: s, cy: l }),
                    S.dropShadow.enabled)
                  ) {
                    var A = S.dropShadow;
                    new N(this.ctx).dropShadow(w, A);
                  }
                  x.add(w),
                    i.globals.lastDrawnDataLabelsIndexes[u] === void 0 &&
                      (i.globals.lastDrawnDataLabelsIndexes[u] = []),
                    i.globals.lastDrawnDataLabelsIndexes[u].push(d);
                }
              }
            },
          },
          {
            key: "addBackgroundToDataLabel",
            value: function (n, i) {
              var o = this.w,
                s = o.config.dataLabels.background,
                l = s.padding,
                u = s.padding / 2,
                d = i.width,
                f = i.height,
                m = new B(this.ctx).drawRect(
                  i.x - l,
                  i.y - u / 2,
                  d + 2 * l,
                  f + u,
                  s.borderRadius,
                  o.config.chart.background === "transparent"
                    ? "#fff"
                    : o.config.chart.background,
                  s.opacity,
                  s.borderWidth,
                  s.borderColor,
                );
              return (
                s.dropShadow.enabled &&
                  new N(this.ctx).dropShadow(m, s.dropShadow),
                m
              );
            },
          },
          {
            key: "dataLabelsBackground",
            value: function () {
              var n = this.w;
              if (n.config.chart.type !== "bubble")
                for (
                  var i = n.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-datalabels text",
                    ),
                    o = 0;
                  o < i.length;
                  o++
                ) {
                  var s = i[o],
                    l = s.getBBox(),
                    u = null;
                  if (
                    (l.width &&
                      l.height &&
                      (u = this.addBackgroundToDataLabel(s, l)),
                    u)
                  ) {
                    s.parentNode.insertBefore(u.node, s);
                    var d = s.getAttribute("fill");
                    n.config.chart.animations.enabled &&
                    !n.globals.resized &&
                    !n.globals.dataChanged
                      ? u.animate().attr({ fill: d })
                      : u.attr({ fill: d }),
                      s.setAttribute(
                        "fill",
                        n.config.dataLabels.background.foreColor,
                      );
                  }
                }
            },
          },
          {
            key: "bringForward",
            value: function () {
              for (
                var n = this.w,
                  i = n.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-datalabels",
                  ),
                  o = n.globals.dom.baseEl.querySelector(
                    ".apexcharts-plot-series:last-child",
                  ),
                  s = 0;
                s < i.length;
                s++
              )
                o && o.insertBefore(i[s], o.nextSibling);
            },
          },
        ]),
        T
      );
    })(),
    Be = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.legendInactiveClass = "legend-mouseover-inactive");
      }
      return (
        v(T, [
          {
            key: "getAllSeriesEls",
            value: function () {
              return this.w.globals.dom.baseEl.getElementsByClassName(
                "apexcharts-series",
              );
            },
          },
          {
            key: "getSeriesByName",
            value: function (n) {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-inner .apexcharts-series[seriesName='".concat(
                  O.escapeString(n),
                  "']",
                ),
              );
            },
          },
          {
            key: "isSeriesHidden",
            value: function (n) {
              var i = this.getSeriesByName(n),
                o = parseInt(i.getAttribute("data:realIndex"), 10);
              return {
                isHidden: i.classList.contains("apexcharts-series-collapsed"),
                realIndex: o,
              };
            },
          },
          {
            key: "addCollapsedClassToSeries",
            value: function (n, i) {
              var o = this.w;
              function s(l) {
                for (var u = 0; u < l.length; u++)
                  l[u].index === i &&
                    n.node.classList.add("apexcharts-series-collapsed");
              }
              s(o.globals.collapsedSeries),
                s(o.globals.ancillaryCollapsedSeries);
            },
          },
          {
            key: "toggleSeries",
            value: function (n) {
              var i = this.isSeriesHidden(n);
              return (
                this.ctx.legend.legendHelpers.toggleDataSeries(
                  i.realIndex,
                  i.isHidden,
                ),
                i.isHidden
              );
            },
          },
          {
            key: "showSeries",
            value: function (n) {
              var i = this.isSeriesHidden(n);
              i.isHidden &&
                this.ctx.legend.legendHelpers.toggleDataSeries(i.realIndex, !0);
            },
          },
          {
            key: "hideSeries",
            value: function (n) {
              var i = this.isSeriesHidden(n);
              i.isHidden ||
                this.ctx.legend.legendHelpers.toggleDataSeries(i.realIndex, !1);
            },
          },
          {
            key: "resetSeries",
            value: function () {
              var n =
                  !(arguments.length > 0 && arguments[0] !== void 0) ||
                  arguments[0],
                i =
                  !(arguments.length > 1 && arguments[1] !== void 0) ||
                  arguments[1],
                o =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2],
                s = this.w,
                l = O.clone(s.globals.initialSeries);
              (s.globals.previousPaths = []),
                o
                  ? ((s.globals.collapsedSeries = []),
                    (s.globals.ancillaryCollapsedSeries = []),
                    (s.globals.collapsedSeriesIndices = []),
                    (s.globals.ancillaryCollapsedSeriesIndices = []))
                  : (l = this.emptyCollapsedSeries(l)),
                (s.config.series = l),
                n &&
                  (i &&
                    ((s.globals.zoomed = !1),
                    this.ctx.updateHelpers.revertDefaultAxisMinMax()),
                  this.ctx.updateHelpers._updateSeries(
                    l,
                    s.config.chart.animations.dynamicAnimation.enabled,
                  ));
            },
          },
          {
            key: "emptyCollapsedSeries",
            value: function (n) {
              for (var i = this.w, o = 0; o < n.length; o++)
                i.globals.collapsedSeriesIndices.indexOf(o) > -1 &&
                  (n[o].data = []);
              return n;
            },
          },
          {
            key: "toggleSeriesOnHover",
            value: function (n, i) {
              var o = this.w;
              i || (i = n.target);
              var s = o.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series, .apexcharts-datalabels",
              );
              if (n.type === "mousemove") {
                var l = parseInt(i.getAttribute("rel"), 10) - 1,
                  u = null,
                  d = null;
                o.globals.axisCharts || o.config.chart.type === "radialBar"
                  ? o.globals.axisCharts
                    ? ((u = o.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(l, "']"),
                      )),
                      (d = o.globals.dom.baseEl.querySelector(
                        ".apexcharts-datalabels[data\\:realIndex='".concat(
                          l,
                          "']",
                        ),
                      )))
                    : (u = o.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(l + 1, "']"),
                      ))
                  : (u = o.globals.dom.baseEl.querySelector(
                      ".apexcharts-series[rel='".concat(l + 1, "'] path"),
                    ));
                for (var f = 0; f < s.length; f++)
                  s[f].classList.add(this.legendInactiveClass);
                u !== null &&
                  (o.globals.axisCharts ||
                    u.parentNode.classList.remove(this.legendInactiveClass),
                  u.classList.remove(this.legendInactiveClass),
                  d !== null && d.classList.remove(this.legendInactiveClass));
              } else if (n.type === "mouseout")
                for (var m = 0; m < s.length; m++)
                  s[m].classList.remove(this.legendInactiveClass);
            },
          },
          {
            key: "highlightRangeInSeries",
            value: function (n, i) {
              var o = this,
                s = this.w,
                l = s.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-heatmap-rect",
                ),
                u = function (f) {
                  for (var m = 0; m < l.length; m++)
                    l[m].classList[f](o.legendInactiveClass);
                };
              if (n.type === "mousemove") {
                var d = parseInt(i.getAttribute("rel"), 10) - 1;
                u("add"),
                  (function (f) {
                    for (var m = 0; m < l.length; m++) {
                      var y = parseInt(l[m].getAttribute("val"), 10);
                      y >= f.from &&
                        y <= f.to &&
                        l[m].classList.remove(o.legendInactiveClass);
                    }
                  })(s.config.plotOptions.heatmap.colorScale.ranges[d]);
              } else n.type === "mouseout" && u("remove");
            },
          },
          {
            key: "getActiveConfigSeriesIndex",
            value: function () {
              var n =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : "asc",
                i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : [],
                o = this.w,
                s = 0;
              if (o.config.series.length > 1) {
                for (
                  var l = o.config.series.map(function (d, f) {
                      return d.data &&
                        d.data.length > 0 &&
                        o.globals.collapsedSeriesIndices.indexOf(f) === -1 &&
                        (!o.globals.comboCharts ||
                          i.length === 0 ||
                          (i.length && i.indexOf(o.config.series[f].type) > -1))
                        ? f
                        : -1;
                    }),
                    u = n === "asc" ? 0 : l.length - 1;
                  n === "asc" ? u < l.length : u >= 0;
                  n === "asc" ? u++ : u--
                )
                  if (l[u] !== -1) {
                    s = l[u];
                    break;
                  }
              }
              return s;
            },
          },
          {
            key: "getBarSeriesIndices",
            value: function () {
              return this.w.globals.comboCharts
                ? this.w.config.series
                    .map(function (n, i) {
                      return n.type === "bar" || n.type === "column" ? i : -1;
                    })
                    .filter(function (n) {
                      return n !== -1;
                    })
                : this.w.config.series.map(function (n, i) {
                    return i;
                  });
            },
          },
          {
            key: "getPreviousPaths",
            value: function () {
              var n = this.w;
              function i(u, d, f) {
                for (
                  var m = u[d].childNodes,
                    y = {
                      type: f,
                      paths: [],
                      realIndex: u[d].getAttribute("data:realIndex"),
                    },
                    x = 0;
                  x < m.length;
                  x++
                )
                  if (m[x].hasAttribute("pathTo")) {
                    var S = m[x].getAttribute("pathTo");
                    y.paths.push({ d: S });
                  }
                n.globals.previousPaths.push(y);
              }
              (n.globals.previousPaths = []),
                [
                  "line",
                  "area",
                  "bar",
                  "rangebar",
                  "rangeArea",
                  "candlestick",
                  "radar",
                ].forEach(function (u) {
                  for (
                    var d,
                      f =
                        ((d = u),
                        n.globals.dom.baseEl.querySelectorAll(
                          ".apexcharts-".concat(
                            d,
                            "-series .apexcharts-series",
                          ),
                        )),
                      m = 0;
                    m < f.length;
                    m++
                  )
                    i(f, m, u);
                }),
                this.handlePrevBubbleScatterPaths("bubble"),
                this.handlePrevBubbleScatterPaths("scatter");
              var o = n.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-".concat(
                  n.config.chart.type,
                  " .apexcharts-series",
                ),
              );
              if (o.length > 0)
                for (
                  var s = function (u) {
                      for (
                        var d = n.globals.dom.baseEl.querySelectorAll(
                            ".apexcharts-"
                              .concat(
                                n.config.chart.type,
                                " .apexcharts-series[data\\:realIndex='",
                              )
                              .concat(u, "'] rect"),
                          ),
                          f = [],
                          m = function (x) {
                            var S = function (C) {
                                return d[x].getAttribute(C);
                              },
                              _ = {
                                x: parseFloat(S("x")),
                                y: parseFloat(S("y")),
                                width: parseFloat(S("width")),
                                height: parseFloat(S("height")),
                              };
                            f.push({
                              rect: _,
                              color: d[x].getAttribute("color"),
                            });
                          },
                          y = 0;
                        y < d.length;
                        y++
                      )
                        m(y);
                      n.globals.previousPaths.push(f);
                    },
                    l = 0;
                  l < o.length;
                  l++
                )
                  s(l);
              n.globals.axisCharts ||
                (n.globals.previousPaths = n.globals.series);
            },
          },
          {
            key: "handlePrevBubbleScatterPaths",
            value: function (n) {
              var i = this.w,
                o = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-".concat(n, "-series .apexcharts-series"),
                );
              if (o.length > 0)
                for (var s = 0; s < o.length; s++) {
                  for (
                    var l = i.globals.dom.baseEl.querySelectorAll(
                        ".apexcharts-"
                          .concat(
                            n,
                            "-series .apexcharts-series[data\\:realIndex='",
                          )
                          .concat(s, "'] circle"),
                      ),
                      u = [],
                      d = 0;
                    d < l.length;
                    d++
                  )
                    u.push({
                      x: l[d].getAttribute("cx"),
                      y: l[d].getAttribute("cy"),
                      r: l[d].getAttribute("r"),
                    });
                  i.globals.previousPaths.push(u);
                }
            },
          },
          {
            key: "clearPreviousPaths",
            value: function () {
              var n = this.w;
              (n.globals.previousPaths = []),
                (n.globals.allSeriesCollapsed = !1);
            },
          },
          {
            key: "handleNoData",
            value: function () {
              var n = this.w,
                i = n.config.noData,
                o = new B(this.ctx),
                s = n.globals.svgWidth / 2,
                l = n.globals.svgHeight / 2,
                u = "middle";
              if (
                ((n.globals.noData = !0),
                (n.globals.animationEnded = !0),
                i.align === "left"
                  ? ((s = 10), (u = "start"))
                  : i.align === "right" &&
                    ((s = n.globals.svgWidth - 10), (u = "end")),
                i.verticalAlign === "top"
                  ? (l = 50)
                  : i.verticalAlign === "bottom" &&
                    (l = n.globals.svgHeight - 50),
                (s += i.offsetX),
                (l = l + parseInt(i.style.fontSize, 10) + 2 + i.offsetY),
                i.text !== void 0 && i.text !== "")
              ) {
                var d = o.drawText({
                  x: s,
                  y: l,
                  text: i.text,
                  textAnchor: u,
                  fontSize: i.style.fontSize,
                  fontFamily: i.style.fontFamily,
                  foreColor: i.style.color,
                  opacity: 1,
                  class: "apexcharts-text-nodata",
                });
                n.globals.dom.Paper.add(d);
              }
            },
          },
          {
            key: "setNullSeriesToZeroValues",
            value: function (n) {
              for (var i = this.w, o = 0; o < n.length; o++)
                if (n[o].length === 0)
                  for (
                    var s = 0;
                    s < n[i.globals.maxValsInArrayIndex].length;
                    s++
                  )
                    n[o].push(0);
              return n;
            },
          },
          {
            key: "hasAllSeriesEqualX",
            value: function () {
              for (
                var n = !0, i = this.w, o = this.filteredSeriesX(), s = 0;
                s < o.length - 1;
                s++
              )
                if (o[s][0] !== o[s + 1][0]) {
                  n = !1;
                  break;
                }
              return (i.globals.allSeriesHasEqualX = n), n;
            },
          },
          {
            key: "filteredSeriesX",
            value: function () {
              var n = this.w.globals.seriesX.map(function (i) {
                return i.length > 0 ? i : [];
              });
              return n;
            },
          },
        ]),
        T
      );
    })(),
    Ue = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.twoDSeries = []),
          (this.threeDSeries = []),
          (this.twoDSeriesX = []),
          (this.seriesGoals = []),
          (this.coreUtils = new U(this.ctx));
      }
      return (
        v(T, [
          {
            key: "isMultiFormat",
            value: function () {
              return this.isFormatXY() || this.isFormat2DArray();
            },
          },
          {
            key: "isFormatXY",
            value: function () {
              var n = this.w.config.series.slice(),
                i = new Be(this.ctx);
              if (
                ((this.activeSeriesIndex = i.getActiveConfigSeriesIndex()),
                n[this.activeSeriesIndex].data !== void 0 &&
                  n[this.activeSeriesIndex].data.length > 0 &&
                  n[this.activeSeriesIndex].data[0] !== null &&
                  n[this.activeSeriesIndex].data[0].x !== void 0 &&
                  n[this.activeSeriesIndex].data[0] !== null)
              )
                return !0;
            },
          },
          {
            key: "isFormat2DArray",
            value: function () {
              var n = this.w.config.series.slice(),
                i = new Be(this.ctx);
              if (
                ((this.activeSeriesIndex = i.getActiveConfigSeriesIndex()),
                n[this.activeSeriesIndex].data !== void 0 &&
                  n[this.activeSeriesIndex].data.length > 0 &&
                  n[this.activeSeriesIndex].data[0] !== void 0 &&
                  n[this.activeSeriesIndex].data[0] !== null &&
                  n[this.activeSeriesIndex].data[0].constructor === Array)
              )
                return !0;
            },
          },
          {
            key: "handleFormat2DArray",
            value: function (n, i) {
              for (
                var o = this.w.config,
                  s = this.w.globals,
                  l =
                    o.chart.type === "boxPlot" ||
                    o.series[i].type === "boxPlot",
                  u = 0;
                u < n[i].data.length;
                u++
              )
                if (
                  (n[i].data[u][1] !== void 0 &&
                    (Array.isArray(n[i].data[u][1]) &&
                    n[i].data[u][1].length === 4 &&
                    !l
                      ? this.twoDSeries.push(O.parseNumber(n[i].data[u][1][3]))
                      : n[i].data[u].length >= 5
                      ? this.twoDSeries.push(O.parseNumber(n[i].data[u][4]))
                      : this.twoDSeries.push(O.parseNumber(n[i].data[u][1])),
                    (s.dataFormatXNumeric = !0)),
                  o.xaxis.type === "datetime")
                ) {
                  var d = new Date(n[i].data[u][0]);
                  (d = new Date(d).getTime()), this.twoDSeriesX.push(d);
                } else this.twoDSeriesX.push(n[i].data[u][0]);
              for (var f = 0; f < n[i].data.length; f++)
                n[i].data[f][2] !== void 0 &&
                  (this.threeDSeries.push(n[i].data[f][2]), (s.isDataXYZ = !0));
            },
          },
          {
            key: "handleFormatXY",
            value: function (n, i) {
              var o = this.w.config,
                s = this.w.globals,
                l = new ue(this.ctx),
                u = i;
              s.collapsedSeriesIndices.indexOf(i) > -1 &&
                (u = this.activeSeriesIndex);
              for (var d = 0; d < n[i].data.length; d++)
                n[i].data[d].y !== void 0 &&
                  (Array.isArray(n[i].data[d].y)
                    ? this.twoDSeries.push(
                        O.parseNumber(
                          n[i].data[d].y[n[i].data[d].y.length - 1],
                        ),
                      )
                    : this.twoDSeries.push(O.parseNumber(n[i].data[d].y))),
                  n[i].data[d].goals !== void 0 &&
                  Array.isArray(n[i].data[d].goals)
                    ? (this.seriesGoals[i] === void 0 &&
                        (this.seriesGoals[i] = []),
                      this.seriesGoals[i].push(n[i].data[d].goals))
                    : (this.seriesGoals[i] === void 0 &&
                        (this.seriesGoals[i] = []),
                      this.seriesGoals[i].push(null));
              for (var f = 0; f < n[u].data.length; f++) {
                var m = typeof n[u].data[f].x == "string",
                  y = Array.isArray(n[u].data[f].x),
                  x = !y && !!l.isValidDate(n[u].data[f].x.toString());
                if (m || x)
                  if (m || o.xaxis.convertedCatToNumeric) {
                    var S = s.isBarHorizontal && s.isRangeData;
                    o.xaxis.type !== "datetime" || S
                      ? ((this.fallbackToCategory = !0),
                        this.twoDSeriesX.push(n[u].data[f].x),
                        isNaN(n[u].data[f].x) ||
                          this.w.config.xaxis.type === "category" ||
                          typeof n[u].data[f].x == "string" ||
                          (s.isXNumeric = !0))
                      : this.twoDSeriesX.push(l.parseDate(n[u].data[f].x));
                  } else
                    o.xaxis.type === "datetime"
                      ? this.twoDSeriesX.push(
                          l.parseDate(n[u].data[f].x.toString()),
                        )
                      : ((s.dataFormatXNumeric = !0),
                        (s.isXNumeric = !0),
                        this.twoDSeriesX.push(parseFloat(n[u].data[f].x)));
                else
                  y
                    ? ((this.fallbackToCategory = !0),
                      this.twoDSeriesX.push(n[u].data[f].x))
                    : ((s.isXNumeric = !0),
                      (s.dataFormatXNumeric = !0),
                      this.twoDSeriesX.push(n[u].data[f].x));
              }
              if (n[i].data[0] && n[i].data[0].z !== void 0) {
                for (var _ = 0; _ < n[i].data.length; _++)
                  this.threeDSeries.push(n[i].data[_].z);
                s.isDataXYZ = !0;
              }
            },
          },
          {
            key: "handleRangeData",
            value: function (n, i) {
              var o = this.w.globals,
                s = {};
              return (
                this.isFormat2DArray()
                  ? (s = this.handleRangeDataFormat("array", n, i))
                  : this.isFormatXY() &&
                    (s = this.handleRangeDataFormat("xy", n, i)),
                o.seriesRangeStart.push(s.start),
                o.seriesRangeEnd.push(s.end),
                o.seriesRange.push(s.rangeUniques),
                o.seriesRange.forEach(function (l, u) {
                  l &&
                    l.forEach(function (d, f) {
                      d.y.forEach(function (m, y) {
                        for (var x = 0; x < d.y.length; x++)
                          if (y !== x) {
                            var S = m.y1,
                              _ = m.y2,
                              C = d.y[x].y1;
                            S <= d.y[x].y2 &&
                              C <= _ &&
                              (d.overlaps.indexOf(m.rangeName) < 0 &&
                                d.overlaps.push(m.rangeName),
                              d.overlaps.indexOf(d.y[x].rangeName) < 0 &&
                                d.overlaps.push(d.y[x].rangeName));
                          }
                      });
                    });
                }),
                s
              );
            },
          },
          {
            key: "handleCandleStickBoxData",
            value: function (n, i) {
              var o = this.w.globals,
                s = {};
              return (
                this.isFormat2DArray()
                  ? (s = this.handleCandleStickBoxDataFormat("array", n, i))
                  : this.isFormatXY() &&
                    (s = this.handleCandleStickBoxDataFormat("xy", n, i)),
                (o.seriesCandleO[i] = s.o),
                (o.seriesCandleH[i] = s.h),
                (o.seriesCandleM[i] = s.m),
                (o.seriesCandleL[i] = s.l),
                (o.seriesCandleC[i] = s.c),
                s
              );
            },
          },
          {
            key: "handleRangeDataFormat",
            value: function (n, i, o) {
              var s = [],
                l = [],
                u = i[o].data
                  .filter(function (y, x, S) {
                    return (
                      x ===
                      S.findIndex(function (_) {
                        return _.x === y.x;
                      })
                    );
                  })
                  .map(function (y, x) {
                    return { x: y.x, overlaps: [], y: [] };
                  });
              if (n === "array")
                for (var d = 0; d < i[o].data.length; d++)
                  Array.isArray(i[o].data[d])
                    ? (s.push(i[o].data[d][1][0]), l.push(i[o].data[d][1][1]))
                    : (s.push(i[o].data[d]), l.push(i[o].data[d]));
              else if (n === "xy")
                for (
                  var f = function (y) {
                      var x = Array.isArray(i[o].data[y].y),
                        S = O.randomId(),
                        _ = i[o].data[y].x,
                        C = {
                          y1: x ? i[o].data[y].y[0] : i[o].data[y].y,
                          y2: x ? i[o].data[y].y[1] : i[o].data[y].y,
                          rangeName: S,
                        };
                      i[o].data[y].rangeName = S;
                      var E = u.findIndex(function (I) {
                        return I.x === _;
                      });
                      u[E].y.push(C), s.push(C.y1), l.push(C.y2);
                    },
                    m = 0;
                  m < i[o].data.length;
                  m++
                )
                  f(m);
              return { start: s, end: l, rangeUniques: u };
            },
          },
          {
            key: "handleCandleStickBoxDataFormat",
            value: function (n, i, o) {
              var s = this.w,
                l =
                  s.config.chart.type === "boxPlot" ||
                  s.config.series[o].type === "boxPlot",
                u = [],
                d = [],
                f = [],
                m = [],
                y = [];
              if (n === "array")
                if (
                  (l && i[o].data[0].length === 6) ||
                  (!l && i[o].data[0].length === 5)
                )
                  for (var x = 0; x < i[o].data.length; x++)
                    u.push(i[o].data[x][1]),
                      d.push(i[o].data[x][2]),
                      l
                        ? (f.push(i[o].data[x][3]),
                          m.push(i[o].data[x][4]),
                          y.push(i[o].data[x][5]))
                        : (m.push(i[o].data[x][3]), y.push(i[o].data[x][4]));
                else
                  for (var S = 0; S < i[o].data.length; S++)
                    Array.isArray(i[o].data[S][1]) &&
                      (u.push(i[o].data[S][1][0]),
                      d.push(i[o].data[S][1][1]),
                      l
                        ? (f.push(i[o].data[S][1][2]),
                          m.push(i[o].data[S][1][3]),
                          y.push(i[o].data[S][1][4]))
                        : (m.push(i[o].data[S][1][2]),
                          y.push(i[o].data[S][1][3])));
              else if (n === "xy")
                for (var _ = 0; _ < i[o].data.length; _++)
                  Array.isArray(i[o].data[_].y) &&
                    (u.push(i[o].data[_].y[0]),
                    d.push(i[o].data[_].y[1]),
                    l
                      ? (f.push(i[o].data[_].y[2]),
                        m.push(i[o].data[_].y[3]),
                        y.push(i[o].data[_].y[4]))
                      : (m.push(i[o].data[_].y[2]), y.push(i[o].data[_].y[3])));
              return { o: u, h: d, m: f, l: m, c: y };
            },
          },
          {
            key: "parseDataAxisCharts",
            value: function (n) {
              var i,
                o = this,
                s =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : this.ctx,
                l = this.w.config,
                u = this.w.globals,
                d = new ue(s),
                f =
                  l.labels.length > 0
                    ? l.labels.slice()
                    : l.xaxis.categories.slice();
              if (
                ((u.isRangeBar =
                  l.chart.type === "rangeBar" && u.isBarHorizontal),
                (u.hasXaxisGroups =
                  l.xaxis.type === "category" &&
                  l.xaxis.group.groups.length > 0),
                u.hasXaxisGroups && (u.groups = l.xaxis.group.groups),
                (u.hasSeriesGroups =
                  (i = n[0]) === null || i === void 0 ? void 0 : i.group),
                u.hasSeriesGroups)
              ) {
                var m = [],
                  y = F(
                    new Set(
                      n.map(function (C) {
                        return C.group;
                      }),
                    ),
                  );
                n.forEach(function (C, E) {
                  var I = y.indexOf(C.group);
                  m[I] || (m[I] = []), m[I].push(C.name);
                }),
                  (u.seriesGroups = m);
              }
              for (
                var x = function () {
                    for (var C = 0; C < f.length; C++)
                      if (typeof f[C] == "string") {
                        if (!d.isValidDate(f[C]))
                          throw new Error(
                            "You have provided invalid Date format. Please provide a valid JavaScript Date",
                          );
                        o.twoDSeriesX.push(d.parseDate(f[C]));
                      } else o.twoDSeriesX.push(f[C]);
                  },
                  S = 0;
                S < n.length;
                S++
              ) {
                if (
                  ((this.twoDSeries = []),
                  (this.twoDSeriesX = []),
                  (this.threeDSeries = []),
                  n[S].data === void 0)
                )
                  return void console.error(
                    "It is a possibility that you may have not included 'data' property in series.",
                  );
                if (
                  ((l.chart.type !== "rangeBar" &&
                    l.chart.type !== "rangeArea" &&
                    n[S].type !== "rangeBar" &&
                    n[S].type !== "rangeArea") ||
                    ((u.isRangeData = !0),
                    u.isComboCharts
                      ? (n[S].type !== "rangeBar" &&
                          n[S].type !== "rangeArea") ||
                        this.handleRangeData(n, S)
                      : (l.chart.type !== "rangeBar" &&
                          l.chart.type !== "rangeArea") ||
                        this.handleRangeData(n, S)),
                  this.isMultiFormat())
                )
                  this.isFormat2DArray()
                    ? this.handleFormat2DArray(n, S)
                    : this.isFormatXY() && this.handleFormatXY(n, S),
                    (l.chart.type !== "candlestick" &&
                      n[S].type !== "candlestick" &&
                      l.chart.type !== "boxPlot" &&
                      n[S].type !== "boxPlot") ||
                      this.handleCandleStickBoxData(n, S),
                    u.series.push(this.twoDSeries),
                    u.labels.push(this.twoDSeriesX),
                    u.seriesX.push(this.twoDSeriesX),
                    (u.seriesGoals = this.seriesGoals),
                    S !== this.activeSeriesIndex ||
                      this.fallbackToCategory ||
                      (u.isXNumeric = !0);
                else {
                  l.xaxis.type === "datetime"
                    ? ((u.isXNumeric = !0),
                      x(),
                      u.seriesX.push(this.twoDSeriesX))
                    : l.xaxis.type === "numeric" &&
                      ((u.isXNumeric = !0),
                      f.length > 0 &&
                        ((this.twoDSeriesX = f),
                        u.seriesX.push(this.twoDSeriesX))),
                    u.labels.push(this.twoDSeriesX);
                  var _ = n[S].data.map(function (C) {
                    return O.parseNumber(C);
                  });
                  u.series.push(_);
                }
                u.seriesZ.push(this.threeDSeries),
                  n[S].name !== void 0
                    ? u.seriesNames.push(n[S].name)
                    : u.seriesNames.push("series-" + parseInt(S + 1, 10)),
                  n[S].color !== void 0
                    ? u.seriesColors.push(n[S].color)
                    : u.seriesColors.push(void 0);
              }
              return this.w;
            },
          },
          {
            key: "parseDataNonAxisCharts",
            value: function (n) {
              var i = this.w.globals,
                o = this.w.config;
              (i.series = n.slice()), (i.seriesNames = o.labels.slice());
              for (var s = 0; s < i.series.length; s++)
                i.seriesNames[s] === void 0 &&
                  i.seriesNames.push("series-" + (s + 1));
              return this.w;
            },
          },
          {
            key: "handleExternalLabelsData",
            value: function (n) {
              var i = this.w.config,
                o = this.w.globals;
              i.xaxis.categories.length > 0
                ? (o.labels = i.xaxis.categories)
                : i.labels.length > 0
                ? (o.labels = i.labels.slice())
                : this.fallbackToCategory
                ? ((o.labels = o.labels[0]),
                  o.seriesRange.length &&
                    (o.seriesRange.map(function (s) {
                      s.forEach(function (l) {
                        o.labels.indexOf(l.x) < 0 && l.x && o.labels.push(l.x);
                      });
                    }),
                    (o.labels = Array.from(
                      new Set(o.labels.map(JSON.stringify)),
                      JSON.parse,
                    ))),
                  i.xaxis.convertedCatToNumeric &&
                    (new te(i).convertCatToNumericXaxis(
                      i,
                      this.ctx,
                      o.seriesX[0],
                    ),
                    this._generateExternalLabels(n)))
                : this._generateExternalLabels(n);
            },
          },
          {
            key: "_generateExternalLabels",
            value: function (n) {
              var i = this.w.globals,
                o = this.w.config,
                s = [];
              if (i.axisCharts) {
                if (i.series.length > 0)
                  if (this.isFormatXY())
                    for (
                      var l = o.series.map(function (x, S) {
                          return x.data.filter(function (_, C, E) {
                            return (
                              E.findIndex(function (I) {
                                return I.x === _.x;
                              }) === C
                            );
                          });
                        }),
                        u = l.reduce(function (x, S, _, C) {
                          return C[x].length > S.length ? x : _;
                        }, 0),
                        d = 0;
                      d < l[u].length;
                      d++
                    )
                      s.push(d + 1);
                  else
                    for (
                      var f = 0;
                      f < i.series[i.maxValsInArrayIndex].length;
                      f++
                    )
                      s.push(f + 1);
                i.seriesX = [];
                for (var m = 0; m < n.length; m++) i.seriesX.push(s);
                this.w.globals.isBarHorizontal || (i.isXNumeric = !0);
              }
              if (s.length === 0) {
                s = i.axisCharts
                  ? []
                  : i.series.map(function (x, S) {
                      return S + 1;
                    });
                for (var y = 0; y < n.length; y++) i.seriesX.push(s);
              }
              (i.labels = s),
                o.xaxis.convertedCatToNumeric &&
                  (i.categoryLabels = s.map(function (x) {
                    return o.xaxis.labels.formatter(x);
                  })),
                (i.noLabelsProvided = !0);
            },
          },
          {
            key: "parseData",
            value: function (n) {
              var i = this.w,
                o = i.config,
                s = i.globals;
              if (
                (this.excludeCollapsedSeriesInYAxis(),
                (this.fallbackToCategory = !1),
                this.ctx.core.resetGlobals(),
                this.ctx.core.isMultipleY(),
                s.axisCharts
                  ? (this.parseDataAxisCharts(n),
                    this.coreUtils.getLargestSeries())
                  : this.parseDataNonAxisCharts(n),
                o.chart.stacked)
              ) {
                var l = new Be(this.ctx);
                s.series = l.setNullSeriesToZeroValues(s.series);
              }
              this.coreUtils.getSeriesTotals(),
                s.axisCharts &&
                  (s.stackedSeriesTotals =
                    this.coreUtils.getStackedSeriesTotals()),
                this.coreUtils.getPercentSeries(),
                s.dataFormatXNumeric ||
                  (s.isXNumeric &&
                    (o.xaxis.type !== "numeric" ||
                      o.labels.length !== 0 ||
                      o.xaxis.categories.length !== 0)) ||
                  this.handleExternalLabelsData(n);
              for (
                var u = this.coreUtils.getCategoryLabels(s.labels), d = 0;
                d < u.length;
                d++
              )
                if (Array.isArray(u[d])) {
                  s.isMultiLineX = !0;
                  break;
                }
            },
          },
          {
            key: "excludeCollapsedSeriesInYAxis",
            value: function () {
              var n = this,
                i = this.w;
              i.globals.ignoreYAxisIndexes = i.globals.collapsedSeries.map(
                function (o, s) {
                  if (n.w.globals.isMultipleYAxis && !i.config.chart.stacked)
                    return o.index;
                },
              );
            },
          },
        ]),
        T
      );
    })(),
    mt = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "getLabel",
            value: function (n, i, o, s) {
              var l =
                  arguments.length > 4 && arguments[4] !== void 0
                    ? arguments[4]
                    : [],
                u =
                  arguments.length > 5 && arguments[5] !== void 0
                    ? arguments[5]
                    : "12px",
                d =
                  !(arguments.length > 6 && arguments[6] !== void 0) ||
                  arguments[6],
                f = this.w,
                m = n[s] === void 0 ? "" : n[s],
                y = m,
                x = f.globals.xLabelFormatter,
                S = f.config.xaxis.labels.formatter,
                _ = !1,
                C = new oe(this.ctx),
                E = m;
              d &&
                ((y = C.xLabelFormat(x, m, E, {
                  i: s,
                  dateFormatter: new ue(this.ctx).formatDate,
                  w: f,
                })),
                S !== void 0 &&
                  (y = S(m, n[s], {
                    i: s,
                    dateFormatter: new ue(this.ctx).formatDate,
                    w: f,
                  })));
              var I, H;
              i.length > 0
                ? ((I = i[s].unit),
                  (H = null),
                  i.forEach(function (A) {
                    A.unit === "month"
                      ? (H = "year")
                      : A.unit === "day"
                      ? (H = "month")
                      : A.unit === "hour"
                      ? (H = "day")
                      : A.unit === "minute" && (H = "hour");
                  }),
                  (_ = H === I),
                  (o = i[s].position),
                  (y = i[s].value))
                : f.config.xaxis.type === "datetime" &&
                  S === void 0 &&
                  (y = ""),
                y === void 0 && (y = ""),
                (y = Array.isArray(y) ? y : y.toString());
              var Y = new B(this.ctx),
                g = {};
              g =
                f.globals.rotateXLabels && d
                  ? Y.getTextRects(
                      y,
                      parseInt(u, 10),
                      null,
                      "rotate(".concat(f.config.xaxis.labels.rotate, " 0 0)"),
                      !1,
                    )
                  : Y.getTextRects(y, parseInt(u, 10));
              var w =
                !f.config.xaxis.labels.showDuplicates && this.ctx.timeScale;
              return (
                !Array.isArray(y) &&
                  (y.indexOf("NaN") === 0 ||
                    y.toLowerCase().indexOf("invalid") === 0 ||
                    y.toLowerCase().indexOf("infinity") >= 0 ||
                    (l.indexOf(y) >= 0 && w)) &&
                  (y = ""),
                { x: o, text: y, textRect: g, isBold: _ }
              );
            },
          },
          {
            key: "checkLabelBasedOnTickamount",
            value: function (n, i, o) {
              var s = this.w,
                l = s.config.xaxis.tickAmount;
              return (
                l === "dataPoints" &&
                  (l = Math.round(s.globals.gridWidth / 120)),
                l > o || n % Math.round(o / (l + 1)) == 0 || (i.text = ""),
                i
              );
            },
          },
          {
            key: "checkForOverflowingLabels",
            value: function (n, i, o, s, l) {
              var u = this.w;
              if (
                (n === 0 && u.globals.skipFirstTimelinelabel && (i.text = ""),
                n === o - 1 && u.globals.skipLastTimelinelabel && (i.text = ""),
                u.config.xaxis.labels.hideOverlappingLabels && s.length > 0)
              ) {
                var d = l[l.length - 1];
                i.x <
                  d.textRect.width /
                    (u.globals.rotateXLabels
                      ? Math.abs(u.config.xaxis.labels.rotate) / 12
                      : 1.01) +
                    d.x && (i.text = "");
              }
              return i;
            },
          },
          {
            key: "checkForReversedLabels",
            value: function (n, i) {
              var o = this.w;
              return (
                o.config.yaxis[n] && o.config.yaxis[n].reversed && i.reverse(),
                i
              );
            },
          },
          {
            key: "isYAxisHidden",
            value: function (n) {
              var i = this.w,
                o = new U(this.ctx);
              return (
                !i.config.yaxis[n].show ||
                (!i.config.yaxis[n].showForNullSeries &&
                  o.isSeriesNull(n) &&
                  i.globals.collapsedSeriesIndices.indexOf(n) === -1)
              );
            },
          },
          {
            key: "getYAxisForeColor",
            value: function (n, i) {
              var o = this.w;
              return (
                Array.isArray(n) &&
                  o.globals.yAxisScale[i] &&
                  this.ctx.theme.pushExtraColors(
                    n,
                    o.globals.yAxisScale[i].result.length,
                    !1,
                  ),
                n
              );
            },
          },
          {
            key: "drawYAxisTicks",
            value: function (n, i, o, s, l, u, d) {
              var f = this.w,
                m = new B(this.ctx),
                y = f.globals.translateY;
              if (s.show && i > 0) {
                f.config.yaxis[l].opposite === !0 && (n += s.width);
                for (var x = i; x >= 0; x--) {
                  var S = y + i / 10 + f.config.yaxis[l].labels.offsetY - 1;
                  f.globals.isBarHorizontal && (S = u * x),
                    f.config.chart.type === "heatmap" && (S += u / 2);
                  var _ = m.drawLine(
                    n + o.offsetX - s.width + s.offsetX,
                    S + s.offsetY,
                    n + o.offsetX + s.offsetX,
                    S + s.offsetY,
                    s.color,
                  );
                  d.add(_), (y += u);
                }
              }
            },
          },
        ]),
        T
      );
    })(),
    Xe = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "scaleSvgNode",
            value: function (n, i) {
              var o = parseFloat(n.getAttributeNS(null, "width")),
                s = parseFloat(n.getAttributeNS(null, "height"));
              n.setAttributeNS(null, "width", o * i),
                n.setAttributeNS(null, "height", s * i),
                n.setAttributeNS(null, "viewBox", "0 0 " + o + " " + s);
            },
          },
          {
            key: "fixSvgStringForIe11",
            value: function (n) {
              if (!O.isIE11()) return n.replace(/&nbsp;/g, "&#160;");
              var i = 0,
                o = n.replace(
                  /xmlns="http:\/\/www.w3.org\/2000\/svg"/g,
                  function (s) {
                    return ++i === 2
                      ? 'xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:svgjs="http://svgjs.dev"'
                      : s;
                  },
                );
              return (o = (o = o.replace(/xmlns:NS\d+=""/g, "")).replace(
                /NS\d+:(\w+:\w+=")/g,
                "$1",
              ));
            },
          },
          {
            key: "getSvgString",
            value: function (n) {
              n == null && (n = 1);
              var i = this.w.globals.dom.Paper.svg();
              if (n !== 1) {
                var o = this.w.globals.dom.Paper.node.cloneNode(!0);
                this.scaleSvgNode(o, n),
                  (i = new XMLSerializer().serializeToString(o));
              }
              return this.fixSvgStringForIe11(i);
            },
          },
          {
            key: "cleanup",
            value: function () {
              var n = this.w,
                i = n.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-xcrosshairs",
                ),
                o = n.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-ycrosshairs",
                ),
                s = n.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-zoom-rect, .apexcharts-selection-rect",
                );
              Array.prototype.forEach.call(s, function (l) {
                l.setAttribute("width", 0);
              }),
                i &&
                  i[0] &&
                  (i[0].setAttribute("x", -500),
                  i[0].setAttribute("x1", -500),
                  i[0].setAttribute("x2", -500)),
                o &&
                  o[0] &&
                  (o[0].setAttribute("y", -100),
                  o[0].setAttribute("y1", -100),
                  o[0].setAttribute("y2", -100));
            },
          },
          {
            key: "svgUrl",
            value: function () {
              this.cleanup();
              var n = this.getSvgString(),
                i = new Blob([n], { type: "image/svg+xml;charset=utf-8" });
              return URL.createObjectURL(i);
            },
          },
          {
            key: "dataURI",
            value: function (n) {
              var i = this;
              return new Promise(function (o) {
                var s = i.w,
                  l = n ? n.scale || n.width / s.globals.svgWidth : 1;
                i.cleanup();
                var u = document.createElement("canvas");
                (u.width = s.globals.svgWidth * l),
                  (u.height =
                    parseInt(s.globals.dom.elWrap.style.height, 10) * l);
                var d =
                    s.config.chart.background === "transparent"
                      ? "#fff"
                      : s.config.chart.background,
                  f = u.getContext("2d");
                (f.fillStyle = d), f.fillRect(0, 0, u.width * l, u.height * l);
                var m = i.getSvgString(l);
                if (window.canvg && O.isIE11()) {
                  var y = window.canvg.Canvg.fromString(f, m, {
                    ignoreClear: !0,
                    ignoreDimensions: !0,
                  });
                  y.start();
                  var x = u.msToBlob();
                  y.stop(), o({ blob: x });
                } else {
                  var S = "data:image/svg+xml," + encodeURIComponent(m),
                    _ = new Image();
                  (_.crossOrigin = "anonymous"),
                    (_.onload = function () {
                      if ((f.drawImage(_, 0, 0), u.msToBlob)) {
                        var C = u.msToBlob();
                        o({ blob: C });
                      } else {
                        var E = u.toDataURL("image/png");
                        o({ imgURI: E });
                      }
                    }),
                    (_.src = S);
                }
              });
            },
          },
          {
            key: "exportToSVG",
            value: function () {
              this.triggerDownload(
                this.svgUrl(),
                this.w.config.chart.toolbar.export.svg.filename,
                ".svg",
              );
            },
          },
          {
            key: "exportToPng",
            value: function () {
              var n = this;
              this.dataURI().then(function (i) {
                var o = i.imgURI,
                  s = i.blob;
                s
                  ? navigator.msSaveOrOpenBlob(s, n.w.globals.chartID + ".png")
                  : n.triggerDownload(
                      o,
                      n.w.config.chart.toolbar.export.png.filename,
                      ".png",
                    );
              });
            },
          },
          {
            key: "exportToCSV",
            value: function (n) {
              var i = this,
                o = n.series,
                s = n.fileName,
                l = n.columnDelimiter,
                u = l === void 0 ? "," : l,
                d = n.lineDelimiter,
                f =
                  d === void 0
                    ? `
`
                    : d,
                m = this.w;
              o || (o = m.config.series);
              var y = [],
                x = [],
                S = "",
                _ = m.globals.series.map(function (g, w) {
                  return m.globals.collapsedSeriesIndices.indexOf(w) === -1
                    ? g
                    : [];
                }),
                C = Math.max.apply(
                  Math,
                  F(
                    o.map(function (g) {
                      return g.data ? g.data.length : 0;
                    }),
                  ),
                ),
                E = new Ue(this.ctx),
                I = new mt(this.ctx),
                H = function (g) {
                  var w = "";
                  if (m.globals.axisCharts) {
                    if (
                      m.config.xaxis.type === "category" ||
                      m.config.xaxis.convertedCatToNumeric
                    )
                      if (m.globals.isBarHorizontal) {
                        var A = m.globals.yLabelFormatters[0],
                          D = new Be(i.ctx).getActiveConfigSeriesIndex();
                        w = A(m.globals.labels[g], {
                          seriesIndex: D,
                          dataPointIndex: g,
                          w: m,
                        });
                      } else
                        w = I.getLabel(
                          m.globals.labels,
                          m.globals.timescaleLabels,
                          0,
                          g,
                        ).text;
                    m.config.xaxis.type === "datetime" &&
                      (m.config.xaxis.categories.length
                        ? (w = m.config.xaxis.categories[g])
                        : m.config.labels.length && (w = m.config.labels[g]));
                  } else w = m.config.labels[g];
                  return (
                    Array.isArray(w) && (w = w.join(" ")),
                    O.isNumber(w) ? w : w.split(u).join("")
                  );
                },
                Y = function (g, w) {
                  if ((y.length && w === 0 && x.push(y.join(u)), g.data)) {
                    g.data =
                      (g.data.length && g.data) ||
                      F(Array(C)).map(function () {
                        return "";
                      });
                    for (var A = 0; A < g.data.length; A++) {
                      y = [];
                      var D = H(A);
                      if (
                        (D ||
                          (E.isFormatXY()
                            ? (D = o[w].data[A].x)
                            : E.isFormat2DArray() &&
                              (D = o[w].data[A] ? o[w].data[A][0] : "")),
                        w === 0)
                      ) {
                        y.push(
                          ((K = D),
                          m.config.xaxis.type === "datetime" &&
                          String(K).length >= 10
                            ? m.config.chart.toolbar.export.csv.dateFormatter(D)
                            : O.isNumber(D)
                            ? D
                            : D.split(u).join("")),
                        );
                        for (var W = 0; W < m.globals.series.length; W++) {
                          var V;
                          E.isFormatXY()
                            ? y.push(
                                (V = o[W].data[A]) === null || V === void 0
                                  ? void 0
                                  : V.y,
                              )
                            : y.push(_[W][A]);
                        }
                      }
                      (m.config.chart.type === "candlestick" ||
                        (g.type && g.type === "candlestick")) &&
                        (y.pop(),
                        y.push(m.globals.seriesCandleO[w][A]),
                        y.push(m.globals.seriesCandleH[w][A]),
                        y.push(m.globals.seriesCandleL[w][A]),
                        y.push(m.globals.seriesCandleC[w][A])),
                        (m.config.chart.type === "boxPlot" ||
                          (g.type && g.type === "boxPlot")) &&
                          (y.pop(),
                          y.push(m.globals.seriesCandleO[w][A]),
                          y.push(m.globals.seriesCandleH[w][A]),
                          y.push(m.globals.seriesCandleM[w][A]),
                          y.push(m.globals.seriesCandleL[w][A]),
                          y.push(m.globals.seriesCandleC[w][A])),
                        m.config.chart.type === "rangeBar" &&
                          (y.pop(),
                          y.push(m.globals.seriesRangeStart[w][A]),
                          y.push(m.globals.seriesRangeEnd[w][A])),
                        y.length && x.push(y.join(u));
                    }
                  }
                  var K;
                };
              y.push(m.config.chart.toolbar.export.csv.headerCategory),
                m.config.chart.type === "boxPlot"
                  ? (y.push("minimum"),
                    y.push("q1"),
                    y.push("median"),
                    y.push("q3"),
                    y.push("maximum"))
                  : m.config.chart.type === "candlestick"
                  ? (y.push("open"),
                    y.push("high"),
                    y.push("low"),
                    y.push("close"))
                  : m.config.chart.type === "rangeBar"
                  ? (y.push("minimum"), y.push("maximum"))
                  : o.map(function (g, w) {
                      var A = (g.name ? g.name : "series-".concat(w)) + "";
                      m.globals.axisCharts &&
                        y.push(
                          A.split(u).join("")
                            ? A.split(u).join("")
                            : "series-".concat(w),
                        );
                    }),
                m.globals.axisCharts ||
                  (y.push(m.config.chart.toolbar.export.csv.headerValue),
                  x.push(y.join(u))),
                o.map(function (g, w) {
                  m.globals.axisCharts
                    ? Y(g, w)
                    : ((y = []).push(m.globals.labels[w].split(u).join("")),
                      y.push(_[w]),
                      x.push(y.join(u)));
                }),
                (S += x.join(f)),
                this.triggerDownload(
                  "data:text/csv; charset=utf-8," +
                    encodeURIComponent("\uFEFF" + S),
                  s || m.config.chart.toolbar.export.csv.filename,
                  ".csv",
                );
            },
          },
          {
            key: "triggerDownload",
            value: function (n, i, o) {
              var s = document.createElement("a");
              (s.href = n),
                (s.download = (i || this.w.globals.chartID) + o),
                document.body.appendChild(s),
                s.click(),
                document.body.removeChild(s);
            },
          },
        ]),
        T
      );
    })(),
    St = (function () {
      function T(n, i) {
        h(this, T), (this.ctx = n), (this.elgrid = i), (this.w = n.w);
        var o = this.w;
        (this.axesUtils = new mt(n)),
          (this.xaxisLabels = o.globals.labels.slice()),
          o.globals.timescaleLabels.length > 0 &&
            !o.globals.isBarHorizontal &&
            (this.xaxisLabels = o.globals.timescaleLabels.slice()),
          o.config.xaxis.overwriteCategories &&
            (this.xaxisLabels = o.config.xaxis.overwriteCategories),
          (this.drawnLabels = []),
          (this.drawnLabelsRects = []),
          o.config.xaxis.position === "top"
            ? (this.offY = 0)
            : (this.offY = o.globals.gridHeight + 1),
          (this.offY = this.offY + o.config.xaxis.axisBorder.offsetY),
          (this.isCategoryBarHorizontal =
            o.config.chart.type === "bar" &&
            o.config.plotOptions.bar.horizontal),
          (this.xaxisFontSize = o.config.xaxis.labels.style.fontSize),
          (this.xaxisFontFamily = o.config.xaxis.labels.style.fontFamily),
          (this.xaxisForeColors = o.config.xaxis.labels.style.colors),
          (this.xaxisBorderWidth = o.config.xaxis.axisBorder.width),
          this.isCategoryBarHorizontal &&
            (this.xaxisBorderWidth =
              o.config.yaxis[0].axisBorder.width.toString()),
          this.xaxisBorderWidth.indexOf("%") > -1
            ? (this.xaxisBorderWidth =
                (o.globals.gridWidth * parseInt(this.xaxisBorderWidth, 10)) /
                100)
            : (this.xaxisBorderWidth = parseInt(this.xaxisBorderWidth, 10)),
          (this.xaxisBorderHeight = o.config.xaxis.axisBorder.height),
          (this.yaxis = o.config.yaxis[0]);
      }
      return (
        v(T, [
          {
            key: "drawXaxis",
            value: function () {
              var n = this.w,
                i = new B(this.ctx),
                o = i.group({
                  class: "apexcharts-xaxis",
                  transform: "translate("
                    .concat(n.config.xaxis.offsetX, ", ")
                    .concat(n.config.xaxis.offsetY, ")"),
                }),
                s = i.group({
                  class: "apexcharts-xaxis-texts-g",
                  transform: "translate("
                    .concat(n.globals.translateXAxisX, ", ")
                    .concat(n.globals.translateXAxisY, ")"),
                });
              o.add(s);
              for (var l = [], u = 0; u < this.xaxisLabels.length; u++)
                l.push(this.xaxisLabels[u]);
              if (
                (this.drawXAxisLabelAndGroup(
                  !0,
                  i,
                  s,
                  l,
                  n.globals.isXNumeric,
                  function (C, E) {
                    return E;
                  },
                ),
                n.globals.hasXaxisGroups)
              ) {
                var d = n.globals.groups;
                l = [];
                for (var f = 0; f < d.length; f++) l.push(d[f].title);
                var m = {};
                n.config.xaxis.group.style &&
                  ((m.xaxisFontSize = n.config.xaxis.group.style.fontSize),
                  (m.xaxisFontFamily = n.config.xaxis.group.style.fontFamily),
                  (m.xaxisForeColors = n.config.xaxis.group.style.colors),
                  (m.fontWeight = n.config.xaxis.group.style.fontWeight),
                  (m.cssClass = n.config.xaxis.group.style.cssClass)),
                  this.drawXAxisLabelAndGroup(
                    !1,
                    i,
                    s,
                    l,
                    !1,
                    function (C, E) {
                      return d[C].cols * E;
                    },
                    m,
                  );
              }
              if (n.config.xaxis.title.text !== void 0) {
                var y = i.group({ class: "apexcharts-xaxis-title" }),
                  x = i.drawText({
                    x: n.globals.gridWidth / 2 + n.config.xaxis.title.offsetX,
                    y:
                      this.offY +
                      parseFloat(this.xaxisFontSize) +
                      (n.config.xaxis.position === "bottom"
                        ? n.globals.xAxisLabelsHeight
                        : -n.globals.xAxisLabelsHeight - 10) +
                      n.config.xaxis.title.offsetY,
                    text: n.config.xaxis.title.text,
                    textAnchor: "middle",
                    fontSize: n.config.xaxis.title.style.fontSize,
                    fontFamily: n.config.xaxis.title.style.fontFamily,
                    fontWeight: n.config.xaxis.title.style.fontWeight,
                    foreColor: n.config.xaxis.title.style.color,
                    cssClass:
                      "apexcharts-xaxis-title-text " +
                      n.config.xaxis.title.style.cssClass,
                  });
                y.add(x), o.add(y);
              }
              if (n.config.xaxis.axisBorder.show) {
                var S = n.globals.barPadForNumericAxis,
                  _ = i.drawLine(
                    n.globals.padHorizontal +
                      n.config.xaxis.axisBorder.offsetX -
                      S,
                    this.offY,
                    this.xaxisBorderWidth + S,
                    this.offY,
                    n.config.xaxis.axisBorder.color,
                    0,
                    this.xaxisBorderHeight,
                  );
                this.elgrid && this.elgrid.elGridBorders && n.config.grid.show
                  ? this.elgrid.elGridBorders.add(_)
                  : o.add(_);
              }
              return o;
            },
          },
          {
            key: "drawXAxisLabelAndGroup",
            value: function (n, i, o, s, l, u) {
              var d,
                f = this,
                m =
                  arguments.length > 6 && arguments[6] !== void 0
                    ? arguments[6]
                    : {},
                y = [],
                x = [],
                S = this.w,
                _ = m.xaxisFontSize || this.xaxisFontSize,
                C = m.xaxisFontFamily || this.xaxisFontFamily,
                E = m.xaxisForeColors || this.xaxisForeColors,
                I = m.fontWeight || S.config.xaxis.labels.style.fontWeight,
                H = m.cssClass || S.config.xaxis.labels.style.cssClass,
                Y = S.globals.padHorizontal,
                g = s.length,
                w =
                  S.config.xaxis.type === "category" ? S.globals.dataPoints : g;
              if ((w === 0 && g > w && (w = g), l)) {
                var A = w > 1 ? w - 1 : w;
                (d = S.globals.gridWidth / Math.min(A, g - 1)),
                  (Y = Y + u(0, d) / 2 + S.config.xaxis.labels.offsetX);
              } else
                (d = S.globals.gridWidth / w),
                  (Y = Y + u(0, d) + S.config.xaxis.labels.offsetX);
              for (
                var D = function (V) {
                    var K = Y - u(V, d) / 2 + S.config.xaxis.labels.offsetX;
                    V === 0 &&
                      g === 1 &&
                      d / 2 === Y &&
                      w === 1 &&
                      (K = S.globals.gridWidth / 2);
                    var Z = f.axesUtils.getLabel(
                        s,
                        S.globals.timescaleLabels,
                        K,
                        V,
                        y,
                        _,
                        n,
                      ),
                      re = 28;
                    if (
                      (S.globals.rotateXLabels && n && (re = 22),
                      S.config.xaxis.title.text &&
                        S.config.xaxis.position === "top" &&
                        (re +=
                          parseFloat(S.config.xaxis.title.style.fontSize) + 2),
                      n ||
                        (re =
                          re +
                          parseFloat(_) +
                          (S.globals.xAxisLabelsHeight -
                            S.globals.xAxisGroupLabelsHeight) +
                          (S.globals.rotateXLabels ? 10 : 0)),
                      (Z =
                        S.config.xaxis.tickAmount !== void 0 &&
                        S.config.xaxis.tickAmount !== "dataPoints" &&
                        S.config.xaxis.type !== "datetime"
                          ? f.axesUtils.checkLabelBasedOnTickamount(V, Z, g)
                          : f.axesUtils.checkForOverflowingLabels(
                              V,
                              Z,
                              g,
                              y,
                              x,
                            )),
                      S.config.xaxis.labels.show)
                    ) {
                      var ce = i.drawText({
                        x: Z.x,
                        y:
                          f.offY +
                          S.config.xaxis.labels.offsetY +
                          re -
                          (S.config.xaxis.position === "top"
                            ? S.globals.xAxisHeight +
                              S.config.xaxis.axisTicks.height -
                              2
                            : 0),
                        text: Z.text,
                        textAnchor: "middle",
                        fontWeight: Z.isBold ? 600 : I,
                        fontSize: _,
                        fontFamily: C,
                        foreColor: Array.isArray(E)
                          ? n && S.config.xaxis.convertedCatToNumeric
                            ? E[S.globals.minX + V - 1]
                            : E[V]
                          : E,
                        isPlainText: !1,
                        cssClass:
                          (n
                            ? "apexcharts-xaxis-label "
                            : "apexcharts-xaxis-group-label ") + H,
                      });
                      if (
                        (o.add(ce),
                        ce.on("click", function (xe) {
                          if (
                            typeof S.config.chart.events.xAxisLabelClick ==
                            "function"
                          ) {
                            var be = Object.assign({}, S, { labelIndex: V });
                            S.config.chart.events.xAxisLabelClick(
                              xe,
                              f.ctx,
                              be,
                            );
                          }
                        }),
                        n)
                      ) {
                        var se = document.createElementNS(
                          S.globals.SVGNS,
                          "title",
                        );
                        (se.textContent = Array.isArray(Z.text)
                          ? Z.text.join(" ")
                          : Z.text),
                          ce.node.appendChild(se),
                          Z.text !== "" && (y.push(Z.text), x.push(Z));
                      }
                    }
                    V < g - 1 && (Y += u(V + 1, d));
                  },
                  W = 0;
                W <= g - 1;
                W++
              )
                D(W);
            },
          },
          {
            key: "drawXaxisInversed",
            value: function (n) {
              var i,
                o,
                s = this,
                l = this.w,
                u = new B(this.ctx),
                d = l.config.yaxis[0].opposite
                  ? l.globals.translateYAxisX[n]
                  : 0,
                f = u.group({
                  class: "apexcharts-yaxis apexcharts-xaxis-inversed",
                  rel: n,
                }),
                m = u.group({
                  class:
                    "apexcharts-yaxis-texts-g apexcharts-xaxis-inversed-texts-g",
                  transform: "translate(" + d + ", 0)",
                });
              f.add(m);
              var y = [];
              if (l.config.yaxis[n].show)
                for (var x = 0; x < this.xaxisLabels.length; x++)
                  y.push(this.xaxisLabels[x]);
              (i = l.globals.gridHeight / y.length), (o = -i / 2.2);
              var S = l.globals.yLabelFormatters[0],
                _ = l.config.yaxis[0].labels;
              if (_.show)
                for (
                  var C = function (A) {
                      var D = y[A] === void 0 ? "" : y[A];
                      D = S(D, { seriesIndex: n, dataPointIndex: A, w: l });
                      var W = s.axesUtils.getYAxisForeColor(_.style.colors, n),
                        V = 0;
                      Array.isArray(D) &&
                        (V = (D.length / 2) * parseInt(_.style.fontSize, 10));
                      var K = _.offsetX - 15,
                        Z = "end";
                      s.yaxis.opposite && (Z = "start"),
                        l.config.yaxis[0].labels.align === "left"
                          ? ((K = _.offsetX), (Z = "start"))
                          : l.config.yaxis[0].labels.align === "center"
                          ? ((K = _.offsetX), (Z = "middle"))
                          : l.config.yaxis[0].labels.align === "right" &&
                            (Z = "end");
                      var re = u.drawText({
                        x: K,
                        y: o + i + _.offsetY - V,
                        text: D,
                        textAnchor: Z,
                        foreColor: Array.isArray(W) ? W[A] : W,
                        fontSize: _.style.fontSize,
                        fontFamily: _.style.fontFamily,
                        fontWeight: _.style.fontWeight,
                        isPlainText: !1,
                        cssClass: "apexcharts-yaxis-label " + _.style.cssClass,
                        maxWidth: _.maxWidth,
                      });
                      m.add(re),
                        re.on("click", function (xe) {
                          if (
                            typeof l.config.chart.events.xAxisLabelClick ==
                            "function"
                          ) {
                            var be = Object.assign({}, l, { labelIndex: A });
                            l.config.chart.events.xAxisLabelClick(
                              xe,
                              s.ctx,
                              be,
                            );
                          }
                        });
                      var ce = document.createElementNS(
                        l.globals.SVGNS,
                        "title",
                      );
                      if (
                        ((ce.textContent = Array.isArray(D) ? D.join(" ") : D),
                        re.node.appendChild(ce),
                        l.config.yaxis[n].labels.rotate !== 0)
                      ) {
                        var se = u.rotateAroundCenter(re.node);
                        re.node.setAttribute(
                          "transform",
                          "rotate("
                            .concat(l.config.yaxis[n].labels.rotate, " 0 ")
                            .concat(se.y, ")"),
                        );
                      }
                      o += i;
                    },
                    E = 0;
                  E <= y.length - 1;
                  E++
                )
                  C(E);
              if (l.config.yaxis[0].title.text !== void 0) {
                var I = u.group({
                    class:
                      "apexcharts-yaxis-title apexcharts-xaxis-title-inversed",
                    transform: "translate(" + d + ", 0)",
                  }),
                  H = u.drawText({
                    x: l.config.yaxis[0].title.offsetX,
                    y:
                      l.globals.gridHeight / 2 +
                      l.config.yaxis[0].title.offsetY,
                    text: l.config.yaxis[0].title.text,
                    textAnchor: "middle",
                    foreColor: l.config.yaxis[0].title.style.color,
                    fontSize: l.config.yaxis[0].title.style.fontSize,
                    fontWeight: l.config.yaxis[0].title.style.fontWeight,
                    fontFamily: l.config.yaxis[0].title.style.fontFamily,
                    cssClass:
                      "apexcharts-yaxis-title-text " +
                      l.config.yaxis[0].title.style.cssClass,
                  });
                I.add(H), f.add(I);
              }
              var Y = 0;
              this.isCategoryBarHorizontal &&
                l.config.yaxis[0].opposite &&
                (Y = l.globals.gridWidth);
              var g = l.config.xaxis.axisBorder;
              if (g.show) {
                var w = u.drawLine(
                  l.globals.padHorizontal + g.offsetX + Y,
                  1 + g.offsetY,
                  l.globals.padHorizontal + g.offsetX + Y,
                  l.globals.gridHeight + g.offsetY,
                  g.color,
                  0,
                );
                this.elgrid && this.elgrid.elGridBorders && l.config.grid.show
                  ? this.elgrid.elGridBorders.add(w)
                  : f.add(w);
              }
              return (
                l.config.yaxis[0].axisTicks.show &&
                  this.axesUtils.drawYAxisTicks(
                    Y,
                    y.length,
                    l.config.yaxis[0].axisBorder,
                    l.config.yaxis[0].axisTicks,
                    0,
                    i,
                    f,
                  ),
                f
              );
            },
          },
          {
            key: "drawXaxisTicks",
            value: function (n, i, o) {
              var s = this.w,
                l = n;
              if (!(n < 0 || n - 2 > s.globals.gridWidth)) {
                var u = this.offY + s.config.xaxis.axisTicks.offsetY;
                if (
                  ((i = i + u + s.config.xaxis.axisTicks.height),
                  s.config.xaxis.position === "top" &&
                    (i = u - s.config.xaxis.axisTicks.height),
                  s.config.xaxis.axisTicks.show)
                ) {
                  var d = new B(this.ctx).drawLine(
                    n + s.config.xaxis.axisTicks.offsetX,
                    u + s.config.xaxis.offsetY,
                    l + s.config.xaxis.axisTicks.offsetX,
                    i + s.config.xaxis.offsetY,
                    s.config.xaxis.axisTicks.color,
                  );
                  o.add(d), d.node.classList.add("apexcharts-xaxis-tick");
                }
              }
            },
          },
          {
            key: "getXAxisTicksPositions",
            value: function () {
              var n = this.w,
                i = [],
                o = this.xaxisLabels.length,
                s = n.globals.padHorizontal;
              if (n.globals.timescaleLabels.length > 0)
                for (var l = 0; l < o; l++)
                  (s = this.xaxisLabels[l].position), i.push(s);
              else
                for (var u = o, d = 0; d < u; d++) {
                  var f = u;
                  n.globals.isXNumeric &&
                    n.config.chart.type !== "bar" &&
                    (f -= 1),
                    (s += n.globals.gridWidth / f),
                    i.push(s);
                }
              return i;
            },
          },
          {
            key: "xAxisLabelCorrections",
            value: function () {
              var n = this.w,
                i = new B(this.ctx),
                o = n.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxis-texts-g",
                ),
                s = n.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-xaxis-texts-g text:not(.apexcharts-xaxis-group-label)",
                ),
                l = n.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxis-inversed text",
                ),
                u = n.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-xaxis-inversed-texts-g text tspan",
                );
              if (n.globals.rotateXLabels || n.config.xaxis.labels.rotateAlways)
                for (var d = 0; d < s.length; d++) {
                  var f = i.rotateAroundCenter(s[d]);
                  (f.y = f.y - 1),
                    (f.x = f.x + 1),
                    s[d].setAttribute(
                      "transform",
                      "rotate("
                        .concat(n.config.xaxis.labels.rotate, " ")
                        .concat(f.x, " ")
                        .concat(f.y, ")"),
                    ),
                    s[d].setAttribute("text-anchor", "end"),
                    o.setAttribute(
                      "transform",
                      "translate(0, ".concat(-10, ")"),
                    );
                  var m = s[d].childNodes;
                  n.config.xaxis.labels.trim &&
                    Array.prototype.forEach.call(m, function (_) {
                      i.placeTextWithEllipsis(
                        _,
                        _.textContent,
                        n.globals.xAxisLabelsHeight -
                          (n.config.legend.position === "bottom" ? 20 : 10),
                      );
                    });
                }
              else
                (function () {
                  for (
                    var _ = n.globals.gridWidth / (n.globals.labels.length + 1),
                      C = 0;
                    C < s.length;
                    C++
                  ) {
                    var E = s[C].childNodes;
                    n.config.xaxis.labels.trim &&
                      n.config.xaxis.type !== "datetime" &&
                      Array.prototype.forEach.call(E, function (I) {
                        i.placeTextWithEllipsis(I, I.textContent, _);
                      });
                  }
                })();
              if (l.length > 0) {
                var y = l[l.length - 1].getBBox(),
                  x = l[0].getBBox();
                y.x < -20 &&
                  l[l.length - 1].parentNode.removeChild(l[l.length - 1]),
                  x.x + x.width > n.globals.gridWidth &&
                    !n.globals.isBarHorizontal &&
                    l[0].parentNode.removeChild(l[0]);
                for (var S = 0; S < u.length; S++)
                  i.placeTextWithEllipsis(
                    u[S],
                    u[S].textContent,
                    n.config.yaxis[0].labels.maxWidth -
                      (n.config.yaxis[0].title.text
                        ? 2 * parseFloat(n.config.yaxis[0].title.style.fontSize)
                        : 0) -
                      15,
                  );
              }
            },
          },
        ]),
        T
      );
    })(),
    Bt = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
        var i = this.w;
        (this.xaxisLabels = i.globals.labels.slice()),
          (this.axesUtils = new mt(n)),
          (this.isRangeBar =
            i.globals.seriesRange.length && i.globals.isBarHorizontal),
          i.globals.timescaleLabels.length > 0 &&
            (this.xaxisLabels = i.globals.timescaleLabels.slice());
      }
      return (
        v(T, [
          {
            key: "drawGridArea",
            value: function () {
              var n =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : null,
                i = this.w,
                o = new B(this.ctx);
              n === null && (n = o.group({ class: "apexcharts-grid" }));
              var s = o.drawLine(
                  i.globals.padHorizontal,
                  1,
                  i.globals.padHorizontal,
                  i.globals.gridHeight,
                  "transparent",
                ),
                l = o.drawLine(
                  i.globals.padHorizontal,
                  i.globals.gridHeight,
                  i.globals.gridWidth,
                  i.globals.gridHeight,
                  "transparent",
                );
              return n.add(l), n.add(s), n;
            },
          },
          {
            key: "drawGrid",
            value: function () {
              var n = null;
              return (
                this.w.globals.axisCharts &&
                  ((n = this.renderGrid()), this.drawGridArea(n.el)),
                n
              );
            },
          },
          {
            key: "createGridMask",
            value: function () {
              var n = this.w,
                i = n.globals,
                o = new B(this.ctx),
                s = Array.isArray(n.config.stroke.width)
                  ? 0
                  : n.config.stroke.width;
              if (Array.isArray(n.config.stroke.width)) {
                var l = 0;
                n.config.stroke.width.forEach(function (x) {
                  l = Math.max(l, x);
                }),
                  (s = l);
              }
              (i.dom.elGridRectMask = document.createElementNS(
                i.SVGNS,
                "clipPath",
              )),
                i.dom.elGridRectMask.setAttribute(
                  "id",
                  "gridRectMask".concat(i.cuid),
                ),
                (i.dom.elGridRectMarkerMask = document.createElementNS(
                  i.SVGNS,
                  "clipPath",
                )),
                i.dom.elGridRectMarkerMask.setAttribute(
                  "id",
                  "gridRectMarkerMask".concat(i.cuid),
                ),
                (i.dom.elForecastMask = document.createElementNS(
                  i.SVGNS,
                  "clipPath",
                )),
                i.dom.elForecastMask.setAttribute(
                  "id",
                  "forecastMask".concat(i.cuid),
                ),
                (i.dom.elNonForecastMask = document.createElementNS(
                  i.SVGNS,
                  "clipPath",
                )),
                i.dom.elNonForecastMask.setAttribute(
                  "id",
                  "nonForecastMask".concat(i.cuid),
                );
              var u = n.config.chart.type,
                d = 0,
                f = 0;
              (u === "bar" ||
                u === "rangeBar" ||
                u === "candlestick" ||
                u === "boxPlot" ||
                n.globals.comboBarCount > 0) &&
                n.globals.isXNumeric &&
                !n.globals.isBarHorizontal &&
                ((d = n.config.grid.padding.left),
                (f = n.config.grid.padding.right),
                i.barPadForNumericAxis > d &&
                  ((d = i.barPadForNumericAxis), (f = i.barPadForNumericAxis))),
                (i.dom.elGridRect = o.drawRect(
                  -s - d - 2,
                  2 * -s - 2,
                  i.gridWidth + s + f + d + 4,
                  i.gridHeight + 4 * s + 4,
                  0,
                  "#fff",
                ));
              var m = n.globals.markers.largestSize + 1;
              (i.dom.elGridRectMarker = o.drawRect(
                2 * -m,
                2 * -m,
                i.gridWidth + 4 * m,
                i.gridHeight + 4 * m,
                0,
                "#fff",
              )),
                i.dom.elGridRectMask.appendChild(i.dom.elGridRect.node),
                i.dom.elGridRectMarkerMask.appendChild(
                  i.dom.elGridRectMarker.node,
                );
              var y = i.dom.baseEl.querySelector("defs");
              y.appendChild(i.dom.elGridRectMask),
                y.appendChild(i.dom.elForecastMask),
                y.appendChild(i.dom.elNonForecastMask),
                y.appendChild(i.dom.elGridRectMarkerMask);
            },
          },
          {
            key: "_drawGridLines",
            value: function (n) {
              var i = n.i,
                o = n.x1,
                s = n.y1,
                l = n.x2,
                u = n.y2,
                d = n.xCount,
                f = n.parent,
                m = this.w;
              if (
                !(
                  (i === 0 && m.globals.skipFirstTimelinelabel) ||
                  (i === d - 1 &&
                    m.globals.skipLastTimelinelabel &&
                    !m.config.xaxis.labels.formatter) ||
                  m.config.chart.type === "radar"
                )
              ) {
                m.config.grid.xaxis.lines.show &&
                  this._drawGridLine({
                    i,
                    x1: o,
                    y1: s,
                    x2: l,
                    y2: u,
                    xCount: d,
                    parent: f,
                  });
                var y = 0;
                if (
                  m.globals.hasXaxisGroups &&
                  m.config.xaxis.tickPlacement === "between"
                ) {
                  var x = m.globals.groups;
                  if (x) {
                    for (var S = 0, _ = 0; S < i && _ < x.length; _++)
                      S += x[_].cols;
                    S === i && (y = 0.6 * m.globals.xAxisLabelsHeight);
                  }
                }
                new St(this.ctx).drawXaxisTicks(
                  o,
                  y,
                  m.globals.dom.elGraphical,
                );
              }
            },
          },
          {
            key: "_drawGridLine",
            value: function (n) {
              var i = n.i,
                o = n.x1,
                s = n.y1,
                l = n.x2,
                u = n.y2,
                d = n.xCount,
                f = n.parent,
                m = this.w,
                y = !1,
                x = f.node.classList.contains(
                  "apexcharts-gridlines-horizontal",
                ),
                S = m.config.grid.strokeDashArray,
                _ = m.globals.barPadForNumericAxis;
              ((s === 0 && u === 0) || (o === 0 && l === 0)) && (y = !0),
                s === m.globals.gridHeight &&
                  u === m.globals.gridHeight &&
                  (y = !0),
                !m.globals.isBarHorizontal ||
                  (i !== 0 && i !== d - 1) ||
                  (y = !0);
              var C = new B(this).drawLine(
                o - (x ? _ : 0),
                s,
                l + (x ? _ : 0),
                u,
                m.config.grid.borderColor,
                S,
              );
              C.node.classList.add("apexcharts-gridline"),
                y && m.config.grid.show ? this.elGridBorders.add(C) : f.add(C);
            },
          },
          {
            key: "_drawGridBandRect",
            value: function (n) {
              var i = n.c,
                o = n.x1,
                s = n.y1,
                l = n.x2,
                u = n.y2,
                d = n.type,
                f = this.w,
                m = new B(this.ctx),
                y = f.globals.barPadForNumericAxis;
              if (d !== "column" || f.config.xaxis.type !== "datetime") {
                var x = f.config.grid[d].colors[i],
                  S = m.drawRect(
                    o - (d === "row" ? y : 0),
                    s,
                    l + (d === "row" ? 2 * y : 0),
                    u,
                    0,
                    x,
                    f.config.grid[d].opacity,
                  );
                this.elg.add(S),
                  S.attr(
                    "clip-path",
                    "url(#gridRectMask".concat(f.globals.cuid, ")"),
                  ),
                  S.node.classList.add("apexcharts-grid-".concat(d));
              }
            },
          },
          {
            key: "_drawXYLines",
            value: function (n) {
              var i = this,
                o = n.xCount,
                s = n.tickAmount,
                l = this.w;
              if (
                l.config.grid.xaxis.lines.show ||
                l.config.xaxis.axisTicks.show
              ) {
                var u,
                  d = l.globals.padHorizontal,
                  f = l.globals.gridHeight;
                l.globals.timescaleLabels.length
                  ? (function (C) {
                      for (
                        var E = C.xC,
                          I = C.x1,
                          H = C.y1,
                          Y = C.x2,
                          g = C.y2,
                          w = 0;
                        w < E;
                        w++
                      )
                        (I = i.xaxisLabels[w].position),
                          (Y = i.xaxisLabels[w].position),
                          i._drawGridLines({
                            i: w,
                            x1: I,
                            y1: H,
                            x2: Y,
                            y2: g,
                            xCount: o,
                            parent: i.elgridLinesV,
                          });
                    })({ xC: o, x1: d, y1: 0, x2: u, y2: f })
                  : (l.globals.isXNumeric &&
                      (o = l.globals.xAxisScale.result.length),
                    (function (C) {
                      for (
                        var E = C.xC,
                          I = C.x1,
                          H = C.y1,
                          Y = C.x2,
                          g = C.y2,
                          w = 0;
                        w < E + (l.globals.isXNumeric ? 0 : 1);
                        w++
                      )
                        w === 0 &&
                          E === 1 &&
                          l.globals.dataPoints === 1 &&
                          (Y = I = l.globals.gridWidth / 2),
                          i._drawGridLines({
                            i: w,
                            x1: I,
                            y1: H,
                            x2: Y,
                            y2: g,
                            xCount: o,
                            parent: i.elgridLinesV,
                          }),
                          (Y = I +=
                            l.globals.gridWidth /
                            (l.globals.isXNumeric ? E - 1 : E));
                    })({ xC: o, x1: d, y1: 0, x2: u, y2: f }));
              }
              if (l.config.grid.yaxis.lines.show) {
                var m = 0,
                  y = 0,
                  x = l.globals.gridWidth,
                  S = s + 1;
                this.isRangeBar && (S = l.globals.labels.length);
                for (var _ = 0; _ < S + (this.isRangeBar ? 1 : 0); _++)
                  this._drawGridLine({
                    i: _,
                    xCount: S + (this.isRangeBar ? 1 : 0),
                    x1: 0,
                    y1: m,
                    x2: x,
                    y2: y,
                    parent: this.elgridLinesH,
                  }),
                    (y = m += l.globals.gridHeight / (this.isRangeBar ? S : s));
              }
            },
          },
          {
            key: "_drawInvertedXYLines",
            value: function (n) {
              var i = n.xCount,
                o = this.w;
              if (
                o.config.grid.xaxis.lines.show ||
                o.config.xaxis.axisTicks.show
              )
                for (
                  var s,
                    l = o.globals.padHorizontal,
                    u = o.globals.gridHeight,
                    d = 0;
                  d < i + 1;
                  d++
                )
                  o.config.grid.xaxis.lines.show &&
                    this._drawGridLine({
                      i: d,
                      xCount: i + 1,
                      x1: l,
                      y1: 0,
                      x2: s,
                      y2: u,
                      parent: this.elgridLinesV,
                    }),
                    new St(this.ctx).drawXaxisTicks(
                      l,
                      0,
                      o.globals.dom.elGraphical,
                    ),
                    (s = l = l + o.globals.gridWidth / i + 0.3);
              if (o.config.grid.yaxis.lines.show)
                for (
                  var f = 0, m = 0, y = o.globals.gridWidth, x = 0;
                  x < o.globals.dataPoints + 1;
                  x++
                )
                  this._drawGridLine({
                    i: x,
                    xCount: o.globals.dataPoints + 1,
                    x1: 0,
                    y1: f,
                    x2: y,
                    y2: m,
                    parent: this.elgridLinesH,
                  }),
                    (m = f += o.globals.gridHeight / o.globals.dataPoints);
            },
          },
          {
            key: "renderGrid",
            value: function () {
              var n = this.w,
                i = new B(this.ctx);
              (this.elg = i.group({ class: "apexcharts-grid" })),
                (this.elgridLinesH = i.group({
                  class: "apexcharts-gridlines-horizontal",
                })),
                (this.elgridLinesV = i.group({
                  class: "apexcharts-gridlines-vertical",
                })),
                (this.elGridBorders = i.group({
                  class: "apexcharts-grid-borders",
                })),
                this.elg.add(this.elgridLinesH),
                this.elg.add(this.elgridLinesV),
                n.config.grid.show ||
                  (this.elgridLinesV.hide(),
                  this.elgridLinesH.hide(),
                  this.elGridBorders.hide());
              for (
                var o,
                  s = n.globals.yAxisScale.length
                    ? n.globals.yAxisScale[0].result.length - 1
                    : 5,
                  l = 0;
                l < n.globals.series.length &&
                (n.globals.yAxisScale[l] !== void 0 &&
                  (s = n.globals.yAxisScale[l].result.length - 1),
                !(s > 2));
                l++
              );
              return (
                !n.globals.isBarHorizontal || this.isRangeBar
                  ? ((o = this.xaxisLabels.length),
                    this.isRangeBar &&
                      (o--,
                      (s = n.globals.labels.length),
                      n.config.xaxis.tickAmount &&
                        n.config.xaxis.labels.formatter &&
                        (o = n.config.xaxis.tickAmount)),
                    this._drawXYLines({ xCount: o, tickAmount: s }))
                  : ((o = s),
                    (s = n.globals.xTickAmount),
                    this._drawInvertedXYLines({ xCount: o, tickAmount: s })),
                this.drawGridBands(o, s),
                {
                  el: this.elg,
                  elGridBorders: this.elGridBorders,
                  xAxisTickWidth: n.globals.gridWidth / o,
                }
              );
            },
          },
          {
            key: "drawGridBands",
            value: function (n, i) {
              var o = this.w;
              if (
                o.config.grid.row.colors !== void 0 &&
                o.config.grid.row.colors.length > 0
              )
                for (
                  var s = 0,
                    l = o.globals.gridHeight / i,
                    u = o.globals.gridWidth,
                    d = 0,
                    f = 0;
                  d < i;
                  d++, f++
                )
                  f >= o.config.grid.row.colors.length && (f = 0),
                    this._drawGridBandRect({
                      c: f,
                      x1: 0,
                      y1: s,
                      x2: u,
                      y2: l,
                      type: "row",
                    }),
                    (s += o.globals.gridHeight / i);
              if (
                o.config.grid.column.colors !== void 0 &&
                o.config.grid.column.colors.length > 0
              )
                for (
                  var m =
                      o.globals.isBarHorizontal ||
                      o.config.xaxis.tickPlacement !== "on" ||
                      (o.config.xaxis.type !== "category" &&
                        !o.config.xaxis.convertedCatToNumeric)
                        ? n
                        : n - 1,
                    y = o.globals.padHorizontal,
                    x = o.globals.padHorizontal + o.globals.gridWidth / m,
                    S = o.globals.gridHeight,
                    _ = 0,
                    C = 0;
                  _ < n;
                  _++, C++
                )
                  C >= o.config.grid.column.colors.length && (C = 0),
                    this._drawGridBandRect({
                      c: C,
                      x1: y,
                      y1: 0,
                      x2: x,
                      y2: S,
                      type: "column",
                    }),
                    (y += o.globals.gridWidth / m);
            },
          },
        ]),
        T
      );
    })(),
    vt = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "niceScale",
            value: function (n, i) {
              var o =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 10,
                s =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : 0,
                l = arguments.length > 4 ? arguments[4] : void 0,
                u = this.w,
                d = Math.abs(i - n);
              if (
                ((o = this._adjustTicksForSmallRange(o, s, d)) ===
                  "dataPoints" && (o = u.globals.dataPoints - 1),
                (n === Number.MIN_VALUE && i === 0) ||
                  (!O.isNumber(n) && !O.isNumber(i)) ||
                  (n === Number.MIN_VALUE && i === -Number.MAX_VALUE))
              )
                return (n = 0), (i = o), this.linearScale(n, i, o);
              n > i
                ? (console.warn("axis.min cannot be greater than axis.max"),
                  (i = n + 0.1))
                : n === i &&
                  ((n = n === 0 ? 0 : n - 0.5), (i = i === 0 ? 2 : i + 0.5));
              var f = [];
              d < 1 &&
                l &&
                (u.config.chart.type === "candlestick" ||
                  u.config.series[s].type === "candlestick" ||
                  u.config.chart.type === "boxPlot" ||
                  u.config.series[s].type === "boxPlot" ||
                  u.globals.isRangeData) &&
                (i *= 1.01);
              var m = o + 1;
              m < 2 ? (m = 2) : m > 2 && (m -= 2);
              var y = d / m,
                x = Math.floor(O.log10(y)),
                S = Math.pow(10, x),
                _ = Math.round(y / S);
              _ < 1 && (_ = 1);
              var C = _ * S,
                E = C * Math.floor(n / C),
                I = C * Math.ceil(i / C),
                H = E;
              if (l && d > 2) {
                for (; f.push(O.stripNumber(H, 7)), !((H += C) > I); );
                return { result: f, niceMin: f[0], niceMax: f[f.length - 1] };
              }
              var Y = n;
              (f = []).push(O.stripNumber(Y, 7));
              for (var g = Math.abs(i - n) / o, w = 0; w <= o; w++)
                (Y += g), f.push(Y);
              return (
                f[f.length - 2] >= i && f.pop(),
                { result: f, niceMin: f[0], niceMax: f[f.length - 1] }
              );
            },
          },
          {
            key: "linearScale",
            value: function (n, i) {
              var o =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : 10,
                s = arguments.length > 3 ? arguments[3] : void 0,
                l = Math.abs(i - n);
              (o = this._adjustTicksForSmallRange(o, s, l)) === "dataPoints" &&
                (o = this.w.globals.dataPoints - 1);
              var u = l / o;
              o === Number.MAX_VALUE && ((o = 10), (u = 1));
              for (var d = [], f = n; o >= 0; ) d.push(f), (f += u), (o -= 1);
              return { result: d, niceMin: d[0], niceMax: d[d.length - 1] };
            },
          },
          {
            key: "logarithmicScaleNice",
            value: function (n, i, o) {
              i <= 0 && (i = Math.max(n, o)), n <= 0 && (n = Math.min(i, o));
              for (
                var s = [],
                  l = Math.ceil(Math.log(i) / Math.log(o) + 1),
                  u = Math.floor(Math.log(n) / Math.log(o));
                u < l;
                u++
              )
                s.push(Math.pow(o, u));
              return { result: s, niceMin: s[0], niceMax: s[s.length - 1] };
            },
          },
          {
            key: "logarithmicScale",
            value: function (n, i, o) {
              i <= 0 && (i = Math.max(n, o)), n <= 0 && (n = Math.min(i, o));
              for (
                var s = [],
                  l = Math.log(i) / Math.log(o),
                  u = Math.log(n) / Math.log(o),
                  d = l - u,
                  f = Math.round(d),
                  m = d / f,
                  y = 0,
                  x = u;
                y < f;
                y++, x += m
              )
                s.push(Math.pow(o, x));
              return (
                s.push(Math.pow(o, l)), { result: s, niceMin: n, niceMax: i }
              );
            },
          },
          {
            key: "_adjustTicksForSmallRange",
            value: function (n, i, o) {
              var s = n;
              if (
                i !== void 0 &&
                this.w.config.yaxis[i].labels.formatter &&
                this.w.config.yaxis[i].tickAmount === void 0
              ) {
                var l = Number(this.w.config.yaxis[i].labels.formatter(1));
                O.isNumber(l) &&
                  this.w.globals.yValueDecimal === 0 &&
                  (s = Math.ceil(o));
              }
              return s < n ? s : n;
            },
          },
          {
            key: "setYScaleForIndex",
            value: function (n, i, o) {
              var s = this.w.globals,
                l = this.w.config,
                u = s.isBarHorizontal ? l.xaxis : l.yaxis[n];
              s.yAxisScale[n] === void 0 && (s.yAxisScale[n] = []);
              var d = Math.abs(o - i);
              if (
                (u.logarithmic && d <= 5 && (s.invalidLogScale = !0),
                u.logarithmic && d > 5)
              )
                (s.allSeriesCollapsed = !1),
                  (s.yAxisScale[n] = this.logarithmicScale(i, o, u.logBase)),
                  (s.yAxisScale[n] = u.forceNiceScale
                    ? this.logarithmicScaleNice(i, o, u.logBase)
                    : this.logarithmicScale(i, o, u.logBase));
              else if (o !== -Number.MAX_VALUE && O.isNumber(o))
                if (
                  ((s.allSeriesCollapsed = !1),
                  (u.min === void 0 && u.max === void 0) || u.forceNiceScale)
                ) {
                  var f =
                    (l.yaxis[n].max === void 0 && l.yaxis[n].min === void 0) ||
                    l.yaxis[n].forceNiceScale;
                  s.yAxisScale[n] = this.niceScale(
                    i,
                    o,
                    u.tickAmount ? u.tickAmount : d < 5 && d > 1 ? d + 1 : 5,
                    n,
                    f,
                  );
                } else
                  s.yAxisScale[n] = this.linearScale(i, o, u.tickAmount, n);
              else s.yAxisScale[n] = this.linearScale(0, 5, 5);
            },
          },
          {
            key: "setXScale",
            value: function (n, i) {
              var o = this.w,
                s = o.globals,
                l = o.config.xaxis,
                u = Math.abs(i - n);
              return (
                i !== -Number.MAX_VALUE && O.isNumber(i)
                  ? (s.xAxisScale = this.linearScale(
                      n,
                      i,
                      l.tickAmount ? l.tickAmount : u < 5 && u > 1 ? u + 1 : 5,
                      0,
                    ))
                  : (s.xAxisScale = this.linearScale(0, 5, 5)),
                s.xAxisScale
              );
            },
          },
          {
            key: "setMultipleYScales",
            value: function () {
              var n = this,
                i = this.w.globals,
                o = this.w.config,
                s = i.minYArr.concat([]),
                l = i.maxYArr.concat([]),
                u = [];
              o.yaxis.forEach(function (d, f) {
                var m = f;
                o.series.forEach(function (S, _) {
                  S.name === d.seriesName &&
                    ((m = _),
                    f !== _
                      ? u.push({ index: _, similarIndex: f, alreadyExists: !0 })
                      : u.push({ index: _ }));
                });
                var y = s[m],
                  x = l[m];
                n.setYScaleForIndex(f, y, x);
              }),
                this.sameScaleInMultipleAxes(s, l, u);
            },
          },
          {
            key: "sameScaleInMultipleAxes",
            value: function (n, i, o) {
              var s = this,
                l = this.w.config,
                u = this.w.globals,
                d = [];
              o.forEach(function (E) {
                E.alreadyExists &&
                  (d[E.index] === void 0 && (d[E.index] = []),
                  d[E.index].push(E.index),
                  d[E.index].push(E.similarIndex));
              }),
                (u.yAxisSameScaleIndices = d),
                d.forEach(function (E, I) {
                  d.forEach(function (H, Y) {
                    var g, w;
                    I !== Y &&
                      ((g = E),
                      (w = H),
                      g.filter(function (A) {
                        return w.indexOf(A) !== -1;
                      })).length > 0 &&
                      (d[I] = d[I].concat(d[Y]));
                  });
                });
              var f = d
                .map(function (E) {
                  return E.filter(function (I, H) {
                    return E.indexOf(I) === H;
                  });
                })
                .map(function (E) {
                  return E.sort();
                });
              d = d.filter(function (E) {
                return !!E;
              });
              var m = f.slice(),
                y = m.map(function (E) {
                  return JSON.stringify(E);
                });
              m = m.filter(function (E, I) {
                return y.indexOf(JSON.stringify(E)) === I;
              });
              var x = [],
                S = [];
              n.forEach(function (E, I) {
                m.forEach(function (H, Y) {
                  H.indexOf(I) > -1 &&
                    (x[Y] === void 0 && ((x[Y] = []), (S[Y] = [])),
                    x[Y].push({ key: I, value: E }),
                    S[Y].push({ key: I, value: i[I] }));
                });
              });
              var _ = Array.apply(null, Array(m.length)).map(
                  Number.prototype.valueOf,
                  Number.MIN_VALUE,
                ),
                C = Array.apply(null, Array(m.length)).map(
                  Number.prototype.valueOf,
                  -Number.MAX_VALUE,
                );
              x.forEach(function (E, I) {
                E.forEach(function (H, Y) {
                  _[I] = Math.min(H.value, _[I]);
                });
              }),
                S.forEach(function (E, I) {
                  E.forEach(function (H, Y) {
                    C[I] = Math.max(H.value, C[I]);
                  });
                }),
                n.forEach(function (E, I) {
                  S.forEach(function (H, Y) {
                    var g = _[Y],
                      w = C[Y];
                    l.chart.stacked &&
                      ((w = 0),
                      H.forEach(function (A, D) {
                        A.value !== -Number.MAX_VALUE && (w += A.value),
                          g !== Number.MIN_VALUE && (g += x[Y][D].value);
                      })),
                      H.forEach(function (A, D) {
                        H[D].key === I &&
                          (l.yaxis[I].min !== void 0 &&
                            (g =
                              typeof l.yaxis[I].min == "function"
                                ? l.yaxis[I].min(u.minY)
                                : l.yaxis[I].min),
                          l.yaxis[I].max !== void 0 &&
                            (w =
                              typeof l.yaxis[I].max == "function"
                                ? l.yaxis[I].max(u.maxY)
                                : l.yaxis[I].max),
                          s.setYScaleForIndex(I, g, w));
                      });
                  });
                });
            },
          },
          {
            key: "autoScaleY",
            value: function (n, i, o) {
              n || (n = this);
              var s = n.w;
              if (s.globals.isMultipleYAxis || s.globals.collapsedSeries.length)
                return (
                  console.warn(
                    "autoScaleYaxis not supported in a multi-yaxis chart.",
                  ),
                  i
                );
              var l = s.globals.seriesX[0],
                u = s.config.chart.stacked;
              return (
                i.forEach(function (d, f) {
                  for (var m = 0, y = 0; y < l.length; y++)
                    if (l[y] >= o.xaxis.min) {
                      m = y;
                      break;
                    }
                  var x,
                    S,
                    _ = s.globals.minYArr[f],
                    C = s.globals.maxYArr[f],
                    E = s.globals.stackedSeriesTotals;
                  s.globals.series.forEach(function (I, H) {
                    var Y = I[m];
                    u
                      ? ((Y = E[m]),
                        (x = S = Y),
                        E.forEach(function (g, w) {
                          l[w] <= o.xaxis.max &&
                            l[w] >= o.xaxis.min &&
                            (g > S && g !== null && (S = g),
                            I[w] < x && I[w] !== null && (x = I[w]));
                        }))
                      : ((x = S = Y),
                        I.forEach(function (g, w) {
                          if (l[w] <= o.xaxis.max && l[w] >= o.xaxis.min) {
                            var A = g,
                              D = g;
                            s.globals.series.forEach(function (W, V) {
                              g !== null &&
                                ((A = Math.min(W[w], A)),
                                (D = Math.max(W[w], D)));
                            }),
                              D > S && D !== null && (S = D),
                              A < x && A !== null && (x = A);
                          }
                        })),
                      x === void 0 && S === void 0 && ((x = _), (S = C)),
                      (S *= S < 0 ? 0.9 : 1.1),
                      (x *= x < 0 ? 1.1 : 0.9) === 0 &&
                        S === 0 &&
                        ((x = -1), (S = 1)),
                      S < 0 && S < C && (S = C),
                      x < 0 && x > _ && (x = _),
                      i.length > 1
                        ? ((i[H].min = d.min === void 0 ? x : d.min),
                          (i[H].max = d.max === void 0 ? S : d.max))
                        : ((i[0].min = d.min === void 0 ? x : d.min),
                          (i[0].max = d.max === void 0 ? S : d.max));
                  });
                }),
                i
              );
            },
          },
        ]),
        T
      );
    })(),
    Pt = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w), (this.scales = new vt(n));
      }
      return (
        v(T, [
          {
            key: "init",
            value: function () {
              this.setYRange(), this.setXRange(), this.setZRange();
            },
          },
          {
            key: "getMinYMaxY",
            value: function (n) {
              var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : Number.MAX_VALUE,
                o =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : -Number.MAX_VALUE,
                s =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : null,
                l = this.w.config,
                u = this.w.globals,
                d = -Number.MAX_VALUE,
                f = Number.MIN_VALUE;
              s === null && (s = n + 1);
              var m = u.series,
                y = m,
                x = m;
              l.chart.type === "candlestick"
                ? ((y = u.seriesCandleL), (x = u.seriesCandleH))
                : l.chart.type === "boxPlot"
                ? ((y = u.seriesCandleO), (x = u.seriesCandleC))
                : u.isRangeData &&
                  ((y = u.seriesRangeStart), (x = u.seriesRangeEnd));
              for (var S = n; S < s; S++) {
                (u.dataPoints = Math.max(u.dataPoints, m[S].length)),
                  u.categoryLabels.length &&
                    (u.dataPoints = u.categoryLabels.filter(function (E) {
                      return E !== void 0;
                    }).length),
                  u.labels.length &&
                    l.xaxis.type !== "datetime" &&
                    u.series.reduce(function (E, I) {
                      return E + I.length;
                    }, 0) !== 0 &&
                    (u.dataPoints = Math.max(u.dataPoints, u.labels.length));
                for (var _ = 0; _ < u.series[S].length; _++) {
                  var C = m[S][_];
                  C !== null && O.isNumber(C)
                    ? (x[S][_] !== void 0 &&
                        ((d = Math.max(d, x[S][_])),
                        (i = Math.min(i, x[S][_]))),
                      y[S][_] !== void 0 &&
                        ((i = Math.min(i, y[S][_])),
                        (o = Math.max(o, y[S][_]))),
                      (this.w.config.chart.type !== "candlestick" &&
                        this.w.config.chart.type !== "boxPlot" &&
                        this.w.config.chart.type === "rangeArea" &&
                        this.w.config.chart.type === "rangeBar") ||
                        ((this.w.config.chart.type !== "candlestick" &&
                          this.w.config.chart.type !== "boxPlot") ||
                          (u.seriesCandleC[S][_] !== void 0 &&
                            ((d = Math.max(d, u.seriesCandleO[S][_])),
                            (d = Math.max(d, u.seriesCandleH[S][_])),
                            (d = Math.max(d, u.seriesCandleL[S][_])),
                            (d = Math.max(d, u.seriesCandleC[S][_])),
                            this.w.config.chart.type === "boxPlot" &&
                              (d = Math.max(d, u.seriesCandleM[S][_])))),
                        !l.series[S].type ||
                          (l.series[S].type === "candlestick" &&
                            l.series[S].type === "boxPlot" &&
                            l.series[S].type === "rangeArea" &&
                            l.series[S].type === "rangeBar") ||
                          ((d = Math.max(d, u.series[S][_])),
                          (i = Math.min(i, u.series[S][_]))),
                        (o = d)),
                      u.seriesGoals[S] &&
                        u.seriesGoals[S][_] &&
                        Array.isArray(u.seriesGoals[S][_]) &&
                        u.seriesGoals[S][_].forEach(function (E) {
                          f !== Number.MIN_VALUE &&
                            ((f = Math.min(f, E.value)), (i = f)),
                            (d = Math.max(d, E.value)),
                            (o = d);
                        }),
                      O.isFloat(C) &&
                        ((C = O.noExponents(C)),
                        (u.yValueDecimal = Math.max(
                          u.yValueDecimal,
                          C.toString().split(".")[1].length,
                        ))),
                      f > y[S][_] && y[S][_] < 0 && (f = y[S][_]))
                    : (u.hasNullValues = !0);
                }
              }
              return (
                l.chart.type === "rangeBar" &&
                  u.seriesRangeStart.length &&
                  u.isBarHorizontal &&
                  (f = i),
                l.chart.type === "bar" &&
                  (f < 0 && d < 0 && (d = 0),
                  f === Number.MIN_VALUE && (f = 0)),
                { minY: f, maxY: d, lowestY: i, highestY: o }
              );
            },
          },
          {
            key: "setYRange",
            value: function () {
              var n = this.w.globals,
                i = this.w.config;
              (n.maxY = -Number.MAX_VALUE), (n.minY = Number.MIN_VALUE);
              var o = Number.MAX_VALUE;
              if (n.isMultipleYAxis)
                for (var s = 0; s < n.series.length; s++) {
                  var l = this.getMinYMaxY(s, o, null, s + 1);
                  n.minYArr.push(l.minY),
                    n.maxYArr.push(l.maxY),
                    (o = l.lowestY);
                }
              var u = this.getMinYMaxY(0, o, null, n.series.length);
              if (
                ((n.minY = u.minY),
                (n.maxY = u.maxY),
                (o = u.lowestY),
                i.chart.stacked && this._setStackedMinMax(),
                (i.chart.type === "line" ||
                  i.chart.type === "area" ||
                  i.chart.type === "candlestick" ||
                  i.chart.type === "boxPlot" ||
                  (i.chart.type === "rangeBar" && !n.isBarHorizontal)) &&
                  n.minY === Number.MIN_VALUE &&
                  o !== -Number.MAX_VALUE &&
                  o !== n.maxY)
              ) {
                var d = n.maxY - o;
                ((o >= 0 && o <= 10) ||
                  i.yaxis[0].min !== void 0 ||
                  i.yaxis[0].max !== void 0) &&
                  (d = 0),
                  (n.minY = o - (5 * d) / 100),
                  o > 0 && n.minY < 0 && (n.minY = 0),
                  (n.maxY = n.maxY + (5 * d) / 100);
              }
              return (
                i.yaxis.forEach(function (f, m) {
                  f.max !== void 0 &&
                    (typeof f.max == "number"
                      ? (n.maxYArr[m] = f.max)
                      : typeof f.max == "function" &&
                        (n.maxYArr[m] = f.max(
                          n.isMultipleYAxis ? n.maxYArr[m] : n.maxY,
                        )),
                    (n.maxY = n.maxYArr[m])),
                    f.min !== void 0 &&
                      (typeof f.min == "number"
                        ? (n.minYArr[m] = f.min)
                        : typeof f.min == "function" &&
                          (n.minYArr[m] = f.min(
                            n.isMultipleYAxis
                              ? n.minYArr[m] === Number.MIN_VALUE
                                ? 0
                                : n.minYArr[m]
                              : n.minY,
                          )),
                      (n.minY = n.minYArr[m]));
                }),
                n.isBarHorizontal &&
                  ["min", "max"].forEach(function (f) {
                    i.xaxis[f] !== void 0 &&
                      typeof i.xaxis[f] == "number" &&
                      (f === "min"
                        ? (n.minY = i.xaxis[f])
                        : (n.maxY = i.xaxis[f]));
                  }),
                n.isMultipleYAxis
                  ? (this.scales.setMultipleYScales(),
                    (n.minY = o),
                    n.yAxisScale.forEach(function (f, m) {
                      (n.minYArr[m] = f.niceMin), (n.maxYArr[m] = f.niceMax);
                    }))
                  : (this.scales.setYScaleForIndex(0, n.minY, n.maxY),
                    (n.minY = n.yAxisScale[0].niceMin),
                    (n.maxY = n.yAxisScale[0].niceMax),
                    (n.minYArr[0] = n.yAxisScale[0].niceMin),
                    (n.maxYArr[0] = n.yAxisScale[0].niceMax)),
                {
                  minY: n.minY,
                  maxY: n.maxY,
                  minYArr: n.minYArr,
                  maxYArr: n.maxYArr,
                  yAxisScale: n.yAxisScale,
                }
              );
            },
          },
          {
            key: "setXRange",
            value: function () {
              var n = this.w.globals,
                i = this.w.config,
                o =
                  i.xaxis.type === "numeric" ||
                  i.xaxis.type === "datetime" ||
                  (i.xaxis.type === "category" && !n.noLabelsProvided) ||
                  n.noLabelsProvided ||
                  n.isXNumeric;
              if (
                (n.isXNumeric &&
                  (function () {
                    for (var d = 0; d < n.series.length; d++)
                      if (n.labels[d])
                        for (var f = 0; f < n.labels[d].length; f++)
                          n.labels[d][f] !== null &&
                            O.isNumber(n.labels[d][f]) &&
                            ((n.maxX = Math.max(n.maxX, n.labels[d][f])),
                            (n.initialMaxX = Math.max(n.maxX, n.labels[d][f])),
                            (n.minX = Math.min(n.minX, n.labels[d][f])),
                            (n.initialMinX = Math.min(n.minX, n.labels[d][f])));
                  })(),
                n.noLabelsProvided &&
                  i.xaxis.categories.length === 0 &&
                  ((n.maxX = n.labels[n.labels.length - 1]),
                  (n.initialMaxX = n.labels[n.labels.length - 1]),
                  (n.minX = 1),
                  (n.initialMinX = 1)),
                n.isXNumeric || n.noLabelsProvided || n.dataFormatXNumeric)
              ) {
                var s;
                if (
                  (i.xaxis.tickAmount === void 0
                    ? ((s = Math.round(n.svgWidth / 150)),
                      i.xaxis.type === "numeric" &&
                        n.dataPoints < 30 &&
                        (s = n.dataPoints - 1),
                      s > n.dataPoints &&
                        n.dataPoints !== 0 &&
                        (s = n.dataPoints - 1))
                    : i.xaxis.tickAmount === "dataPoints"
                    ? (n.series.length > 1 &&
                        (s = n.series[n.maxValsInArrayIndex].length - 1),
                      n.isXNumeric && (s = n.maxX - n.minX - 1))
                    : (s = i.xaxis.tickAmount),
                  (n.xTickAmount = s),
                  i.xaxis.max !== void 0 &&
                    typeof i.xaxis.max == "number" &&
                    (n.maxX = i.xaxis.max),
                  i.xaxis.min !== void 0 &&
                    typeof i.xaxis.min == "number" &&
                    (n.minX = i.xaxis.min),
                  i.xaxis.range !== void 0 && (n.minX = n.maxX - i.xaxis.range),
                  n.minX !== Number.MAX_VALUE && n.maxX !== -Number.MAX_VALUE)
                )
                  if (i.xaxis.convertedCatToNumeric && !n.dataFormatXNumeric) {
                    for (var l = [], u = n.minX - 1; u < n.maxX; u++)
                      l.push(u + 1);
                    n.xAxisScale = {
                      result: l,
                      niceMin: l[0],
                      niceMax: l[l.length - 1],
                    };
                  } else n.xAxisScale = this.scales.setXScale(n.minX, n.maxX);
                else
                  (n.xAxisScale = this.scales.linearScale(0, s, s)),
                    n.noLabelsProvided &&
                      n.labels.length > 0 &&
                      ((n.xAxisScale = this.scales.linearScale(
                        1,
                        n.labels.length,
                        s - 1,
                      )),
                      (n.seriesX = n.labels.slice()));
                o && (n.labels = n.xAxisScale.result.slice());
              }
              return (
                n.isBarHorizontal &&
                  n.labels.length &&
                  (n.xTickAmount = n.labels.length),
                this._handleSingleDataPoint(),
                this._getMinXDiff(),
                { minX: n.minX, maxX: n.maxX }
              );
            },
          },
          {
            key: "setZRange",
            value: function () {
              var n = this.w.globals;
              if (n.isDataXYZ) {
                for (var i = 0; i < n.series.length; i++)
                  if (n.seriesZ[i] !== void 0)
                    for (var o = 0; o < n.seriesZ[i].length; o++)
                      n.seriesZ[i][o] !== null &&
                        O.isNumber(n.seriesZ[i][o]) &&
                        ((n.maxZ = Math.max(n.maxZ, n.seriesZ[i][o])),
                        (n.minZ = Math.min(n.minZ, n.seriesZ[i][o])));
              }
            },
          },
          {
            key: "_handleSingleDataPoint",
            value: function () {
              var n = this.w.globals,
                i = this.w.config;
              if (n.minX === n.maxX) {
                var o = new ue(this.ctx);
                if (i.xaxis.type === "datetime") {
                  var s = o.getDate(n.minX);
                  i.xaxis.labels.datetimeUTC
                    ? s.setUTCDate(s.getUTCDate() - 2)
                    : s.setDate(s.getDate() - 2),
                    (n.minX = new Date(s).getTime());
                  var l = o.getDate(n.maxX);
                  i.xaxis.labels.datetimeUTC
                    ? l.setUTCDate(l.getUTCDate() + 2)
                    : l.setDate(l.getDate() + 2),
                    (n.maxX = new Date(l).getTime());
                } else
                  (i.xaxis.type === "numeric" ||
                    (i.xaxis.type === "category" && !n.noLabelsProvided)) &&
                    ((n.minX = n.minX - 2),
                    (n.initialMinX = n.minX),
                    (n.maxX = n.maxX + 2),
                    (n.initialMaxX = n.maxX));
              }
            },
          },
          {
            key: "_getMinXDiff",
            value: function () {
              var n = this.w.globals;
              n.isXNumeric &&
                n.seriesX.forEach(function (i, o) {
                  i.length === 1 &&
                    i.push(
                      n.seriesX[n.maxValsInArrayIndex][
                        n.seriesX[n.maxValsInArrayIndex].length - 1
                      ],
                    );
                  var s = i.slice();
                  s.sort(function (l, u) {
                    return l - u;
                  }),
                    s.forEach(function (l, u) {
                      if (u > 0) {
                        var d = l - s[u - 1];
                        d > 0 && (n.minXDiff = Math.min(d, n.minXDiff));
                      }
                    }),
                    (n.dataPoints !== 1 && n.minXDiff !== Number.MAX_VALUE) ||
                      (n.minXDiff = 0.5);
                });
            },
          },
          {
            key: "_setStackedMinMax",
            value: function () {
              var n = this,
                i = this.w.globals;
              if (i.series.length) {
                var o = i.seriesGroups;
                o.length ||
                  (o = [
                    this.w.config.series.map(function (u) {
                      return u.name;
                    }),
                  ]);
                var s = {},
                  l = {};
                o.forEach(function (u) {
                  (s[u] = []),
                    (l[u] = []),
                    n.w.config.series
                      .map(function (d, f) {
                        return u.indexOf(d.name) > -1 ? f : null;
                      })
                      .filter(function (d) {
                        return d !== null;
                      })
                      .forEach(function (d) {
                        for (
                          var f = 0;
                          f < i.series[i.maxValsInArrayIndex].length;
                          f++
                        )
                          s[u][f] === void 0 && ((s[u][f] = 0), (l[u][f] = 0)),
                            i.series[d][f] !== null &&
                              O.isNumber(i.series[d][f]) &&
                              (i.series[d][f] > 0
                                ? (s[u][f] += parseFloat(i.series[d][f]) + 1e-4)
                                : (l[u][f] += parseFloat(i.series[d][f])));
                      });
                }),
                  Object.entries(s).forEach(function (u) {
                    var d = M(u, 1)[0];
                    s[d].forEach(function (f, m) {
                      (i.maxY = Math.max(i.maxY, s[d][m])),
                        (i.minY = Math.min(i.minY, l[d][m]));
                    });
                  });
              }
            },
          },
        ]),
        T
      );
    })(),
    Rt = (function () {
      function T(n, i) {
        h(this, T), (this.ctx = n), (this.elgrid = i), (this.w = n.w);
        var o = this.w;
        (this.xaxisFontSize = o.config.xaxis.labels.style.fontSize),
          (this.axisFontFamily = o.config.xaxis.labels.style.fontFamily),
          (this.xaxisForeColors = o.config.xaxis.labels.style.colors),
          (this.isCategoryBarHorizontal =
            o.config.chart.type === "bar" &&
            o.config.plotOptions.bar.horizontal),
          (this.xAxisoffX = 0),
          o.config.xaxis.position === "bottom" &&
            (this.xAxisoffX = o.globals.gridHeight),
          (this.drawnLabels = []),
          (this.axesUtils = new mt(n));
      }
      return (
        v(T, [
          {
            key: "drawYaxis",
            value: function (n) {
              var i = this,
                o = this.w,
                s = new B(this.ctx),
                l = o.config.yaxis[n].labels.style,
                u = l.fontSize,
                d = l.fontFamily,
                f = l.fontWeight,
                m = s.group({
                  class: "apexcharts-yaxis",
                  rel: n,
                  transform:
                    "translate(" + o.globals.translateYAxisX[n] + ", 0)",
                });
              if (this.axesUtils.isYAxisHidden(n)) return m;
              var y = s.group({ class: "apexcharts-yaxis-texts-g" });
              m.add(y);
              var x = o.globals.yAxisScale[n].result.length - 1,
                S = o.globals.gridHeight / x,
                _ = o.globals.translateY,
                C = o.globals.yLabelFormatters[n],
                E = o.globals.yAxisScale[n].result.slice();
              E = this.axesUtils.checkForReversedLabels(n, E);
              var I = "";
              if (o.config.yaxis[n].labels.show)
                for (
                  var H = function (K) {
                      var Z = E[K];
                      Z = C(Z, K, o);
                      var re = o.config.yaxis[n].labels.padding;
                      o.config.yaxis[n].opposite &&
                        o.config.yaxis.length !== 0 &&
                        (re *= -1);
                      var ce = "end";
                      o.config.yaxis[n].opposite && (ce = "start"),
                        o.config.yaxis[n].labels.align === "left"
                          ? (ce = "start")
                          : o.config.yaxis[n].labels.align === "center"
                          ? (ce = "middle")
                          : o.config.yaxis[n].labels.align === "right" &&
                            (ce = "end");
                      var se = i.axesUtils.getYAxisForeColor(l.colors, n),
                        xe = o.config.yaxis[n].labels.offsetY;
                      o.config.chart.type === "heatmap" &&
                        (xe -=
                          (o.globals.gridHeight / o.globals.series.length - 1) /
                          2);
                      var be = s.drawText({
                        x: re,
                        y: _ + x / 10 + xe + 1,
                        text: Z,
                        textAnchor: ce,
                        fontSize: u,
                        fontFamily: d,
                        fontWeight: f,
                        maxWidth: o.config.yaxis[n].labels.maxWidth,
                        foreColor: Array.isArray(se) ? se[K] : se,
                        isPlainText: !1,
                        cssClass: "apexcharts-yaxis-label " + l.cssClass,
                      });
                      K === x && (I = be), y.add(be);
                      var Ie = document.createElementNS(
                        o.globals.SVGNS,
                        "title",
                      );
                      if (
                        ((Ie.textContent = Array.isArray(Z) ? Z.join(" ") : Z),
                        be.node.appendChild(Ie),
                        o.config.yaxis[n].labels.rotate !== 0)
                      ) {
                        var Fe = s.rotateAroundCenter(I.node),
                          We = s.rotateAroundCenter(be.node);
                        be.node.setAttribute(
                          "transform",
                          "rotate("
                            .concat(o.config.yaxis[n].labels.rotate, " ")
                            .concat(Fe.x, " ")
                            .concat(We.y, ")"),
                        );
                      }
                      _ += S;
                    },
                    Y = x;
                  Y >= 0;
                  Y--
                )
                  H(Y);
              if (o.config.yaxis[n].title.text !== void 0) {
                var g = s.group({ class: "apexcharts-yaxis-title" }),
                  w = 0;
                o.config.yaxis[n].opposite &&
                  (w = o.globals.translateYAxisX[n]);
                var A = s.drawText({
                  x: w,
                  y:
                    o.globals.gridHeight / 2 +
                    o.globals.translateY +
                    o.config.yaxis[n].title.offsetY,
                  text: o.config.yaxis[n].title.text,
                  textAnchor: "end",
                  foreColor: o.config.yaxis[n].title.style.color,
                  fontSize: o.config.yaxis[n].title.style.fontSize,
                  fontWeight: o.config.yaxis[n].title.style.fontWeight,
                  fontFamily: o.config.yaxis[n].title.style.fontFamily,
                  cssClass:
                    "apexcharts-yaxis-title-text " +
                    o.config.yaxis[n].title.style.cssClass,
                });
                g.add(A), m.add(g);
              }
              var D = o.config.yaxis[n].axisBorder,
                W = 31 + D.offsetX;
              if (
                (o.config.yaxis[n].opposite && (W = -31 - D.offsetX), D.show)
              ) {
                var V = s.drawLine(
                  W,
                  o.globals.translateY + D.offsetY - 2,
                  W,
                  o.globals.gridHeight + o.globals.translateY + D.offsetY + 2,
                  D.color,
                  0,
                  D.width,
                );
                m.add(V);
              }
              return (
                o.config.yaxis[n].axisTicks.show &&
                  this.axesUtils.drawYAxisTicks(
                    W,
                    x,
                    D,
                    o.config.yaxis[n].axisTicks,
                    n,
                    S,
                    m,
                  ),
                m
              );
            },
          },
          {
            key: "drawYaxisInversed",
            value: function (n) {
              var i = this.w,
                o = new B(this.ctx),
                s = o.group({
                  class: "apexcharts-xaxis apexcharts-yaxis-inversed",
                }),
                l = o.group({
                  class: "apexcharts-xaxis-texts-g",
                  transform: "translate("
                    .concat(i.globals.translateXAxisX, ", ")
                    .concat(i.globals.translateXAxisY, ")"),
                });
              s.add(l);
              var u = i.globals.yAxisScale[n].result.length - 1,
                d = i.globals.gridWidth / u + 0.1,
                f = d + i.config.xaxis.labels.offsetX,
                m = i.globals.xLabelFormatter,
                y = i.globals.yAxisScale[n].result.slice(),
                x = i.globals.timescaleLabels;
              x.length > 0 &&
                ((this.xaxisLabels = x.slice()), (u = (y = x.slice()).length)),
                (y = this.axesUtils.checkForReversedLabels(n, y));
              var S = x.length;
              if (i.config.xaxis.labels.show)
                for (var _ = S ? 0 : u; S ? _ < S : _ >= 0; S ? _++ : _--) {
                  var C = y[_];
                  C = m(C, _, i);
                  var E =
                    i.globals.gridWidth +
                    i.globals.padHorizontal -
                    (f - d + i.config.xaxis.labels.offsetX);
                  if (x.length) {
                    var I = this.axesUtils.getLabel(
                      y,
                      x,
                      E,
                      _,
                      this.drawnLabels,
                      this.xaxisFontSize,
                    );
                    (E = I.x),
                      (C = I.text),
                      this.drawnLabels.push(I.text),
                      _ === 0 && i.globals.skipFirstTimelinelabel && (C = ""),
                      _ === y.length - 1 &&
                        i.globals.skipLastTimelinelabel &&
                        (C = "");
                  }
                  var H = o.drawText({
                    x: E,
                    y:
                      this.xAxisoffX +
                      i.config.xaxis.labels.offsetY +
                      30 -
                      (i.config.xaxis.position === "top"
                        ? i.globals.xAxisHeight +
                          i.config.xaxis.axisTicks.height -
                          2
                        : 0),
                    text: C,
                    textAnchor: "middle",
                    foreColor: Array.isArray(this.xaxisForeColors)
                      ? this.xaxisForeColors[n]
                      : this.xaxisForeColors,
                    fontSize: this.xaxisFontSize,
                    fontFamily: this.xaxisFontFamily,
                    fontWeight: i.config.xaxis.labels.style.fontWeight,
                    isPlainText: !1,
                    cssClass:
                      "apexcharts-xaxis-label " +
                      i.config.xaxis.labels.style.cssClass,
                  });
                  l.add(H), H.tspan(C);
                  var Y = document.createElementNS(i.globals.SVGNS, "title");
                  (Y.textContent = C), H.node.appendChild(Y), (f += d);
                }
              return (
                this.inversedYAxisTitleText(s), this.inversedYAxisBorder(s), s
              );
            },
          },
          {
            key: "inversedYAxisBorder",
            value: function (n) {
              var i = this.w,
                o = new B(this.ctx),
                s = i.config.xaxis.axisBorder;
              if (s.show) {
                var l = 0;
                i.config.chart.type === "bar" &&
                  i.globals.isXNumeric &&
                  (l -= 15);
                var u = o.drawLine(
                  i.globals.padHorizontal + l + s.offsetX,
                  this.xAxisoffX,
                  i.globals.gridWidth,
                  this.xAxisoffX,
                  s.color,
                  0,
                  s.height,
                );
                this.elgrid && this.elgrid.elGridBorders && i.config.grid.show
                  ? this.elgrid.elGridBorders.add(u)
                  : n.add(u);
              }
            },
          },
          {
            key: "inversedYAxisTitleText",
            value: function (n) {
              var i = this.w,
                o = new B(this.ctx);
              if (i.config.xaxis.title.text !== void 0) {
                var s = o.group({
                    class:
                      "apexcharts-xaxis-title apexcharts-yaxis-title-inversed",
                  }),
                  l = o.drawText({
                    x: i.globals.gridWidth / 2 + i.config.xaxis.title.offsetX,
                    y:
                      this.xAxisoffX +
                      parseFloat(this.xaxisFontSize) +
                      parseFloat(i.config.xaxis.title.style.fontSize) +
                      i.config.xaxis.title.offsetY +
                      20,
                    text: i.config.xaxis.title.text,
                    textAnchor: "middle",
                    fontSize: i.config.xaxis.title.style.fontSize,
                    fontFamily: i.config.xaxis.title.style.fontFamily,
                    fontWeight: i.config.xaxis.title.style.fontWeight,
                    foreColor: i.config.xaxis.title.style.color,
                    cssClass:
                      "apexcharts-xaxis-title-text " +
                      i.config.xaxis.title.style.cssClass,
                  });
                s.add(l), n.add(s);
              }
            },
          },
          {
            key: "yAxisTitleRotate",
            value: function (n, i) {
              var o = this.w,
                s = new B(this.ctx),
                l = { width: 0, height: 0 },
                u = { width: 0, height: 0 },
                d = o.globals.dom.baseEl.querySelector(
                  " .apexcharts-yaxis[rel='".concat(
                    n,
                    "'] .apexcharts-yaxis-texts-g",
                  ),
                );
              d !== null && (l = d.getBoundingClientRect());
              var f = o.globals.dom.baseEl.querySelector(
                ".apexcharts-yaxis[rel='".concat(
                  n,
                  "'] .apexcharts-yaxis-title text",
                ),
              );
              if ((f !== null && (u = f.getBoundingClientRect()), f !== null)) {
                var m = this.xPaddingForYAxisTitle(n, l, u, i);
                f.setAttribute("x", m.xPos - (i ? 10 : 0));
              }
              if (f !== null) {
                var y = s.rotateAroundCenter(f);
                f.setAttribute(
                  "transform",
                  "rotate("
                    .concat(
                      i
                        ? -1 * o.config.yaxis[n].title.rotate
                        : o.config.yaxis[n].title.rotate,
                      " ",
                    )
                    .concat(y.x, " ")
                    .concat(y.y, ")"),
                );
              }
            },
          },
          {
            key: "xPaddingForYAxisTitle",
            value: function (n, i, o, s) {
              var l = this.w,
                u = 0,
                d = 0,
                f = 10;
              return l.config.yaxis[n].title.text === void 0 || n < 0
                ? { xPos: d, padd: 0 }
                : (s
                    ? ((d =
                        i.width +
                        l.config.yaxis[n].title.offsetX +
                        o.width / 2 +
                        f / 2),
                      (u += 1) === 0 && (d -= f / 2))
                    : ((d =
                        -1 * i.width +
                        l.config.yaxis[n].title.offsetX +
                        f / 2 +
                        o.width / 2),
                      l.globals.isBarHorizontal &&
                        ((f = 25),
                        (d =
                          -1 * i.width - l.config.yaxis[n].title.offsetX - f))),
                  { xPos: d, padd: f });
            },
          },
          {
            key: "setYAxisXPosition",
            value: function (n, i) {
              var o = this.w,
                s = 0,
                l = 0,
                u = 18,
                d = 1;
              o.config.yaxis.length > 1 && (this.multipleYs = !0),
                o.config.yaxis.map(function (f, m) {
                  var y =
                      o.globals.ignoreYAxisIndexes.indexOf(m) > -1 ||
                      !f.show ||
                      f.floating ||
                      n[m].width === 0,
                    x = n[m].width + i[m].width;
                  f.opposite
                    ? o.globals.isBarHorizontal
                      ? ((l = o.globals.gridWidth + o.globals.translateX - 1),
                        (o.globals.translateYAxisX[m] = l - f.labels.offsetX))
                      : ((l = o.globals.gridWidth + o.globals.translateX + d),
                        y || (d = d + x + 20),
                        (o.globals.translateYAxisX[m] =
                          l - f.labels.offsetX + 20))
                    : ((s = o.globals.translateX - u),
                      y || (u = u + x + 20),
                      (o.globals.translateYAxisX[m] = s + f.labels.offsetX));
                });
            },
          },
          {
            key: "setYAxisTextAlignments",
            value: function () {
              var n = this.w,
                i =
                  n.globals.dom.baseEl.getElementsByClassName(
                    "apexcharts-yaxis",
                  );
              (i = O.listToArray(i)).forEach(function (o, s) {
                var l = n.config.yaxis[s];
                if (l && !l.floating && l.labels.align !== void 0) {
                  var u = n.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxis[rel='".concat(
                        s,
                        "'] .apexcharts-yaxis-texts-g",
                      ),
                    ),
                    d = n.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-yaxis[rel='".concat(
                        s,
                        "'] .apexcharts-yaxis-label",
                      ),
                    );
                  d = O.listToArray(d);
                  var f = u.getBoundingClientRect();
                  l.labels.align === "left"
                    ? (d.forEach(function (m, y) {
                        m.setAttribute("text-anchor", "start");
                      }),
                      l.opposite ||
                        u.setAttribute(
                          "transform",
                          "translate(-".concat(f.width, ", 0)"),
                        ))
                    : l.labels.align === "center"
                    ? (d.forEach(function (m, y) {
                        m.setAttribute("text-anchor", "middle");
                      }),
                      u.setAttribute(
                        "transform",
                        "translate(".concat(
                          (f.width / 2) * (l.opposite ? 1 : -1),
                          ", 0)",
                        ),
                      ))
                    : l.labels.align === "right" &&
                      (d.forEach(function (m, y) {
                        m.setAttribute("text-anchor", "end");
                      }),
                      l.opposite &&
                        u.setAttribute(
                          "transform",
                          "translate(".concat(f.width, ", 0)"),
                        ));
                }
              });
            },
          },
        ]),
        T
      );
    })(),
    Mn = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.documentEvent = O.bind(this.documentEvent, this));
      }
      return (
        v(T, [
          {
            key: "addEventListener",
            value: function (n, i) {
              var o = this.w;
              o.globals.events.hasOwnProperty(n)
                ? o.globals.events[n].push(i)
                : (o.globals.events[n] = [i]);
            },
          },
          {
            key: "removeEventListener",
            value: function (n, i) {
              var o = this.w;
              if (o.globals.events.hasOwnProperty(n)) {
                var s = o.globals.events[n].indexOf(i);
                s !== -1 && o.globals.events[n].splice(s, 1);
              }
            },
          },
          {
            key: "fireEvent",
            value: function (n, i) {
              var o = this.w;
              if (o.globals.events.hasOwnProperty(n)) {
                (i && i.length) || (i = []);
                for (
                  var s = o.globals.events[n], l = s.length, u = 0;
                  u < l;
                  u++
                )
                  s[u].apply(null, i);
              }
            },
          },
          {
            key: "setupEventHandlers",
            value: function () {
              var n = this,
                i = this.w,
                o = this.ctx,
                s = i.globals.dom.baseEl.querySelector(i.globals.chartClass);
              this.ctx.eventList.forEach(function (l) {
                s.addEventListener(
                  l,
                  function (u) {
                    var d = Object.assign({}, i, {
                      seriesIndex: i.globals.capturedSeriesIndex,
                      dataPointIndex: i.globals.capturedDataPointIndex,
                    });
                    u.type === "mousemove" || u.type === "touchmove"
                      ? typeof i.config.chart.events.mouseMove == "function" &&
                        i.config.chart.events.mouseMove(u, o, d)
                      : u.type === "mouseleave" || u.type === "touchleave"
                      ? typeof i.config.chart.events.mouseLeave == "function" &&
                        i.config.chart.events.mouseLeave(u, o, d)
                      : ((u.type === "mouseup" && u.which === 1) ||
                          u.type === "touchend") &&
                        (typeof i.config.chart.events.click == "function" &&
                          i.config.chart.events.click(u, o, d),
                        o.ctx.events.fireEvent("click", [u, o, d]));
                  },
                  { capture: !1, passive: !0 },
                );
              }),
                this.ctx.eventList.forEach(function (l) {
                  i.globals.dom.baseEl.addEventListener(l, n.documentEvent, {
                    passive: !0,
                  });
                }),
                this.ctx.core.setupBrushHandler();
            },
          },
          {
            key: "documentEvent",
            value: function (n) {
              var i = this.w,
                o = n.target.className;
              if (n.type === "click") {
                var s = i.globals.dom.baseEl.querySelector(".apexcharts-menu");
                s &&
                  s.classList.contains("apexcharts-menu-open") &&
                  o !== "apexcharts-menu-icon" &&
                  s.classList.remove("apexcharts-menu-open");
              }
              (i.globals.clientX =
                n.type === "touchmove" ? n.touches[0].clientX : n.clientX),
                (i.globals.clientY =
                  n.type === "touchmove" ? n.touches[0].clientY : n.clientY);
            },
          },
        ]),
        T
      );
    })(),
    Qt = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "setCurrentLocaleValues",
            value: function (n) {
              var i = this.w.config.chart.locales;
              window.Apex.chart &&
                window.Apex.chart.locales &&
                window.Apex.chart.locales.length > 0 &&
                (i = this.w.config.chart.locales.concat(
                  window.Apex.chart.locales,
                ));
              var o = i.filter(function (l) {
                return l.name === n;
              })[0];
              if (!o)
                throw new Error(
                  "Wrong locale name provided. Please make sure you set the correct locale name in options",
                );
              var s = O.extend(he, o);
              this.w.globals.locale = s.options;
            },
          },
        ]),
        T
      );
    })(),
    dn = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "drawAxis",
            value: function (n, i) {
              var o,
                s,
                l = this,
                u = this.w.globals,
                d = this.w.config,
                f = new St(this.ctx, i),
                m = new Rt(this.ctx, i);
              u.axisCharts &&
                n !== "radar" &&
                (u.isBarHorizontal
                  ? ((s = m.drawYaxisInversed(0)),
                    (o = f.drawXaxisInversed(0)),
                    u.dom.elGraphical.add(o),
                    u.dom.elGraphical.add(s))
                  : ((o = f.drawXaxis()),
                    u.dom.elGraphical.add(o),
                    d.yaxis.map(function (y, x) {
                      if (
                        u.ignoreYAxisIndexes.indexOf(x) === -1 &&
                        ((s = m.drawYaxis(x)),
                        u.dom.Paper.add(s),
                        l.w.config.grid.position === "back")
                      ) {
                        var S = u.dom.Paper.children()[1];
                        S.remove(), u.dom.Paper.add(S);
                      }
                    })));
            },
          },
        ]),
        T
      );
    })(),
    Jt = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "drawXCrosshairs",
            value: function () {
              var n = this.w,
                i = new B(this.ctx),
                o = new N(this.ctx),
                s = n.config.xaxis.crosshairs.fill.gradient,
                l = n.config.xaxis.crosshairs.dropShadow,
                u = n.config.xaxis.crosshairs.fill.type,
                d = s.colorFrom,
                f = s.colorTo,
                m = s.opacityFrom,
                y = s.opacityTo,
                x = s.stops,
                S = l.enabled,
                _ = l.left,
                C = l.top,
                E = l.blur,
                I = l.color,
                H = l.opacity,
                Y = n.config.xaxis.crosshairs.fill.color;
              if (n.config.xaxis.crosshairs.show) {
                u === "gradient" &&
                  (Y = i.drawGradient("vertical", d, f, m, y, null, x, null));
                var g = i.drawRect();
                n.config.xaxis.crosshairs.width === 1 && (g = i.drawLine());
                var w = n.globals.gridHeight;
                (!O.isNumber(w) || w < 0) && (w = 0);
                var A = n.config.xaxis.crosshairs.width;
                (!O.isNumber(A) || A < 0) && (A = 0),
                  g.attr({
                    class: "apexcharts-xcrosshairs",
                    x: 0,
                    y: 0,
                    y2: w,
                    width: A,
                    height: w,
                    fill: Y,
                    filter: "none",
                    "fill-opacity": n.config.xaxis.crosshairs.opacity,
                    stroke: n.config.xaxis.crosshairs.stroke.color,
                    "stroke-width": n.config.xaxis.crosshairs.stroke.width,
                    "stroke-dasharray":
                      n.config.xaxis.crosshairs.stroke.dashArray,
                  }),
                  S &&
                    (g = o.dropShadow(g, {
                      left: _,
                      top: C,
                      blur: E,
                      color: I,
                      opacity: H,
                    })),
                  n.globals.dom.elGraphical.add(g);
              }
            },
          },
          {
            key: "drawYCrosshairs",
            value: function () {
              var n = this.w,
                i = new B(this.ctx),
                o = n.config.yaxis[0].crosshairs,
                s = n.globals.barPadForNumericAxis;
              if (n.config.yaxis[0].crosshairs.show) {
                var l = i.drawLine(
                  -s,
                  0,
                  n.globals.gridWidth + s,
                  0,
                  o.stroke.color,
                  o.stroke.dashArray,
                  o.stroke.width,
                );
                l.attr({ class: "apexcharts-ycrosshairs" }),
                  n.globals.dom.elGraphical.add(l);
              }
              var u = i.drawLine(
                -s,
                0,
                n.globals.gridWidth + s,
                0,
                o.stroke.color,
                0,
                0,
              );
              u.attr({ class: "apexcharts-ycrosshairs-hidden" }),
                n.globals.dom.elGraphical.add(u);
            },
          },
        ]),
        T
      );
    })(),
    Lt = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "checkResponsiveConfig",
            value: function (n) {
              var i = this,
                o = this.w,
                s = o.config;
              if (s.responsive.length !== 0) {
                var l = s.responsive.slice();
                l.sort(function (m, y) {
                  return m.breakpoint > y.breakpoint
                    ? 1
                    : y.breakpoint > m.breakpoint
                    ? -1
                    : 0;
                }).reverse();
                var u = new pe({}),
                  d = function () {
                    var m =
                        arguments.length > 0 && arguments[0] !== void 0
                          ? arguments[0]
                          : {},
                      y = l[0].breakpoint,
                      x =
                        window.innerWidth > 0
                          ? window.innerWidth
                          : screen.width;
                    if (x > y) {
                      var S = U.extendArrayProps(u, o.globals.initialConfig, o);
                      (m = O.extend(S, m)),
                        (m = O.extend(o.config, m)),
                        i.overrideResponsiveOptions(m);
                    } else
                      for (var _ = 0; _ < l.length; _++)
                        x < l[_].breakpoint &&
                          ((m = U.extendArrayProps(u, l[_].options, o)),
                          (m = O.extend(o.config, m)),
                          i.overrideResponsiveOptions(m));
                  };
                if (n) {
                  var f = U.extendArrayProps(u, n, o);
                  (f = O.extend(o.config, f)), d((f = O.extend(f, n)));
                } else d({});
              }
            },
          },
          {
            key: "overrideResponsiveOptions",
            value: function (n) {
              var i = new pe(n).init({ responsiveOverride: !0 });
              this.w.config = i;
            },
          },
        ]),
        T
      );
    })(),
    nt = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.colors = []), (this.w = n.w);
        var i = this.w;
        (this.isColorFn = !1),
          (this.isHeatmapDistributed =
            (i.config.chart.type === "treemap" &&
              i.config.plotOptions.treemap.distributed) ||
            (i.config.chart.type === "heatmap" &&
              i.config.plotOptions.heatmap.distributed)),
          (this.isBarDistributed =
            i.config.plotOptions.bar.distributed &&
            (i.config.chart.type === "bar" ||
              i.config.chart.type === "rangeBar"));
      }
      return (
        v(T, [
          {
            key: "init",
            value: function () {
              this.setDefaultColors();
            },
          },
          {
            key: "setDefaultColors",
            value: function () {
              var n,
                i = this,
                o = this.w,
                s = new O();
              if (
                (o.globals.dom.elWrap.classList.add(
                  "apexcharts-theme-".concat(o.config.theme.mode),
                ),
                o.config.colors === void 0 ||
                ((n = o.config.colors) === null || n === void 0
                  ? void 0
                  : n.length) === 0
                  ? (o.globals.colors = this.predefined())
                  : ((o.globals.colors = o.config.colors),
                    Array.isArray(o.config.colors) &&
                      o.config.colors.length > 0 &&
                      typeof o.config.colors[0] == "function" &&
                      (o.globals.colors = o.config.series.map(function (C, E) {
                        var I = o.config.colors[E];
                        return (
                          I || (I = o.config.colors[0]),
                          typeof I == "function"
                            ? ((i.isColorFn = !0),
                              I({
                                value: o.globals.axisCharts
                                  ? o.globals.series[E][0]
                                    ? o.globals.series[E][0]
                                    : 0
                                  : o.globals.series[E],
                                seriesIndex: E,
                                dataPointIndex: E,
                                w: o,
                              }))
                            : I
                        );
                      }))),
                o.globals.seriesColors.map(function (C, E) {
                  C && (o.globals.colors[E] = C);
                }),
                o.config.theme.monochrome.enabled)
              ) {
                var l = [],
                  u = o.globals.series.length;
                (this.isBarDistributed || this.isHeatmapDistributed) &&
                  (u = o.globals.series[0].length * o.globals.series.length);
                for (
                  var d = o.config.theme.monochrome.color,
                    f = 1 / (u / o.config.theme.monochrome.shadeIntensity),
                    m = o.config.theme.monochrome.shadeTo,
                    y = 0,
                    x = 0;
                  x < u;
                  x++
                ) {
                  var S = void 0;
                  m === "dark"
                    ? ((S = s.shadeColor(-1 * y, d)), (y += f))
                    : ((S = s.shadeColor(y, d)), (y += f)),
                    l.push(S);
                }
                o.globals.colors = l.slice();
              }
              var _ = o.globals.colors.slice();
              this.pushExtraColors(o.globals.colors),
                ["fill", "stroke"].forEach(function (C) {
                  o.config[C].colors === void 0
                    ? (o.globals[C].colors = i.isColorFn ? o.config.colors : _)
                    : (o.globals[C].colors = o.config[C].colors.slice()),
                    i.pushExtraColors(o.globals[C].colors);
                }),
                o.config.dataLabels.style.colors === void 0
                  ? (o.globals.dataLabels.style.colors = _)
                  : (o.globals.dataLabels.style.colors =
                      o.config.dataLabels.style.colors.slice()),
                this.pushExtraColors(o.globals.dataLabels.style.colors, 50),
                o.config.plotOptions.radar.polygons.fill.colors === void 0
                  ? (o.globals.radarPolygons.fill.colors = [
                      o.config.theme.mode === "dark" ? "#424242" : "none",
                    ])
                  : (o.globals.radarPolygons.fill.colors =
                      o.config.plotOptions.radar.polygons.fill.colors.slice()),
                this.pushExtraColors(o.globals.radarPolygons.fill.colors, 20),
                o.config.markers.colors === void 0
                  ? (o.globals.markers.colors = _)
                  : (o.globals.markers.colors =
                      o.config.markers.colors.slice()),
                this.pushExtraColors(o.globals.markers.colors);
            },
          },
          {
            key: "pushExtraColors",
            value: function (n, i) {
              var o =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                s = this.w,
                l = i || s.globals.series.length;
              if (
                (o === null &&
                  (o =
                    this.isBarDistributed ||
                    this.isHeatmapDistributed ||
                    (s.config.chart.type === "heatmap" &&
                      s.config.plotOptions.heatmap.colorScale.inverse)),
                o &&
                  s.globals.series.length &&
                  (l =
                    s.globals.series[s.globals.maxValsInArrayIndex].length *
                    s.globals.series.length),
                n.length < l)
              )
                for (var u = l - n.length, d = 0; d < u; d++) n.push(n[d]);
            },
          },
          {
            key: "updateThemeOptions",
            value: function (n) {
              (n.chart = n.chart || {}), (n.tooltip = n.tooltip || {});
              var i = n.theme.mode || "light",
                o = n.theme.palette
                  ? n.theme.palette
                  : i === "dark"
                  ? "palette4"
                  : "palette1",
                s = n.chart.foreColor
                  ? n.chart.foreColor
                  : i === "dark"
                  ? "#f6f7f8"
                  : "#373d3f";
              return (
                (n.tooltip.theme = i),
                (n.chart.foreColor = s),
                (n.theme.palette = o),
                n
              );
            },
          },
          {
            key: "predefined",
            value: function () {
              switch (this.w.config.theme.palette) {
                case "palette1":
                default:
                  this.colors = [
                    "#008FFB",
                    "#00E396",
                    "#FEB019",
                    "#FF4560",
                    "#775DD0",
                  ];
                  break;
                case "palette2":
                  this.colors = [
                    "#3f51b5",
                    "#03a9f4",
                    "#4caf50",
                    "#f9ce1d",
                    "#FF9800",
                  ];
                  break;
                case "palette3":
                  this.colors = [
                    "#33b2df",
                    "#546E7A",
                    "#d4526e",
                    "#13d8aa",
                    "#A5978B",
                  ];
                  break;
                case "palette4":
                  this.colors = [
                    "#4ecdc4",
                    "#c7f464",
                    "#81D4FA",
                    "#fd6a6a",
                    "#546E7A",
                  ];
                  break;
                case "palette5":
                  this.colors = [
                    "#2b908f",
                    "#f9a3a4",
                    "#90ee7e",
                    "#fa4443",
                    "#69d2e7",
                  ];
                  break;
                case "palette6":
                  this.colors = [
                    "#449DD1",
                    "#F86624",
                    "#EA3546",
                    "#662E9B",
                    "#C5D86D",
                  ];
                  break;
                case "palette7":
                  this.colors = [
                    "#D7263D",
                    "#1B998B",
                    "#2E294E",
                    "#F46036",
                    "#E2C044",
                  ];
                  break;
                case "palette8":
                  this.colors = [
                    "#662E9B",
                    "#F86624",
                    "#F9C80E",
                    "#EA3546",
                    "#43BCCD",
                  ];
                  break;
                case "palette9":
                  this.colors = [
                    "#5C4742",
                    "#A5978B",
                    "#8D5B4C",
                    "#5A2A27",
                    "#C4BBAF",
                  ];
                  break;
                case "palette10":
                  this.colors = [
                    "#A300D6",
                    "#7D02EB",
                    "#5653FE",
                    "#2983FF",
                    "#00B1F2",
                  ];
              }
              return this.colors;
            },
          },
        ]),
        T
      );
    })(),
    hn = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "draw",
            value: function () {
              this.drawTitleSubtitle("title"),
                this.drawTitleSubtitle("subtitle");
            },
          },
          {
            key: "drawTitleSubtitle",
            value: function (n) {
              var i = this.w,
                o = n === "title" ? i.config.title : i.config.subtitle,
                s = i.globals.svgWidth / 2,
                l = o.offsetY,
                u = "middle";
              if (
                (o.align === "left"
                  ? ((s = 10), (u = "start"))
                  : o.align === "right" &&
                    ((s = i.globals.svgWidth - 10), (u = "end")),
                (s += o.offsetX),
                (l = l + parseInt(o.style.fontSize, 10) + o.margin / 2),
                o.text !== void 0)
              ) {
                var d = new B(this.ctx).drawText({
                  x: s,
                  y: l,
                  text: o.text,
                  textAnchor: u,
                  fontSize: o.style.fontSize,
                  fontFamily: o.style.fontFamily,
                  fontWeight: o.style.fontWeight,
                  foreColor: o.style.color,
                  opacity: 1,
                });
                d.node.setAttribute("class", "apexcharts-".concat(n, "-text")),
                  i.globals.dom.Paper.add(d);
              }
            },
          },
        ]),
        T
      );
    })(),
    Gr = (function () {
      function T(n) {
        h(this, T), (this.w = n.w), (this.dCtx = n);
      }
      return (
        v(T, [
          {
            key: "getTitleSubtitleCoords",
            value: function (n) {
              var i = this.w,
                o = 0,
                s = 0,
                l =
                  n === "title"
                    ? i.config.title.floating
                    : i.config.subtitle.floating,
                u = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-".concat(n, "-text"),
                );
              if (u !== null && !l) {
                var d = u.getBoundingClientRect();
                (o = d.width),
                  (s = i.globals.axisCharts ? d.height + 5 : d.height);
              }
              return { width: o, height: s };
            },
          },
          {
            key: "getLegendsRect",
            value: function () {
              var n = this.w,
                i = n.globals.dom.elLegendWrap;
              n.config.legend.height ||
                (n.config.legend.position !== "top" &&
                  n.config.legend.position !== "bottom") ||
                (i.style.maxHeight = n.globals.svgHeight / 2 + "px");
              var o = Object.assign({}, O.getBoundingClientRect(i));
              return (
                i !== null && !n.config.legend.floating && n.config.legend.show
                  ? (this.dCtx.lgRect = {
                      x: o.x,
                      y: o.y,
                      height: o.height,
                      width: o.height === 0 ? 0 : o.width,
                    })
                  : (this.dCtx.lgRect = { x: 0, y: 0, height: 0, width: 0 }),
                (n.config.legend.position !== "left" &&
                  n.config.legend.position !== "right") ||
                  (1.5 * this.dCtx.lgRect.width > n.globals.svgWidth &&
                    (this.dCtx.lgRect.width = n.globals.svgWidth / 1.5)),
                this.dCtx.lgRect
              );
            },
          },
          {
            key: "getLargestStringFromMultiArr",
            value: function (n, i) {
              var o = n;
              if (this.w.globals.isMultiLineX) {
                var s = i.map(function (u, d) {
                    return Array.isArray(u) ? u.length : 1;
                  }),
                  l = Math.max.apply(Math, F(s));
                o = i[s.indexOf(l)];
              }
              return o;
            },
          },
        ]),
        T
      );
    })(),
    Je = (function () {
      function T(n) {
        h(this, T), (this.w = n.w), (this.dCtx = n);
      }
      return (
        v(T, [
          {
            key: "getxAxisLabelsCoords",
            value: function () {
              var n,
                i = this.w,
                o = i.globals.labels.slice();
              if (
                (i.config.xaxis.convertedCatToNumeric &&
                  o.length === 0 &&
                  (o = i.globals.categoryLabels),
                i.globals.timescaleLabels.length > 0)
              ) {
                var s = this.getxAxisTimeScaleLabelsCoords();
                (n = { width: s.width, height: s.height }),
                  (i.globals.rotateXLabels = !1);
              } else {
                this.dCtx.lgWidthForSideLegends =
                  (i.config.legend.position !== "left" &&
                    i.config.legend.position !== "right") ||
                  i.config.legend.floating
                    ? 0
                    : this.dCtx.lgRect.width;
                var l = i.globals.xLabelFormatter,
                  u = O.getLargestStringFromArr(o),
                  d = this.dCtx.dimHelpers.getLargestStringFromMultiArr(u, o);
                i.globals.isBarHorizontal &&
                  (d = u =
                    i.globals.yAxisScale[0].result.reduce(function (C, E) {
                      return C.length > E.length ? C : E;
                    }, 0));
                var f = new oe(this.dCtx.ctx),
                  m = u;
                (u = f.xLabelFormat(l, u, m, {
                  i: void 0,
                  dateFormatter: new ue(this.dCtx.ctx).formatDate,
                  w: i,
                })),
                  (d = f.xLabelFormat(l, d, m, {
                    i: void 0,
                    dateFormatter: new ue(this.dCtx.ctx).formatDate,
                    w: i,
                  })),
                  ((i.config.xaxis.convertedCatToNumeric && u === void 0) ||
                    String(u).trim() === "") &&
                    (d = u = "1");
                var y = new B(this.dCtx.ctx),
                  x = y.getTextRects(u, i.config.xaxis.labels.style.fontSize),
                  S = x;
                if (
                  (u !== d &&
                    (S = y.getTextRects(
                      d,
                      i.config.xaxis.labels.style.fontSize,
                    )),
                  ((n = {
                    width: x.width >= S.width ? x.width : S.width,
                    height: x.height >= S.height ? x.height : S.height,
                  }).width *
                    o.length >
                    i.globals.svgWidth -
                      this.dCtx.lgWidthForSideLegends -
                      this.dCtx.yAxisWidth -
                      this.dCtx.gridPad.left -
                      this.dCtx.gridPad.right &&
                    i.config.xaxis.labels.rotate !== 0) ||
                    i.config.xaxis.labels.rotateAlways)
                ) {
                  if (!i.globals.isBarHorizontal) {
                    i.globals.rotateXLabels = !0;
                    var _ = function (C) {
                      return y.getTextRects(
                        C,
                        i.config.xaxis.labels.style.fontSize,
                        i.config.xaxis.labels.style.fontFamily,
                        "rotate(".concat(i.config.xaxis.labels.rotate, " 0 0)"),
                        !1,
                      );
                    };
                    (x = _(u)),
                      u !== d && (S = _(d)),
                      (n.height =
                        (x.height > S.height ? x.height : S.height) / 1.5),
                      (n.width = x.width > S.width ? x.width : S.width);
                  }
                } else i.globals.rotateXLabels = !1;
              }
              return (
                i.config.xaxis.labels.show || (n = { width: 0, height: 0 }),
                { width: n.width, height: n.height }
              );
            },
          },
          {
            key: "getxAxisGroupLabelsCoords",
            value: function () {
              var n,
                i = this.w;
              if (!i.globals.hasXaxisGroups) return { width: 0, height: 0 };
              var o,
                s =
                  ((n = i.config.xaxis.group.style) === null || n === void 0
                    ? void 0
                    : n.fontSize) || i.config.xaxis.labels.style.fontSize,
                l = i.globals.groups.map(function (x) {
                  return x.title;
                }),
                u = O.getLargestStringFromArr(l),
                d = this.dCtx.dimHelpers.getLargestStringFromMultiArr(u, l),
                f = new B(this.dCtx.ctx),
                m = f.getTextRects(u, s),
                y = m;
              return (
                u !== d && (y = f.getTextRects(d, s)),
                (o = {
                  width: m.width >= y.width ? m.width : y.width,
                  height: m.height >= y.height ? m.height : y.height,
                }),
                i.config.xaxis.labels.show || (o = { width: 0, height: 0 }),
                { width: o.width, height: o.height }
              );
            },
          },
          {
            key: "getxAxisTitleCoords",
            value: function () {
              var n = this.w,
                i = 0,
                o = 0;
              if (n.config.xaxis.title.text !== void 0) {
                var s = new B(this.dCtx.ctx).getTextRects(
                  n.config.xaxis.title.text,
                  n.config.xaxis.title.style.fontSize,
                );
                (i = s.width), (o = s.height);
              }
              return { width: i, height: o };
            },
          },
          {
            key: "getxAxisTimeScaleLabelsCoords",
            value: function () {
              var n,
                i = this.w;
              this.dCtx.timescaleLabels = i.globals.timescaleLabels.slice();
              var o = this.dCtx.timescaleLabels.map(function (l) {
                  return l.value;
                }),
                s = o.reduce(function (l, u) {
                  return l === void 0
                    ? (console.error(
                        "You have possibly supplied invalid Date format. Please supply a valid JavaScript Date",
                      ),
                      0)
                    : l.length > u.length
                    ? l
                    : u;
                }, 0);
              return (
                1.05 *
                  (n = new B(this.dCtx.ctx).getTextRects(
                    s,
                    i.config.xaxis.labels.style.fontSize,
                  )).width *
                  o.length >
                  i.globals.gridWidth &&
                  i.config.xaxis.labels.rotate !== 0 &&
                  (i.globals.overlappingXLabels = !0),
                n
              );
            },
          },
          {
            key: "additionalPaddingXLabels",
            value: function (n) {
              var i = this,
                o = this.w,
                s = o.globals,
                l = o.config,
                u = l.xaxis.type,
                d = n.width;
              (s.skipLastTimelinelabel = !1), (s.skipFirstTimelinelabel = !1);
              var f = o.config.yaxis[0].opposite && o.globals.isBarHorizontal,
                m = function (y, x) {
                  (l.yaxis.length > 1 &&
                    (function (S) {
                      return s.collapsedSeriesIndices.indexOf(S) !== -1;
                    })(x)) ||
                    (function (S) {
                      if (
                        i.dCtx.timescaleLabels &&
                        i.dCtx.timescaleLabels.length
                      ) {
                        var _ = i.dCtx.timescaleLabels[0],
                          C =
                            i.dCtx.timescaleLabels[
                              i.dCtx.timescaleLabels.length - 1
                            ].position +
                            d / 1.75 -
                            i.dCtx.yAxisWidthRight,
                          E = _.position - d / 1.75 + i.dCtx.yAxisWidthLeft,
                          I =
                            o.config.legend.position === "right" &&
                            i.dCtx.lgRect.width > 0
                              ? i.dCtx.lgRect.width
                              : 0;
                        C > s.svgWidth - s.translateX - I &&
                          (s.skipLastTimelinelabel = !0),
                          E <
                            -((S.show && !S.floating) ||
                            (l.chart.type !== "bar" &&
                              l.chart.type !== "candlestick" &&
                              l.chart.type !== "rangeBar" &&
                              l.chart.type !== "boxPlot")
                              ? 10
                              : d / 1.75) && (s.skipFirstTimelinelabel = !0);
                      } else
                        u === "datetime"
                          ? i.dCtx.gridPad.right < d &&
                            !s.rotateXLabels &&
                            (s.skipLastTimelinelabel = !0)
                          : u !== "datetime" &&
                            i.dCtx.gridPad.right <
                              d / 2 - i.dCtx.yAxisWidthRight &&
                            !s.rotateXLabels &&
                            !o.config.xaxis.labels.trim &&
                            (o.config.xaxis.tickPlacement !== "between" ||
                              o.globals.isBarHorizontal) &&
                            (i.dCtx.xPadRight = d / 2 + 1);
                    })(y);
                };
              l.yaxis.forEach(function (y, x) {
                f
                  ? (i.dCtx.gridPad.left < d && (i.dCtx.xPadLeft = d / 2 + 1),
                    (i.dCtx.xPadRight = d / 2 + 1))
                  : m(y, x);
              });
            },
          },
        ]),
        T
      );
    })(),
    mr = (function () {
      function T(n) {
        h(this, T), (this.w = n.w), (this.dCtx = n);
      }
      return (
        v(T, [
          {
            key: "getyAxisLabelsCoords",
            value: function () {
              var n = this,
                i = this.w,
                o = [],
                s = 10,
                l = new mt(this.dCtx.ctx);
              return (
                i.config.yaxis.map(function (u, d) {
                  var f = { seriesIndex: d, dataPointIndex: -1, w: i },
                    m = i.globals.yAxisScale[d],
                    y = 0;
                  if (
                    (!l.isYAxisHidden(d) &&
                      u.labels.show &&
                      u.labels.minWidth !== void 0 &&
                      (y = u.labels.minWidth),
                    !l.isYAxisHidden(d) && u.labels.show && m.result.length)
                  ) {
                    var x = i.globals.yLabelFormatters[d],
                      S = m.niceMin === Number.MIN_VALUE ? 0 : m.niceMin,
                      _ = m.result.reduce(function (w, A) {
                        var D, W;
                        return ((D = String(x(w, f))) === null || D === void 0
                          ? void 0
                          : D.length) >
                          ((W = String(x(A, f))) === null || W === void 0
                            ? void 0
                            : W.length)
                          ? w
                          : A;
                      }, S),
                      C = (_ = x(_, f));
                    if (
                      ((_ !== void 0 && _.length !== 0) || (_ = m.niceMax),
                      i.globals.isBarHorizontal)
                    ) {
                      s = 0;
                      var E = i.globals.labels.slice();
                      (_ = O.getLargestStringFromArr(E)),
                        (_ = x(_, {
                          seriesIndex: d,
                          dataPointIndex: -1,
                          w: i,
                        })),
                        (C = n.dCtx.dimHelpers.getLargestStringFromMultiArr(
                          _,
                          E,
                        ));
                    }
                    var I = new B(n.dCtx.ctx),
                      H = "rotate(".concat(u.labels.rotate, " 0 0)"),
                      Y = I.getTextRects(
                        _,
                        u.labels.style.fontSize,
                        u.labels.style.fontFamily,
                        H,
                        !1,
                      ),
                      g = Y;
                    _ !== C &&
                      (g = I.getTextRects(
                        C,
                        u.labels.style.fontSize,
                        u.labels.style.fontFamily,
                        H,
                        !1,
                      )),
                      o.push({
                        width:
                          (y > g.width || y > Y.width
                            ? y
                            : g.width > Y.width
                            ? g.width
                            : Y.width) + s,
                        height: g.height > Y.height ? g.height : Y.height,
                      });
                  } else o.push({ width: 0, height: 0 });
                }),
                o
              );
            },
          },
          {
            key: "getyAxisTitleCoords",
            value: function () {
              var n = this,
                i = this.w,
                o = [];
              return (
                i.config.yaxis.map(function (s, l) {
                  if (s.show && s.title.text !== void 0) {
                    var u = new B(n.dCtx.ctx),
                      d = "rotate(".concat(s.title.rotate, " 0 0)"),
                      f = u.getTextRects(
                        s.title.text,
                        s.title.style.fontSize,
                        s.title.style.fontFamily,
                        d,
                        !1,
                      );
                    o.push({ width: f.width, height: f.height });
                  } else o.push({ width: 0, height: 0 });
                }),
                o
              );
            },
          },
          {
            key: "getTotalYAxisWidth",
            value: function () {
              var n = this.w,
                i = 0,
                o = 0,
                s = 0,
                l = n.globals.yAxisScale.length > 1 ? 10 : 0,
                u = new mt(this.dCtx.ctx),
                d = function (f, m) {
                  var y = n.config.yaxis[m].floating,
                    x = 0;
                  f.width > 0 && !y
                    ? ((x = f.width + l),
                      (function (S) {
                        return n.globals.ignoreYAxisIndexes.indexOf(S) > -1;
                      })(m) && (x = x - f.width - l))
                    : (x = y || u.isYAxisHidden(m) ? 0 : 5),
                    n.config.yaxis[m].opposite ? (s += x) : (o += x),
                    (i += x);
                };
              return (
                n.globals.yLabelsCoords.map(function (f, m) {
                  d(f, m);
                }),
                n.globals.yTitleCoords.map(function (f, m) {
                  d(f, m);
                }),
                n.globals.isBarHorizontal &&
                  !n.config.yaxis[0].floating &&
                  (i =
                    n.globals.yLabelsCoords[0].width +
                    n.globals.yTitleCoords[0].width +
                    15),
                (this.dCtx.yAxisWidthLeft = o),
                (this.dCtx.yAxisWidthRight = s),
                i
              );
            },
          },
        ]),
        T
      );
    })(),
    Fd = (function () {
      function T(n) {
        h(this, T), (this.w = n.w), (this.dCtx = n);
      }
      return (
        v(T, [
          {
            key: "gridPadForColumnsInNumericAxis",
            value: function (n) {
              var i = this.w;
              if (i.globals.noData || i.globals.allSeriesCollapsed) return 0;
              var o = function (y) {
                  return (
                    y === "bar" ||
                    y === "rangeBar" ||
                    y === "candlestick" ||
                    y === "boxPlot"
                  );
                },
                s = i.config.chart.type,
                l = 0,
                u = o(s) ? i.config.series.length : 1;
              if (
                (i.globals.comboBarCount > 0 && (u = i.globals.comboBarCount),
                i.globals.collapsedSeries.forEach(function (y) {
                  o(y.type) && (u -= 1);
                }),
                i.config.chart.stacked && (u = 1),
                (o(s) || i.globals.comboBarCount > 0) &&
                  i.globals.isXNumeric &&
                  !i.globals.isBarHorizontal &&
                  u > 0)
              ) {
                var d,
                  f,
                  m = Math.abs(i.globals.initialMaxX - i.globals.initialMinX);
                m <= 3 && (m = i.globals.dataPoints),
                  (d = m / n),
                  i.globals.minXDiff &&
                    i.globals.minXDiff / d > 0 &&
                    (f = i.globals.minXDiff / d),
                  f > n / 2 && (f /= 2),
                  (l =
                    ((f / u) *
                      parseInt(i.config.plotOptions.bar.columnWidth, 10)) /
                    100) < 1 && (l = 1),
                  (l = l / (u > 1 ? 1 : 1.5) + 5),
                  (i.globals.barPadForNumericAxis = l);
              }
              return l;
            },
          },
          {
            key: "gridPadFortitleSubtitle",
            value: function () {
              var n = this,
                i = this.w,
                o = i.globals,
                s = this.dCtx.isSparkline || !i.globals.axisCharts ? 0 : 10;
              ["title", "subtitle"].forEach(function (d) {
                i.config[d].text !== void 0
                  ? (s += i.config[d].margin)
                  : (s += n.dCtx.isSparkline || !i.globals.axisCharts ? 0 : 5);
              }),
                !i.config.legend.show ||
                  i.config.legend.position !== "bottom" ||
                  i.config.legend.floating ||
                  i.globals.axisCharts ||
                  (s += 10);
              var l = this.dCtx.dimHelpers.getTitleSubtitleCoords("title"),
                u = this.dCtx.dimHelpers.getTitleSubtitleCoords("subtitle");
              (o.gridHeight = o.gridHeight - l.height - u.height - s),
                (o.translateY = o.translateY + l.height + u.height + s);
            },
          },
          {
            key: "setGridXPosForDualYAxis",
            value: function (n, i) {
              var o = this.w,
                s = new mt(this.dCtx.ctx);
              o.config.yaxis.map(function (l, u) {
                o.globals.ignoreYAxisIndexes.indexOf(u) !== -1 ||
                  l.floating ||
                  s.isYAxisHidden(u) ||
                  (l.opposite &&
                    (o.globals.translateX =
                      o.globals.translateX -
                      (i[u].width + n[u].width) -
                      parseInt(o.config.yaxis[u].labels.style.fontSize, 10) /
                        1.2 -
                      12),
                  o.globals.translateX < 2 && (o.globals.translateX = 2));
              });
            },
          },
        ]),
        T
      );
    })(),
    sr = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.lgRect = {}),
          (this.yAxisWidth = 0),
          (this.yAxisWidthLeft = 0),
          (this.yAxisWidthRight = 0),
          (this.xAxisHeight = 0),
          (this.isSparkline = this.w.config.chart.sparkline.enabled),
          (this.dimHelpers = new Gr(this)),
          (this.dimYAxis = new mr(this)),
          (this.dimXAxis = new Je(this)),
          (this.dimGrid = new Fd(this)),
          (this.lgWidthForSideLegends = 0),
          (this.gridPad = this.w.config.grid.padding),
          (this.xPadRight = 0),
          (this.xPadLeft = 0);
      }
      return (
        v(T, [
          {
            key: "plotCoords",
            value: function () {
              var n = this,
                i = this.w,
                o = i.globals;
              (this.lgRect = this.dimHelpers.getLegendsRect()),
                this.isSparkline &&
                  ((i.config.markers.discrete.length > 0 ||
                    i.config.markers.size > 0) &&
                    Object.entries(this.gridPad).forEach(function (l) {
                      var u = M(l, 2),
                        d = u[0],
                        f = u[1];
                      n.gridPad[d] = Math.max(
                        f,
                        n.w.globals.markers.largestSize / 1.5,
                      );
                    }),
                  (this.gridPad.top = Math.max(
                    i.config.stroke.width / 2,
                    this.gridPad.top,
                  )),
                  (this.gridPad.bottom = Math.max(
                    i.config.stroke.width / 2,
                    this.gridPad.bottom,
                  ))),
                o.axisCharts
                  ? this.setDimensionsForAxisCharts()
                  : this.setDimensionsForNonAxisCharts(),
                this.dimGrid.gridPadFortitleSubtitle(),
                (o.gridHeight =
                  o.gridHeight - this.gridPad.top - this.gridPad.bottom),
                (o.gridWidth =
                  o.gridWidth -
                  this.gridPad.left -
                  this.gridPad.right -
                  this.xPadRight -
                  this.xPadLeft);
              var s = this.dimGrid.gridPadForColumnsInNumericAxis(o.gridWidth);
              (o.gridWidth = o.gridWidth - 2 * s),
                (o.translateX =
                  o.translateX +
                  this.gridPad.left +
                  this.xPadLeft +
                  (s > 0 ? s + 4 : 0)),
                (o.translateY = o.translateY + this.gridPad.top);
            },
          },
          {
            key: "setDimensionsForAxisCharts",
            value: function () {
              var n = this,
                i = this.w,
                o = i.globals,
                s = this.dimYAxis.getyAxisLabelsCoords(),
                l = this.dimYAxis.getyAxisTitleCoords();
              (i.globals.yLabelsCoords = []),
                (i.globals.yTitleCoords = []),
                i.config.yaxis.map(function (_, C) {
                  i.globals.yLabelsCoords.push({ width: s[C].width, index: C }),
                    i.globals.yTitleCoords.push({
                      width: l[C].width,
                      index: C,
                    });
                }),
                (this.yAxisWidth = this.dimYAxis.getTotalYAxisWidth());
              var u = this.dimXAxis.getxAxisLabelsCoords(),
                d = this.dimXAxis.getxAxisGroupLabelsCoords(),
                f = this.dimXAxis.getxAxisTitleCoords();
              this.conditionalChecksForAxisCoords(u, f, d),
                (o.translateXAxisY = i.globals.rotateXLabels
                  ? this.xAxisHeight / 8
                  : -4),
                (o.translateXAxisX =
                  i.globals.rotateXLabels &&
                  i.globals.isXNumeric &&
                  i.config.xaxis.labels.rotate <= -45
                    ? -this.xAxisWidth / 4
                    : 0),
                i.globals.isBarHorizontal &&
                  ((o.rotateXLabels = !1),
                  (o.translateXAxisY =
                    (parseInt(i.config.xaxis.labels.style.fontSize, 10) / 1.5) *
                    -1)),
                (o.translateXAxisY =
                  o.translateXAxisY + i.config.xaxis.labels.offsetY),
                (o.translateXAxisX =
                  o.translateXAxisX + i.config.xaxis.labels.offsetX);
              var m = this.yAxisWidth,
                y = this.xAxisHeight;
              (o.xAxisLabelsHeight = this.xAxisHeight - f.height),
                (o.xAxisGroupLabelsHeight = o.xAxisLabelsHeight - u.height),
                (o.xAxisLabelsWidth = this.xAxisWidth),
                (o.xAxisHeight = this.xAxisHeight);
              var x = 10;
              (i.config.chart.type === "radar" || this.isSparkline) &&
                ((m = 0), (y = o.goldenPadding)),
                this.isSparkline && (this.lgRect = { height: 0, width: 0 }),
                (this.isSparkline || i.config.chart.type === "treemap") &&
                  ((m = 0), (y = 0), (x = 0)),
                this.isSparkline || this.dimXAxis.additionalPaddingXLabels(u);
              var S = function () {
                (o.translateX = m),
                  (o.gridHeight =
                    o.svgHeight -
                    n.lgRect.height -
                    y -
                    (n.isSparkline || i.config.chart.type === "treemap"
                      ? 0
                      : i.globals.rotateXLabels
                      ? 10
                      : 15)),
                  (o.gridWidth = o.svgWidth - m);
              };
              switch (
                (i.config.xaxis.position === "top" &&
                  (x = o.xAxisHeight - i.config.xaxis.axisTicks.height - 5),
                i.config.legend.position)
              ) {
                case "bottom":
                  (o.translateY = x), S();
                  break;
                case "top":
                  (o.translateY = this.lgRect.height + x), S();
                  break;
                case "left":
                  (o.translateY = x),
                    (o.translateX = this.lgRect.width + m),
                    (o.gridHeight = o.svgHeight - y - 12),
                    (o.gridWidth = o.svgWidth - this.lgRect.width - m);
                  break;
                case "right":
                  (o.translateY = x),
                    (o.translateX = m),
                    (o.gridHeight = o.svgHeight - y - 12),
                    (o.gridWidth = o.svgWidth - this.lgRect.width - m - 5);
                  break;
                default:
                  throw new Error("Legend position not supported");
              }
              this.dimGrid.setGridXPosForDualYAxis(l, s),
                new Rt(this.ctx).setYAxisXPosition(s, l);
            },
          },
          {
            key: "setDimensionsForNonAxisCharts",
            value: function () {
              var n = this.w,
                i = n.globals,
                o = n.config,
                s = 0;
              n.config.legend.show && !n.config.legend.floating && (s = 20);
              var l =
                  o.chart.type === "pie" ||
                  o.chart.type === "polarArea" ||
                  o.chart.type === "donut"
                    ? "pie"
                    : "radialBar",
                u = o.plotOptions[l].offsetY,
                d = o.plotOptions[l].offsetX;
              if (!o.legend.show || o.legend.floating)
                return (
                  (i.gridHeight =
                    i.svgHeight - o.grid.padding.left + o.grid.padding.right),
                  (i.gridWidth = i.gridHeight),
                  (i.translateY = u),
                  void (i.translateX = d + (i.svgWidth - i.gridWidth) / 2)
                );
              switch (o.legend.position) {
                case "bottom":
                  (i.gridHeight =
                    i.svgHeight - this.lgRect.height - i.goldenPadding),
                    (i.gridWidth = i.svgWidth),
                    (i.translateY = u - 10),
                    (i.translateX = d + (i.svgWidth - i.gridWidth) / 2);
                  break;
                case "top":
                  (i.gridHeight =
                    i.svgHeight - this.lgRect.height - i.goldenPadding),
                    (i.gridWidth = i.svgWidth),
                    (i.translateY = this.lgRect.height + u + 10),
                    (i.translateX = d + (i.svgWidth - i.gridWidth) / 2);
                  break;
                case "left":
                  (i.gridWidth = i.svgWidth - this.lgRect.width - s),
                    (i.gridHeight =
                      o.chart.height !== "auto" ? i.svgHeight : i.gridWidth),
                    (i.translateY = u),
                    (i.translateX = d + this.lgRect.width + s);
                  break;
                case "right":
                  (i.gridWidth = i.svgWidth - this.lgRect.width - s - 5),
                    (i.gridHeight =
                      o.chart.height !== "auto" ? i.svgHeight : i.gridWidth),
                    (i.translateY = u),
                    (i.translateX = d + 10);
                  break;
                default:
                  throw new Error("Legend position not supported");
              }
            },
          },
          {
            key: "conditionalChecksForAxisCoords",
            value: function (n, i, o) {
              var s = this.w,
                l = s.globals.hasXaxisGroups ? 2 : 1,
                u = o.height + n.height + i.height,
                d = s.globals.isMultiLineX ? 1.2 : s.globals.LINE_HEIGHT_RATIO,
                f = s.globals.rotateXLabels ? 22 : 10,
                m =
                  s.globals.rotateXLabels &&
                  s.config.legend.position === "bottom"
                    ? 10
                    : 0;
              (this.xAxisHeight = u * d + l * f + m),
                (this.xAxisWidth = n.width),
                this.xAxisHeight - i.height > s.config.xaxis.labels.maxHeight &&
                  (this.xAxisHeight = s.config.xaxis.labels.maxHeight),
                s.config.xaxis.labels.minHeight &&
                  this.xAxisHeight < s.config.xaxis.labels.minHeight &&
                  (this.xAxisHeight = s.config.xaxis.labels.minHeight),
                s.config.xaxis.floating && (this.xAxisHeight = 0);
              var y = 0,
                x = 0;
              s.config.yaxis.forEach(function (S) {
                (y += S.labels.minWidth), (x += S.labels.maxWidth);
              }),
                this.yAxisWidth < y && (this.yAxisWidth = y),
                this.yAxisWidth > x && (this.yAxisWidth = x);
            },
          },
        ]),
        T
      );
    })(),
    Cs = (function () {
      function T(n) {
        h(this, T), (this.w = n.w), (this.lgCtx = n);
      }
      return (
        v(T, [
          {
            key: "getLegendStyles",
            value: function () {
              var n = document.createElement("style");
              n.setAttribute("type", "text/css");
              var i = document.createTextNode(`	
    	
      .apexcharts-legend {	
        display: flex;	
        overflow: auto;	
        padding: 0 10px;	
      }	
      .apexcharts-legend.apx-legend-position-bottom, .apexcharts-legend.apx-legend-position-top {	
        flex-wrap: wrap	
      }	
      .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        flex-direction: column;	
        bottom: 0;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-left, .apexcharts-legend.apx-legend-position-top.apexcharts-align-left, .apexcharts-legend.apx-legend-position-right, .apexcharts-legend.apx-legend-position-left {	
        justify-content: flex-start;	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-center, .apexcharts-legend.apx-legend-position-top.apexcharts-align-center {	
        justify-content: center;  	
      }	
      .apexcharts-legend.apx-legend-position-bottom.apexcharts-align-right, .apexcharts-legend.apx-legend-position-top.apexcharts-align-right {	
        justify-content: flex-end;	
      }	
      .apexcharts-legend-series {	
        cursor: pointer;	
        line-height: normal;	
      }	
      .apexcharts-legend.apx-legend-position-bottom .apexcharts-legend-series, .apexcharts-legend.apx-legend-position-top .apexcharts-legend-series{	
        display: flex;	
        align-items: center;	
      }	
      .apexcharts-legend-text {	
        position: relative;	
        font-size: 14px;	
      }	
      .apexcharts-legend-text *, .apexcharts-legend-marker * {	
        pointer-events: none;	
      }	
      .apexcharts-legend-marker {	
        position: relative;	
        display: inline-block;	
        cursor: pointer;	
        margin-right: 3px;	
        border-style: solid;
      }	
      	
      .apexcharts-legend.apexcharts-align-right .apexcharts-legend-series, .apexcharts-legend.apexcharts-align-left .apexcharts-legend-series{	
        display: inline-block;	
      }	
      .apexcharts-legend-series.apexcharts-no-click {	
        cursor: auto;	
      }	
      .apexcharts-legend .apexcharts-hidden-zero-series, .apexcharts-legend .apexcharts-hidden-null-series {	
        display: none !important;	
      }	
      .apexcharts-inactive-legend {	
        opacity: 0.45;	
      }`);
              return n.appendChild(i), n;
            },
          },
          {
            key: "getLegendBBox",
            value: function () {
              var n = this.w.globals.dom.baseEl
                  .querySelector(".apexcharts-legend")
                  .getBoundingClientRect(),
                i = n.width;
              return { clwh: n.height, clww: i };
            },
          },
          {
            key: "appendToForeignObject",
            value: function () {
              this.w.globals.dom.elLegendForeign.appendChild(
                this.getLegendStyles(),
              );
            },
          },
          {
            key: "toggleDataSeries",
            value: function (n, i) {
              var o = this,
                s = this.w;
              if (s.globals.axisCharts || s.config.chart.type === "radialBar") {
                s.globals.resized = !0;
                var l = null,
                  u = null;
                (s.globals.risingSeries = []),
                  s.globals.axisCharts
                    ? ((l = s.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[data\\:realIndex='".concat(n, "']"),
                      )),
                      (u = parseInt(l.getAttribute("data:realIndex"), 10)))
                    : ((l = s.globals.dom.baseEl.querySelector(
                        ".apexcharts-series[rel='".concat(n + 1, "']"),
                      )),
                      (u = parseInt(l.getAttribute("rel"), 10) - 1)),
                  i
                    ? [
                        {
                          cs: s.globals.collapsedSeries,
                          csi: s.globals.collapsedSeriesIndices,
                        },
                        {
                          cs: s.globals.ancillaryCollapsedSeries,
                          csi: s.globals.ancillaryCollapsedSeriesIndices,
                        },
                      ].forEach(function (y) {
                        o.riseCollapsedSeries(y.cs, y.csi, u);
                      })
                    : this.hideSeries({ seriesEl: l, realIndex: u });
              } else {
                var d = s.globals.dom.Paper.select(
                    " .apexcharts-series[rel='".concat(n + 1, "'] path"),
                  ),
                  f = s.config.chart.type;
                if (f === "pie" || f === "polarArea" || f === "donut") {
                  var m = s.config.plotOptions.pie.donut.labels;
                  new B(this.lgCtx.ctx).pathMouseDown(d.members[0], null),
                    this.lgCtx.ctx.pie.printDataLabelsInner(
                      d.members[0].node,
                      m,
                    );
                }
                d.fire("click");
              }
            },
          },
          {
            key: "hideSeries",
            value: function (n) {
              var i = n.seriesEl,
                o = n.realIndex,
                s = this.w,
                l = O.clone(s.config.series);
              if (s.globals.axisCharts) {
                var u = !1;
                if (
                  (s.config.yaxis[o] &&
                    s.config.yaxis[o].show &&
                    s.config.yaxis[o].showAlways &&
                    ((u = !0),
                    s.globals.ancillaryCollapsedSeriesIndices.indexOf(o) < 0 &&
                      (s.globals.ancillaryCollapsedSeries.push({
                        index: o,
                        data: l[o].data.slice(),
                        type: i.parentNode.className.baseVal.split("-")[1],
                      }),
                      s.globals.ancillaryCollapsedSeriesIndices.push(o))),
                  !u)
                ) {
                  s.globals.collapsedSeries.push({
                    index: o,
                    data: l[o].data.slice(),
                    type: i.parentNode.className.baseVal.split("-")[1],
                  }),
                    s.globals.collapsedSeriesIndices.push(o);
                  var d = s.globals.risingSeries.indexOf(o);
                  s.globals.risingSeries.splice(d, 1);
                }
              } else
                s.globals.collapsedSeries.push({ index: o, data: l[o] }),
                  s.globals.collapsedSeriesIndices.push(o);
              for (var f = i.childNodes, m = 0; m < f.length; m++)
                f[m].classList.contains("apexcharts-series-markers-wrap") &&
                  (f[m].classList.contains("apexcharts-hide")
                    ? f[m].classList.remove("apexcharts-hide")
                    : f[m].classList.add("apexcharts-hide"));
              (s.globals.allSeriesCollapsed =
                s.globals.collapsedSeries.length === s.config.series.length),
                (l = this._getSeriesBasedOnCollapsedState(l)),
                this.lgCtx.ctx.updateHelpers._updateSeries(
                  l,
                  s.config.chart.animations.dynamicAnimation.enabled,
                );
            },
          },
          {
            key: "riseCollapsedSeries",
            value: function (n, i, o) {
              var s = this.w,
                l = O.clone(s.config.series);
              if (n.length > 0) {
                for (var u = 0; u < n.length; u++)
                  n[u].index === o &&
                    (s.globals.axisCharts
                      ? ((l[o].data = n[u].data.slice()),
                        n.splice(u, 1),
                        i.splice(u, 1),
                        s.globals.risingSeries.push(o))
                      : ((l[o] = n[u].data),
                        n.splice(u, 1),
                        i.splice(u, 1),
                        s.globals.risingSeries.push(o)));
                (l = this._getSeriesBasedOnCollapsedState(l)),
                  this.lgCtx.ctx.updateHelpers._updateSeries(
                    l,
                    s.config.chart.animations.dynamicAnimation.enabled,
                  );
              }
            },
          },
          {
            key: "_getSeriesBasedOnCollapsedState",
            value: function (n) {
              var i = this.w;
              return (
                i.globals.axisCharts
                  ? n.forEach(function (o, s) {
                      i.globals.collapsedSeriesIndices.indexOf(s) > -1 &&
                        (n[s].data = []);
                    })
                  : n.forEach(function (o, s) {
                      i.globals.collapsedSeriesIndices.indexOf(s) > -1 &&
                        (n[s] = 0);
                    }),
                n
              );
            },
          },
        ]),
        T
      );
    })(),
    Ka = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.onLegendClick = this.onLegendClick.bind(this)),
          (this.onLegendHovered = this.onLegendHovered.bind(this)),
          (this.isBarsDistributed =
            this.w.config.chart.type === "bar" &&
            this.w.config.plotOptions.bar.distributed &&
            this.w.config.series.length === 1),
          (this.legendHelpers = new Cs(this));
      }
      return (
        v(T, [
          {
            key: "init",
            value: function () {
              var n = this.w,
                i = n.globals,
                o = n.config;
              if (
                ((o.legend.showForSingleSeries && i.series.length === 1) ||
                  this.isBarsDistributed ||
                  i.series.length > 1 ||
                  !i.axisCharts) &&
                o.legend.show
              ) {
                for (; i.dom.elLegendWrap.firstChild; )
                  i.dom.elLegendWrap.removeChild(i.dom.elLegendWrap.firstChild);
                this.drawLegends(),
                  O.isIE11()
                    ? document
                        .getElementsByTagName("head")[0]
                        .appendChild(this.legendHelpers.getLegendStyles())
                    : this.legendHelpers.appendToForeignObject(),
                  o.legend.position === "bottom" || o.legend.position === "top"
                    ? this.legendAlignHorizontal()
                    : (o.legend.position !== "right" &&
                        o.legend.position !== "left") ||
                      this.legendAlignVertical();
              }
            },
          },
          {
            key: "drawLegends",
            value: function () {
              var n = this,
                i = this.w,
                o = i.config.legend.fontFamily,
                s = i.globals.seriesNames,
                l = i.globals.colors.slice();
              if (i.config.chart.type === "heatmap") {
                var u = i.config.plotOptions.heatmap.colorScale.ranges;
                (s = u.map(function (se) {
                  return se.name ? se.name : se.from + " - " + se.to;
                })),
                  (l = u.map(function (se) {
                    return se.color;
                  }));
              } else this.isBarsDistributed && (s = i.globals.labels.slice());
              i.config.legend.customLegendItems.length &&
                (s = i.config.legend.customLegendItems);
              for (
                var d = i.globals.legendFormatter,
                  f = i.config.legend.inverseOrder,
                  m = f ? s.length - 1 : 0;
                f ? m >= 0 : m <= s.length - 1;
                f ? m-- : m++
              ) {
                var y,
                  x = d(s[m], { seriesIndex: m, w: i }),
                  S = !1,
                  _ = !1;
                if (i.globals.collapsedSeries.length > 0)
                  for (var C = 0; C < i.globals.collapsedSeries.length; C++)
                    i.globals.collapsedSeries[C].index === m && (S = !0);
                if (i.globals.ancillaryCollapsedSeriesIndices.length > 0)
                  for (
                    var E = 0;
                    E < i.globals.ancillaryCollapsedSeriesIndices.length;
                    E++
                  )
                    i.globals.ancillaryCollapsedSeriesIndices[E] === m &&
                      (_ = !0);
                var I = document.createElement("span");
                I.classList.add("apexcharts-legend-marker");
                var H = i.config.legend.markers.offsetX,
                  Y = i.config.legend.markers.offsetY,
                  g = i.config.legend.markers.height,
                  w = i.config.legend.markers.width,
                  A = i.config.legend.markers.strokeWidth,
                  D = i.config.legend.markers.strokeColor,
                  W = i.config.legend.markers.radius,
                  V = I.style;
                (V.background = l[m]),
                  (V.color = l[m]),
                  V.setProperty("background", l[m], "important"),
                  i.config.legend.markers.fillColors &&
                    i.config.legend.markers.fillColors[m] &&
                    (V.background = i.config.legend.markers.fillColors[m]),
                  i.globals.seriesColors[m] !== void 0 &&
                    ((V.background = i.globals.seriesColors[m]),
                    (V.color = i.globals.seriesColors[m])),
                  (V.height = Array.isArray(g)
                    ? parseFloat(g[m]) + "px"
                    : parseFloat(g) + "px"),
                  (V.width = Array.isArray(w)
                    ? parseFloat(w[m]) + "px"
                    : parseFloat(w) + "px"),
                  (V.left =
                    (Array.isArray(H) ? parseFloat(H[m]) : parseFloat(H)) +
                    "px"),
                  (V.top =
                    (Array.isArray(Y) ? parseFloat(Y[m]) : parseFloat(Y)) +
                    "px"),
                  (V.borderWidth = Array.isArray(A) ? A[m] : A),
                  (V.borderColor = Array.isArray(D) ? D[m] : D),
                  (V.borderRadius = Array.isArray(W)
                    ? parseFloat(W[m]) + "px"
                    : parseFloat(W) + "px"),
                  i.config.legend.markers.customHTML &&
                    (Array.isArray(i.config.legend.markers.customHTML)
                      ? i.config.legend.markers.customHTML[m] &&
                        (I.innerHTML = i.config.legend.markers.customHTML[m]())
                      : (I.innerHTML = i.config.legend.markers.customHTML())),
                  B.setAttrs(I, { rel: m + 1, "data:collapsed": S || _ }),
                  (S || _) && I.classList.add("apexcharts-inactive-legend");
                var K = document.createElement("div"),
                  Z = document.createElement("span");
                Z.classList.add("apexcharts-legend-text"),
                  (Z.innerHTML = Array.isArray(x) ? x.join(" ") : x);
                var re = i.config.legend.labels.useSeriesColors
                  ? i.globals.colors[m]
                  : Array.isArray(i.config.legend.labels.colors)
                  ? (y = i.config.legend.labels.colors) === null || y === void 0
                    ? void 0
                    : y[m]
                  : i.config.legend.labels.colors;
                re || (re = i.config.chart.foreColor),
                  (Z.style.color = re),
                  (Z.style.fontSize =
                    parseFloat(i.config.legend.fontSize) + "px"),
                  (Z.style.fontWeight = i.config.legend.fontWeight),
                  (Z.style.fontFamily = o || i.config.chart.fontFamily),
                  B.setAttrs(Z, {
                    rel: m + 1,
                    i: m,
                    "data:default-text": encodeURIComponent(x),
                    "data:collapsed": S || _,
                  }),
                  K.appendChild(I),
                  K.appendChild(Z);
                var ce = new U(this.ctx);
                i.config.legend.showForZeroSeries ||
                  (ce.getSeriesTotalByIndex(m) === 0 &&
                    ce.seriesHaveSameValues(m) &&
                    !ce.isSeriesNull(m) &&
                    i.globals.collapsedSeriesIndices.indexOf(m) === -1 &&
                    i.globals.ancillaryCollapsedSeriesIndices.indexOf(m) ===
                      -1 &&
                    K.classList.add("apexcharts-hidden-zero-series")),
                  i.config.legend.showForNullSeries ||
                    (ce.isSeriesNull(m) &&
                      i.globals.collapsedSeriesIndices.indexOf(m) === -1 &&
                      i.globals.ancillaryCollapsedSeriesIndices.indexOf(m) ===
                        -1 &&
                      K.classList.add("apexcharts-hidden-null-series")),
                  i.globals.dom.elLegendWrap.appendChild(K),
                  i.globals.dom.elLegendWrap.classList.add(
                    "apexcharts-align-".concat(i.config.legend.horizontalAlign),
                  ),
                  i.globals.dom.elLegendWrap.classList.add(
                    "apx-legend-position-" + i.config.legend.position,
                  ),
                  K.classList.add("apexcharts-legend-series"),
                  (K.style.margin = ""
                    .concat(i.config.legend.itemMargin.vertical, "px ")
                    .concat(i.config.legend.itemMargin.horizontal, "px")),
                  (i.globals.dom.elLegendWrap.style.width = i.config.legend
                    .width
                    ? i.config.legend.width + "px"
                    : ""),
                  (i.globals.dom.elLegendWrap.style.height = i.config.legend
                    .height
                    ? i.config.legend.height + "px"
                    : ""),
                  B.setAttrs(K, {
                    rel: m + 1,
                    seriesName: O.escapeString(s[m]),
                    "data:collapsed": S || _,
                  }),
                  (S || _) && K.classList.add("apexcharts-inactive-legend"),
                  i.config.legend.onItemClick.toggleDataSeries ||
                    K.classList.add("apexcharts-no-click");
              }
              i.globals.dom.elWrap.addEventListener(
                "click",
                n.onLegendClick,
                !0,
              ),
                i.config.legend.onItemHover.highlightDataSeries &&
                  i.config.legend.customLegendItems.length === 0 &&
                  (i.globals.dom.elWrap.addEventListener(
                    "mousemove",
                    n.onLegendHovered,
                    !0,
                  ),
                  i.globals.dom.elWrap.addEventListener(
                    "mouseout",
                    n.onLegendHovered,
                    !0,
                  ));
            },
          },
          {
            key: "setLegendWrapXY",
            value: function (n, i) {
              var o = this.w,
                s = o.globals.dom.elLegendWrap,
                l = s.getBoundingClientRect(),
                u = 0,
                d = 0;
              if (o.config.legend.position === "bottom")
                d += o.globals.svgHeight - l.height / 2;
              else if (o.config.legend.position === "top") {
                var f = new sr(this.ctx),
                  m = f.dimHelpers.getTitleSubtitleCoords("title").height,
                  y = f.dimHelpers.getTitleSubtitleCoords("subtitle").height;
                d = d + (m > 0 ? m - 10 : 0) + (y > 0 ? y - 10 : 0);
              }
              (s.style.position = "absolute"),
                (u = u + n + o.config.legend.offsetX),
                (d = d + i + o.config.legend.offsetY),
                (s.style.left = u + "px"),
                (s.style.top = d + "px"),
                o.config.legend.position === "bottom"
                  ? ((s.style.top = "auto"),
                    (s.style.bottom = 5 - o.config.legend.offsetY + "px"))
                  : o.config.legend.position === "right" &&
                    ((s.style.left = "auto"),
                    (s.style.right = 25 + o.config.legend.offsetX + "px")),
                ["width", "height"].forEach(function (x) {
                  s.style[x] &&
                    (s.style[x] = parseInt(o.config.legend[x], 10) + "px");
                });
            },
          },
          {
            key: "legendAlignHorizontal",
            value: function () {
              var n = this.w;
              n.globals.dom.elLegendWrap.style.right = 0;
              var i = this.legendHelpers.getLegendBBox(),
                o = new sr(this.ctx),
                s = o.dimHelpers.getTitleSubtitleCoords("title"),
                l = o.dimHelpers.getTitleSubtitleCoords("subtitle"),
                u = 0;
              n.config.legend.position === "bottom"
                ? (u = -i.clwh / 1.8)
                : n.config.legend.position === "top" &&
                  (u =
                    s.height +
                    l.height +
                    n.config.title.margin +
                    n.config.subtitle.margin -
                    10),
                this.setLegendWrapXY(20, u);
            },
          },
          {
            key: "legendAlignVertical",
            value: function () {
              var n = this.w,
                i = this.legendHelpers.getLegendBBox(),
                o = 0;
              n.config.legend.position === "left" && (o = 20),
                n.config.legend.position === "right" &&
                  (o = n.globals.svgWidth - i.clww - 10),
                this.setLegendWrapXY(o, 20);
            },
          },
          {
            key: "onLegendHovered",
            value: function (n) {
              var i = this.w,
                o =
                  n.target.classList.contains("apexcharts-legend-series") ||
                  n.target.classList.contains("apexcharts-legend-text") ||
                  n.target.classList.contains("apexcharts-legend-marker");
              if (i.config.chart.type === "heatmap" || this.isBarsDistributed) {
                if (o) {
                  var s = parseInt(n.target.getAttribute("rel"), 10) - 1;
                  this.ctx.events.fireEvent("legendHover", [
                    this.ctx,
                    s,
                    this.w,
                  ]),
                    new Be(this.ctx).highlightRangeInSeries(n, n.target);
                }
              } else
                !n.target.classList.contains("apexcharts-inactive-legend") &&
                  o &&
                  new Be(this.ctx).toggleSeriesOnHover(n, n.target);
            },
          },
          {
            key: "onLegendClick",
            value: function (n) {
              var i = this.w;
              if (
                !i.config.legend.customLegendItems.length &&
                (n.target.classList.contains("apexcharts-legend-series") ||
                  n.target.classList.contains("apexcharts-legend-text") ||
                  n.target.classList.contains("apexcharts-legend-marker"))
              ) {
                var o = parseInt(n.target.getAttribute("rel"), 10) - 1,
                  s = n.target.getAttribute("data:collapsed") === "true",
                  l = this.w.config.chart.events.legendClick;
                typeof l == "function" && l(this.ctx, o, this.w),
                  this.ctx.events.fireEvent("legendClick", [
                    this.ctx,
                    o,
                    this.w,
                  ]);
                var u = this.w.config.legend.markers.onClick;
                typeof u == "function" &&
                  n.target.classList.contains("apexcharts-legend-marker") &&
                  (u(this.ctx, o, this.w),
                  this.ctx.events.fireEvent("legendMarkerClick", [
                    this.ctx,
                    o,
                    this.w,
                  ])),
                  i.config.chart.type !== "treemap" &&
                    i.config.chart.type !== "heatmap" &&
                    !this.isBarsDistributed &&
                    i.config.legend.onItemClick.toggleDataSeries &&
                    this.legendHelpers.toggleDataSeries(o, s);
              }
            },
          },
        ]),
        T
      );
    })(),
    Qa = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
        var i = this.w;
        (this.ev = this.w.config.chart.events),
          (this.selectedClass = "apexcharts-selected"),
          (this.localeValues = this.w.globals.locale.toolbar),
          (this.minX = i.globals.minX),
          (this.maxX = i.globals.maxX);
      }
      return (
        v(T, [
          {
            key: "createToolbar",
            value: function () {
              var n = this,
                i = this.w,
                o = function () {
                  return document.createElement("div");
                },
                s = o();
              if (
                (s.setAttribute("class", "apexcharts-toolbar"),
                (s.style.top = i.config.chart.toolbar.offsetY + "px"),
                (s.style.right = 3 - i.config.chart.toolbar.offsetX + "px"),
                i.globals.dom.elWrap.appendChild(s),
                (this.elZoom = o()),
                (this.elZoomIn = o()),
                (this.elZoomOut = o()),
                (this.elPan = o()),
                (this.elSelection = o()),
                (this.elZoomReset = o()),
                (this.elMenuIcon = o()),
                (this.elMenu = o()),
                (this.elCustomIcons = []),
                (this.t = i.config.chart.toolbar.tools),
                Array.isArray(this.t.customIcons))
              )
                for (var l = 0; l < this.t.customIcons.length; l++)
                  this.elCustomIcons.push(o());
              var u = [],
                d = function (x, S, _) {
                  var C = x.toLowerCase();
                  n.t[C] &&
                    i.config.chart.zoom.enabled &&
                    u.push({
                      el: S,
                      icon: typeof n.t[C] == "string" ? n.t[C] : _,
                      title: n.localeValues[x],
                      class: "apexcharts-".concat(C, "-icon"),
                    });
                };
              d(
                "zoomIn",
                this.elZoomIn,
                `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M13 7h-2v4H7v2h4v4h2v-4h4v-2h-4V7zm-1-5C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`,
              ),
                d(
                  "zoomOut",
                  this.elZoomOut,
                  `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M7 11v2h10v-2H7zm5-9C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z"/>
</svg>
`,
                );
              var f = function (x) {
                n.t[x] &&
                  i.config.chart[x].enabled &&
                  u.push({
                    el: x === "zoom" ? n.elZoom : n.elSelection,
                    icon:
                      typeof n.t[x] == "string"
                        ? n.t[x]
                        : x === "zoom"
                        ? `<svg xmlns="http://www.w3.org/2000/svg" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <path d="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/>
    <path d="M0 0h24v24H0V0z" fill="none"/>
    <path d="M12 10h-2v2H9v-2H7V9h2V7h1v2h2v1z"/>
</svg>`
                        : `<svg fill="#6E8192" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M0 0h24v24H0z" fill="none"/>
    <path d="M3 5h2V3c-1.1 0-2 .9-2 2zm0 8h2v-2H3v2zm4 8h2v-2H7v2zM3 9h2V7H3v2zm10-6h-2v2h2V3zm6 0v2h2c0-1.1-.9-2-2-2zM5 21v-2H3c0 1.1.9 2 2 2zm-2-4h2v-2H3v2zM9 3H7v2h2V3zm2 18h2v-2h-2v2zm8-8h2v-2h-2v2zm0 8c1.1 0 2-.9 2-2h-2v2zm0-12h2V7h-2v2zm0 8h2v-2h-2v2zm-4 4h2v-2h-2v2zm0-16h2V3h-2v2z"/>
</svg>`,
                    title:
                      n.localeValues[
                        x === "zoom" ? "selectionZoom" : "selection"
                      ],
                    class: i.globals.isTouchDevice
                      ? "apexcharts-element-hidden"
                      : "apexcharts-".concat(x, "-icon"),
                  });
              };
              f("zoom"),
                f("selection"),
                this.t.pan &&
                  i.config.chart.zoom.enabled &&
                  u.push({
                    el: this.elPan,
                    icon:
                      typeof this.t.pan == "string"
                        ? this.t.pan
                        : `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" fill="#000000" height="24" viewBox="0 0 24 24" width="24">
    <defs>
        <path d="M0 0h24v24H0z" id="a"/>
    </defs>
    <clipPath id="b">
        <use overflow="visible" xlink:href="#a"/>
    </clipPath>
    <path clip-path="url(#b)" d="M23 5.5V20c0 2.2-1.8 4-4 4h-7.3c-1.08 0-2.1-.43-2.85-1.19L1 14.83s1.26-1.23 1.3-1.25c.22-.19.49-.29.79-.29.22 0 .42.06.6.16.04.01 4.31 2.46 4.31 2.46V4c0-.83.67-1.5 1.5-1.5S11 3.17 11 4v7h1V1.5c0-.83.67-1.5 1.5-1.5S15 .67 15 1.5V11h1V2.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5V11h1V5.5c0-.83.67-1.5 1.5-1.5s1.5.67 1.5 1.5z"/>
</svg>`,
                    title: this.localeValues.pan,
                    class: i.globals.isTouchDevice
                      ? "apexcharts-element-hidden"
                      : "apexcharts-pan-icon",
                  }),
                d(
                  "reset",
                  this.elZoomReset,
                  `<svg fill="#000000" height="24" viewBox="0 0 24 24" width="24" xmlns="http://www.w3.org/2000/svg">
    <path d="M10 20v-6h4v6h5v-8h3L12 3 2 12h3v8z"/>
    <path d="M0 0h24v24H0z" fill="none"/>
</svg>`,
                ),
                this.t.download &&
                  u.push({
                    el: this.elMenuIcon,
                    icon:
                      typeof this.t.download == "string"
                        ? this.t.download
                        : '<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path fill="none" d="M0 0h24v24H0V0z"/><path d="M3 18h18v-2H3v2zm0-5h18v-2H3v2zm0-7v2h18V6H3z"/></svg>',
                    title: this.localeValues.menu,
                    class: "apexcharts-menu-icon",
                  });
              for (var m = 0; m < this.elCustomIcons.length; m++)
                u.push({
                  el: this.elCustomIcons[m],
                  icon: this.t.customIcons[m].icon,
                  title: this.t.customIcons[m].title,
                  index: this.t.customIcons[m].index,
                  class:
                    "apexcharts-toolbar-custom-icon " +
                    this.t.customIcons[m].class,
                });
              u.forEach(function (x, S) {
                x.index && O.moveIndexInArray(u, S, x.index);
              });
              for (var y = 0; y < u.length; y++)
                B.setAttrs(u[y].el, { class: u[y].class, title: u[y].title }),
                  (u[y].el.innerHTML = u[y].icon),
                  s.appendChild(u[y].el);
              this._createHamburgerMenu(s),
                i.globals.zoomEnabled
                  ? this.elZoom.classList.add(this.selectedClass)
                  : i.globals.panEnabled
                  ? this.elPan.classList.add(this.selectedClass)
                  : i.globals.selectionEnabled &&
                    this.elSelection.classList.add(this.selectedClass),
                this.addToolbarEventListeners();
            },
          },
          {
            key: "_createHamburgerMenu",
            value: function (n) {
              (this.elMenuItems = []),
                n.appendChild(this.elMenu),
                B.setAttrs(this.elMenu, { class: "apexcharts-menu" });
              var i = [
                { name: "exportSVG", title: this.localeValues.exportToSVG },
                { name: "exportPNG", title: this.localeValues.exportToPNG },
                { name: "exportCSV", title: this.localeValues.exportToCSV },
              ];
              this.w.globals.allSeriesHasEqualX || i.splice(2, 1);
              for (var o = 0; o < i.length; o++)
                this.elMenuItems.push(document.createElement("div")),
                  (this.elMenuItems[o].innerHTML = i[o].title),
                  B.setAttrs(this.elMenuItems[o], {
                    class: "apexcharts-menu-item ".concat(i[o].name),
                    title: i[o].title,
                  }),
                  this.elMenu.appendChild(this.elMenuItems[o]);
            },
          },
          {
            key: "addToolbarEventListeners",
            value: function () {
              var n = this;
              this.elZoomReset.addEventListener(
                "click",
                this.handleZoomReset.bind(this),
              ),
                this.elSelection.addEventListener(
                  "click",
                  this.toggleZoomSelection.bind(this, "selection"),
                ),
                this.elZoom.addEventListener(
                  "click",
                  this.toggleZoomSelection.bind(this, "zoom"),
                ),
                this.elZoomIn.addEventListener(
                  "click",
                  this.handleZoomIn.bind(this),
                ),
                this.elZoomOut.addEventListener(
                  "click",
                  this.handleZoomOut.bind(this),
                ),
                this.elPan.addEventListener(
                  "click",
                  this.togglePanning.bind(this),
                ),
                this.elMenuIcon.addEventListener(
                  "click",
                  this.toggleMenu.bind(this),
                ),
                this.elMenuItems.forEach(function (o) {
                  o.classList.contains("exportSVG")
                    ? o.addEventListener(
                        "click",
                        n.handleDownload.bind(n, "svg"),
                      )
                    : o.classList.contains("exportPNG")
                    ? o.addEventListener(
                        "click",
                        n.handleDownload.bind(n, "png"),
                      )
                    : o.classList.contains("exportCSV") &&
                      o.addEventListener(
                        "click",
                        n.handleDownload.bind(n, "csv"),
                      );
                });
              for (var i = 0; i < this.t.customIcons.length; i++)
                this.elCustomIcons[i].addEventListener(
                  "click",
                  this.t.customIcons[i].click.bind(this, this.ctx, this.ctx.w),
                );
            },
          },
          {
            key: "toggleZoomSelection",
            value: function (n) {
              this.ctx.getSyncedCharts().forEach(function (i) {
                i.ctx.toolbar.toggleOtherControls();
                var o =
                    n === "selection"
                      ? i.ctx.toolbar.elSelection
                      : i.ctx.toolbar.elZoom,
                  s = n === "selection" ? "selectionEnabled" : "zoomEnabled";
                (i.w.globals[s] = !i.w.globals[s]),
                  o.classList.contains(i.ctx.toolbar.selectedClass)
                    ? o.classList.remove(i.ctx.toolbar.selectedClass)
                    : o.classList.add(i.ctx.toolbar.selectedClass);
              });
            },
          },
          {
            key: "getToolbarIconsReference",
            value: function () {
              var n = this.w;
              this.elZoom ||
                (this.elZoom = n.globals.dom.baseEl.querySelector(
                  ".apexcharts-zoom-icon",
                )),
                this.elPan ||
                  (this.elPan = n.globals.dom.baseEl.querySelector(
                    ".apexcharts-pan-icon",
                  )),
                this.elSelection ||
                  (this.elSelection = n.globals.dom.baseEl.querySelector(
                    ".apexcharts-selection-icon",
                  ));
            },
          },
          {
            key: "enableZoomPanFromToolbar",
            value: function (n) {
              this.toggleOtherControls(),
                n === "pan"
                  ? (this.w.globals.panEnabled = !0)
                  : (this.w.globals.zoomEnabled = !0);
              var i = n === "pan" ? this.elPan : this.elZoom,
                o = n === "pan" ? this.elZoom : this.elPan;
              i && i.classList.add(this.selectedClass),
                o && o.classList.remove(this.selectedClass);
            },
          },
          {
            key: "togglePanning",
            value: function () {
              this.ctx.getSyncedCharts().forEach(function (n) {
                n.ctx.toolbar.toggleOtherControls(),
                  (n.w.globals.panEnabled = !n.w.globals.panEnabled),
                  n.ctx.toolbar.elPan.classList.contains(
                    n.ctx.toolbar.selectedClass,
                  )
                    ? n.ctx.toolbar.elPan.classList.remove(
                        n.ctx.toolbar.selectedClass,
                      )
                    : n.ctx.toolbar.elPan.classList.add(
                        n.ctx.toolbar.selectedClass,
                      );
              });
            },
          },
          {
            key: "toggleOtherControls",
            value: function () {
              var n = this,
                i = this.w;
              (i.globals.panEnabled = !1),
                (i.globals.zoomEnabled = !1),
                (i.globals.selectionEnabled = !1),
                this.getToolbarIconsReference(),
                [this.elPan, this.elSelection, this.elZoom].forEach(
                  function (o) {
                    o && o.classList.remove(n.selectedClass);
                  },
                );
            },
          },
          {
            key: "handleZoomIn",
            value: function () {
              var n = this.w;
              n.globals.isRangeBar &&
                ((this.minX = n.globals.minY), (this.maxX = n.globals.maxY));
              var i = (this.minX + this.maxX) / 2,
                o = (this.minX + i) / 2,
                s = (this.maxX + i) / 2,
                l = this._getNewMinXMaxX(o, s);
              n.globals.disableZoomIn || this.zoomUpdateOptions(l.minX, l.maxX);
            },
          },
          {
            key: "handleZoomOut",
            value: function () {
              var n = this.w;
              if (
                (n.globals.isRangeBar &&
                  ((this.minX = n.globals.minY), (this.maxX = n.globals.maxY)),
                !(
                  n.config.xaxis.type === "datetime" &&
                  new Date(this.minX).getUTCFullYear() < 1e3
                ))
              ) {
                var i = (this.minX + this.maxX) / 2,
                  o = this.minX - (i - this.minX),
                  s = this.maxX - (i - this.maxX),
                  l = this._getNewMinXMaxX(o, s);
                n.globals.disableZoomOut ||
                  this.zoomUpdateOptions(l.minX, l.maxX);
              }
            },
          },
          {
            key: "_getNewMinXMaxX",
            value: function (n, i) {
              var o = this.w.config.xaxis.convertedCatToNumeric;
              return {
                minX: o ? Math.floor(n) : n,
                maxX: o ? Math.floor(i) : i,
              };
            },
          },
          {
            key: "zoomUpdateOptions",
            value: function (n, i) {
              var o = this.w;
              if (n !== void 0 || i !== void 0) {
                if (
                  !(
                    o.config.xaxis.convertedCatToNumeric &&
                    (n < 1 && ((n = 1), (i = o.globals.dataPoints)), i - n < 2)
                  )
                ) {
                  var s = { min: n, max: i },
                    l = this.getBeforeZoomRange(s);
                  l && (s = l.xaxis);
                  var u = { xaxis: s },
                    d = O.clone(o.globals.initialConfig.yaxis);
                  o.config.chart.zoom.autoScaleYaxis &&
                    (d = new vt(this.ctx).autoScaleY(this.ctx, d, {
                      xaxis: s,
                    })),
                    o.config.chart.group || (u.yaxis = d),
                    (this.w.globals.zoomed = !0),
                    this.ctx.updateHelpers._updateOptions(
                      u,
                      !1,
                      this.w.config.chart.animations.dynamicAnimation.enabled,
                    ),
                    this.zoomCallback(s, d);
                }
              } else this.handleZoomReset();
            },
          },
          {
            key: "zoomCallback",
            value: function (n, i) {
              typeof this.ev.zoomed == "function" &&
                this.ev.zoomed(this.ctx, { xaxis: n, yaxis: i });
            },
          },
          {
            key: "getBeforeZoomRange",
            value: function (n, i) {
              var o = null;
              return (
                typeof this.ev.beforeZoom == "function" &&
                  (o = this.ev.beforeZoom(this, { xaxis: n, yaxis: i })),
                o
              );
            },
          },
          {
            key: "toggleMenu",
            value: function () {
              var n = this;
              window.setTimeout(function () {
                n.elMenu.classList.contains("apexcharts-menu-open")
                  ? n.elMenu.classList.remove("apexcharts-menu-open")
                  : n.elMenu.classList.add("apexcharts-menu-open");
              }, 0);
            },
          },
          {
            key: "handleDownload",
            value: function (n) {
              var i = this.w,
                o = new Xe(this.ctx);
              switch (n) {
                case "svg":
                  o.exportToSVG(this.ctx);
                  break;
                case "png":
                  o.exportToPng(this.ctx);
                  break;
                case "csv":
                  o.exportToCSV({
                    series: i.config.series,
                    columnDelimiter:
                      i.config.chart.toolbar.export.csv.columnDelimiter,
                  });
              }
            },
          },
          {
            key: "handleZoomReset",
            value: function (n) {
              this.ctx.getSyncedCharts().forEach(function (i) {
                var o = i.w;
                if (
                  ((o.globals.lastXAxis.min =
                    o.globals.initialConfig.xaxis.min),
                  (o.globals.lastXAxis.max = o.globals.initialConfig.xaxis.max),
                  i.updateHelpers.revertDefaultAxisMinMax(),
                  typeof o.config.chart.events.beforeResetZoom == "function")
                ) {
                  var s = o.config.chart.events.beforeResetZoom(i, o);
                  s && i.updateHelpers.revertDefaultAxisMinMax(s);
                }
                typeof o.config.chart.events.zoomed == "function" &&
                  i.ctx.toolbar.zoomCallback({
                    min: o.config.xaxis.min,
                    max: o.config.xaxis.max,
                  }),
                  (o.globals.zoomed = !1);
                var l = i.ctx.series.emptyCollapsedSeries(
                  O.clone(o.globals.initialSeries),
                );
                i.updateHelpers._updateSeries(
                  l,
                  o.config.chart.animations.dynamicAnimation.enabled,
                );
              });
            },
          },
          {
            key: "destroy",
            value: function () {
              (this.elZoom = null),
                (this.elZoomIn = null),
                (this.elZoomOut = null),
                (this.elPan = null),
                (this.elSelection = null),
                (this.elZoomReset = null),
                (this.elMenuIcon = null);
            },
          },
        ]),
        T
      );
    })(),
    jd = (function (T) {
      P(i, Qa);
      var n = z(i);
      function i(o) {
        var s;
        return (
          h(this, i),
          ((s = n.call(this, o)).ctx = o),
          (s.w = o.w),
          (s.dragged = !1),
          (s.graphics = new B(s.ctx)),
          (s.eventList = [
            "mousedown",
            "mouseleave",
            "mousemove",
            "touchstart",
            "touchmove",
            "mouseup",
            "touchend",
          ]),
          (s.clientX = 0),
          (s.clientY = 0),
          (s.startX = 0),
          (s.endX = 0),
          (s.dragX = 0),
          (s.startY = 0),
          (s.endY = 0),
          (s.dragY = 0),
          (s.moveDirection = "none"),
          s
        );
      }
      return (
        v(i, [
          {
            key: "init",
            value: function (o) {
              var s = this,
                l = o.xyRatios,
                u = this.w,
                d = this;
              (this.xyRatios = l),
                (this.zoomRect = this.graphics.drawRect(0, 0, 0, 0)),
                (this.selectionRect = this.graphics.drawRect(0, 0, 0, 0)),
                (this.gridRect =
                  u.globals.dom.baseEl.querySelector(".apexcharts-grid")),
                this.zoomRect.node.classList.add("apexcharts-zoom-rect"),
                this.selectionRect.node.classList.add(
                  "apexcharts-selection-rect",
                ),
                u.globals.dom.elGraphical.add(this.zoomRect),
                u.globals.dom.elGraphical.add(this.selectionRect),
                u.config.chart.selection.type === "x"
                  ? (this.slDraggableRect = this.selectionRect
                      .draggable({
                        minX: 0,
                        minY: 0,
                        maxX: u.globals.gridWidth,
                        maxY: u.globals.gridHeight,
                      })
                      .on(
                        "dragmove",
                        this.selectionDragging.bind(this, "dragging"),
                      ))
                  : u.config.chart.selection.type === "y"
                  ? (this.slDraggableRect = this.selectionRect
                      .draggable({ minX: 0, maxX: u.globals.gridWidth })
                      .on(
                        "dragmove",
                        this.selectionDragging.bind(this, "dragging"),
                      ))
                  : (this.slDraggableRect = this.selectionRect
                      .draggable()
                      .on(
                        "dragmove",
                        this.selectionDragging.bind(this, "dragging"),
                      )),
                this.preselectedSelection(),
                (this.hoverArea = u.globals.dom.baseEl.querySelector(
                  "".concat(u.globals.chartClass, " .apexcharts-svg"),
                )),
                this.hoverArea.classList.add("apexcharts-zoomable"),
                this.eventList.forEach(function (f) {
                  s.hoverArea.addEventListener(f, d.svgMouseEvents.bind(d, l), {
                    capture: !1,
                    passive: !0,
                  });
                });
            },
          },
          {
            key: "destroy",
            value: function () {
              this.slDraggableRect &&
                (this.slDraggableRect.draggable(!1),
                this.slDraggableRect.off(),
                this.selectionRect.off()),
                (this.selectionRect = null),
                (this.zoomRect = null),
                (this.gridRect = null);
            },
          },
          {
            key: "svgMouseEvents",
            value: function (o, s) {
              var l = this.w,
                u = this,
                d = this.ctx.toolbar,
                f = l.globals.zoomEnabled
                  ? l.config.chart.zoom.type
                  : l.config.chart.selection.type,
                m = l.config.chart.toolbar.autoSelected;
              if (
                (s.shiftKey
                  ? ((this.shiftWasPressed = !0),
                    d.enableZoomPanFromToolbar(m === "pan" ? "zoom" : "pan"))
                  : this.shiftWasPressed &&
                    (d.enableZoomPanFromToolbar(m),
                    (this.shiftWasPressed = !1)),
                s.target)
              ) {
                var y,
                  x = s.target.classList;
                if (
                  (s.target.parentNode &&
                    s.target.parentNode !== null &&
                    (y = s.target.parentNode.classList),
                  !(
                    x.contains("apexcharts-selection-rect") ||
                    x.contains("apexcharts-legend-marker") ||
                    x.contains("apexcharts-legend-text") ||
                    (y && y.contains("apexcharts-toolbar"))
                  ))
                ) {
                  if (
                    ((u.clientX =
                      s.type === "touchmove" || s.type === "touchstart"
                        ? s.touches[0].clientX
                        : s.type === "touchend"
                        ? s.changedTouches[0].clientX
                        : s.clientX),
                    (u.clientY =
                      s.type === "touchmove" || s.type === "touchstart"
                        ? s.touches[0].clientY
                        : s.type === "touchend"
                        ? s.changedTouches[0].clientY
                        : s.clientY),
                    s.type === "mousedown" && s.which === 1)
                  ) {
                    var S = u.gridRect.getBoundingClientRect();
                    (u.startX = u.clientX - S.left),
                      (u.startY = u.clientY - S.top),
                      (u.dragged = !1),
                      (u.w.globals.mousedown = !0);
                  }
                  if (
                    (((s.type === "mousemove" && s.which === 1) ||
                      s.type === "touchmove") &&
                      ((u.dragged = !0),
                      l.globals.panEnabled
                        ? ((l.globals.selection = null),
                          u.w.globals.mousedown &&
                            u.panDragging({
                              context: u,
                              zoomtype: f,
                              xyRatios: o,
                            }))
                        : ((u.w.globals.mousedown && l.globals.zoomEnabled) ||
                            (u.w.globals.mousedown &&
                              l.globals.selectionEnabled)) &&
                          (u.selection = u.selectionDrawing({
                            context: u,
                            zoomtype: f,
                          }))),
                    s.type === "mouseup" ||
                      s.type === "touchend" ||
                      s.type === "mouseleave")
                  ) {
                    var _ = u.gridRect.getBoundingClientRect();
                    u.w.globals.mousedown &&
                      ((u.endX = u.clientX - _.left),
                      (u.endY = u.clientY - _.top),
                      (u.dragX = Math.abs(u.endX - u.startX)),
                      (u.dragY = Math.abs(u.endY - u.startY)),
                      (l.globals.zoomEnabled || l.globals.selectionEnabled) &&
                        u.selectionDrawn({ context: u, zoomtype: f }),
                      l.globals.panEnabled &&
                        l.config.xaxis.convertedCatToNumeric &&
                        u.delayedPanScrolled()),
                      l.globals.zoomEnabled &&
                        u.hideSelectionRect(this.selectionRect),
                      (u.dragged = !1),
                      (u.w.globals.mousedown = !1);
                  }
                  this.makeSelectionRectDraggable();
                }
              }
            },
          },
          {
            key: "makeSelectionRectDraggable",
            value: function () {
              var o = this.w;
              if (this.selectionRect) {
                var s = this.selectionRect.node.getBoundingClientRect();
                s.width > 0 &&
                  s.height > 0 &&
                  this.slDraggableRect
                    .selectize({
                      points: "l, r",
                      pointSize: 8,
                      pointType: "rect",
                    })
                    .resize({
                      constraint: {
                        minX: 0,
                        minY: 0,
                        maxX: o.globals.gridWidth,
                        maxY: o.globals.gridHeight,
                      },
                    })
                    .on(
                      "resizing",
                      this.selectionDragging.bind(this, "resizing"),
                    );
              }
            },
          },
          {
            key: "preselectedSelection",
            value: function () {
              var o = this.w,
                s = this.xyRatios;
              if (!o.globals.zoomEnabled) {
                if (
                  o.globals.selection !== void 0 &&
                  o.globals.selection !== null
                )
                  this.drawSelectionRect(o.globals.selection);
                else if (
                  o.config.chart.selection.xaxis.min !== void 0 &&
                  o.config.chart.selection.xaxis.max !== void 0
                ) {
                  var l =
                      (o.config.chart.selection.xaxis.min - o.globals.minX) /
                      s.xRatio,
                    u = {
                      x: l,
                      y: 0,
                      width:
                        o.globals.gridWidth -
                        (o.globals.maxX - o.config.chart.selection.xaxis.max) /
                          s.xRatio -
                        l,
                      height: o.globals.gridHeight,
                      translateX: 0,
                      translateY: 0,
                      selectionEnabled: !0,
                    };
                  this.drawSelectionRect(u),
                    this.makeSelectionRectDraggable(),
                    typeof o.config.chart.events.selection == "function" &&
                      o.config.chart.events.selection(this.ctx, {
                        xaxis: {
                          min: o.config.chart.selection.xaxis.min,
                          max: o.config.chart.selection.xaxis.max,
                        },
                        yaxis: {},
                      });
                }
              }
            },
          },
          {
            key: "drawSelectionRect",
            value: function (o) {
              var s = o.x,
                l = o.y,
                u = o.width,
                d = o.height,
                f = o.translateX,
                m = f === void 0 ? 0 : f,
                y = o.translateY,
                x = y === void 0 ? 0 : y,
                S = this.w,
                _ = this.zoomRect,
                C = this.selectionRect;
              if (this.dragged || S.globals.selection !== null) {
                var E = { transform: "translate(" + m + ", " + x + ")" };
                S.globals.zoomEnabled &&
                  this.dragged &&
                  (u < 0 && (u = 1),
                  _.attr({
                    x: s,
                    y: l,
                    width: u,
                    height: d,
                    fill: S.config.chart.zoom.zoomedArea.fill.color,
                    "fill-opacity": S.config.chart.zoom.zoomedArea.fill.opacity,
                    stroke: S.config.chart.zoom.zoomedArea.stroke.color,
                    "stroke-width": S.config.chart.zoom.zoomedArea.stroke.width,
                    "stroke-opacity":
                      S.config.chart.zoom.zoomedArea.stroke.opacity,
                  }),
                  B.setAttrs(_.node, E)),
                  S.globals.selectionEnabled &&
                    (C.attr({
                      x: s,
                      y: l,
                      width: u > 0 ? u : 0,
                      height: d > 0 ? d : 0,
                      fill: S.config.chart.selection.fill.color,
                      "fill-opacity": S.config.chart.selection.fill.opacity,
                      stroke: S.config.chart.selection.stroke.color,
                      "stroke-width": S.config.chart.selection.stroke.width,
                      "stroke-dasharray":
                        S.config.chart.selection.stroke.dashArray,
                      "stroke-opacity": S.config.chart.selection.stroke.opacity,
                    }),
                    B.setAttrs(C.node, E));
              }
            },
          },
          {
            key: "hideSelectionRect",
            value: function (o) {
              o && o.attr({ x: 0, y: 0, width: 0, height: 0 });
            },
          },
          {
            key: "selectionDrawing",
            value: function (o) {
              var s = o.context,
                l = o.zoomtype,
                u = this.w,
                d = s,
                f = this.gridRect.getBoundingClientRect(),
                m = d.startX - 1,
                y = d.startY,
                x = !1,
                S = !1,
                _ = d.clientX - f.left - m,
                C = d.clientY - f.top - y,
                E = {};
              return (
                Math.abs(_ + m) > u.globals.gridWidth
                  ? (_ = u.globals.gridWidth - m)
                  : d.clientX - f.left < 0 && (_ = m),
                m > d.clientX - f.left && ((x = !0), (_ = Math.abs(_))),
                y > d.clientY - f.top && ((S = !0), (C = Math.abs(C))),
                (E =
                  l === "x"
                    ? {
                        x: x ? m - _ : m,
                        y: 0,
                        width: _,
                        height: u.globals.gridHeight,
                      }
                    : l === "y"
                    ? {
                        x: 0,
                        y: S ? y - C : y,
                        width: u.globals.gridWidth,
                        height: C,
                      }
                    : {
                        x: x ? m - _ : m,
                        y: S ? y - C : y,
                        width: _,
                        height: C,
                      }),
                d.drawSelectionRect(E),
                d.selectionDragging("resizing"),
                E
              );
            },
          },
          {
            key: "selectionDragging",
            value: function (o, s) {
              var l = this,
                u = this.w,
                d = this.xyRatios,
                f = this.selectionRect,
                m = 0;
              o === "resizing" && (m = 30);
              var y = function (S) {
                  return parseFloat(f.node.getAttribute(S));
                },
                x = {
                  x: y("x"),
                  y: y("y"),
                  width: y("width"),
                  height: y("height"),
                };
              (u.globals.selection = x),
                typeof u.config.chart.events.selection == "function" &&
                  u.globals.selectionEnabled &&
                  (clearTimeout(this.w.globals.selectionResizeTimer),
                  (this.w.globals.selectionResizeTimer = window.setTimeout(
                    function () {
                      var S = l.gridRect.getBoundingClientRect(),
                        _ = f.node.getBoundingClientRect(),
                        C = {
                          xaxis: {
                            min:
                              u.globals.xAxisScale.niceMin +
                              (_.left - S.left) * d.xRatio,
                            max:
                              u.globals.xAxisScale.niceMin +
                              (_.right - S.left) * d.xRatio,
                          },
                          yaxis: {
                            min:
                              u.globals.yAxisScale[0].niceMin +
                              (S.bottom - _.bottom) * d.yRatio[0],
                            max:
                              u.globals.yAxisScale[0].niceMax -
                              (_.top - S.top) * d.yRatio[0],
                          },
                        };
                      u.config.chart.events.selection(l.ctx, C),
                        u.config.chart.brush.enabled &&
                          u.config.chart.events.brushScrolled !== void 0 &&
                          u.config.chart.events.brushScrolled(l.ctx, C);
                    },
                    m,
                  )));
            },
          },
          {
            key: "selectionDrawn",
            value: function (o) {
              var s = o.context,
                l = o.zoomtype,
                u = this.w,
                d = s,
                f = this.xyRatios,
                m = this.ctx.toolbar;
              if (d.startX > d.endX) {
                var y = d.startX;
                (d.startX = d.endX), (d.endX = y);
              }
              if (d.startY > d.endY) {
                var x = d.startY;
                (d.startY = d.endY), (d.endY = x);
              }
              var S = void 0,
                _ = void 0;
              u.globals.isRangeBar
                ? ((S =
                    u.globals.yAxisScale[0].niceMin +
                    d.startX * f.invertedYRatio),
                  (_ =
                    u.globals.yAxisScale[0].niceMin +
                    d.endX * f.invertedYRatio))
                : ((S = u.globals.xAxisScale.niceMin + d.startX * f.xRatio),
                  (_ = u.globals.xAxisScale.niceMin + d.endX * f.xRatio));
              var C = [],
                E = [];
              if (
                (u.config.yaxis.forEach(function (W, V) {
                  C.push(
                    u.globals.yAxisScale[V].niceMax - f.yRatio[V] * d.startY,
                  ),
                    E.push(
                      u.globals.yAxisScale[V].niceMax - f.yRatio[V] * d.endY,
                    );
                }),
                d.dragged && (d.dragX > 10 || d.dragY > 10) && S !== _)
              ) {
                if (u.globals.zoomEnabled) {
                  var I = O.clone(u.globals.initialConfig.yaxis),
                    H = O.clone(u.globals.initialConfig.xaxis);
                  if (
                    ((u.globals.zoomed = !0),
                    u.config.xaxis.convertedCatToNumeric &&
                      ((S = Math.floor(S)),
                      (_ = Math.floor(_)),
                      S < 1 && ((S = 1), (_ = u.globals.dataPoints)),
                      _ - S < 2 && (_ = S + 1)),
                    (l !== "xy" && l !== "x") || (H = { min: S, max: _ }),
                    (l !== "xy" && l !== "y") ||
                      I.forEach(function (W, V) {
                        (I[V].min = E[V]), (I[V].max = C[V]);
                      }),
                    u.config.chart.zoom.autoScaleYaxis)
                  ) {
                    var Y = new vt(d.ctx);
                    I = Y.autoScaleY(d.ctx, I, { xaxis: H });
                  }
                  if (m) {
                    var g = m.getBeforeZoomRange(H, I);
                    g &&
                      ((H = g.xaxis ? g.xaxis : H),
                      (I = g.yaxis ? g.yaxis : I));
                  }
                  var w = { xaxis: H };
                  u.config.chart.group || (w.yaxis = I),
                    d.ctx.updateHelpers._updateOptions(
                      w,
                      !1,
                      d.w.config.chart.animations.dynamicAnimation.enabled,
                    ),
                    typeof u.config.chart.events.zoomed == "function" &&
                      m.zoomCallback(H, I);
                } else if (u.globals.selectionEnabled) {
                  var A,
                    D = null;
                  (A = { min: S, max: _ }),
                    (l !== "xy" && l !== "y") ||
                      (D = O.clone(u.config.yaxis)).forEach(function (W, V) {
                        (D[V].min = E[V]), (D[V].max = C[V]);
                      }),
                    (u.globals.selection = d.selection),
                    typeof u.config.chart.events.selection == "function" &&
                      u.config.chart.events.selection(d.ctx, {
                        xaxis: A,
                        yaxis: D,
                      });
                }
              }
            },
          },
          {
            key: "panDragging",
            value: function (o) {
              var s = o.context,
                l = this.w,
                u = s;
              if (l.globals.lastClientPosition.x !== void 0) {
                var d = l.globals.lastClientPosition.x - u.clientX,
                  f = l.globals.lastClientPosition.y - u.clientY;
                Math.abs(d) > Math.abs(f) && d > 0
                  ? (this.moveDirection = "left")
                  : Math.abs(d) > Math.abs(f) && d < 0
                  ? (this.moveDirection = "right")
                  : Math.abs(f) > Math.abs(d) && f > 0
                  ? (this.moveDirection = "up")
                  : Math.abs(f) > Math.abs(d) &&
                    f < 0 &&
                    (this.moveDirection = "down");
              }
              l.globals.lastClientPosition = { x: u.clientX, y: u.clientY };
              var m = l.globals.isRangeBar ? l.globals.minY : l.globals.minX,
                y = l.globals.isRangeBar ? l.globals.maxY : l.globals.maxX;
              l.config.xaxis.convertedCatToNumeric || u.panScrolled(m, y);
            },
          },
          {
            key: "delayedPanScrolled",
            value: function () {
              var o = this.w,
                s = o.globals.minX,
                l = o.globals.maxX,
                u = (o.globals.maxX - o.globals.minX) / 2;
              this.moveDirection === "left"
                ? ((s = o.globals.minX + u), (l = o.globals.maxX + u))
                : this.moveDirection === "right" &&
                  ((s = o.globals.minX - u), (l = o.globals.maxX - u)),
                (s = Math.floor(s)),
                (l = Math.floor(l)),
                this.updateScrolledChart({ xaxis: { min: s, max: l } }, s, l);
            },
          },
          {
            key: "panScrolled",
            value: function (o, s) {
              var l = this.w,
                u = this.xyRatios,
                d = O.clone(l.globals.initialConfig.yaxis),
                f = u.xRatio,
                m = l.globals.minX,
                y = l.globals.maxX;
              l.globals.isRangeBar &&
                ((f = u.invertedYRatio),
                (m = l.globals.minY),
                (y = l.globals.maxY)),
                this.moveDirection === "left"
                  ? ((o = m + (l.globals.gridWidth / 15) * f),
                    (s = y + (l.globals.gridWidth / 15) * f))
                  : this.moveDirection === "right" &&
                    ((o = m - (l.globals.gridWidth / 15) * f),
                    (s = y - (l.globals.gridWidth / 15) * f)),
                l.globals.isRangeBar ||
                  ((o < l.globals.initialMinX || s > l.globals.initialMaxX) &&
                    ((o = m), (s = y)));
              var x = { min: o, max: s };
              l.config.chart.zoom.autoScaleYaxis &&
                (d = new vt(this.ctx).autoScaleY(this.ctx, d, { xaxis: x }));
              var S = { xaxis: { min: o, max: s } };
              l.config.chart.group || (S.yaxis = d),
                this.updateScrolledChart(S, o, s);
            },
          },
          {
            key: "updateScrolledChart",
            value: function (o, s, l) {
              var u = this.w;
              this.ctx.updateHelpers._updateOptions(o, !1, !1),
                typeof u.config.chart.events.scrolled == "function" &&
                  u.config.chart.events.scrolled(this.ctx, {
                    xaxis: { min: s, max: l },
                  });
            },
          },
        ]),
        i
      );
    })(),
    Ja = (function () {
      function T(n) {
        h(this, T), (this.w = n.w), (this.ttCtx = n), (this.ctx = n.ctx);
      }
      return (
        v(T, [
          {
            key: "getNearestValues",
            value: function (n) {
              var i = n.hoverArea,
                o = n.elGrid,
                s = n.clientX,
                l = n.clientY,
                u = this.w,
                d = o.getBoundingClientRect(),
                f = d.width,
                m = d.height,
                y = f / (u.globals.dataPoints - 1),
                x = m / u.globals.dataPoints,
                S = this.hasBars();
              (!u.globals.comboCharts && !S) ||
                u.config.xaxis.convertedCatToNumeric ||
                (y = f / u.globals.dataPoints);
              var _ = s - d.left - u.globals.barPadForNumericAxis,
                C = l - d.top;
              _ < 0 || C < 0 || _ > f || C > m
                ? (i.classList.remove("hovering-zoom"),
                  i.classList.remove("hovering-pan"))
                : u.globals.zoomEnabled
                ? (i.classList.remove("hovering-pan"),
                  i.classList.add("hovering-zoom"))
                : u.globals.panEnabled &&
                  (i.classList.remove("hovering-zoom"),
                  i.classList.add("hovering-pan"));
              var E = Math.round(_ / y),
                I = Math.floor(C / x);
              S &&
                !u.config.xaxis.convertedCatToNumeric &&
                ((E = Math.ceil(_ / y)), (E -= 1));
              var H = null,
                Y = null,
                g = u.globals.seriesXvalues.map(function (V) {
                  return V.filter(function (K) {
                    return O.isNumber(K);
                  });
                }),
                w = u.globals.seriesYvalues.map(function (V) {
                  return V.filter(function (K) {
                    return O.isNumber(K);
                  });
                });
              if (u.globals.isXNumeric) {
                var A = this.ttCtx.getElGrid().getBoundingClientRect(),
                  D = _ * (A.width / f),
                  W = C * (A.height / m);
                (H = (Y = this.closestInMultiArray(D, W, g, w)).index),
                  (E = Y.j),
                  H !== null &&
                    ((g = u.globals.seriesXvalues[H]),
                    (E = (Y = this.closestInArray(D, g)).index));
              }
              return (
                (u.globals.capturedSeriesIndex = H === null ? -1 : H),
                (!E || E < 1) && (E = 0),
                u.globals.isBarHorizontal
                  ? (u.globals.capturedDataPointIndex = I)
                  : (u.globals.capturedDataPointIndex = E),
                {
                  capturedSeries: H,
                  j: u.globals.isBarHorizontal ? I : E,
                  hoverX: _,
                  hoverY: C,
                }
              );
            },
          },
          {
            key: "closestInMultiArray",
            value: function (n, i, o, s) {
              var l = this.w,
                u = 0,
                d = null,
                f = -1;
              l.globals.series.length > 1
                ? (u = this.getFirstActiveXArray(o))
                : (d = 0);
              var m = o[u][0],
                y = Math.abs(n - m);
              if (
                (o.forEach(function (_) {
                  _.forEach(function (C, E) {
                    var I = Math.abs(n - C);
                    I <= y && ((y = I), (f = E));
                  });
                }),
                f !== -1)
              ) {
                var x = s[u][f],
                  S = Math.abs(i - x);
                (d = u),
                  s.forEach(function (_, C) {
                    var E = Math.abs(i - _[f]);
                    E <= S && ((S = E), (d = C));
                  });
              }
              return { index: d, j: f };
            },
          },
          {
            key: "getFirstActiveXArray",
            value: function (n) {
              for (
                var i = this.w,
                  o = 0,
                  s = n.map(function (u, d) {
                    return u.length > 0 ? d : -1;
                  }),
                  l = 0;
                l < s.length;
                l++
              )
                if (
                  s[l] !== -1 &&
                  i.globals.collapsedSeriesIndices.indexOf(l) === -1 &&
                  i.globals.ancillaryCollapsedSeriesIndices.indexOf(l) === -1
                ) {
                  o = s[l];
                  break;
                }
              return o;
            },
          },
          {
            key: "closestInArray",
            value: function (n, i) {
              for (
                var o = i[0], s = null, l = Math.abs(n - o), u = 0;
                u < i.length;
                u++
              ) {
                var d = Math.abs(n - i[u]);
                d < l && ((l = d), (s = u));
              }
              return { index: s };
            },
          },
          {
            key: "isXoverlap",
            value: function (n) {
              var i = [],
                o = this.w.globals.seriesX.filter(function (l) {
                  return l[0] !== void 0;
                });
              if (o.length > 0)
                for (var s = 0; s < o.length - 1; s++)
                  o[s][n] !== void 0 &&
                    o[s + 1][n] !== void 0 &&
                    o[s][n] !== o[s + 1][n] &&
                    i.push("unEqual");
              return i.length === 0;
            },
          },
          {
            key: "isInitialSeriesSameLen",
            value: function () {
              for (
                var n = !0, i = this.w.globals.initialSeries, o = 0;
                o < i.length - 1;
                o++
              )
                if (i[o].data.length !== i[o + 1].data.length) {
                  n = !1;
                  break;
                }
              return n;
            },
          },
          {
            key: "getBarsHeight",
            value: function (n) {
              return F(n).reduce(function (i, o) {
                return i + o.getBBox().height;
              }, 0);
            },
          },
          {
            key: "getElMarkers",
            value: function (n) {
              return typeof n == "number"
                ? this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series[data\\:realIndex='".concat(
                      n,
                      "'] .apexcharts-series-markers-wrap > *",
                    ),
                  )
                : this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series-markers-wrap > *",
                  );
            },
          },
          {
            key: "getAllMarkers",
            value: function () {
              var n = this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series-markers-wrap",
              );
              (n = F(n)).sort(function (o, s) {
                var l = Number(o.getAttribute("data:realIndex")),
                  u = Number(s.getAttribute("data:realIndex"));
                return u < l ? 1 : u > l ? -1 : 0;
              });
              var i = [];
              return (
                n.forEach(function (o) {
                  i.push(o.querySelector(".apexcharts-marker"));
                }),
                i
              );
            },
          },
          {
            key: "hasMarkers",
            value: function (n) {
              return this.getElMarkers(n).length > 0;
            },
          },
          {
            key: "getElBars",
            value: function () {
              return this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-bar-series,  .apexcharts-candlestick-series, .apexcharts-boxPlot-series, .apexcharts-rangebar-series",
              );
            },
          },
          {
            key: "hasBars",
            value: function () {
              return this.getElBars().length > 0;
            },
          },
          {
            key: "getHoverMarkerSize",
            value: function (n) {
              var i = this.w,
                o = i.config.markers.hover.size;
              return (
                o === void 0 &&
                  (o =
                    i.globals.markers.size[n] +
                    i.config.markers.hover.sizeOffset),
                o
              );
            },
          },
          {
            key: "toggleAllTooltipSeriesGroups",
            value: function (n) {
              var i = this.w,
                o = this.ttCtx;
              o.allTooltipSeriesGroups.length === 0 &&
                (o.allTooltipSeriesGroups =
                  i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-tooltip-series-group",
                  ));
              for (var s = o.allTooltipSeriesGroups, l = 0; l < s.length; l++)
                n === "enable"
                  ? (s[l].classList.add("apexcharts-active"),
                    (s[l].style.display = i.config.tooltip.items.display))
                  : (s[l].classList.remove("apexcharts-active"),
                    (s[l].style.display = "none"));
            },
          },
        ]),
        T
      );
    })(),
    Zi = (function () {
      function T(n) {
        h(this, T),
          (this.w = n.w),
          (this.ctx = n.ctx),
          (this.ttCtx = n),
          (this.tooltipUtil = new Ja(n));
      }
      return (
        v(T, [
          {
            key: "drawSeriesTexts",
            value: function (n) {
              var i = n.shared,
                o = i === void 0 || i,
                s = n.ttItems,
                l = n.i,
                u = l === void 0 ? 0 : l,
                d = n.j,
                f = d === void 0 ? null : d,
                m = n.y1,
                y = n.y2,
                x = n.e,
                S = this.w;
              S.config.tooltip.custom !== void 0
                ? this.handleCustomTooltip({ i: u, j: f, y1: m, y2: y, w: S })
                : this.toggleActiveInactiveSeries(o);
              var _ = this.getValuesToPrint({ i: u, j: f });
              this.printLabels({
                i: u,
                j: f,
                values: _,
                ttItems: s,
                shared: o,
                e: x,
              });
              var C = this.ttCtx.getElTooltip();
              (this.ttCtx.tooltipRect.ttWidth =
                C.getBoundingClientRect().width),
                (this.ttCtx.tooltipRect.ttHeight =
                  C.getBoundingClientRect().height);
            },
          },
          {
            key: "printLabels",
            value: function (n) {
              var i,
                o = this,
                s = n.i,
                l = n.j,
                u = n.values,
                d = n.ttItems,
                f = n.shared,
                m = n.e,
                y = this.w,
                x = [],
                S = function (A) {
                  return (
                    y.globals.seriesGoals[A] &&
                    y.globals.seriesGoals[A][l] &&
                    Array.isArray(y.globals.seriesGoals[A][l])
                  );
                },
                _ = u.xVal,
                C = u.zVal,
                E = u.xAxisTTVal,
                I = "",
                H = y.globals.colors[s];
              l !== null &&
                y.config.plotOptions.bar.distributed &&
                (H = y.globals.colors[l]);
              for (
                var Y = function (A, D) {
                    var W = o.getFormatters(s);
                    (I = o.getSeriesName({
                      fn: W.yLbTitleFormatter,
                      index: s,
                      seriesIndex: s,
                      j: l,
                    })),
                      y.config.chart.type === "treemap" &&
                        (I = W.yLbTitleFormatter(
                          String(y.config.series[s].data[l].x),
                          {
                            series: y.globals.series,
                            seriesIndex: s,
                            dataPointIndex: l,
                            w: y,
                          },
                        ));
                    var V = y.config.tooltip.inverseOrder ? D : A;
                    if (y.globals.axisCharts) {
                      var K = function (ce) {
                        var se, xe, be, Ie;
                        return y.globals.isRangeData
                          ? W.yLbFormatter(
                              (se = y.globals.seriesRangeStart) === null ||
                                se === void 0 ||
                                (xe = se[ce]) === null ||
                                xe === void 0
                                ? void 0
                                : xe[l],
                              {
                                series: y.globals.seriesRangeStart,
                                seriesIndex: ce,
                                dataPointIndex: l,
                                w: y,
                              },
                            ) +
                              " - " +
                              W.yLbFormatter(
                                (be = y.globals.seriesRangeEnd) === null ||
                                  be === void 0 ||
                                  (Ie = be[ce]) === null ||
                                  Ie === void 0
                                  ? void 0
                                  : Ie[l],
                                {
                                  series: y.globals.seriesRangeEnd,
                                  seriesIndex: ce,
                                  dataPointIndex: l,
                                  w: y,
                                },
                              )
                          : W.yLbFormatter(y.globals.series[ce][l], {
                              series: y.globals.series,
                              seriesIndex: ce,
                              dataPointIndex: l,
                              w: y,
                            });
                      };
                      if (f)
                        (W = o.getFormatters(V)),
                          (I = o.getSeriesName({
                            fn: W.yLbTitleFormatter,
                            index: V,
                            seriesIndex: s,
                            j: l,
                          })),
                          (H = y.globals.colors[V]),
                          (i = K(V)),
                          S(V) &&
                            (x = y.globals.seriesGoals[V][l].map(function (ce) {
                              return {
                                attrs: ce,
                                val: W.yLbFormatter(ce.value, {
                                  seriesIndex: V,
                                  dataPointIndex: l,
                                  w: y,
                                }),
                              };
                            }));
                      else {
                        var Z,
                          re =
                            m == null || (Z = m.target) === null || Z === void 0
                              ? void 0
                              : Z.getAttribute("fill");
                        re &&
                          (H =
                            re.indexOf("url") !== -1
                              ? document
                                  .querySelector(re.substr(4).slice(0, -1))
                                  .childNodes[0].getAttribute("stroke")
                              : re),
                          (i = K(s)),
                          S(s) &&
                            Array.isArray(y.globals.seriesGoals[s][l]) &&
                            (x = y.globals.seriesGoals[s][l].map(function (ce) {
                              return {
                                attrs: ce,
                                val: W.yLbFormatter(ce.value, {
                                  seriesIndex: s,
                                  dataPointIndex: l,
                                  w: y,
                                }),
                              };
                            }));
                      }
                    }
                    l === null &&
                      (i = W.yLbFormatter(
                        y.globals.series[s],
                        a(a({}, y), {}, { seriesIndex: s, dataPointIndex: s }),
                      )),
                      o.DOMHandling({
                        i: s,
                        t: V,
                        j: l,
                        ttItems: d,
                        values: {
                          val: i,
                          goalVals: x,
                          xVal: _,
                          xAxisTTVal: E,
                          zVal: C,
                        },
                        seriesName: I,
                        shared: f,
                        pColor: H,
                      });
                  },
                  g = 0,
                  w = y.globals.series.length - 1;
                g < y.globals.series.length;
                g++, w--
              )
                Y(g, w);
            },
          },
          {
            key: "getFormatters",
            value: function (n) {
              var i,
                o = this.w,
                s = o.globals.yLabelFormatters[n];
              return (
                o.globals.ttVal !== void 0
                  ? Array.isArray(o.globals.ttVal)
                    ? ((s = o.globals.ttVal[n] && o.globals.ttVal[n].formatter),
                      (i =
                        o.globals.ttVal[n] &&
                        o.globals.ttVal[n].title &&
                        o.globals.ttVal[n].title.formatter))
                    : ((s = o.globals.ttVal.formatter),
                      typeof o.globals.ttVal.title.formatter == "function" &&
                        (i = o.globals.ttVal.title.formatter))
                  : (i = o.config.tooltip.y.title.formatter),
                typeof s != "function" &&
                  (s = o.globals.yLabelFormatters[0]
                    ? o.globals.yLabelFormatters[0]
                    : function (l) {
                        return l;
                      }),
                typeof i != "function" &&
                  (i = function (l) {
                    return l;
                  }),
                { yLbFormatter: s, yLbTitleFormatter: i }
              );
            },
          },
          {
            key: "getSeriesName",
            value: function (n) {
              var i = n.fn,
                o = n.index,
                s = n.seriesIndex,
                l = n.j,
                u = this.w;
              return i(String(u.globals.seriesNames[o]), {
                series: u.globals.series,
                seriesIndex: s,
                dataPointIndex: l,
                w: u,
              });
            },
          },
          {
            key: "DOMHandling",
            value: function (n) {
              n.i;
              var i = n.t,
                o = n.j,
                s = n.ttItems,
                l = n.values,
                u = n.seriesName,
                d = n.shared,
                f = n.pColor,
                m = this.w,
                y = this.ttCtx,
                x = l.val,
                S = l.goalVals,
                _ = l.xVal,
                C = l.xAxisTTVal,
                E = l.zVal,
                I = null;
              (I = s[i].children),
                m.config.tooltip.fillSeriesColor &&
                  ((s[i].style.backgroundColor = f),
                  (I[0].style.display = "none")),
                y.showTooltipTitle &&
                  (y.tooltipTitle === null &&
                    (y.tooltipTitle = m.globals.dom.baseEl.querySelector(
                      ".apexcharts-tooltip-title",
                    )),
                  (y.tooltipTitle.innerHTML = _)),
                y.isXAxisTooltipEnabled &&
                  (y.xaxisTooltipText.innerHTML = C !== "" ? C : _);
              var H = s[i].querySelector(".apexcharts-tooltip-text-y-label");
              H && (H.innerHTML = u || "");
              var Y = s[i].querySelector(".apexcharts-tooltip-text-y-value");
              Y && (Y.innerHTML = x !== void 0 ? x : ""),
                I[0] &&
                  I[0].classList.contains("apexcharts-tooltip-marker") &&
                  (m.config.tooltip.marker.fillColors &&
                    Array.isArray(m.config.tooltip.marker.fillColors) &&
                    (f = m.config.tooltip.marker.fillColors[i]),
                  (I[0].style.backgroundColor = f)),
                m.config.tooltip.marker.show || (I[0].style.display = "none");
              var g = s[i].querySelector(
                  ".apexcharts-tooltip-text-goals-label",
                ),
                w = s[i].querySelector(".apexcharts-tooltip-text-goals-value");
              if (S.length && m.globals.seriesGoals[i]) {
                var A = function () {
                  var D = "<div >",
                    W = "<div>";
                  S.forEach(function (V, K) {
                    (D +=
                      ' <div style="display: flex"><span class="apexcharts-tooltip-marker" style="background-color: '
                        .concat(
                          V.attrs.strokeColor,
                          '; height: 3px; border-radius: 0; top: 5px;"></span> ',
                        )
                        .concat(V.attrs.name, "</div>")),
                      (W += "<div>".concat(V.val, "</div>"));
                  }),
                    (g.innerHTML = D + "</div>"),
                    (w.innerHTML = W + "</div>");
                };
                d
                  ? m.globals.seriesGoals[i][o] &&
                    Array.isArray(m.globals.seriesGoals[i][o])
                    ? A()
                    : ((g.innerHTML = ""), (w.innerHTML = ""))
                  : A();
              } else (g.innerHTML = ""), (w.innerHTML = "");
              E !== null &&
                ((s[i].querySelector(
                  ".apexcharts-tooltip-text-z-label",
                ).innerHTML = m.config.tooltip.z.title),
                (s[i].querySelector(
                  ".apexcharts-tooltip-text-z-value",
                ).innerHTML = E !== void 0 ? E : "")),
                d &&
                  I[0] &&
                  (x == null ||
                  m.globals.ancillaryCollapsedSeriesIndices.indexOf(i) > -1 ||
                  m.globals.collapsedSeriesIndices.indexOf(i) > -1
                    ? (I[0].parentNode.style.display = "none")
                    : (I[0].parentNode.style.display =
                        m.config.tooltip.items.display));
            },
          },
          {
            key: "toggleActiveInactiveSeries",
            value: function (n) {
              var i = this.w;
              if (n) this.tooltipUtil.toggleAllTooltipSeriesGroups("enable");
              else {
                this.tooltipUtil.toggleAllTooltipSeriesGroups("disable");
                var o = i.globals.dom.baseEl.querySelector(
                  ".apexcharts-tooltip-series-group",
                );
                o &&
                  (o.classList.add("apexcharts-active"),
                  (o.style.display = i.config.tooltip.items.display));
              }
            },
          },
          {
            key: "getValuesToPrint",
            value: function (n) {
              var i = n.i,
                o = n.j,
                s = this.w,
                l = this.ctx.series.filteredSeriesX(),
                u = "",
                d = "",
                f = null,
                m = null,
                y = {
                  series: s.globals.series,
                  seriesIndex: i,
                  dataPointIndex: o,
                  w: s,
                },
                x = s.globals.ttZFormatter;
              o === null
                ? (m = s.globals.series[i])
                : s.globals.isXNumeric && s.config.chart.type !== "treemap"
                ? ((u = l[i][o]),
                  l[i].length === 0 &&
                    (u = l[this.tooltipUtil.getFirstActiveXArray(l)][o]))
                : (u =
                    s.globals.labels[o] !== void 0 ? s.globals.labels[o] : "");
              var S = u;
              return (
                s.globals.isXNumeric && s.config.xaxis.type === "datetime"
                  ? (u = new oe(this.ctx).xLabelFormat(
                      s.globals.ttKeyFormatter,
                      S,
                      S,
                      {
                        i: void 0,
                        dateFormatter: new ue(this.ctx).formatDate,
                        w: this.w,
                      },
                    ))
                  : (u = s.globals.isBarHorizontal
                      ? s.globals.yLabelFormatters[0](S, y)
                      : s.globals.xLabelFormatter(S, y)),
                s.config.tooltip.x.formatter !== void 0 &&
                  (u = s.globals.ttKeyFormatter(S, y)),
                s.globals.seriesZ.length > 0 &&
                  s.globals.seriesZ[i].length > 0 &&
                  (f = x(s.globals.seriesZ[i][o], s)),
                (d =
                  typeof s.config.xaxis.tooltip.formatter == "function"
                    ? s.globals.xaxisTooltipFormatter(S, y)
                    : u),
                {
                  val: Array.isArray(m) ? m.join(" ") : m,
                  xVal: Array.isArray(u) ? u.join(" ") : u,
                  xAxisTTVal: Array.isArray(d) ? d.join(" ") : d,
                  zVal: f,
                }
              );
            },
          },
          {
            key: "handleCustomTooltip",
            value: function (n) {
              var i = n.i,
                o = n.j,
                s = n.y1,
                l = n.y2,
                u = n.w,
                d = this.ttCtx.getElTooltip(),
                f = u.config.tooltip.custom;
              Array.isArray(f) && f[i] && (f = f[i]),
                (d.innerHTML = f({
                  ctx: this.ctx,
                  series: u.globals.series,
                  seriesIndex: i,
                  dataPointIndex: o,
                  y1: s,
                  y2: l,
                  w: u,
                }));
            },
          },
        ]),
        T
      );
    })(),
    eo = (function () {
      function T(n) {
        h(this, T), (this.ttCtx = n), (this.ctx = n.ctx), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "moveXCrosshairs",
            value: function (n) {
              var i =
                  arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : null,
                o = this.ttCtx,
                s = this.w,
                l = o.getElXCrosshairs(),
                u = n - o.xcrosshairsWidth / 2,
                d = s.globals.labels.slice().length;
              if (
                (i !== null && (u = (s.globals.gridWidth / d) * i),
                l === null ||
                  s.globals.isBarHorizontal ||
                  (l.setAttribute("x", u),
                  l.setAttribute("x1", u),
                  l.setAttribute("x2", u),
                  l.setAttribute("y2", s.globals.gridHeight),
                  l.classList.add("apexcharts-active")),
                u < 0 && (u = 0),
                u > s.globals.gridWidth && (u = s.globals.gridWidth),
                o.isXAxisTooltipEnabled)
              ) {
                var f = u;
                (s.config.xaxis.crosshairs.width !== "tickWidth" &&
                  s.config.xaxis.crosshairs.width !== "barWidth") ||
                  (f = u + o.xcrosshairsWidth / 2),
                  this.moveXAxisTooltip(f);
              }
            },
          },
          {
            key: "moveYCrosshairs",
            value: function (n) {
              var i = this.ttCtx;
              i.ycrosshairs !== null &&
                B.setAttrs(i.ycrosshairs, { y1: n, y2: n }),
                i.ycrosshairsHidden !== null &&
                  B.setAttrs(i.ycrosshairsHidden, { y1: n, y2: n });
            },
          },
          {
            key: "moveXAxisTooltip",
            value: function (n) {
              var i = this.w,
                o = this.ttCtx;
              if (o.xaxisTooltip !== null && o.xcrosshairsWidth !== 0) {
                o.xaxisTooltip.classList.add("apexcharts-active");
                var s =
                  o.xaxisOffY +
                  i.config.xaxis.tooltip.offsetY +
                  i.globals.translateY +
                  1 +
                  i.config.xaxis.offsetY;
                if (
                  ((n -= o.xaxisTooltip.getBoundingClientRect().width / 2),
                  !isNaN(n))
                ) {
                  n += i.globals.translateX;
                  var l;
                  (l = new B(this.ctx).getTextRects(
                    o.xaxisTooltipText.innerHTML,
                  )),
                    (o.xaxisTooltipText.style.minWidth = l.width + "px"),
                    (o.xaxisTooltip.style.left = n + "px"),
                    (o.xaxisTooltip.style.top = s + "px");
                }
              }
            },
          },
          {
            key: "moveYAxisTooltip",
            value: function (n) {
              var i = this.w,
                o = this.ttCtx;
              o.yaxisTTEls === null &&
                (o.yaxisTTEls = i.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-yaxistooltip",
                ));
              var s = parseInt(o.ycrosshairsHidden.getAttribute("y1"), 10),
                l = i.globals.translateY + s,
                u = o.yaxisTTEls[n].getBoundingClientRect().height,
                d = i.globals.translateYAxisX[n] - 2;
              i.config.yaxis[n].opposite && (d -= 26),
                (l -= u / 2),
                i.globals.ignoreYAxisIndexes.indexOf(n) === -1
                  ? (o.yaxisTTEls[n].classList.add("apexcharts-active"),
                    (o.yaxisTTEls[n].style.top = l + "px"),
                    (o.yaxisTTEls[n].style.left =
                      d + i.config.yaxis[n].tooltip.offsetX + "px"))
                  : o.yaxisTTEls[n].classList.remove("apexcharts-active");
            },
          },
          {
            key: "moveTooltip",
            value: function (n, i) {
              var o =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                s = this.w,
                l = this.ttCtx,
                u = l.getElTooltip(),
                d = l.tooltipRect,
                f = o !== null ? parseFloat(o) : 1,
                m = parseFloat(n) + f + 5,
                y = parseFloat(i) + f / 2;
              if (
                (m > s.globals.gridWidth / 2 && (m = m - d.ttWidth - f - 10),
                m > s.globals.gridWidth - d.ttWidth - 10 &&
                  (m = s.globals.gridWidth - d.ttWidth),
                m < -20 && (m = -20),
                s.config.tooltip.followCursor)
              ) {
                var x = l.getElGrid().getBoundingClientRect();
                (m = l.e.clientX - x.left) > s.globals.gridWidth / 2 &&
                  (m -= l.tooltipRect.ttWidth),
                  (y = l.e.clientY + s.globals.translateY - x.top) >
                    s.globals.gridHeight / 2 && (y -= l.tooltipRect.ttHeight);
              } else
                s.globals.isBarHorizontal ||
                  (d.ttHeight / 2 + y > s.globals.gridHeight &&
                    (y =
                      s.globals.gridHeight -
                      d.ttHeight +
                      s.globals.translateY));
              isNaN(m) ||
                ((m += s.globals.translateX),
                (u.style.left = m + "px"),
                (u.style.top = y + "px"));
            },
          },
          {
            key: "moveMarkers",
            value: function (n, i) {
              var o = this.w,
                s = this.ttCtx;
              if (o.globals.markers.size[n] > 0)
                for (
                  var l = o.globals.dom.baseEl.querySelectorAll(
                      " .apexcharts-series[data\\:realIndex='".concat(
                        n,
                        "'] .apexcharts-marker",
                      ),
                    ),
                    u = 0;
                  u < l.length;
                  u++
                )
                  parseInt(l[u].getAttribute("rel"), 10) === i &&
                    (s.marker.resetPointsSize(),
                    s.marker.enlargeCurrentPoint(i, l[u]));
              else
                s.marker.resetPointsSize(), this.moveDynamicPointOnHover(i, n);
            },
          },
          {
            key: "moveDynamicPointOnHover",
            value: function (n, i) {
              var o,
                s,
                l = this.w,
                u = this.ttCtx,
                d = l.globals.pointsArray,
                f = u.tooltipUtil.getHoverMarkerSize(i),
                m = l.config.series[i].type;
              if (
                !m ||
                (m !== "column" && m !== "candlestick" && m !== "boxPlot")
              ) {
                (o = d[i][n][0]), (s = d[i][n][1] ? d[i][n][1] : 0);
                var y = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-series[data\\:realIndex='".concat(
                    i,
                    "'] .apexcharts-series-markers circle",
                  ),
                );
                y &&
                  s < l.globals.gridHeight &&
                  s > 0 &&
                  (y.setAttribute("r", f),
                  y.setAttribute("cx", o),
                  y.setAttribute("cy", s)),
                  this.moveXCrosshairs(o),
                  u.fixedTooltip || this.moveTooltip(o, s, f);
              }
            },
          },
          {
            key: "moveDynamicPointsOnHover",
            value: function (n) {
              var i,
                o = this.ttCtx,
                s = o.w,
                l = 0,
                u = 0,
                d = s.globals.pointsArray;
              i = new Be(this.ctx).getActiveConfigSeriesIndex("asc", [
                "line",
                "area",
                "scatter",
                "bubble",
              ]);
              var f = o.tooltipUtil.getHoverMarkerSize(i);
              d[i] && ((l = d[i][n][0]), (u = d[i][n][1]));
              var m = o.tooltipUtil.getAllMarkers();
              if (m !== null)
                for (var y = 0; y < s.globals.series.length; y++) {
                  var x = d[y];
                  if (
                    (s.globals.comboCharts &&
                      x === void 0 &&
                      m.splice(y, 0, null),
                    x && x.length)
                  ) {
                    var S = d[y][n][1],
                      _ = void 0;
                    if (
                      (m[y].setAttribute("cx", l),
                      s.config.chart.type === "rangeArea" &&
                        !s.globals.comboCharts)
                    ) {
                      var C = n + s.globals.series[y].length;
                      (_ = d[y][C][1]), (S -= Math.abs(S - _) / 2);
                    }
                    S !== null &&
                    !isNaN(S) &&
                    S < s.globals.gridHeight + f &&
                    S + f > 0
                      ? (m[y] && m[y].setAttribute("r", f),
                        m[y] && m[y].setAttribute("cy", S))
                      : m[y] && m[y].setAttribute("r", 0);
                  }
                }
              this.moveXCrosshairs(l),
                o.fixedTooltip ||
                  this.moveTooltip(l, u || s.globals.gridHeight, f);
            },
          },
          {
            key: "moveStickyTooltipOverBars",
            value: function (n, i) {
              var o = this.w,
                s = this.ttCtx,
                l = o.globals.columnSeries
                  ? o.globals.columnSeries.length
                  : o.globals.series.length,
                u =
                  l >= 2 && l % 2 == 0
                    ? Math.floor(l / 2)
                    : Math.floor(l / 2) + 1;
              o.globals.isBarHorizontal &&
                (u = new Be(this.ctx).getActiveConfigSeriesIndex("desc") + 1);
              var d = o.globals.dom.baseEl.querySelector(
                ".apexcharts-bar-series .apexcharts-series[rel='"
                  .concat(u, "'] path[j='")
                  .concat(
                    n,
                    "'], .apexcharts-candlestick-series .apexcharts-series[rel='",
                  )
                  .concat(u, "'] path[j='")
                  .concat(
                    n,
                    "'], .apexcharts-boxPlot-series .apexcharts-series[rel='",
                  )
                  .concat(u, "'] path[j='")
                  .concat(
                    n,
                    "'], .apexcharts-rangebar-series .apexcharts-series[rel='",
                  )
                  .concat(u, "'] path[j='")
                  .concat(n, "']"),
              );
              d ||
                typeof i != "number" ||
                (d = o.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-series .apexcharts-series[data\\:realIndex='"
                    .concat(i, "'] path[j='")
                    .concat(
                      n,
                      `'],
        .apexcharts-candlestick-series .apexcharts-series[data\\:realIndex='`,
                    )
                    .concat(i, "'] path[j='")
                    .concat(
                      n,
                      `'],
        .apexcharts-boxPlot-series .apexcharts-series[data\\:realIndex='`,
                    )
                    .concat(i, "'] path[j='")
                    .concat(
                      n,
                      `'],
        .apexcharts-rangebar-series .apexcharts-series[data\\:realIndex='`,
                    )
                    .concat(i, "'] path[j='")
                    .concat(n, "']"),
                ));
              var f = d ? parseFloat(d.getAttribute("cx")) : 0,
                m = d ? parseFloat(d.getAttribute("cy")) : 0,
                y = d ? parseFloat(d.getAttribute("barWidth")) : 0,
                x = s.getElGrid().getBoundingClientRect(),
                S =
                  d &&
                  (d.classList.contains("apexcharts-candlestick-area") ||
                    d.classList.contains("apexcharts-boxPlot-area"));
              o.globals.isXNumeric
                ? (d && !S && (f -= l % 2 != 0 ? y / 2 : 0),
                  d && S && o.globals.comboCharts && (f -= y / 2))
                : o.globals.isBarHorizontal ||
                  ((f =
                    s.xAxisTicksPositions[n - 1] +
                    s.dataPointsDividedWidth / 2),
                  isNaN(f) &&
                    (f =
                      s.xAxisTicksPositions[n] - s.dataPointsDividedWidth / 2)),
                o.globals.isBarHorizontal
                  ? (m -= s.tooltipRect.ttHeight)
                  : o.config.tooltip.followCursor
                  ? (m = s.e.clientY - x.top - s.tooltipRect.ttHeight / 2)
                  : m + s.tooltipRect.ttHeight + 15 > o.globals.gridHeight &&
                    (m = o.globals.gridHeight),
                o.globals.isBarHorizontal || this.moveXCrosshairs(f),
                s.fixedTooltip ||
                  this.moveTooltip(f, m || o.globals.gridHeight);
            },
          },
        ]),
        T
      );
    })(),
    to = (function () {
      function T(n) {
        h(this, T),
          (this.w = n.w),
          (this.ttCtx = n),
          (this.ctx = n.ctx),
          (this.tooltipPosition = new eo(n));
      }
      return (
        v(T, [
          {
            key: "drawDynamicPoints",
            value: function () {
              var n = this.w,
                i = new B(this.ctx),
                o = new ze(this.ctx),
                s = n.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
              (s = F(s)),
                n.config.chart.stacked &&
                  s.sort(function (x, S) {
                    return (
                      parseFloat(x.getAttribute("data:realIndex")) -
                      parseFloat(S.getAttribute("data:realIndex"))
                    );
                  });
              for (var l = 0; l < s.length; l++) {
                var u = s[l].querySelector(".apexcharts-series-markers-wrap");
                if (u !== null) {
                  var d = void 0,
                    f = "apexcharts-marker w".concat(
                      (Math.random() + 1).toString(36).substring(4),
                    );
                  (n.config.chart.type !== "line" &&
                    n.config.chart.type !== "area") ||
                    n.globals.comboCharts ||
                    n.config.tooltip.intersect ||
                    (f += " no-pointer-events");
                  var m = o.getMarkerConfig({
                    cssClass: f,
                    seriesIndex: Number(u.getAttribute("data:realIndex")),
                  });
                  (d = i.drawMarker(0, 0, m)).node.setAttribute(
                    "default-marker-size",
                    0,
                  );
                  var y = document.createElementNS(n.globals.SVGNS, "g");
                  y.classList.add("apexcharts-series-markers"),
                    y.appendChild(d.node),
                    u.appendChild(y);
                }
              }
            },
          },
          {
            key: "enlargeCurrentPoint",
            value: function (n, i) {
              var o =
                  arguments.length > 2 && arguments[2] !== void 0
                    ? arguments[2]
                    : null,
                s =
                  arguments.length > 3 && arguments[3] !== void 0
                    ? arguments[3]
                    : null,
                l = this.w;
              l.config.chart.type !== "bubble" && this.newPointSize(n, i);
              var u = i.getAttribute("cx"),
                d = i.getAttribute("cy");
              if (
                (o !== null && s !== null && ((u = o), (d = s)),
                this.tooltipPosition.moveXCrosshairs(u),
                !this.fixedTooltip)
              ) {
                if (l.config.chart.type === "radar") {
                  var f = this.ttCtx.getElGrid().getBoundingClientRect();
                  u = this.ttCtx.e.clientX - f.left;
                }
                this.tooltipPosition.moveTooltip(
                  u,
                  d,
                  l.config.markers.hover.size,
                );
              }
            },
          },
          {
            key: "enlargePoints",
            value: function (n) {
              for (
                var i = this.w,
                  o = this,
                  s = this.ttCtx,
                  l = n,
                  u = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker",
                  ),
                  d = i.config.markers.hover.size,
                  f = 0;
                f < u.length;
                f++
              ) {
                var m = u[f].getAttribute("rel"),
                  y = u[f].getAttribute("index");
                if (
                  (d === void 0 &&
                    (d =
                      i.globals.markers.size[y] +
                      i.config.markers.hover.sizeOffset),
                  l === parseInt(m, 10))
                ) {
                  o.newPointSize(l, u[f]);
                  var x = u[f].getAttribute("cx"),
                    S = u[f].getAttribute("cy");
                  o.tooltipPosition.moveXCrosshairs(x),
                    s.fixedTooltip || o.tooltipPosition.moveTooltip(x, S, d);
                } else o.oldPointSize(u[f]);
              }
            },
          },
          {
            key: "newPointSize",
            value: function (n, i) {
              var o = this.w,
                s = o.config.markers.hover.size,
                l = n === 0 ? i.parentNode.firstChild : i.parentNode.lastChild;
              if (l.getAttribute("default-marker-size") !== "0") {
                var u = parseInt(l.getAttribute("index"), 10);
                s === void 0 &&
                  (s =
                    o.globals.markers.size[u] +
                    o.config.markers.hover.sizeOffset),
                  s < 0 && (s = 0),
                  l.setAttribute("r", s);
              }
            },
          },
          {
            key: "oldPointSize",
            value: function (n) {
              var i = parseFloat(n.getAttribute("default-marker-size"));
              n.setAttribute("r", i);
            },
          },
          {
            key: "resetPointsSize",
            value: function () {
              for (
                var n = this.w.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-series:not(.apexcharts-series-collapsed) .apexcharts-marker",
                  ),
                  i = 0;
                i < n.length;
                i++
              ) {
                var o = parseFloat(n[i].getAttribute("default-marker-size"));
                O.isNumber(o) && o >= 0
                  ? n[i].setAttribute("r", o)
                  : n[i].setAttribute("r", 0);
              }
            },
          },
        ]),
        T
      );
    })(),
    Hd = (function () {
      function T(n) {
        h(this, T), (this.w = n.w);
        var i = this.w;
        (this.ttCtx = n),
          (this.isVerticalGroupedRangeBar =
            !i.globals.isBarHorizontal &&
            i.config.chart.type === "rangeBar" &&
            i.config.plotOptions.bar.rangeBarGroupRows);
      }
      return (
        v(T, [
          {
            key: "getAttr",
            value: function (n, i) {
              return parseFloat(n.target.getAttribute(i));
            },
          },
          {
            key: "handleHeatTreeTooltip",
            value: function (n) {
              var i = n.e,
                o = n.opt,
                s = n.x,
                l = n.y,
                u = n.type,
                d = this.ttCtx,
                f = this.w;
              if (
                i.target.classList.contains("apexcharts-".concat(u, "-rect"))
              ) {
                var m = this.getAttr(i, "i"),
                  y = this.getAttr(i, "j"),
                  x = this.getAttr(i, "cx"),
                  S = this.getAttr(i, "cy"),
                  _ = this.getAttr(i, "width"),
                  C = this.getAttr(i, "height");
                if (
                  (d.tooltipLabels.drawSeriesTexts({
                    ttItems: o.ttItems,
                    i: m,
                    j: y,
                    shared: !1,
                    e: i,
                  }),
                  (f.globals.capturedSeriesIndex = m),
                  (f.globals.capturedDataPointIndex = y),
                  (s = x + d.tooltipRect.ttWidth / 2 + _),
                  (l = S + d.tooltipRect.ttHeight / 2 - C / 2),
                  d.tooltipPosition.moveXCrosshairs(x + _ / 2),
                  s > f.globals.gridWidth / 2 &&
                    (s = x - d.tooltipRect.ttWidth / 2 + _),
                  d.w.config.tooltip.followCursor)
                ) {
                  var E = f.globals.dom.elWrap.getBoundingClientRect();
                  (s =
                    f.globals.clientX -
                    E.left -
                    (s > f.globals.gridWidth / 2 ? d.tooltipRect.ttWidth : 0)),
                    (l =
                      f.globals.clientY -
                      E.top -
                      (l > f.globals.gridHeight / 2
                        ? d.tooltipRect.ttHeight
                        : 0));
                }
              }
              return { x: s, y: l };
            },
          },
          {
            key: "handleMarkerTooltip",
            value: function (n) {
              var i,
                o,
                s = n.e,
                l = n.opt,
                u = n.x,
                d = n.y,
                f = this.w,
                m = this.ttCtx;
              if (s.target.classList.contains("apexcharts-marker")) {
                var y = parseInt(l.paths.getAttribute("cx"), 10),
                  x = parseInt(l.paths.getAttribute("cy"), 10),
                  S = parseFloat(l.paths.getAttribute("val"));
                if (
                  ((o = parseInt(l.paths.getAttribute("rel"), 10)),
                  (i =
                    parseInt(
                      l.paths.parentNode.parentNode.parentNode.getAttribute(
                        "rel",
                      ),
                      10,
                    ) - 1),
                  m.intersect)
                ) {
                  var _ = O.findAncestor(l.paths, "apexcharts-series");
                  _ && (i = parseInt(_.getAttribute("data:realIndex"), 10));
                }
                if (
                  (m.tooltipLabels.drawSeriesTexts({
                    ttItems: l.ttItems,
                    i,
                    j: o,
                    shared: !m.showOnIntersect && f.config.tooltip.shared,
                    e: s,
                  }),
                  s.type === "mouseup" && m.markerClick(s, i, o),
                  (f.globals.capturedSeriesIndex = i),
                  (f.globals.capturedDataPointIndex = o),
                  (u = y),
                  (d = x + f.globals.translateY - 1.4 * m.tooltipRect.ttHeight),
                  m.w.config.tooltip.followCursor)
                ) {
                  var C = m.getElGrid().getBoundingClientRect();
                  d = m.e.clientY + f.globals.translateY - C.top;
                }
                S < 0 && (d = x),
                  m.marker.enlargeCurrentPoint(o, l.paths, u, d);
              }
              return { x: u, y: d };
            },
          },
          {
            key: "handleBarTooltip",
            value: function (n) {
              var i,
                o,
                s = n.e,
                l = n.opt,
                u = this.w,
                d = this.ttCtx,
                f = d.getElTooltip(),
                m = 0,
                y = 0,
                x = 0,
                S = this.getBarTooltipXY({ e: s, opt: l });
              i = S.i;
              var _ = S.barHeight,
                C = S.j;
              (u.globals.capturedSeriesIndex = i),
                (u.globals.capturedDataPointIndex = C),
                (u.globals.isBarHorizontal && d.tooltipUtil.hasBars()) ||
                !u.config.tooltip.shared
                  ? ((y = S.x),
                    (x = S.y),
                    (o = Array.isArray(u.config.stroke.width)
                      ? u.config.stroke.width[i]
                      : u.config.stroke.width),
                    (m = y))
                  : u.globals.comboCharts ||
                    u.config.tooltip.shared ||
                    (m /= 2),
                isNaN(x) && (x = u.globals.svgHeight - d.tooltipRect.ttHeight);
              var E = parseInt(
                  l.paths.parentNode.getAttribute("data:realIndex"),
                  10,
                ),
                I = u.globals.isMultipleYAxis
                  ? u.config.yaxis[E] && u.config.yaxis[E].reversed
                  : u.config.yaxis[0].reversed;
              if (
                (y + d.tooltipRect.ttWidth > u.globals.gridWidth && !I
                  ? (y -= d.tooltipRect.ttWidth)
                  : y < 0 && (y = 0),
                d.w.config.tooltip.followCursor)
              ) {
                var H = d.getElGrid().getBoundingClientRect();
                x = d.e.clientY - H.top;
              }
              d.tooltip === null &&
                (d.tooltip = u.globals.dom.baseEl.querySelector(
                  ".apexcharts-tooltip",
                )),
                u.config.tooltip.shared ||
                  (u.globals.comboBarCount > 0
                    ? d.tooltipPosition.moveXCrosshairs(m + o / 2)
                    : d.tooltipPosition.moveXCrosshairs(m)),
                !d.fixedTooltip &&
                  (!u.config.tooltip.shared ||
                    (u.globals.isBarHorizontal && d.tooltipUtil.hasBars())) &&
                  (I && (y -= d.tooltipRect.ttWidth) < 0 && (y = 0),
                  !I ||
                    (u.globals.isBarHorizontal && d.tooltipUtil.hasBars()) ||
                    (x = x + _ - 2 * (u.globals.series[i][C] < 0 ? _ : 0)),
                  (x = x + u.globals.translateY - d.tooltipRect.ttHeight / 2),
                  (f.style.left = y + u.globals.translateX + "px"),
                  (f.style.top = x + "px"));
            },
          },
          {
            key: "getBarTooltipXY",
            value: function (n) {
              var i = this,
                o = n.e,
                s = n.opt,
                l = this.w,
                u = null,
                d = this.ttCtx,
                f = 0,
                m = 0,
                y = 0,
                x = 0,
                S = 0,
                _ = o.target.classList;
              if (
                _.contains("apexcharts-bar-area") ||
                _.contains("apexcharts-candlestick-area") ||
                _.contains("apexcharts-boxPlot-area") ||
                _.contains("apexcharts-rangebar-area")
              ) {
                var C = o.target,
                  E = C.getBoundingClientRect(),
                  I = s.elGrid.getBoundingClientRect(),
                  H = E.height;
                S = E.height;
                var Y = E.width,
                  g = parseInt(C.getAttribute("cx"), 10),
                  w = parseInt(C.getAttribute("cy"), 10);
                x = parseFloat(C.getAttribute("barWidth"));
                var A =
                  o.type === "touchmove" ? o.touches[0].clientX : o.clientX;
                (u = parseInt(C.getAttribute("j"), 10)),
                  (f = parseInt(C.parentNode.getAttribute("rel"), 10) - 1);
                var D = C.getAttribute("data-range-y1"),
                  W = C.getAttribute("data-range-y2");
                l.globals.comboCharts &&
                  (f = parseInt(
                    C.parentNode.getAttribute("data:realIndex"),
                    10,
                  ));
                var V = function (Z) {
                    return l.globals.isXNumeric
                      ? g - Y / 2
                      : i.isVerticalGroupedRangeBar
                      ? g + Y / 2
                      : g - d.dataPointsDividedWidth + Y / 2;
                  },
                  K = function () {
                    return (
                      w -
                      d.dataPointsDividedHeight +
                      H / 2 -
                      d.tooltipRect.ttHeight / 2
                    );
                  };
                d.tooltipLabels.drawSeriesTexts({
                  ttItems: s.ttItems,
                  i: f,
                  j: u,
                  y1: D ? parseInt(D, 10) : null,
                  y2: W ? parseInt(W, 10) : null,
                  shared: !d.showOnIntersect && l.config.tooltip.shared,
                  e: o,
                }),
                  l.config.tooltip.followCursor
                    ? l.globals.isBarHorizontal
                      ? ((m = A - I.left + 15), (y = K()))
                      : ((m = V()),
                        (y =
                          o.clientY - I.top - d.tooltipRect.ttHeight / 2 - 15))
                    : l.globals.isBarHorizontal
                    ? ((m = g) < d.xyRatios.baseLineInvertedY &&
                        (m = g - d.tooltipRect.ttWidth),
                      (y = K()))
                    : ((m = V()), (y = w));
              }
              return { x: m, y, barHeight: S, barWidth: x, i: f, j: u };
            },
          },
        ]),
        T
      );
    })(),
    Os = (function () {
      function T(n) {
        h(this, T), (this.w = n.w), (this.ttCtx = n);
      }
      return (
        v(T, [
          {
            key: "drawXaxisTooltip",
            value: function () {
              var n = this.w,
                i = this.ttCtx,
                o = n.config.xaxis.position === "bottom";
              i.xaxisOffY = o
                ? n.globals.gridHeight + 1
                : -n.globals.xAxisHeight - n.config.xaxis.axisTicks.height + 3;
              var s = o
                  ? "apexcharts-xaxistooltip apexcharts-xaxistooltip-bottom"
                  : "apexcharts-xaxistooltip apexcharts-xaxistooltip-top",
                l = n.globals.dom.elWrap;
              i.isXAxisTooltipEnabled &&
                n.globals.dom.baseEl.querySelector(
                  ".apexcharts-xaxistooltip",
                ) === null &&
                ((i.xaxisTooltip = document.createElement("div")),
                i.xaxisTooltip.setAttribute(
                  "class",
                  s + " apexcharts-theme-" + n.config.tooltip.theme,
                ),
                l.appendChild(i.xaxisTooltip),
                (i.xaxisTooltipText = document.createElement("div")),
                i.xaxisTooltipText.classList.add(
                  "apexcharts-xaxistooltip-text",
                ),
                (i.xaxisTooltipText.style.fontFamily =
                  n.config.xaxis.tooltip.style.fontFamily ||
                  n.config.chart.fontFamily),
                (i.xaxisTooltipText.style.fontSize =
                  n.config.xaxis.tooltip.style.fontSize),
                i.xaxisTooltip.appendChild(i.xaxisTooltipText));
            },
          },
          {
            key: "drawYaxisTooltip",
            value: function () {
              for (
                var n = this.w,
                  i = this.ttCtx,
                  o = function (l) {
                    var u =
                      n.config.yaxis[l].opposite ||
                      n.config.yaxis[l].crosshairs.opposite;
                    i.yaxisOffX = u ? n.globals.gridWidth + 1 : 1;
                    var d =
                      "apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                        l,
                        u
                          ? " apexcharts-yaxistooltip-right"
                          : " apexcharts-yaxistooltip-left",
                      );
                    n.globals.yAxisSameScaleIndices.map(function (m, y) {
                      m.map(function (x, S) {
                        S === l &&
                          (d += n.config.yaxis[S].show
                            ? " "
                            : " apexcharts-yaxistooltip-hidden");
                      });
                    });
                    var f = n.globals.dom.elWrap;
                    n.globals.dom.baseEl.querySelector(
                      ".apexcharts-yaxistooltip apexcharts-yaxistooltip-".concat(
                        l,
                      ),
                    ) === null &&
                      ((i.yaxisTooltip = document.createElement("div")),
                      i.yaxisTooltip.setAttribute(
                        "class",
                        d + " apexcharts-theme-" + n.config.tooltip.theme,
                      ),
                      f.appendChild(i.yaxisTooltip),
                      l === 0 && (i.yaxisTooltipText = []),
                      (i.yaxisTooltipText[l] = document.createElement("div")),
                      i.yaxisTooltipText[l].classList.add(
                        "apexcharts-yaxistooltip-text",
                      ),
                      i.yaxisTooltip.appendChild(i.yaxisTooltipText[l]));
                  },
                  s = 0;
                s < n.config.yaxis.length;
                s++
              )
                o(s);
            },
          },
          {
            key: "setXCrosshairWidth",
            value: function () {
              var n = this.w,
                i = this.ttCtx,
                o = i.getElXCrosshairs();
              if (
                ((i.xcrosshairsWidth = parseInt(
                  n.config.xaxis.crosshairs.width,
                  10,
                )),
                n.globals.comboCharts)
              ) {
                var s = n.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-area",
                );
                if (
                  s !== null &&
                  n.config.xaxis.crosshairs.width === "barWidth"
                ) {
                  var l = parseFloat(s.getAttribute("barWidth"));
                  i.xcrosshairsWidth = l;
                } else if (n.config.xaxis.crosshairs.width === "tickWidth") {
                  var u = n.globals.labels.length;
                  i.xcrosshairsWidth = n.globals.gridWidth / u;
                }
              } else if (n.config.xaxis.crosshairs.width === "tickWidth") {
                var d = n.globals.labels.length;
                i.xcrosshairsWidth = n.globals.gridWidth / d;
              } else if (n.config.xaxis.crosshairs.width === "barWidth") {
                var f = n.globals.dom.baseEl.querySelector(
                  ".apexcharts-bar-area",
                );
                if (f !== null) {
                  var m = parseFloat(f.getAttribute("barWidth"));
                  i.xcrosshairsWidth = m;
                } else i.xcrosshairsWidth = 1;
              }
              n.globals.isBarHorizontal && (i.xcrosshairsWidth = 0),
                o !== null &&
                  i.xcrosshairsWidth > 0 &&
                  o.setAttribute("width", i.xcrosshairsWidth);
            },
          },
          {
            key: "handleYCrosshair",
            value: function () {
              var n = this.w,
                i = this.ttCtx;
              (i.ycrosshairs = n.globals.dom.baseEl.querySelector(
                ".apexcharts-ycrosshairs",
              )),
                (i.ycrosshairsHidden = n.globals.dom.baseEl.querySelector(
                  ".apexcharts-ycrosshairs-hidden",
                ));
            },
          },
          {
            key: "drawYaxisTooltipText",
            value: function (n, i, o) {
              var s = this.ttCtx,
                l = this.w,
                u = l.globals.yLabelFormatters[n];
              if (s.yaxisTooltips[n]) {
                var d = s.getElGrid().getBoundingClientRect(),
                  f = (i - d.top) * o.yRatio[n],
                  m = l.globals.maxYArr[n] - l.globals.minYArr[n],
                  y = l.globals.minYArr[n] + (m - f);
                s.tooltipPosition.moveYCrosshairs(i - d.top),
                  (s.yaxisTooltipText[n].innerHTML = u(y)),
                  s.tooltipPosition.moveYAxisTooltip(n);
              }
            },
          },
        ]),
        T
      );
    })(),
    ks = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
        var i = this.w;
        (this.tConfig = i.config.tooltip),
          (this.tooltipUtil = new Ja(this)),
          (this.tooltipLabels = new Zi(this)),
          (this.tooltipPosition = new eo(this)),
          (this.marker = new to(this)),
          (this.intersect = new Hd(this)),
          (this.axesTooltip = new Os(this)),
          (this.showOnIntersect = this.tConfig.intersect),
          (this.showTooltipTitle = this.tConfig.x.show),
          (this.fixedTooltip = this.tConfig.fixed.enabled),
          (this.xaxisTooltip = null),
          (this.yaxisTTEls = null),
          (this.isBarShared =
            !i.globals.isBarHorizontal && this.tConfig.shared),
          (this.lastHoverTime = Date.now());
      }
      return (
        v(T, [
          {
            key: "getElTooltip",
            value: function (n) {
              return (
                n || (n = this),
                n.w.globals.dom.baseEl
                  ? n.w.globals.dom.baseEl.querySelector(".apexcharts-tooltip")
                  : null
              );
            },
          },
          {
            key: "getElXCrosshairs",
            value: function () {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-xcrosshairs",
              );
            },
          },
          {
            key: "getElGrid",
            value: function () {
              return this.w.globals.dom.baseEl.querySelector(
                ".apexcharts-grid",
              );
            },
          },
          {
            key: "drawTooltip",
            value: function (n) {
              var i = this.w;
              (this.xyRatios = n),
                (this.isXAxisTooltipEnabled =
                  i.config.xaxis.tooltip.enabled && i.globals.axisCharts),
                (this.yaxisTooltips = i.config.yaxis.map(function (u, d) {
                  return !!(
                    u.show &&
                    u.tooltip.enabled &&
                    i.globals.axisCharts
                  );
                })),
                (this.allTooltipSeriesGroups = []),
                i.globals.axisCharts || (this.showTooltipTitle = !1);
              var o = document.createElement("div");
              if (
                (o.classList.add("apexcharts-tooltip"),
                i.config.tooltip.cssClass &&
                  o.classList.add(i.config.tooltip.cssClass),
                o.classList.add("apexcharts-theme-".concat(this.tConfig.theme)),
                i.globals.dom.elWrap.appendChild(o),
                i.globals.axisCharts)
              ) {
                this.axesTooltip.drawXaxisTooltip(),
                  this.axesTooltip.drawYaxisTooltip(),
                  this.axesTooltip.setXCrosshairWidth(),
                  this.axesTooltip.handleYCrosshair();
                var s = new St(this.ctx);
                this.xAxisTicksPositions = s.getXAxisTicksPositions();
              }
              if (
                ((!i.globals.comboCharts &&
                  !this.tConfig.intersect &&
                  i.config.chart.type !== "rangeBar") ||
                  this.tConfig.shared ||
                  (this.showOnIntersect = !0),
                (i.config.markers.size !== 0 &&
                  i.globals.markers.largestSize !== 0) ||
                  this.marker.drawDynamicPoints(this),
                i.globals.collapsedSeries.length !== i.globals.series.length)
              ) {
                (this.dataPointsDividedHeight =
                  i.globals.gridHeight / i.globals.dataPoints),
                  (this.dataPointsDividedWidth =
                    i.globals.gridWidth / i.globals.dataPoints),
                  this.showTooltipTitle &&
                    ((this.tooltipTitle = document.createElement("div")),
                    this.tooltipTitle.classList.add("apexcharts-tooltip-title"),
                    (this.tooltipTitle.style.fontFamily =
                      this.tConfig.style.fontFamily ||
                      i.config.chart.fontFamily),
                    (this.tooltipTitle.style.fontSize =
                      this.tConfig.style.fontSize),
                    o.appendChild(this.tooltipTitle));
                var l = i.globals.series.length;
                (i.globals.xyCharts || i.globals.comboCharts) &&
                  this.tConfig.shared &&
                  (l = this.showOnIntersect ? 1 : i.globals.series.length),
                  (this.legendLabels = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-legend-text",
                  )),
                  (this.ttItems = this.createTTElements(l)),
                  this.addSVGEvents();
              }
            },
          },
          {
            key: "createTTElements",
            value: function (n) {
              for (
                var i = this,
                  o = this.w,
                  s = [],
                  l = this.getElTooltip(),
                  u = function (f) {
                    var m = document.createElement("div");
                    m.classList.add("apexcharts-tooltip-series-group"),
                      (m.style.order = o.config.tooltip.inverseOrder
                        ? n - f
                        : f + 1),
                      i.tConfig.shared &&
                        i.tConfig.enabledOnSeries &&
                        Array.isArray(i.tConfig.enabledOnSeries) &&
                        i.tConfig.enabledOnSeries.indexOf(f) < 0 &&
                        m.classList.add(
                          "apexcharts-tooltip-series-group-hidden",
                        );
                    var y = document.createElement("span");
                    y.classList.add("apexcharts-tooltip-marker"),
                      (y.style.backgroundColor = o.globals.colors[f]),
                      m.appendChild(y);
                    var x = document.createElement("div");
                    x.classList.add("apexcharts-tooltip-text"),
                      (x.style.fontFamily =
                        i.tConfig.style.fontFamily ||
                        o.config.chart.fontFamily),
                      (x.style.fontSize = i.tConfig.style.fontSize),
                      ["y", "goals", "z"].forEach(function (S) {
                        var _ = document.createElement("div");
                        _.classList.add(
                          "apexcharts-tooltip-".concat(S, "-group"),
                        );
                        var C = document.createElement("span");
                        C.classList.add(
                          "apexcharts-tooltip-text-".concat(S, "-label"),
                        ),
                          _.appendChild(C);
                        var E = document.createElement("span");
                        E.classList.add(
                          "apexcharts-tooltip-text-".concat(S, "-value"),
                        ),
                          _.appendChild(E),
                          x.appendChild(_);
                      }),
                      m.appendChild(x),
                      l.appendChild(m),
                      s.push(m);
                  },
                  d = 0;
                d < n;
                d++
              )
                u(d);
              return s;
            },
          },
          {
            key: "addSVGEvents",
            value: function () {
              var n = this.w,
                i = n.config.chart.type,
                o = this.getElTooltip(),
                s = !(
                  i !== "bar" &&
                  i !== "candlestick" &&
                  i !== "boxPlot" &&
                  i !== "rangeBar"
                ),
                l =
                  i === "area" ||
                  i === "line" ||
                  i === "scatter" ||
                  i === "bubble" ||
                  i === "radar",
                u = n.globals.dom.Paper.node,
                d = this.getElGrid();
              d && (this.seriesBound = d.getBoundingClientRect());
              var f,
                m = [],
                y = [],
                x = {
                  hoverArea: u,
                  elGrid: d,
                  tooltipEl: o,
                  tooltipY: m,
                  tooltipX: y,
                  ttItems: this.ttItems,
                };
              if (
                n.globals.axisCharts &&
                (l
                  ? (f = n.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series[data\\:longestSeries='true'] .apexcharts-marker",
                    ))
                  : s
                  ? (f = n.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series .apexcharts-bar-area, .apexcharts-series .apexcharts-candlestick-area, .apexcharts-series .apexcharts-boxPlot-area, .apexcharts-series .apexcharts-rangebar-area",
                    ))
                  : (i !== "heatmap" && i !== "treemap") ||
                    (f = n.globals.dom.baseEl.querySelectorAll(
                      ".apexcharts-series .apexcharts-heatmap, .apexcharts-series .apexcharts-treemap",
                    )),
                f && f.length)
              )
                for (var S = 0; S < f.length; S++)
                  m.push(f[S].getAttribute("cy")),
                    y.push(f[S].getAttribute("cx"));
              if (
                (n.globals.xyCharts && !this.showOnIntersect) ||
                (n.globals.comboCharts && !this.showOnIntersect) ||
                (s && this.tooltipUtil.hasBars() && this.tConfig.shared)
              )
                this.addPathsEventListeners([u], x);
              else if (
                (s && !n.globals.comboCharts) ||
                (l && this.showOnIntersect)
              )
                this.addDatapointEventsListeners(x);
              else if (
                !n.globals.axisCharts ||
                i === "heatmap" ||
                i === "treemap"
              ) {
                var _ =
                  n.globals.dom.baseEl.querySelectorAll(".apexcharts-series");
                this.addPathsEventListeners(_, x);
              }
              if (this.showOnIntersect) {
                var C = n.globals.dom.baseEl.querySelectorAll(
                  ".apexcharts-line-series .apexcharts-marker, .apexcharts-area-series .apexcharts-marker",
                );
                C.length > 0 && this.addPathsEventListeners(C, x),
                  this.tooltipUtil.hasBars() &&
                    !this.tConfig.shared &&
                    this.addDatapointEventsListeners(x);
              }
            },
          },
          {
            key: "drawFixedTooltipRect",
            value: function () {
              var n = this.w,
                i = this.getElTooltip(),
                o = i.getBoundingClientRect(),
                s = o.width + 10,
                l = o.height + 10,
                u = this.tConfig.fixed.offsetX,
                d = this.tConfig.fixed.offsetY,
                f = this.tConfig.fixed.position.toLowerCase();
              return (
                f.indexOf("right") > -1 &&
                  (u = u + n.globals.svgWidth - s + 10),
                f.indexOf("bottom") > -1 &&
                  (d = d + n.globals.svgHeight - l - 10),
                (i.style.left = u + "px"),
                (i.style.top = d + "px"),
                { x: u, y: d, ttWidth: s, ttHeight: l }
              );
            },
          },
          {
            key: "addDatapointEventsListeners",
            value: function (n) {
              var i = this.w.globals.dom.baseEl.querySelectorAll(
                ".apexcharts-series-markers .apexcharts-marker, .apexcharts-bar-area, .apexcharts-candlestick-area, .apexcharts-boxPlot-area, .apexcharts-rangebar-area",
              );
              this.addPathsEventListeners(i, n);
            },
          },
          {
            key: "addPathsEventListeners",
            value: function (n, i) {
              for (
                var o = this,
                  s = function (u) {
                    var d = {
                      paths: n[u],
                      tooltipEl: i.tooltipEl,
                      tooltipY: i.tooltipY,
                      tooltipX: i.tooltipX,
                      elGrid: i.elGrid,
                      hoverArea: i.hoverArea,
                      ttItems: i.ttItems,
                    };
                    [
                      "mousemove",
                      "mouseup",
                      "touchmove",
                      "mouseout",
                      "touchend",
                    ].map(function (f) {
                      return n[u].addEventListener(
                        f,
                        o.onSeriesHover.bind(o, d),
                        { capture: !1, passive: !0 },
                      );
                    });
                  },
                  l = 0;
                l < n.length;
                l++
              )
                s(l);
            },
          },
          {
            key: "onSeriesHover",
            value: function (n, i) {
              var o = this,
                s = Date.now() - this.lastHoverTime;
              s >= 100
                ? this.seriesHover(n, i)
                : (clearTimeout(this.seriesHoverTimeout),
                  (this.seriesHoverTimeout = setTimeout(function () {
                    o.seriesHover(n, i);
                  }, 100 - s)));
            },
          },
          {
            key: "seriesHover",
            value: function (n, i) {
              var o = this;
              this.lastHoverTime = Date.now();
              var s = [],
                l = this.w;
              l.config.chart.group && (s = this.ctx.getGroupedCharts()),
                (l.globals.axisCharts &&
                  ((l.globals.minX === -1 / 0 && l.globals.maxX === 1 / 0) ||
                    l.globals.dataPoints === 0)) ||
                  (s.length
                    ? s.forEach(function (u) {
                        var d = o.getElTooltip(u),
                          f = {
                            paths: n.paths,
                            tooltipEl: d,
                            tooltipY: n.tooltipY,
                            tooltipX: n.tooltipX,
                            elGrid: n.elGrid,
                            hoverArea: n.hoverArea,
                            ttItems: u.w.globals.tooltip.ttItems,
                          };
                        u.w.globals.minX === o.w.globals.minX &&
                          u.w.globals.maxX === o.w.globals.maxX &&
                          u.w.globals.tooltip.seriesHoverByContext({
                            chartCtx: u,
                            ttCtx: u.w.globals.tooltip,
                            opt: f,
                            e: i,
                          });
                      })
                    : this.seriesHoverByContext({
                        chartCtx: this.ctx,
                        ttCtx: this.w.globals.tooltip,
                        opt: n,
                        e: i,
                      }));
            },
          },
          {
            key: "seriesHoverByContext",
            value: function (n) {
              var i = n.chartCtx,
                o = n.ttCtx,
                s = n.opt,
                l = n.e,
                u = i.w,
                d = this.getElTooltip();
              d &&
                ((o.tooltipRect = {
                  x: 0,
                  y: 0,
                  ttWidth: d.getBoundingClientRect().width,
                  ttHeight: d.getBoundingClientRect().height,
                }),
                (o.e = l),
                o.tooltipUtil.hasBars() &&
                  !u.globals.comboCharts &&
                  !o.isBarShared &&
                  this.tConfig.onDatasetHover.highlightDataSeries &&
                  new Be(i).toggleSeriesOnHover(l, l.target.parentNode),
                o.fixedTooltip && o.drawFixedTooltipRect(),
                u.globals.axisCharts
                  ? o.axisChartsTooltips({
                      e: l,
                      opt: s,
                      tooltipRect: o.tooltipRect,
                    })
                  : o.nonAxisChartsTooltips({
                      e: l,
                      opt: s,
                      tooltipRect: o.tooltipRect,
                    }));
            },
          },
          {
            key: "axisChartsTooltips",
            value: function (n) {
              var i,
                o,
                s = n.e,
                l = n.opt,
                u = this.w,
                d = l.elGrid.getBoundingClientRect(),
                f = s.type === "touchmove" ? s.touches[0].clientX : s.clientX,
                m = s.type === "touchmove" ? s.touches[0].clientY : s.clientY;
              if (
                ((this.clientY = m),
                (this.clientX = f),
                (u.globals.capturedSeriesIndex = -1),
                (u.globals.capturedDataPointIndex = -1),
                m < d.top || m > d.top + d.height)
              )
                this.handleMouseOut(l);
              else {
                if (
                  Array.isArray(this.tConfig.enabledOnSeries) &&
                  !u.config.tooltip.shared
                ) {
                  var y = parseInt(l.paths.getAttribute("index"), 10);
                  if (this.tConfig.enabledOnSeries.indexOf(y) < 0)
                    return void this.handleMouseOut(l);
                }
                var x = this.getElTooltip(),
                  S = this.getElXCrosshairs(),
                  _ =
                    u.globals.xyCharts ||
                    (u.config.chart.type === "bar" &&
                      !u.globals.isBarHorizontal &&
                      this.tooltipUtil.hasBars() &&
                      this.tConfig.shared) ||
                    (u.globals.comboCharts && this.tooltipUtil.hasBars());
                if (
                  s.type === "mousemove" ||
                  s.type === "touchmove" ||
                  s.type === "mouseup"
                ) {
                  if (
                    u.globals.collapsedSeries.length +
                      u.globals.ancillaryCollapsedSeries.length ===
                    u.globals.series.length
                  )
                    return;
                  S !== null && S.classList.add("apexcharts-active");
                  var C = this.yaxisTooltips.filter(function (H) {
                    return H === !0;
                  });
                  if (
                    (this.ycrosshairs !== null &&
                      C.length &&
                      this.ycrosshairs.classList.add("apexcharts-active"),
                    _ && !this.showOnIntersect)
                  )
                    this.handleStickyTooltip(s, f, m, l);
                  else if (
                    u.config.chart.type === "heatmap" ||
                    u.config.chart.type === "treemap"
                  ) {
                    var E = this.intersect.handleHeatTreeTooltip({
                      e: s,
                      opt: l,
                      x: i,
                      y: o,
                      type: u.config.chart.type,
                    });
                    (i = E.x),
                      (o = E.y),
                      (x.style.left = i + "px"),
                      (x.style.top = o + "px");
                  } else
                    this.tooltipUtil.hasBars() &&
                      this.intersect.handleBarTooltip({ e: s, opt: l }),
                      this.tooltipUtil.hasMarkers() &&
                        this.intersect.handleMarkerTooltip({
                          e: s,
                          opt: l,
                          x: i,
                          y: o,
                        });
                  if (this.yaxisTooltips.length)
                    for (var I = 0; I < u.config.yaxis.length; I++)
                      this.axesTooltip.drawYaxisTooltipText(
                        I,
                        m,
                        this.xyRatios,
                      );
                  l.tooltipEl.classList.add("apexcharts-active");
                } else
                  (s.type !== "mouseout" && s.type !== "touchend") ||
                    this.handleMouseOut(l);
              }
            },
          },
          {
            key: "nonAxisChartsTooltips",
            value: function (n) {
              var i = n.e,
                o = n.opt,
                s = n.tooltipRect,
                l = this.w,
                u = o.paths.getAttribute("rel"),
                d = this.getElTooltip(),
                f = l.globals.dom.elWrap.getBoundingClientRect();
              if (i.type === "mousemove" || i.type === "touchmove") {
                d.classList.add("apexcharts-active"),
                  this.tooltipLabels.drawSeriesTexts({
                    ttItems: o.ttItems,
                    i: parseInt(u, 10) - 1,
                    shared: !1,
                  });
                var m = l.globals.clientX - f.left - s.ttWidth / 2,
                  y = l.globals.clientY - f.top - s.ttHeight - 10;
                if (
                  ((d.style.left = m + "px"),
                  (d.style.top = y + "px"),
                  l.config.legend.tooltipHoverFormatter)
                ) {
                  var x = u - 1,
                    S = (0, l.config.legend.tooltipHoverFormatter)(
                      this.legendLabels[x].getAttribute("data:default-text"),
                      { seriesIndex: x, dataPointIndex: x, w: l },
                    );
                  this.legendLabels[x].innerHTML = S;
                }
              } else
                (i.type !== "mouseout" && i.type !== "touchend") ||
                  (d.classList.remove("apexcharts-active"),
                  l.config.legend.tooltipHoverFormatter &&
                    this.legendLabels.forEach(function (_) {
                      var C = _.getAttribute("data:default-text");
                      _.innerHTML = decodeURIComponent(C);
                    }));
            },
          },
          {
            key: "handleStickyTooltip",
            value: function (n, i, o, s) {
              var l = this.w,
                u = this.tooltipUtil.getNearestValues({
                  context: this,
                  hoverArea: s.hoverArea,
                  elGrid: s.elGrid,
                  clientX: i,
                  clientY: o,
                }),
                d = u.j,
                f = u.capturedSeries;
              l.globals.collapsedSeriesIndices.includes(f) && (f = null);
              var m = s.elGrid.getBoundingClientRect();
              if (u.hoverX < 0 || u.hoverX > m.width) this.handleMouseOut(s);
              else if (f !== null) this.handleStickyCapturedSeries(n, f, s, d);
              else if (
                this.tooltipUtil.isXoverlap(d) ||
                l.globals.isBarHorizontal
              ) {
                var y = l.globals.series.findIndex(function (x, S) {
                  return !l.globals.collapsedSeriesIndices.includes(S);
                });
                this.create(n, this, y, d, s.ttItems);
              }
            },
          },
          {
            key: "handleStickyCapturedSeries",
            value: function (n, i, o, s) {
              var l = this.w;
              if (!this.tConfig.shared && l.globals.series[i][s] === null)
                return void this.handleMouseOut(o);
              if (l.globals.series[i][s] !== void 0)
                this.tConfig.shared &&
                this.tooltipUtil.isXoverlap(s) &&
                this.tooltipUtil.isInitialSeriesSameLen()
                  ? this.create(n, this, i, s, o.ttItems)
                  : this.create(n, this, i, s, o.ttItems, !1);
              else if (this.tooltipUtil.isXoverlap(s)) {
                var u = l.globals.series.findIndex(function (d, f) {
                  return !l.globals.collapsedSeriesIndices.includes(f);
                });
                this.create(n, this, u, s, o.ttItems);
              }
            },
          },
          {
            key: "deactivateHoverFilter",
            value: function () {
              for (
                var n = this.w,
                  i = new B(this.ctx),
                  o = n.globals.dom.Paper.select(".apexcharts-bar-area"),
                  s = 0;
                s < o.length;
                s++
              )
                i.pathMouseLeave(o[s]);
            },
          },
          {
            key: "handleMouseOut",
            value: function (n) {
              var i = this.w,
                o = this.getElXCrosshairs();
              if (
                (n.tooltipEl.classList.remove("apexcharts-active"),
                this.deactivateHoverFilter(),
                i.config.chart.type !== "bubble" &&
                  this.marker.resetPointsSize(),
                o !== null && o.classList.remove("apexcharts-active"),
                this.ycrosshairs !== null &&
                  this.ycrosshairs.classList.remove("apexcharts-active"),
                this.isXAxisTooltipEnabled &&
                  this.xaxisTooltip.classList.remove("apexcharts-active"),
                this.yaxisTooltips.length)
              ) {
                this.yaxisTTEls === null &&
                  (this.yaxisTTEls = i.globals.dom.baseEl.querySelectorAll(
                    ".apexcharts-yaxistooltip",
                  ));
                for (var s = 0; s < this.yaxisTTEls.length; s++)
                  this.yaxisTTEls[s].classList.remove("apexcharts-active");
              }
              i.config.legend.tooltipHoverFormatter &&
                this.legendLabels.forEach(function (l) {
                  var u = l.getAttribute("data:default-text");
                  l.innerHTML = decodeURIComponent(u);
                });
            },
          },
          {
            key: "markerClick",
            value: function (n, i, o) {
              var s = this.w;
              typeof s.config.chart.events.markerClick == "function" &&
                s.config.chart.events.markerClick(n, this.ctx, {
                  seriesIndex: i,
                  dataPointIndex: o,
                  w: s,
                }),
                this.ctx.events.fireEvent("markerClick", [
                  n,
                  this.ctx,
                  { seriesIndex: i, dataPointIndex: o, w: s },
                ]);
            },
          },
          {
            key: "create",
            value: function (n, i, o, s, l) {
              var u,
                d,
                f,
                m,
                y,
                x,
                S,
                _,
                C,
                E,
                I,
                H,
                Y,
                g,
                w,
                A,
                D =
                  arguments.length > 5 && arguments[5] !== void 0
                    ? arguments[5]
                    : null,
                W = this.w,
                V = i;
              n.type === "mouseup" && this.markerClick(n, o, s),
                D === null && (D = this.tConfig.shared);
              var K = this.tooltipUtil.hasMarkers(o),
                Z = this.tooltipUtil.getElBars();
              if (W.config.legend.tooltipHoverFormatter) {
                var re = W.config.legend.tooltipHoverFormatter,
                  ce = Array.from(this.legendLabels);
                ce.forEach(function (Tr) {
                  var mi = Tr.getAttribute("data:default-text");
                  Tr.innerHTML = decodeURIComponent(mi);
                });
                for (var se = 0; se < ce.length; se++) {
                  var xe = ce[se],
                    be = parseInt(xe.getAttribute("i"), 10),
                    Ie = decodeURIComponent(
                      xe.getAttribute("data:default-text"),
                    ),
                    Fe = re(Ie, {
                      seriesIndex: D ? be : o,
                      dataPointIndex: s,
                      w: W,
                    });
                  if (D)
                    xe.innerHTML =
                      W.globals.collapsedSeriesIndices.indexOf(be) < 0
                        ? Fe
                        : Ie;
                  else if (((xe.innerHTML = be === o ? Fe : Ie), o === be))
                    break;
                }
              }
              var We = a(
                a(
                  { ttItems: l, i: o, j: s },
                  ((u = W.globals.seriesRange) === null ||
                  u === void 0 ||
                  (d = u[o]) === null ||
                  d === void 0 ||
                  (f = d[s]) === null ||
                  f === void 0 ||
                  (m = f.y[0]) === null ||
                  m === void 0
                    ? void 0
                    : m.y1) !== void 0 && {
                    y1:
                      (y = W.globals.seriesRange) === null ||
                      y === void 0 ||
                      (x = y[o]) === null ||
                      x === void 0 ||
                      (S = x[s]) === null ||
                      S === void 0 ||
                      (_ = S.y[0]) === null ||
                      _ === void 0
                        ? void 0
                        : _.y1,
                  },
                ),
                ((C = W.globals.seriesRange) === null ||
                C === void 0 ||
                (E = C[o]) === null ||
                E === void 0 ||
                (I = E[s]) === null ||
                I === void 0 ||
                (H = I.y[0]) === null ||
                H === void 0
                  ? void 0
                  : H.y2) !== void 0 && {
                  y2:
                    (Y = W.globals.seriesRange) === null ||
                    Y === void 0 ||
                    (g = Y[o]) === null ||
                    g === void 0 ||
                    (w = g[s]) === null ||
                    w === void 0 ||
                    (A = w.y[0]) === null ||
                    A === void 0
                      ? void 0
                      : A.y2,
                },
              );
              if (D) {
                if (
                  (V.tooltipLabels.drawSeriesTexts(
                    a(
                      a({}, We),
                      {},
                      { shared: !this.showOnIntersect && this.tConfig.shared },
                    ),
                  ),
                  K)
                )
                  W.globals.markers.largestSize > 0
                    ? V.marker.enlargePoints(s)
                    : V.tooltipPosition.moveDynamicPointsOnHover(s);
                else if (
                  this.tooltipUtil.hasBars() &&
                  ((this.barSeriesHeight = this.tooltipUtil.getBarsHeight(Z)),
                  this.barSeriesHeight > 0)
                ) {
                  var lt = new B(this.ctx),
                    et = W.globals.dom.Paper.select(
                      ".apexcharts-bar-area[j='".concat(s, "']"),
                    );
                  this.deactivateHoverFilter(),
                    this.tooltipPosition.moveStickyTooltipOverBars(s, o);
                  for (var ft = 0; ft < et.length; ft++)
                    lt.pathMouseEnter(et[ft]);
                }
              } else
                V.tooltipLabels.drawSeriesTexts(a({ shared: !1 }, We)),
                  this.tooltipUtil.hasBars() &&
                    V.tooltipPosition.moveStickyTooltipOverBars(s, o),
                  K && V.tooltipPosition.moveMarkers(o, s);
            },
          },
        ]),
        T
      );
    })(),
    As = (function () {
      function T(n) {
        h(this, T),
          (this.w = n.w),
          (this.barCtx = n),
          (this.totalFormatter =
            this.w.config.plotOptions.bar.dataLabels.total.formatter),
          this.totalFormatter ||
            (this.totalFormatter = this.w.config.dataLabels.formatter);
      }
      return (
        v(T, [
          {
            key: "handleBarDataLabels",
            value: function (n) {
              var i = n.x,
                o = n.y,
                s = n.y1,
                l = n.y2,
                u = n.i,
                d = n.j,
                f = n.realIndex,
                m = n.groupIndex,
                y = n.series,
                x = n.barHeight,
                S = n.barWidth,
                _ = n.barXPosition,
                C = n.barYPosition,
                E = n.visibleSeries,
                I = n.renderedPath,
                H = this.w,
                Y = new B(this.barCtx.ctx),
                g = Array.isArray(this.barCtx.strokeWidth)
                  ? this.barCtx.strokeWidth[f]
                  : this.barCtx.strokeWidth,
                w = i + parseFloat(S * E),
                A = o + parseFloat(x * E);
              H.globals.isXNumeric &&
                !H.globals.isBarHorizontal &&
                ((w = i + parseFloat(S * (E + 1))),
                (A = o + parseFloat(x * (E + 1)) - g));
              var D,
                W = null,
                V = i,
                K = o,
                Z = {},
                re = H.config.dataLabels,
                ce = this.barCtx.barOptions.dataLabels,
                se = this.barCtx.barOptions.dataLabels.total;
              C !== void 0 && this.barCtx.isRangeBar && ((A = C), (K = C)),
                _ !== void 0 &&
                  this.barCtx.isVerticalGroupedRangeBar &&
                  ((w = _), (V = _));
              var xe = re.offsetX,
                be = re.offsetY,
                Ie = { width: 0, height: 0 };
              if (H.config.dataLabels.enabled) {
                var Fe = this.barCtx.series[u][d];
                Ie = Y.getTextRects(
                  H.globals.yLabelFormatters[0](Fe),
                  parseFloat(re.style.fontSize),
                );
              }
              var We = {
                x: i,
                y: o,
                i: u,
                j: d,
                realIndex: f,
                groupIndex: m || -1,
                renderedPath: I,
                bcx: w,
                bcy: A,
                barHeight: x,
                barWidth: S,
                textRects: Ie,
                strokeWidth: g,
                dataLabelsX: V,
                dataLabelsY: K,
                dataLabelsConfig: re,
                barDataLabelsConfig: ce,
                barTotalDataLabelsConfig: se,
                offX: xe,
                offY: be,
              };
              return (
                (Z = this.barCtx.isHorizontal
                  ? this.calculateBarsDataLabelsPosition(We)
                  : this.calculateColumnsDataLabelsPosition(We)),
                I.attr({
                  cy: Z.bcy,
                  cx: Z.bcx,
                  j: d,
                  val: y[u][d],
                  barHeight: x,
                  barWidth: S,
                }),
                (D = this.drawCalculatedDataLabels({
                  x: Z.dataLabelsX,
                  y: Z.dataLabelsY,
                  val: this.barCtx.isRangeBar ? [s, l] : y[u][d],
                  i: f,
                  j: d,
                  barWidth: S,
                  barHeight: x,
                  textRects: Ie,
                  dataLabelsConfig: re,
                })),
                H.config.chart.stacked &&
                  se.enabled &&
                  (W = this.drawTotalDataLabels({
                    x: Z.totalDataLabelsX,
                    y: Z.totalDataLabelsY,
                    realIndex: f,
                    textAnchor: Z.totalDataLabelsAnchor,
                    val: this.getStackedTotalDataLabel({ realIndex: f, j: d }),
                    dataLabelsConfig: re,
                    barTotalDataLabelsConfig: se,
                  })),
                { dataLabels: D, totalDataLabels: W }
              );
            },
          },
          {
            key: "getStackedTotalDataLabel",
            value: function (n) {
              var i = n.realIndex,
                o = n.j,
                s = this.w,
                l = this.barCtx.stackedSeriesTotals[o];
              return (
                this.totalFormatter &&
                  (l = this.totalFormatter(
                    l,
                    a(
                      a({}, s),
                      {},
                      { seriesIndex: i, dataPointIndex: o, w: s },
                    ),
                  )),
                l
              );
            },
          },
          {
            key: "calculateColumnsDataLabelsPosition",
            value: function (n) {
              var i,
                o,
                s = this.w,
                l = n.i,
                u = n.j,
                d = n.realIndex,
                f = n.groupIndex,
                m = n.y,
                y = n.bcx,
                x = n.barWidth,
                S = n.barHeight,
                _ = n.textRects,
                C = n.dataLabelsX,
                E = n.dataLabelsY,
                I = n.dataLabelsConfig,
                H = n.barDataLabelsConfig,
                Y = n.barTotalDataLabelsConfig,
                g = n.strokeWidth,
                w = n.offX,
                A = n.offY;
              S = Math.abs(S);
              var D =
                  s.config.plotOptions.bar.dataLabels.orientation ===
                  "vertical",
                W = this.barCtx.barHelpers.getZeroValueEncounters({
                  i: l,
                  j: u,
                }).zeroEncounters;
              y = y - g / 2 + (f !== -1 ? f * x : 0);
              var V = s.globals.gridWidth / s.globals.dataPoints;
              this.barCtx.isVerticalGroupedRangeBar
                ? (C += x / 2)
                : ((C = s.globals.isXNumeric
                    ? y - x / 2 + w
                    : y - V + x / 2 + w),
                  W > 0 &&
                    s.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                    (C -= x * W)),
                D && (C = C + _.height / 2 - g / 2 - 2);
              var K = this.barCtx.series[l][u] < 0,
                Z = m;
              switch (
                (this.barCtx.isReversed &&
                  ((Z = m - S + (K ? 2 * S : 0)), (m -= S)),
                H.position)
              ) {
                case "center":
                  E = D
                    ? K
                      ? Z - S / 2 + A
                      : Z + S / 2 - A
                    : K
                    ? Z - S / 2 + _.height / 2 + A
                    : Z + S / 2 + _.height / 2 - A;
                  break;
                case "bottom":
                  E = D
                    ? K
                      ? Z - S + A
                      : Z + S - A
                    : K
                    ? Z - S + _.height + g + A
                    : Z + S - _.height / 2 + g - A;
                  break;
                case "top":
                  E = D
                    ? K
                      ? Z + A
                      : Z - A
                    : K
                    ? Z - _.height / 2 - A
                    : Z + _.height + A;
              }
              if (this.barCtx.lastActiveBarSerieIndex === d && Y.enabled) {
                var re = new B(this.barCtx.ctx).getTextRects(
                  this.getStackedTotalDataLabel({ realIndex: d, j: u }),
                  I.fontSize,
                );
                (i = K
                  ? Z - re.height / 2 - A - Y.offsetY + 18
                  : Z + re.height + A + Y.offsetY - 18),
                  (o = C + Y.offsetX);
              }
              return (
                s.config.chart.stacked ||
                  (E < 0
                    ? (E = 0 + g)
                    : E + _.height / 3 > s.globals.gridHeight &&
                      (E = s.globals.gridHeight - g)),
                {
                  bcx: y,
                  bcy: m,
                  dataLabelsX: C,
                  dataLabelsY: E,
                  totalDataLabelsX: o,
                  totalDataLabelsY: i,
                  totalDataLabelsAnchor: "middle",
                }
              );
            },
          },
          {
            key: "calculateBarsDataLabelsPosition",
            value: function (n) {
              var i = this.w,
                o = n.x,
                s = n.i,
                l = n.j,
                u = n.realIndex,
                d = n.groupIndex,
                f = n.bcy,
                m = n.barHeight,
                y = n.barWidth,
                x = n.textRects,
                S = n.dataLabelsX,
                _ = n.strokeWidth,
                C = n.dataLabelsConfig,
                E = n.barDataLabelsConfig,
                I = n.barTotalDataLabelsConfig,
                H = n.offX,
                Y = n.offY,
                g = i.globals.gridHeight / i.globals.dataPoints;
              y = Math.abs(y);
              var w,
                A,
                D =
                  (f += d !== -1 ? d * m : 0) -
                  (this.barCtx.isRangeBar ? 0 : g) +
                  m / 2 +
                  x.height / 2 +
                  Y -
                  3,
                W = "start",
                V = this.barCtx.series[s][l] < 0,
                K = o;
              switch (
                (this.barCtx.isReversed &&
                  ((K = o + y - (V ? 2 * y : 0)),
                  (o = i.globals.gridWidth - y)),
                E.position)
              ) {
                case "center":
                  S = V ? K + y / 2 - H : Math.max(x.width / 2, K - y / 2) + H;
                  break;
                case "bottom":
                  S = V
                    ? K + y - _ - Math.round(x.width / 2) - H
                    : K - y + _ + Math.round(x.width / 2) + H;
                  break;
                case "top":
                  S = V
                    ? K - _ + Math.round(x.width / 2) - H
                    : K - _ - Math.round(x.width / 2) + H;
              }
              if (this.barCtx.lastActiveBarSerieIndex === u && I.enabled) {
                var Z = new B(this.barCtx.ctx).getTextRects(
                  this.getStackedTotalDataLabel({ realIndex: u, j: l }),
                  C.fontSize,
                );
                V
                  ? ((w = K - _ + Math.round(Z.width / 2) - H - I.offsetX - 15),
                    (W = "end"))
                  : (w = K - _ - Math.round(Z.width / 2) + H + I.offsetX + 15),
                  (A = D + I.offsetY);
              }
              return (
                i.config.chart.stacked ||
                  (S < 0
                    ? (S = S + x.width + _)
                    : S + x.width / 2 > i.globals.gridWidth &&
                      (S = i.globals.gridWidth - x.width - _)),
                {
                  bcx: o,
                  bcy: f,
                  dataLabelsX: S,
                  dataLabelsY: D,
                  totalDataLabelsX: w,
                  totalDataLabelsY: A,
                  totalDataLabelsAnchor: W,
                }
              );
            },
          },
          {
            key: "drawCalculatedDataLabels",
            value: function (n) {
              var i = n.x,
                o = n.y,
                s = n.val,
                l = n.i,
                u = n.j,
                d = n.textRects,
                f = n.barHeight,
                m = n.barWidth,
                y = n.dataLabelsConfig,
                x = this.w,
                S = "rotate(0)";
              x.config.plotOptions.bar.dataLabels.orientation === "vertical" &&
                (S = "rotate(-90, ".concat(i, ", ").concat(o, ")"));
              var _ = new Qe(this.barCtx.ctx),
                C = new B(this.barCtx.ctx),
                E = y.formatter,
                I = null,
                H = x.globals.collapsedSeriesIndices.indexOf(l) > -1;
              if (y.enabled && !H) {
                I = C.group({ class: "apexcharts-data-labels", transform: S });
                var Y = "";
                s !== void 0 &&
                  (Y = E(
                    s,
                    a(
                      a({}, x),
                      {},
                      { seriesIndex: l, dataPointIndex: u, w: x },
                    ),
                  )),
                  !s &&
                    x.config.plotOptions.bar.hideZeroBarsWhenGrouped &&
                    (Y = "");
                var g = x.globals.series[l][u] < 0,
                  w = x.config.plotOptions.bar.dataLabels.position;
                x.config.plotOptions.bar.dataLabels.orientation ===
                  "vertical" &&
                  (w === "top" && (y.textAnchor = g ? "end" : "start"),
                  w === "center" && (y.textAnchor = "middle"),
                  w === "bottom" && (y.textAnchor = g ? "end" : "start")),
                  this.barCtx.isRangeBar &&
                    this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                    m < C.getTextRects(Y, parseFloat(y.style.fontSize)).width &&
                    (Y = ""),
                  x.config.chart.stacked &&
                    this.barCtx.barOptions.dataLabels.hideOverflowingLabels &&
                    (this.barCtx.isHorizontal
                      ? d.width / 1.6 > Math.abs(m) && (Y = "")
                      : d.height / 1.6 > Math.abs(f) && (Y = ""));
                var A = a({}, y);
                this.barCtx.isHorizontal &&
                  s < 0 &&
                  (y.textAnchor === "start"
                    ? (A.textAnchor = "end")
                    : y.textAnchor === "end" && (A.textAnchor = "start")),
                  _.plotDataLabelsText({
                    x: i,
                    y: o,
                    text: Y,
                    i: l,
                    j: u,
                    parent: I,
                    dataLabelsConfig: A,
                    alwaysDrawDataLabel: !0,
                    offsetCorrection: !0,
                  });
              }
              return I;
            },
          },
          {
            key: "drawTotalDataLabels",
            value: function (n) {
              var i,
                o = n.x,
                s = n.y,
                l = n.val,
                u = n.realIndex,
                d = n.textAnchor,
                f = n.barTotalDataLabelsConfig,
                m = new B(this.barCtx.ctx);
              return (
                f.enabled &&
                  o !== void 0 &&
                  s !== void 0 &&
                  this.barCtx.lastActiveBarSerieIndex === u &&
                  (i = m.drawText({
                    x: o,
                    y: s,
                    foreColor: f.style.color,
                    text: l,
                    textAnchor: d,
                    fontFamily: f.style.fontFamily,
                    fontSize: f.style.fontSize,
                    fontWeight: f.style.fontWeight,
                  })),
                i
              );
            },
          },
        ]),
        T
      );
    })(),
    Xd = (function () {
      function T(n) {
        h(this, T), (this.w = n.w), (this.barCtx = n);
      }
      return (
        v(T, [
          {
            key: "initVariables",
            value: function (n) {
              var i = this.w;
              (this.barCtx.series = n),
                (this.barCtx.totalItems = 0),
                (this.barCtx.seriesLen = 0),
                (this.barCtx.visibleI = -1),
                (this.barCtx.visibleItems = 1);
              for (var o = 0; o < n.length; o++)
                if (
                  (n[o].length > 0 &&
                    ((this.barCtx.seriesLen = this.barCtx.seriesLen + 1),
                    (this.barCtx.totalItems += n[o].length)),
                  i.globals.isXNumeric)
                )
                  for (var s = 0; s < n[o].length; s++)
                    i.globals.seriesX[o][s] > i.globals.minX &&
                      i.globals.seriesX[o][s] < i.globals.maxX &&
                      this.barCtx.visibleItems++;
                else this.barCtx.visibleItems = i.globals.dataPoints;
              this.barCtx.seriesLen === 0 && (this.barCtx.seriesLen = 1),
                (this.barCtx.zeroSerieses = []),
                i.globals.comboCharts || this.checkZeroSeries({ series: n });
            },
          },
          {
            key: "initialPositions",
            value: function () {
              var n,
                i,
                o,
                s,
                l,
                u,
                d,
                f,
                m = this.w,
                y = m.globals.dataPoints;
              this.barCtx.isRangeBar && (y = m.globals.labels.length);
              var x = this.barCtx.seriesLen;
              if (
                (m.config.plotOptions.bar.rangeBarGroupRows && (x = 1),
                this.barCtx.isHorizontal)
              )
                (l = (o = m.globals.gridHeight / y) / x),
                  m.globals.isXNumeric &&
                    (l =
                      (o = m.globals.gridHeight / this.barCtx.totalItems) /
                      this.barCtx.seriesLen),
                  (l =
                    (l * parseInt(this.barCtx.barOptions.barHeight, 10)) / 100),
                  String(this.barCtx.barOptions.barHeight).indexOf("%") ===
                    -1 && (l = parseInt(this.barCtx.barOptions.barHeight, 10)),
                  (f =
                    this.barCtx.baseLineInvertedY +
                    m.globals.padHorizontal +
                    (this.barCtx.isReversed ? m.globals.gridWidth : 0) -
                    (this.barCtx.isReversed
                      ? 2 * this.barCtx.baseLineInvertedY
                      : 0)),
                  this.barCtx.isFunnel && (f = m.globals.gridWidth / 2),
                  (i = (o - l * this.barCtx.seriesLen) / 2);
              else {
                if (
                  ((s = m.globals.gridWidth / this.barCtx.visibleItems),
                  m.config.xaxis.convertedCatToNumeric &&
                    (s = m.globals.gridWidth / m.globals.dataPoints),
                  (u =
                    ((s / x) *
                      parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                    100),
                  m.globals.isXNumeric)
                ) {
                  var S = this.barCtx.xRatio;
                  m.config.xaxis.convertedCatToNumeric &&
                    (S = this.barCtx.initialXRatio),
                    m.globals.minXDiff &&
                      m.globals.minXDiff !== 0.5 &&
                      m.globals.minXDiff / S > 0 &&
                      (s = m.globals.minXDiff / S),
                    (u =
                      ((s / x) *
                        parseInt(this.barCtx.barOptions.columnWidth, 10)) /
                      100) < 1 && (u = 1);
                }
                String(this.barCtx.barOptions.columnWidth).indexOf("%") ===
                  -1 && (u = parseInt(this.barCtx.barOptions.columnWidth, 10)),
                  (d =
                    m.globals.gridHeight -
                    this.barCtx.baseLineY[this.barCtx.yaxisIndex] -
                    (this.barCtx.isReversed ? m.globals.gridHeight : 0) +
                    (this.barCtx.isReversed
                      ? 2 * this.barCtx.baseLineY[this.barCtx.yaxisIndex]
                      : 0)),
                  (n =
                    m.globals.padHorizontal +
                    (s - u * this.barCtx.seriesLen) / 2);
              }
              return {
                x: n,
                y: i,
                yDivision: o,
                xDivision: s,
                barHeight: l,
                barWidth: u,
                zeroH: d,
                zeroW: f,
              };
            },
          },
          {
            key: "initializeStackedPrevVars",
            value: function (n) {
              var i = n.w;
              i.globals.hasSeriesGroups
                ? i.globals.seriesGroups.forEach(function (o) {
                    n[o] || (n[o] = {}),
                      (n[o].prevY = []),
                      (n[o].prevX = []),
                      (n[o].prevYF = []),
                      (n[o].prevXF = []),
                      (n[o].prevYVal = []),
                      (n[o].prevXVal = []);
                  })
                : ((n.prevY = []),
                  (n.prevX = []),
                  (n.prevYF = []),
                  (n.prevXF = []),
                  (n.prevYVal = []),
                  (n.prevXVal = []));
            },
          },
          {
            key: "initializeStackedXYVars",
            value: function (n) {
              var i = n.w;
              i.globals.hasSeriesGroups
                ? i.globals.seriesGroups.forEach(function (o) {
                    n[o] || (n[o] = {}),
                      (n[o].xArrj = []),
                      (n[o].xArrjF = []),
                      (n[o].xArrjVal = []),
                      (n[o].yArrj = []),
                      (n[o].yArrjF = []),
                      (n[o].yArrjVal = []);
                  })
                : ((n.xArrj = []),
                  (n.xArrjF = []),
                  (n.xArrjVal = []),
                  (n.yArrj = []),
                  (n.yArrjF = []),
                  (n.yArrjVal = []));
            },
          },
          {
            key: "getPathFillColor",
            value: function (n, i, o, s) {
              var l,
                u,
                d,
                f,
                m = this.w,
                y = new Ce(this.barCtx.ctx),
                x = null,
                S = this.barCtx.barOptions.distributed ? o : i;
              return (
                this.barCtx.barOptions.colors.ranges.length > 0 &&
                  this.barCtx.barOptions.colors.ranges.map(function (_) {
                    n[i][o] >= _.from && n[i][o] <= _.to && (x = _.color);
                  }),
                m.config.series[i].data[o] &&
                  m.config.series[i].data[o].fillColor &&
                  (x = m.config.series[i].data[o].fillColor),
                y.fillPath({
                  seriesNumber: this.barCtx.barOptions.distributed ? S : s,
                  dataPointIndex: o,
                  color: x,
                  value: n[i][o],
                  fillConfig:
                    (l = m.config.series[i].data[o]) === null || l === void 0
                      ? void 0
                      : l.fill,
                  fillType:
                    (u = m.config.series[i].data[o]) !== null &&
                    u !== void 0 &&
                    (d = u.fill) !== null &&
                    d !== void 0 &&
                    d.type
                      ? (f = m.config.series[i].data[o]) === null ||
                        f === void 0
                        ? void 0
                        : f.fill.type
                      : m.config.fill.type,
                })
              );
            },
          },
          {
            key: "getStrokeWidth",
            value: function (n, i, o) {
              var s = 0,
                l = this.w;
              return (
                this.barCtx.series[n][i]
                  ? (this.barCtx.isNullValue = !1)
                  : (this.barCtx.isNullValue = !0),
                l.config.stroke.show &&
                  (this.barCtx.isNullValue ||
                    (s = Array.isArray(this.barCtx.strokeWidth)
                      ? this.barCtx.strokeWidth[o]
                      : this.barCtx.strokeWidth)),
                s
              );
            },
          },
          {
            key: "shouldApplyRadius",
            value: function (n) {
              var i = this.w,
                o = !1;
              return (
                i.config.plotOptions.bar.borderRadius > 0 &&
                  (i.config.chart.stacked &&
                  i.config.plotOptions.bar.borderRadiusWhenStacked === "last"
                    ? this.barCtx.lastActiveBarSerieIndex === n && (o = !0)
                    : (o = !0)),
                o
              );
            },
          },
          {
            key: "barBackground",
            value: function (n) {
              var i = n.j,
                o = n.i,
                s = n.x1,
                l = n.x2,
                u = n.y1,
                d = n.y2,
                f = n.elSeries,
                m = this.w,
                y = new B(this.barCtx.ctx),
                x = new Be(this.barCtx.ctx).getActiveConfigSeriesIndex();
              if (
                this.barCtx.barOptions.colors.backgroundBarColors.length > 0 &&
                x === o
              ) {
                i >= this.barCtx.barOptions.colors.backgroundBarColors.length &&
                  (i %=
                    this.barCtx.barOptions.colors.backgroundBarColors.length);
                var S = this.barCtx.barOptions.colors.backgroundBarColors[i],
                  _ = y.drawRect(
                    s !== void 0 ? s : 0,
                    u !== void 0 ? u : 0,
                    l !== void 0 ? l : m.globals.gridWidth,
                    d !== void 0 ? d : m.globals.gridHeight,
                    this.barCtx.barOptions.colors.backgroundBarRadius,
                    S,
                    this.barCtx.barOptions.colors.backgroundBarOpacity,
                  );
                f.add(_), _.node.classList.add("apexcharts-backgroundBar");
              }
            },
          },
          {
            key: "getColumnPaths",
            value: function (n) {
              var i,
                o = n.barWidth,
                s = n.barXPosition,
                l = n.y1,
                u = n.y2,
                d = n.strokeWidth,
                f = n.seriesGroup,
                m = n.realIndex,
                y = n.i,
                x = n.j,
                S = n.w,
                _ = new B(this.barCtx.ctx);
              (d = Array.isArray(d) ? d[m] : d) || (d = 0);
              var C = o,
                E = s;
              (i = S.config.series[m].data[x]) !== null &&
                i !== void 0 &&
                i.columnWidthOffset &&
                ((E = s - S.config.series[m].data[x].columnWidthOffset / 2),
                (C = o + S.config.series[m].data[x].columnWidthOffset));
              var I = E,
                H = E + C;
              (l += 0.001), (u += 0.001);
              var Y = _.move(I, l),
                g = _.move(I, l),
                w = _.line(H - d, l);
              if (
                (S.globals.previousPaths.length > 0 &&
                  (g = this.barCtx.getPreviousPath(m, x, !1)),
                (Y =
                  Y +
                  _.line(I, u) +
                  _.line(H - d, u) +
                  _.line(H - d, l) +
                  (S.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                (g =
                  g +
                  _.line(I, l) +
                  w +
                  w +
                  w +
                  w +
                  w +
                  _.line(I, l) +
                  (S.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                this.shouldApplyRadius(m) &&
                  (Y = _.roundPathCorners(
                    Y,
                    S.config.plotOptions.bar.borderRadius,
                  )),
                S.config.chart.stacked)
              ) {
                var A = this.barCtx;
                S.globals.hasSeriesGroups && f && (A = this.barCtx[f]),
                  A.yArrj.push(u),
                  A.yArrjF.push(Math.abs(l - u)),
                  A.yArrjVal.push(this.barCtx.series[y][x]);
              }
              return { pathTo: Y, pathFrom: g };
            },
          },
          {
            key: "getBarpaths",
            value: function (n) {
              var i,
                o = n.barYPosition,
                s = n.barHeight,
                l = n.x1,
                u = n.x2,
                d = n.strokeWidth,
                f = n.seriesGroup,
                m = n.realIndex,
                y = n.i,
                x = n.j,
                S = n.w,
                _ = new B(this.barCtx.ctx);
              (d = Array.isArray(d) ? d[m] : d) || (d = 0);
              var C = o,
                E = s;
              (i = S.config.series[m].data[x]) !== null &&
                i !== void 0 &&
                i.barHeightOffset &&
                ((C = o - S.config.series[m].data[x].barHeightOffset / 2),
                (E = s + S.config.series[m].data[x].barHeightOffset));
              var I = C,
                H = C + E;
              (l += 0.001), (u += 0.001);
              var Y = _.move(l, I),
                g = _.move(l, I);
              S.globals.previousPaths.length > 0 &&
                (g = this.barCtx.getPreviousPath(m, x, !1));
              var w = _.line(l, H - d);
              if (
                ((Y =
                  Y +
                  _.line(u, I) +
                  _.line(u, H - d) +
                  w +
                  (S.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                (g =
                  g +
                  _.line(l, I) +
                  w +
                  w +
                  w +
                  w +
                  w +
                  _.line(l, I) +
                  (S.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z")),
                this.shouldApplyRadius(m) &&
                  (Y = _.roundPathCorners(
                    Y,
                    S.config.plotOptions.bar.borderRadius,
                  )),
                S.config.chart.stacked)
              ) {
                var A = this.barCtx;
                S.globals.hasSeriesGroups && f && (A = this.barCtx[f]),
                  A.xArrj.push(u),
                  A.xArrjF.push(Math.abs(l - u)),
                  A.xArrjVal.push(this.barCtx.series[y][x]);
              }
              return { pathTo: Y, pathFrom: g };
            },
          },
          {
            key: "checkZeroSeries",
            value: function (n) {
              for (var i = n.series, o = this.w, s = 0; s < i.length; s++) {
                for (
                  var l = 0, u = 0;
                  u < i[o.globals.maxValsInArrayIndex].length;
                  u++
                )
                  l += i[s][u];
                l === 0 && this.barCtx.zeroSerieses.push(s);
              }
            },
          },
          {
            key: "getXForValue",
            value: function (n, i) {
              var o =
                !(arguments.length > 2 && arguments[2] !== void 0) ||
                arguments[2]
                  ? i
                  : null;
              return (
                n != null &&
                  (o =
                    i +
                    n / this.barCtx.invertedYRatio -
                    2 *
                      (this.barCtx.isReversed
                        ? n / this.barCtx.invertedYRatio
                        : 0)),
                o
              );
            },
          },
          {
            key: "getYForValue",
            value: function (n, i) {
              var o =
                !(arguments.length > 2 && arguments[2] !== void 0) ||
                arguments[2]
                  ? i
                  : null;
              return (
                n != null &&
                  (o =
                    i -
                    n / this.barCtx.yRatio[this.barCtx.yaxisIndex] +
                    2 *
                      (this.barCtx.isReversed
                        ? n / this.barCtx.yRatio[this.barCtx.yaxisIndex]
                        : 0)),
                o
              );
            },
          },
          {
            key: "getGoalValues",
            value: function (n, i, o, s, l) {
              var u = this,
                d = this.w,
                f = [],
                m = function (S, _) {
                  var C;
                  f.push(
                    (b(
                      (C = {}),
                      n,
                      n === "x"
                        ? u.getXForValue(S, i, !1)
                        : u.getYForValue(S, o, !1),
                    ),
                    b(C, "attrs", _),
                    C),
                  );
                };
              if (
                (d.globals.seriesGoals[s] &&
                  d.globals.seriesGoals[s][l] &&
                  Array.isArray(d.globals.seriesGoals[s][l]) &&
                  d.globals.seriesGoals[s][l].forEach(function (S) {
                    m(S.value, S);
                  }),
                this.barCtx.barOptions.isDumbbell &&
                  d.globals.seriesRange.length)
              ) {
                var y = this.barCtx.barOptions.dumbbellColors
                    ? this.barCtx.barOptions.dumbbellColors
                    : d.globals.colors,
                  x = {
                    strokeHeight: n === "x" ? 0 : d.globals.markers.size[s],
                    strokeWidth: n === "x" ? d.globals.markers.size[s] : 0,
                    strokeDashArray: 0,
                    strokeLineCap: "round",
                    strokeColor: Array.isArray(y[s]) ? y[s][0] : y[s],
                  };
                m(d.globals.seriesRangeStart[s][l], x),
                  m(
                    d.globals.seriesRangeEnd[s][l],
                    a(
                      a({}, x),
                      {},
                      { strokeColor: Array.isArray(y[s]) ? y[s][1] : y[s] },
                    ),
                  );
              }
              return f;
            },
          },
          {
            key: "drawGoalLine",
            value: function (n) {
              var i = n.barXPosition,
                o = n.barYPosition,
                s = n.goalX,
                l = n.goalY,
                u = n.barWidth,
                d = n.barHeight,
                f = new B(this.barCtx.ctx),
                m = f.group({ className: "apexcharts-bar-goals-groups" });
              m.node.classList.add("apexcharts-element-hidden"),
                this.barCtx.w.globals.delayedElements.push({ el: m.node }),
                m.attr(
                  "clip-path",
                  "url(#gridRectMarkerMask".concat(
                    this.barCtx.w.globals.cuid,
                    ")",
                  ),
                );
              var y = null;
              return (
                this.barCtx.isHorizontal
                  ? Array.isArray(s) &&
                    s.forEach(function (x) {
                      var S =
                          x.attrs.strokeHeight !== void 0
                            ? x.attrs.strokeHeight
                            : d / 2,
                        _ = o + S + d / 2;
                      (y = f.drawLine(
                        x.x,
                        _ - 2 * S,
                        x.x,
                        _,
                        x.attrs.strokeColor ? x.attrs.strokeColor : void 0,
                        x.attrs.strokeDashArray,
                        x.attrs.strokeWidth ? x.attrs.strokeWidth : 2,
                        x.attrs.strokeLineCap,
                      )),
                        m.add(y);
                    })
                  : Array.isArray(l) &&
                    l.forEach(function (x) {
                      var S =
                          x.attrs.strokeWidth !== void 0
                            ? x.attrs.strokeWidth
                            : u / 2,
                        _ = i + S + u / 2;
                      (y = f.drawLine(
                        _ - 2 * S,
                        x.y,
                        _,
                        x.y,
                        x.attrs.strokeColor ? x.attrs.strokeColor : void 0,
                        x.attrs.strokeDashArray,
                        x.attrs.strokeHeight ? x.attrs.strokeHeight : 2,
                        x.attrs.strokeLineCap,
                      )),
                        m.add(y);
                    }),
                m
              );
            },
          },
          {
            key: "drawBarShadow",
            value: function (n) {
              var i = n.prevPaths,
                o = n.currPaths,
                s = n.color,
                l = this.w,
                u = i.x,
                d = i.x1,
                f = i.barYPosition,
                m = o.x,
                y = o.x1,
                x = o.barYPosition,
                S = f + o.barHeight,
                _ = new B(this.barCtx.ctx),
                C = new O(),
                E =
                  _.move(d, S) +
                  _.line(u, S) +
                  _.line(m, x) +
                  _.line(y, x) +
                  _.line(d, S) +
                  (l.config.plotOptions.bar.borderRadiusApplication === "around"
                    ? " Z"
                    : " z");
              return _.drawPath({
                d: E,
                fill: C.shadeColor(0.5, O.rgb2hex(s)),
                stroke: "none",
                strokeWidth: 0,
                fillOpacity: 1,
                classes: "apexcharts-bar-shadows",
              });
            },
          },
          {
            key: "getZeroValueEncounters",
            value: function (n) {
              var i = n.i,
                o = n.j,
                s = this.w,
                l = 0,
                u = 0;
              return (
                s.globals.seriesPercent.forEach(function (d, f) {
                  d[o] && l++, f < i && d[o] === 0 && u++;
                }),
                { nonZeroColumns: l, zeroEncounters: u }
              );
            },
          },
        ]),
        T
      );
    })(),
    J = (function () {
      function T(n, i) {
        h(this, T), (this.ctx = n), (this.w = n.w);
        var o = this.w;
        (this.barOptions = o.config.plotOptions.bar),
          (this.isHorizontal = this.barOptions.horizontal),
          (this.strokeWidth = o.config.stroke.width),
          (this.isNullValue = !1),
          (this.isRangeBar = o.globals.seriesRange.length && this.isHorizontal),
          (this.isVerticalGroupedRangeBar =
            !o.globals.isBarHorizontal &&
            o.globals.seriesRange.length &&
            o.config.plotOptions.bar.rangeBarGroupRows),
          (this.isFunnel = this.barOptions.isFunnel),
          (this.xyRatios = i),
          this.xyRatios !== null &&
            ((this.xRatio = i.xRatio),
            (this.initialXRatio = i.initialXRatio),
            (this.yRatio = i.yRatio),
            (this.invertedXRatio = i.invertedXRatio),
            (this.invertedYRatio = i.invertedYRatio),
            (this.baseLineY = i.baseLineY),
            (this.baseLineInvertedY = i.baseLineInvertedY)),
          (this.yaxisIndex = 0),
          (this.seriesLen = 0),
          (this.pathArr = []);
        var s = new Be(this.ctx);
        this.lastActiveBarSerieIndex = s.getActiveConfigSeriesIndex("desc", [
          "bar",
          "column",
        ]);
        var l = s.getBarSeriesIndices(),
          u = new U(this.ctx);
        (this.stackedSeriesTotals = u.getStackedSeriesTotals(
          this.w.config.series
            .map(function (d, f) {
              return l.indexOf(f) === -1 ? f : -1;
            })
            .filter(function (d) {
              return d !== -1;
            }),
        )),
          (this.barHelpers = new Xd(this));
      }
      return (
        v(T, [
          {
            key: "draw",
            value: function (n, i) {
              var o = this.w,
                s = new B(this.ctx),
                l = new U(this.ctx, o);
              (n = l.getLogSeries(n)),
                (this.series = n),
                (this.yRatio = l.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(n);
              var u = s.group({
                class: "apexcharts-bar-series apexcharts-plot-series",
              });
              o.config.dataLabels.enabled &&
                this.totalItems > this.barOptions.dataLabels.maxItems &&
                console.warn(
                  "WARNING: DataLabels are enabled but there are too many to display. This may cause performance issue when rendering - ApexCharts",
                );
              for (var d = 0, f = 0; d < n.length; d++, f++) {
                var m,
                  y,
                  x,
                  S,
                  _ = void 0,
                  C = void 0,
                  E = [],
                  I = [],
                  H = o.globals.comboCharts ? i[d] : d,
                  Y = s.group({
                    class: "apexcharts-series",
                    rel: d + 1,
                    seriesName: O.escapeString(o.globals.seriesNames[H]),
                    "data:realIndex": H,
                  });
                this.ctx.series.addCollapsedClassToSeries(Y, H),
                  n[d].length > 0 && (this.visibleI = this.visibleI + 1);
                var g = 0,
                  w = 0;
                this.yRatio.length > 1 && (this.yaxisIndex = H),
                  (this.isReversed =
                    o.config.yaxis[this.yaxisIndex] &&
                    o.config.yaxis[this.yaxisIndex].reversed);
                var A = this.barHelpers.initialPositions();
                (C = A.y),
                  (g = A.barHeight),
                  (y = A.yDivision),
                  (S = A.zeroW),
                  (_ = A.x),
                  (w = A.barWidth),
                  (m = A.xDivision),
                  (x = A.zeroH),
                  this.horizontal || I.push(_ + w / 2);
                var D = s.group({
                  class: "apexcharts-datalabels",
                  "data:realIndex": H,
                });
                o.globals.delayedElements.push({ el: D.node }),
                  D.node.classList.add("apexcharts-element-hidden");
                var W = s.group({ class: "apexcharts-bar-goals-markers" }),
                  V = s.group({ class: "apexcharts-bar-shadows" });
                o.globals.delayedElements.push({ el: V.node }),
                  V.node.classList.add("apexcharts-element-hidden");
                for (var K = 0; K < o.globals.dataPoints; K++) {
                  var Z = this.barHelpers.getStrokeWidth(d, K, H),
                    re = null,
                    ce = {
                      indexes: { i: d, j: K, realIndex: H, bc: f },
                      x: _,
                      y: C,
                      strokeWidth: Z,
                      elSeries: Y,
                    };
                  this.isHorizontal
                    ? ((re = this.drawBarPaths(
                        a(
                          a({}, ce),
                          {},
                          { barHeight: g, zeroW: S, yDivision: y },
                        ),
                      )),
                      (w = this.series[d][K] / this.invertedYRatio))
                    : ((re = this.drawColumnPaths(
                        a(
                          a({}, ce),
                          {},
                          { xDivision: m, barWidth: w, zeroH: x },
                        ),
                      )),
                      (g = this.series[d][K] / this.yRatio[this.yaxisIndex]));
                  var se = this.barHelpers.getPathFillColor(n, d, K, H);
                  if (
                    this.isFunnel &&
                    this.barOptions.isFunnel3d &&
                    this.pathArr.length &&
                    K > 0
                  ) {
                    var xe = this.barHelpers.drawBarShadow({
                      color:
                        typeof se == "string" &&
                        (se == null ? void 0 : se.indexOf("url")) === -1
                          ? se
                          : O.hexToRgba(o.globals.colors[d]),
                      prevPaths: this.pathArr[this.pathArr.length - 1],
                      currPaths: re,
                    });
                    xe && V.add(xe);
                  }
                  this.pathArr.push(re);
                  var be = this.barHelpers.drawGoalLine({
                    barXPosition: re.barXPosition,
                    barYPosition: re.barYPosition,
                    goalX: re.goalX,
                    goalY: re.goalY,
                    barHeight: g,
                    barWidth: w,
                  });
                  be && W.add(be),
                    (C = re.y),
                    (_ = re.x),
                    K > 0 && I.push(_ + w / 2),
                    E.push(C),
                    this.renderSeries({
                      realIndex: H,
                      pathFill: se,
                      j: K,
                      i: d,
                      pathFrom: re.pathFrom,
                      pathTo: re.pathTo,
                      strokeWidth: Z,
                      elSeries: Y,
                      x: _,
                      y: C,
                      series: n,
                      barHeight: re.barHeight ? re.barHeight : g,
                      barWidth: re.barWidth ? re.barWidth : w,
                      elDataLabelsWrap: D,
                      elGoalsMarkers: W,
                      elBarShadows: V,
                      visibleSeries: this.visibleI,
                      type: "bar",
                    });
                }
                (o.globals.seriesXvalues[H] = I),
                  (o.globals.seriesYvalues[H] = E),
                  u.add(Y);
              }
              return u;
            },
          },
          {
            key: "renderSeries",
            value: function (n) {
              var i = n.realIndex,
                o = n.pathFill,
                s = n.lineFill,
                l = n.j,
                u = n.i,
                d = n.groupIndex,
                f = n.pathFrom,
                m = n.pathTo,
                y = n.strokeWidth,
                x = n.elSeries,
                S = n.x,
                _ = n.y,
                C = n.y1,
                E = n.y2,
                I = n.series,
                H = n.barHeight,
                Y = n.barWidth,
                g = n.barXPosition,
                w = n.barYPosition,
                A = n.elDataLabelsWrap,
                D = n.elGoalsMarkers,
                W = n.elBarShadows,
                V = n.visibleSeries,
                K = n.type,
                Z = this.w,
                re = new B(this.ctx);
              s ||
                (s = this.barOptions.distributed
                  ? Z.globals.stroke.colors[l]
                  : Z.globals.stroke.colors[i]),
                Z.config.series[u].data[l] &&
                  Z.config.series[u].data[l].strokeColor &&
                  (s = Z.config.series[u].data[l].strokeColor),
                this.isNullValue && (o = "none");
              var ce =
                  ((l / Z.config.chart.animations.animateGradually.delay) *
                    (Z.config.chart.animations.speed / Z.globals.dataPoints)) /
                  2.4,
                se = re.renderPaths({
                  i: u,
                  j: l,
                  realIndex: i,
                  pathFrom: f,
                  pathTo: m,
                  stroke: s,
                  strokeWidth: y,
                  strokeLineCap: Z.config.stroke.lineCap,
                  fill: o,
                  animationDelay: ce,
                  initialSpeed: Z.config.chart.animations.speed,
                  dataChangeSpeed:
                    Z.config.chart.animations.dynamicAnimation.speed,
                  className: "apexcharts-".concat(K, "-area"),
                });
              se.attr(
                "clip-path",
                "url(#gridRectMask".concat(Z.globals.cuid, ")"),
              );
              var xe = Z.config.forecastDataPoints;
              xe.count > 0 &&
                l >= Z.globals.dataPoints - xe.count &&
                (se.node.setAttribute("stroke-dasharray", xe.dashArray),
                se.node.setAttribute("stroke-width", xe.strokeWidth),
                se.node.setAttribute("fill-opacity", xe.fillOpacity)),
                C !== void 0 &&
                  E !== void 0 &&
                  (se.attr("data-range-y1", C), se.attr("data-range-y2", E)),
                new N(this.ctx).setSelectionFilter(se, i, l),
                x.add(se);
              var be = new As(this).handleBarDataLabels({
                x: S,
                y: _,
                y1: C,
                y2: E,
                i: u,
                j: l,
                series: I,
                realIndex: i,
                groupIndex: d,
                barHeight: H,
                barWidth: Y,
                barXPosition: g,
                barYPosition: w,
                renderedPath: se,
                visibleSeries: V,
              });
              return (
                be.dataLabels !== null && A.add(be.dataLabels),
                be.totalDataLabels && A.add(be.totalDataLabels),
                x.add(A),
                D && x.add(D),
                W && x.add(W),
                x
              );
            },
          },
          {
            key: "drawBarPaths",
            value: function (n) {
              var i,
                o = n.indexes,
                s = n.barHeight,
                l = n.strokeWidth,
                u = n.zeroW,
                d = n.x,
                f = n.y,
                m = n.yDivision,
                y = n.elSeries,
                x = this.w,
                S = o.i,
                _ = o.j;
              if (x.globals.isXNumeric)
                i =
                  (f =
                    (x.globals.seriesX[S][_] - x.globals.minX) /
                      this.invertedXRatio -
                    s) +
                  s * this.visibleI;
              else if (x.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                var C = 0,
                  E = 0;
                x.globals.seriesPercent.forEach(function (H, Y) {
                  H[_] && C++, Y < S && H[_] === 0 && E++;
                }),
                  C > 0 && (s = (this.seriesLen * s) / C),
                  (i = f + s * this.visibleI),
                  (i -= s * E);
              } else i = f + s * this.visibleI;
              this.isFunnel &&
                (u -=
                  (this.barHelpers.getXForValue(this.series[S][_], u) - u) / 2),
                (d = this.barHelpers.getXForValue(this.series[S][_], u));
              var I = this.barHelpers.getBarpaths({
                barYPosition: i,
                barHeight: s,
                x1: u,
                x2: d,
                strokeWidth: l,
                series: this.series,
                realIndex: o.realIndex,
                i: S,
                j: _,
                w: x,
              });
              return (
                x.globals.isXNumeric || (f += m),
                this.barHelpers.barBackground({
                  j: _,
                  i: S,
                  y1: i - s * this.visibleI,
                  y2: s * this.seriesLen,
                  elSeries: y,
                }),
                {
                  pathTo: I.pathTo,
                  pathFrom: I.pathFrom,
                  x1: u,
                  x: d,
                  y: f,
                  goalX: this.barHelpers.getGoalValues("x", u, null, S, _),
                  barYPosition: i,
                  barHeight: s,
                }
              );
            },
          },
          {
            key: "drawColumnPaths",
            value: function (n) {
              var i,
                o = n.indexes,
                s = n.x,
                l = n.y,
                u = n.xDivision,
                d = n.barWidth,
                f = n.zeroH,
                m = n.strokeWidth,
                y = n.elSeries,
                x = this.w,
                S = o.realIndex,
                _ = o.i,
                C = o.j,
                E = o.bc;
              if (x.globals.isXNumeric) {
                var I = this.getBarXForNumericXAxis({
                  x: s,
                  j: C,
                  realIndex: S,
                  barWidth: d,
                });
                (s = I.x), (i = I.barXPosition);
              } else if (x.config.plotOptions.bar.hideZeroBarsWhenGrouped) {
                var H = this.barHelpers.getZeroValueEncounters({ i: _, j: C }),
                  Y = H.nonZeroColumns,
                  g = H.zeroEncounters;
                Y > 0 && (d = (this.seriesLen * d) / Y),
                  (i = s + d * this.visibleI),
                  (i -= d * g);
              } else i = s + d * this.visibleI;
              l = this.barHelpers.getYForValue(this.series[_][C], f);
              var w = this.barHelpers.getColumnPaths({
                barXPosition: i,
                barWidth: d,
                y1: f,
                y2: l,
                strokeWidth: m,
                series: this.series,
                realIndex: o.realIndex,
                i: _,
                j: C,
                w: x,
              });
              return (
                x.globals.isXNumeric || (s += u),
                this.barHelpers.barBackground({
                  bc: E,
                  j: C,
                  i: _,
                  x1: i - m / 2 - d * this.visibleI,
                  x2: d * this.seriesLen + m / 2,
                  elSeries: y,
                }),
                {
                  pathTo: w.pathTo,
                  pathFrom: w.pathFrom,
                  x: s,
                  y: l,
                  goalY: this.barHelpers.getGoalValues("y", null, f, _, C),
                  barXPosition: i,
                  barWidth: d,
                }
              );
            },
          },
          {
            key: "getBarXForNumericXAxis",
            value: function (n) {
              var i = n.x,
                o = n.barWidth,
                s = n.realIndex,
                l = n.j,
                u = this.w,
                d = s;
              return (
                u.globals.seriesX[s].length ||
                  (d = u.globals.maxValsInArrayIndex),
                u.globals.seriesX[d][l] &&
                  (i =
                    (u.globals.seriesX[d][l] - u.globals.minX) / this.xRatio -
                    (o * this.seriesLen) / 2),
                { barXPosition: i + o * this.visibleI, x: i }
              );
            },
          },
          {
            key: "getPreviousPath",
            value: function (n, i) {
              for (
                var o, s = this.w, l = 0;
                l < s.globals.previousPaths.length;
                l++
              ) {
                var u = s.globals.previousPaths[l];
                u.paths &&
                  u.paths.length > 0 &&
                  parseInt(u.realIndex, 10) === parseInt(n, 10) &&
                  s.globals.previousPaths[l].paths[i] !== void 0 &&
                  (o = s.globals.previousPaths[l].paths[i].d);
              }
              return o;
            },
          },
        ]),
        T
      );
    })(),
    ie = (function (T) {
      P(i, J);
      var n = z(i);
      function i() {
        return h(this, i), n.apply(this, arguments);
      }
      return (
        v(i, [
          {
            key: "draw",
            value: function (o, s) {
              var l = this,
                u = this.w;
              (this.graphics = new B(this.ctx)),
                (this.bar = new J(this.ctx, this.xyRatios));
              var d = new U(this.ctx, u);
              (o = d.getLogSeries(o)),
                (this.yRatio = d.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(o),
                u.config.chart.stackType === "100%" &&
                  (o = u.globals.seriesPercent.slice()),
                (this.series = o),
                this.barHelpers.initializeStackedPrevVars(this);
              for (
                var f = this.graphics.group({
                    class: "apexcharts-bar-series apexcharts-plot-series",
                  }),
                  m = 0,
                  y = 0,
                  x = function (C, E) {
                    var I = void 0,
                      H = void 0,
                      Y = void 0,
                      g = void 0,
                      w = -1;
                    (l.groupCtx = l),
                      u.globals.seriesGroups.forEach(function (et, ft) {
                        et.indexOf(u.config.series[C].name) > -1 && (w = ft);
                      }),
                      w !== -1 && (l.groupCtx = l[u.globals.seriesGroups[w]]);
                    var A = [],
                      D = [],
                      W = u.globals.comboCharts ? s[C] : C;
                    l.yRatio.length > 1 && (l.yaxisIndex = W),
                      (l.isReversed =
                        u.config.yaxis[l.yaxisIndex] &&
                        u.config.yaxis[l.yaxisIndex].reversed);
                    var V = l.graphics.group({
                      class: "apexcharts-series",
                      seriesName: O.escapeString(u.globals.seriesNames[W]),
                      rel: C + 1,
                      "data:realIndex": W,
                    });
                    l.ctx.series.addCollapsedClassToSeries(V, W);
                    var K = l.graphics.group({
                        class: "apexcharts-datalabels",
                        "data:realIndex": W,
                      }),
                      Z = l.graphics.group({
                        class: "apexcharts-bar-goals-markers",
                      }),
                      re = 0,
                      ce = 0,
                      se = l.initialPositions(m, y, I, H, Y, g);
                    (y = se.y),
                      (re = se.barHeight),
                      (H = se.yDivision),
                      (g = se.zeroW),
                      (m = se.x),
                      (ce = se.barWidth),
                      (I = se.xDivision),
                      (Y = se.zeroH),
                      l.barHelpers.initializeStackedXYVars(l),
                      l.groupCtx.prevY.length === 1 &&
                        l.groupCtx.prevY[0].every(function (et) {
                          return isNaN(et);
                        }) &&
                        ((l.groupCtx.prevY[0] = l.groupCtx.prevY[0].map(
                          function (et) {
                            return Y;
                          },
                        )),
                        (l.groupCtx.prevYF[0] = l.groupCtx.prevYF[0].map(
                          function (et) {
                            return 0;
                          },
                        )));
                    for (var xe = 0; xe < u.globals.dataPoints; xe++) {
                      var be = l.barHelpers.getStrokeWidth(C, xe, W),
                        Ie = {
                          indexes: { i: C, j: xe, realIndex: W, bc: E },
                          strokeWidth: be,
                          x: m,
                          y,
                          elSeries: V,
                          groupIndex: w,
                          seriesGroup: u.globals.seriesGroups[w],
                        },
                        Fe = null;
                      l.isHorizontal
                        ? ((Fe = l.drawStackedBarPaths(
                            a(
                              a({}, Ie),
                              {},
                              { zeroW: g, barHeight: re, yDivision: H },
                            ),
                          )),
                          (ce = l.series[C][xe] / l.invertedYRatio))
                        : ((Fe = l.drawStackedColumnPaths(
                            a(
                              a({}, Ie),
                              {},
                              { xDivision: I, barWidth: ce, zeroH: Y },
                            ),
                          )),
                          (re = l.series[C][xe] / l.yRatio[l.yaxisIndex]));
                      var We = l.barHelpers.drawGoalLine({
                        barXPosition: Fe.barXPosition,
                        barYPosition: Fe.barYPosition,
                        goalX: Fe.goalX,
                        goalY: Fe.goalY,
                        barHeight: re,
                        barWidth: ce,
                      });
                      We && Z.add(We),
                        (y = Fe.y),
                        (m = Fe.x),
                        A.push(m),
                        D.push(y);
                      var lt = l.barHelpers.getPathFillColor(o, C, xe, W);
                      V = l.renderSeries({
                        realIndex: W,
                        pathFill: lt,
                        j: xe,
                        i: C,
                        groupIndex: w,
                        pathFrom: Fe.pathFrom,
                        pathTo: Fe.pathTo,
                        strokeWidth: be,
                        elSeries: V,
                        x: m,
                        y,
                        series: o,
                        barHeight: re,
                        barWidth: ce,
                        elDataLabelsWrap: K,
                        elGoalsMarkers: Z,
                        type: "bar",
                        visibleSeries: 0,
                      });
                    }
                    (u.globals.seriesXvalues[W] = A),
                      (u.globals.seriesYvalues[W] = D),
                      l.groupCtx.prevY.push(l.groupCtx.yArrj),
                      l.groupCtx.prevYF.push(l.groupCtx.yArrjF),
                      l.groupCtx.prevYVal.push(l.groupCtx.yArrjVal),
                      l.groupCtx.prevX.push(l.groupCtx.xArrj),
                      l.groupCtx.prevXF.push(l.groupCtx.xArrjF),
                      l.groupCtx.prevXVal.push(l.groupCtx.xArrjVal),
                      f.add(V);
                  },
                  S = 0,
                  _ = 0;
                S < o.length;
                S++, _++
              )
                x(S, _);
              return f;
            },
          },
          {
            key: "initialPositions",
            value: function (o, s, l, u, d, f) {
              var m,
                y,
                x,
                S,
                _ = this.w;
              return (
                this.isHorizontal
                  ? ((x =
                      ((x = u = _.globals.gridHeight / _.globals.dataPoints) *
                        parseInt(_.config.plotOptions.bar.barHeight, 10)) /
                      100),
                    String(_.config.plotOptions.bar.barHeight).indexOf("%") ===
                      -1 &&
                      (x = parseInt(_.config.plotOptions.bar.barHeight, 10)),
                    (f =
                      this.baseLineInvertedY +
                      _.globals.padHorizontal +
                      (this.isReversed ? _.globals.gridWidth : 0) -
                      (this.isReversed ? 2 * this.baseLineInvertedY : 0)),
                    (s = (u - x) / 2))
                  : ((S = l = _.globals.gridWidth / _.globals.dataPoints),
                    (S =
                      _.globals.isXNumeric && _.globals.dataPoints > 1
                        ? ((l = _.globals.minXDiff / this.xRatio) *
                            parseInt(this.barOptions.columnWidth, 10)) /
                          100
                        : (S *
                            parseInt(
                              _.config.plotOptions.bar.columnWidth,
                              10,
                            )) /
                          100),
                    String(_.config.plotOptions.bar.columnWidth).indexOf(
                      "%",
                    ) === -1 &&
                      (S = parseInt(_.config.plotOptions.bar.columnWidth, 10)),
                    (d =
                      _.globals.gridHeight -
                      this.baseLineY[this.yaxisIndex] -
                      (this.isReversed ? _.globals.gridHeight : 0) +
                      (this.isReversed
                        ? 2 * this.baseLineY[this.yaxisIndex]
                        : 0)),
                    (o = _.globals.padHorizontal + (l - S) / 2)),
                {
                  x: o,
                  y: s,
                  yDivision: u,
                  xDivision: l,
                  barHeight:
                    (m = _.globals.seriesGroups) !== null &&
                    m !== void 0 &&
                    m.length
                      ? x / _.globals.seriesGroups.length
                      : x,
                  barWidth:
                    (y = _.globals.seriesGroups) !== null &&
                    y !== void 0 &&
                    y.length
                      ? S / _.globals.seriesGroups.length
                      : S,
                  zeroH: d,
                  zeroW: f,
                }
              );
            },
          },
          {
            key: "drawStackedBarPaths",
            value: function (o) {
              for (
                var s,
                  l = o.indexes,
                  u = o.barHeight,
                  d = o.strokeWidth,
                  f = o.zeroW,
                  m = o.x,
                  y = o.y,
                  x = o.groupIndex,
                  S = o.seriesGroup,
                  _ = o.yDivision,
                  C = o.elSeries,
                  E = this.w,
                  I = y + (x !== -1 ? x * u : 0),
                  H = l.i,
                  Y = l.j,
                  g = 0,
                  w = 0;
                w < this.groupCtx.prevXF.length;
                w++
              )
                g += this.groupCtx.prevXF[w][Y];
              var A = H;
              if ((S && (A = S.indexOf(E.config.series[H].name)), A > 0)) {
                var D = f;
                this.groupCtx.prevXVal[A - 1][Y] < 0
                  ? (D =
                      this.series[H][Y] >= 0
                        ? this.groupCtx.prevX[A - 1][Y] +
                          g -
                          2 * (this.isReversed ? g : 0)
                        : this.groupCtx.prevX[A - 1][Y])
                  : this.groupCtx.prevXVal[A - 1][Y] >= 0 &&
                    (D =
                      this.series[H][Y] >= 0
                        ? this.groupCtx.prevX[A - 1][Y]
                        : this.groupCtx.prevX[A - 1][Y] -
                          g +
                          2 * (this.isReversed ? g : 0)),
                  (s = D);
              } else s = f;
              m =
                this.series[H][Y] === null
                  ? s
                  : s +
                    this.series[H][Y] / this.invertedYRatio -
                    2 *
                      (this.isReversed
                        ? this.series[H][Y] / this.invertedYRatio
                        : 0);
              var W = this.barHelpers.getBarpaths({
                barYPosition: I,
                barHeight: u,
                x1: s,
                x2: m,
                strokeWidth: d,
                series: this.series,
                realIndex: l.realIndex,
                seriesGroup: S,
                i: H,
                j: Y,
                w: E,
              });
              return (
                this.barHelpers.barBackground({
                  j: Y,
                  i: H,
                  y1: I,
                  y2: u,
                  elSeries: C,
                }),
                (y += _),
                {
                  pathTo: W.pathTo,
                  pathFrom: W.pathFrom,
                  goalX: this.barHelpers.getGoalValues("x", f, null, H, Y),
                  barYPosition: I,
                  x: m,
                  y,
                }
              );
            },
          },
          {
            key: "drawStackedColumnPaths",
            value: function (o) {
              var s = o.indexes,
                l = o.x,
                u = o.y,
                d = o.xDivision,
                f = o.barWidth,
                m = o.zeroH,
                y = o.groupIndex,
                x = o.seriesGroup,
                S = o.elSeries,
                _ = this.w,
                C = s.i,
                E = s.j,
                I = s.bc;
              if (_.globals.isXNumeric) {
                var H = _.globals.seriesX[C][E];
                H || (H = 0),
                  (l = (H - _.globals.minX) / this.xRatio - f / 2),
                  _.globals.seriesGroups.length &&
                    (l =
                      (H - _.globals.minX) / this.xRatio -
                      (f / 2) * _.globals.seriesGroups.length);
              }
              for (
                var Y, g = l + (y !== -1 ? y * f : 0), w = 0, A = 0;
                A < this.groupCtx.prevYF.length;
                A++
              )
                w += isNaN(this.groupCtx.prevYF[A][E])
                  ? 0
                  : this.groupCtx.prevYF[A][E];
              var D = C;
              if (
                (x && (D = x.indexOf(_.config.series[C].name)),
                (D > 0 && !_.globals.isXNumeric) ||
                  (D > 0 &&
                    _.globals.isXNumeric &&
                    _.globals.seriesX[C - 1][E] === _.globals.seriesX[C][E]))
              ) {
                var W,
                  V,
                  K,
                  Z = Math.min(this.yRatio.length + 1, C + 1);
                if (
                  this.groupCtx.prevY[D - 1] !== void 0 &&
                  this.groupCtx.prevY[D - 1].length
                )
                  for (var re = 1; re < Z; re++) {
                    var ce;
                    if (
                      !isNaN(
                        (ce = this.groupCtx.prevY[D - re]) === null ||
                          ce === void 0
                          ? void 0
                          : ce[E],
                      )
                    ) {
                      K = this.groupCtx.prevY[D - re][E];
                      break;
                    }
                  }
                for (var se = 1; se < Z; se++) {
                  var xe, be;
                  if (
                    ((xe = this.groupCtx.prevYVal[D - se]) === null ||
                    xe === void 0
                      ? void 0
                      : xe[E]) < 0
                  ) {
                    V =
                      this.series[C][E] >= 0
                        ? K - w + 2 * (this.isReversed ? w : 0)
                        : K;
                    break;
                  }
                  if (
                    ((be = this.groupCtx.prevYVal[D - se]) === null ||
                    be === void 0
                      ? void 0
                      : be[E]) >= 0
                  ) {
                    V =
                      this.series[C][E] >= 0
                        ? K
                        : K + w - 2 * (this.isReversed ? w : 0);
                    break;
                  }
                }
                V === void 0 && (V = _.globals.gridHeight),
                  (Y =
                    (W = this.groupCtx.prevYF[0]) !== null &&
                    W !== void 0 &&
                    W.every(function (Fe) {
                      return Fe === 0;
                    }) &&
                    this.groupCtx.prevYF.slice(1, D).every(function (Fe) {
                      return Fe.every(function (We) {
                        return isNaN(We);
                      });
                    })
                      ? m
                      : V);
              } else Y = m;
              u = this.series[C][E]
                ? Y -
                  this.series[C][E] / this.yRatio[this.yaxisIndex] +
                  2 *
                    (this.isReversed
                      ? this.series[C][E] / this.yRatio[this.yaxisIndex]
                      : 0)
                : Y;
              var Ie = this.barHelpers.getColumnPaths({
                barXPosition: g,
                barWidth: f,
                y1: Y,
                y2: u,
                yRatio: this.yRatio[this.yaxisIndex],
                strokeWidth: this.strokeWidth,
                series: this.series,
                seriesGroup: x,
                realIndex: s.realIndex,
                i: C,
                j: E,
                w: _,
              });
              return (
                this.barHelpers.barBackground({
                  bc: I,
                  j: E,
                  i: C,
                  x1: g,
                  x2: f,
                  elSeries: S,
                }),
                (l += d),
                {
                  pathTo: Ie.pathTo,
                  pathFrom: Ie.pathFrom,
                  goalY: this.barHelpers.getGoalValues("y", null, m, C, E),
                  barXPosition: g,
                  x: _.globals.isXNumeric ? l - d : l,
                  y: u,
                }
              );
            },
          },
        ]),
        i
      );
    })(),
    de = (function (T) {
      P(i, J);
      var n = z(i);
      function i() {
        return h(this, i), n.apply(this, arguments);
      }
      return (
        v(i, [
          {
            key: "draw",
            value: function (o, s, l) {
              var u = this,
                d = this.w,
                f = new B(this.ctx),
                m = d.globals.comboCharts ? s : d.config.chart.type,
                y = new Ce(this.ctx);
              (this.candlestickOptions = this.w.config.plotOptions.candlestick),
                (this.boxOptions = this.w.config.plotOptions.boxPlot),
                (this.isHorizontal = d.config.plotOptions.bar.horizontal);
              var x = new U(this.ctx, d);
              (o = x.getLogSeries(o)),
                (this.series = o),
                (this.yRatio = x.getLogYRatios(this.yRatio)),
                this.barHelpers.initVariables(o);
              for (
                var S = f.group({
                    class: "apexcharts-".concat(
                      m,
                      "-series apexcharts-plot-series",
                    ),
                  }),
                  _ = function (E) {
                    u.isBoxPlot =
                      d.config.chart.type === "boxPlot" ||
                      d.config.series[E].type === "boxPlot";
                    var I,
                      H,
                      Y,
                      g,
                      w = void 0,
                      A = void 0,
                      D = [],
                      W = [],
                      V = d.globals.comboCharts ? l[E] : E,
                      K = f.group({
                        class: "apexcharts-series",
                        seriesName: O.escapeString(d.globals.seriesNames[V]),
                        rel: E + 1,
                        "data:realIndex": V,
                      });
                    u.ctx.series.addCollapsedClassToSeries(K, V),
                      o[E].length > 0 && (u.visibleI = u.visibleI + 1);
                    var Z, re;
                    u.yRatio.length > 1 && (u.yaxisIndex = V);
                    var ce = u.barHelpers.initialPositions();
                    (A = ce.y),
                      (Z = ce.barHeight),
                      (H = ce.yDivision),
                      (g = ce.zeroW),
                      (w = ce.x),
                      (re = ce.barWidth),
                      (I = ce.xDivision),
                      (Y = ce.zeroH),
                      W.push(w + re / 2);
                    for (
                      var se = f.group({
                          class: "apexcharts-datalabels",
                          "data:realIndex": V,
                        }),
                        xe = function (Ie) {
                          var Fe = u.barHelpers.getStrokeWidth(E, Ie, V),
                            We = null,
                            lt = {
                              indexes: { i: E, j: Ie, realIndex: V },
                              x: w,
                              y: A,
                              strokeWidth: Fe,
                              elSeries: K,
                            };
                          (We = u.isHorizontal
                            ? u.drawHorizontalBoxPaths(
                                a(
                                  a({}, lt),
                                  {},
                                  { yDivision: H, barHeight: Z, zeroW: g },
                                ),
                              )
                            : u.drawVerticalBoxPaths(
                                a(
                                  a({}, lt),
                                  {},
                                  { xDivision: I, barWidth: re, zeroH: Y },
                                ),
                              )),
                            (A = We.y),
                            (w = We.x),
                            Ie > 0 && W.push(w + re / 2),
                            D.push(A),
                            We.pathTo.forEach(function (et, ft) {
                              var Tr =
                                  !u.isBoxPlot &&
                                  u.candlestickOptions.wick.useFillColor
                                    ? We.color[ft]
                                    : d.globals.stroke.colors[E],
                                mi = y.fillPath({
                                  seriesNumber: V,
                                  dataPointIndex: Ie,
                                  color: We.color[ft],
                                  value: o[E][Ie],
                                });
                              u.renderSeries({
                                realIndex: V,
                                pathFill: mi,
                                lineFill: Tr,
                                j: Ie,
                                i: E,
                                pathFrom: We.pathFrom,
                                pathTo: et,
                                strokeWidth: Fe,
                                elSeries: K,
                                x: w,
                                y: A,
                                series: o,
                                barHeight: Z,
                                barWidth: re,
                                elDataLabelsWrap: se,
                                visibleSeries: u.visibleI,
                                type: d.config.chart.type,
                              });
                            });
                        },
                        be = 0;
                      be < d.globals.dataPoints;
                      be++
                    )
                      xe(be);
                    (d.globals.seriesXvalues[V] = W),
                      (d.globals.seriesYvalues[V] = D),
                      S.add(K);
                  },
                  C = 0;
                C < o.length;
                C++
              )
                _(C);
              return S;
            },
          },
          {
            key: "drawVerticalBoxPaths",
            value: function (o) {
              var s = o.indexes,
                l = o.x;
              o.y;
              var u = o.xDivision,
                d = o.barWidth,
                f = o.zeroH,
                m = o.strokeWidth,
                y = this.w,
                x = new B(this.ctx),
                S = s.i,
                _ = s.j,
                C = !0,
                E = y.config.plotOptions.candlestick.colors.upward,
                I = y.config.plotOptions.candlestick.colors.downward,
                H = "";
              this.isBoxPlot &&
                (H = [
                  this.boxOptions.colors.lower,
                  this.boxOptions.colors.upper,
                ]);
              var Y = this.yRatio[this.yaxisIndex],
                g = s.realIndex,
                w = this.getOHLCValue(g, _),
                A = f,
                D = f;
              w.o > w.c && (C = !1);
              var W = Math.min(w.o, w.c),
                V = Math.max(w.o, w.c),
                K = w.m;
              y.globals.isXNumeric &&
                (l =
                  (y.globals.seriesX[g][_] - y.globals.minX) / this.xRatio -
                  d / 2);
              var Z = l + d * this.visibleI;
              this.series[S][_] === void 0 || this.series[S][_] === null
                ? ((W = f), (V = f))
                : ((W = f - W / Y),
                  (V = f - V / Y),
                  (A = f - w.h / Y),
                  (D = f - w.l / Y),
                  (K = f - w.m / Y));
              var re = x.move(Z, f),
                ce = x.move(Z + d / 2, W);
              return (
                y.globals.previousPaths.length > 0 &&
                  (ce = this.getPreviousPath(g, _, !0)),
                (re = this.isBoxPlot
                  ? [
                      x.move(Z, W) +
                        x.line(Z + d / 2, W) +
                        x.line(Z + d / 2, A) +
                        x.line(Z + d / 4, A) +
                        x.line(Z + d - d / 4, A) +
                        x.line(Z + d / 2, A) +
                        x.line(Z + d / 2, W) +
                        x.line(Z + d, W) +
                        x.line(Z + d, K) +
                        x.line(Z, K) +
                        x.line(Z, W + m / 2),
                      x.move(Z, K) +
                        x.line(Z + d, K) +
                        x.line(Z + d, V) +
                        x.line(Z + d / 2, V) +
                        x.line(Z + d / 2, D) +
                        x.line(Z + d - d / 4, D) +
                        x.line(Z + d / 4, D) +
                        x.line(Z + d / 2, D) +
                        x.line(Z + d / 2, V) +
                        x.line(Z, V) +
                        x.line(Z, K) +
                        "z",
                    ]
                  : [
                      x.move(Z, V) +
                        x.line(Z + d / 2, V) +
                        x.line(Z + d / 2, A) +
                        x.line(Z + d / 2, V) +
                        x.line(Z + d, V) +
                        x.line(Z + d, W) +
                        x.line(Z + d / 2, W) +
                        x.line(Z + d / 2, D) +
                        x.line(Z + d / 2, W) +
                        x.line(Z, W) +
                        x.line(Z, V - m / 2),
                    ]),
                (ce += x.move(Z, W)),
                y.globals.isXNumeric || (l += u),
                {
                  pathTo: re,
                  pathFrom: ce,
                  x: l,
                  y: V,
                  barXPosition: Z,
                  color: this.isBoxPlot ? H : C ? [E] : [I],
                }
              );
            },
          },
          {
            key: "drawHorizontalBoxPaths",
            value: function (o) {
              var s = o.indexes;
              o.x;
              var l = o.y,
                u = o.yDivision,
                d = o.barHeight,
                f = o.zeroW,
                m = o.strokeWidth,
                y = this.w,
                x = new B(this.ctx),
                S = s.i,
                _ = s.j,
                C = this.boxOptions.colors.lower;
              this.isBoxPlot &&
                (C = [
                  this.boxOptions.colors.lower,
                  this.boxOptions.colors.upper,
                ]);
              var E = this.invertedYRatio,
                I = s.realIndex,
                H = this.getOHLCValue(I, _),
                Y = f,
                g = f,
                w = Math.min(H.o, H.c),
                A = Math.max(H.o, H.c),
                D = H.m;
              y.globals.isXNumeric &&
                (l =
                  (y.globals.seriesX[I][_] - y.globals.minX) /
                    this.invertedXRatio -
                  d / 2);
              var W = l + d * this.visibleI;
              this.series[S][_] === void 0 || this.series[S][_] === null
                ? ((w = f), (A = f))
                : ((w = f + w / E),
                  (A = f + A / E),
                  (Y = f + H.h / E),
                  (g = f + H.l / E),
                  (D = f + H.m / E));
              var V = x.move(f, W),
                K = x.move(w, W + d / 2);
              return (
                y.globals.previousPaths.length > 0 &&
                  (K = this.getPreviousPath(I, _, !0)),
                (V = [
                  x.move(w, W) +
                    x.line(w, W + d / 2) +
                    x.line(Y, W + d / 2) +
                    x.line(Y, W + d / 2 - d / 4) +
                    x.line(Y, W + d / 2 + d / 4) +
                    x.line(Y, W + d / 2) +
                    x.line(w, W + d / 2) +
                    x.line(w, W + d) +
                    x.line(D, W + d) +
                    x.line(D, W) +
                    x.line(w + m / 2, W),
                  x.move(D, W) +
                    x.line(D, W + d) +
                    x.line(A, W + d) +
                    x.line(A, W + d / 2) +
                    x.line(g, W + d / 2) +
                    x.line(g, W + d - d / 4) +
                    x.line(g, W + d / 4) +
                    x.line(g, W + d / 2) +
                    x.line(A, W + d / 2) +
                    x.line(A, W) +
                    x.line(D, W) +
                    "z",
                ]),
                (K += x.move(w, W)),
                y.globals.isXNumeric || (l += u),
                {
                  pathTo: V,
                  pathFrom: K,
                  x: A,
                  y: l,
                  barYPosition: W,
                  color: C,
                }
              );
            },
          },
          {
            key: "getOHLCValue",
            value: function (o, s) {
              var l = this.w;
              return {
                o: this.isBoxPlot
                  ? l.globals.seriesCandleH[o][s]
                  : l.globals.seriesCandleO[o][s],
                h: this.isBoxPlot
                  ? l.globals.seriesCandleO[o][s]
                  : l.globals.seriesCandleH[o][s],
                m: l.globals.seriesCandleM[o][s],
                l: this.isBoxPlot
                  ? l.globals.seriesCandleC[o][s]
                  : l.globals.seriesCandleL[o][s],
                c: this.isBoxPlot
                  ? l.globals.seriesCandleL[o][s]
                  : l.globals.seriesCandleC[o][s],
              };
            },
          },
        ]),
        i
      );
    })(),
    we = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "checkColorRange",
            value: function () {
              var n = this.w,
                i = !1,
                o = n.config.plotOptions[n.config.chart.type];
              return (
                o.colorScale.ranges.length > 0 &&
                  o.colorScale.ranges.map(function (s, l) {
                    s.from <= 0 && (i = !0);
                  }),
                i
              );
            },
          },
          {
            key: "getShadeColor",
            value: function (n, i, o, s) {
              var l = this.w,
                u = 1,
                d = l.config.plotOptions[n].shadeIntensity,
                f = this.determineColor(n, i, o);
              l.globals.hasNegs || s
                ? (u = l.config.plotOptions[n].reverseNegativeShade
                    ? f.percent < 0
                      ? (f.percent / 100) * (1.25 * d)
                      : (1 - f.percent / 100) * (1.25 * d)
                    : f.percent <= 0
                    ? 1 - (1 + f.percent / 100) * d
                    : (1 - f.percent / 100) * d)
                : ((u = 1 - f.percent / 100),
                  n === "treemap" && (u = (1 - f.percent / 100) * (1.25 * d)));
              var m = f.color,
                y = new O();
              return (
                l.config.plotOptions[n].enableShades &&
                  (m =
                    this.w.config.theme.mode === "dark"
                      ? O.hexToRgba(
                          y.shadeColor(-1 * u, f.color),
                          l.config.fill.opacity,
                        )
                      : O.hexToRgba(
                          y.shadeColor(u, f.color),
                          l.config.fill.opacity,
                        )),
                { color: m, colorProps: f }
              );
            },
          },
          {
            key: "determineColor",
            value: function (n, i, o) {
              var s = this.w,
                l = s.globals.series[i][o],
                u = s.config.plotOptions[n],
                d = u.colorScale.inverse ? o : i;
              u.distributed && s.config.chart.type === "treemap" && (d = o);
              var f = s.globals.colors[d],
                m = null,
                y = Math.min.apply(Math, F(s.globals.series[i])),
                x = Math.max.apply(Math, F(s.globals.series[i]));
              u.distributed ||
                n !== "heatmap" ||
                ((y = s.globals.minY), (x = s.globals.maxY)),
                u.colorScale.min !== void 0 &&
                  ((y =
                    u.colorScale.min < s.globals.minY
                      ? u.colorScale.min
                      : s.globals.minY),
                  (x =
                    u.colorScale.max > s.globals.maxY
                      ? u.colorScale.max
                      : s.globals.maxY));
              var S = Math.abs(x) + Math.abs(y),
                _ = (100 * l) / (S === 0 ? S - 1e-6 : S);
              return (
                u.colorScale.ranges.length > 0 &&
                  u.colorScale.ranges.map(function (C, E) {
                    if (l >= C.from && l <= C.to) {
                      (f = C.color),
                        (m = C.foreColor ? C.foreColor : null),
                        (y = C.from),
                        (x = C.to);
                      var I = Math.abs(x) + Math.abs(y);
                      _ = (100 * l) / (I === 0 ? I - 1e-6 : I);
                    }
                  }),
                { color: f, foreColor: m, percent: _ }
              );
            },
          },
          {
            key: "calculateDataLabels",
            value: function (n) {
              var i = n.text,
                o = n.x,
                s = n.y,
                l = n.i,
                u = n.j,
                d = n.colorProps,
                f = n.fontSize,
                m = this.w.config.dataLabels,
                y = new B(this.ctx),
                x = new Qe(this.ctx),
                S = null;
              if (m.enabled) {
                S = y.group({ class: "apexcharts-data-labels" });
                var _ = m.offsetX,
                  C = m.offsetY,
                  E = o + _,
                  I = s + parseFloat(m.style.fontSize) / 3 + C;
                x.plotDataLabelsText({
                  x: E,
                  y: I,
                  text: i,
                  i: l,
                  j: u,
                  color: d.foreColor,
                  parent: S,
                  fontSize: f,
                  dataLabelsConfig: m,
                });
              }
              return S;
            },
          },
          {
            key: "addListeners",
            value: function (n) {
              var i = new B(this.ctx);
              n.node.addEventListener(
                "mouseenter",
                i.pathMouseEnter.bind(this, n),
              ),
                n.node.addEventListener(
                  "mouseleave",
                  i.pathMouseLeave.bind(this, n),
                ),
                n.node.addEventListener(
                  "mousedown",
                  i.pathMouseDown.bind(this, n),
                );
            },
          },
        ]),
        T
      );
    })(),
    Ee = (function () {
      function T(n, i) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.xRatio = i.xRatio),
          (this.yRatio = i.yRatio),
          (this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation),
          (this.helpers = new we(n)),
          (this.rectRadius = this.w.config.plotOptions.heatmap.radius),
          (this.strokeWidth = this.w.config.stroke.show
            ? this.w.config.stroke.width
            : 0);
      }
      return (
        v(T, [
          {
            key: "draw",
            value: function (n) {
              var i = this.w,
                o = new B(this.ctx),
                s = o.group({ class: "apexcharts-heatmap" });
              s.attr(
                "clip-path",
                "url(#gridRectMask".concat(i.globals.cuid, ")"),
              );
              var l = i.globals.gridWidth / i.globals.dataPoints,
                u = i.globals.gridHeight / i.globals.series.length,
                d = 0,
                f = !1;
              this.negRange = this.helpers.checkColorRange();
              var m = n.slice();
              i.config.yaxis[0].reversed && ((f = !0), m.reverse());
              for (
                var y = f ? 0 : m.length - 1;
                f ? y < m.length : y >= 0;
                f ? y++ : y--
              ) {
                var x = o.group({
                  class: "apexcharts-series apexcharts-heatmap-series",
                  seriesName: O.escapeString(i.globals.seriesNames[y]),
                  rel: y + 1,
                  "data:realIndex": y,
                });
                if (
                  (this.ctx.series.addCollapsedClassToSeries(x, y),
                  i.config.chart.dropShadow.enabled)
                ) {
                  var S = i.config.chart.dropShadow;
                  new N(this.ctx).dropShadow(x, S, y);
                }
                for (
                  var _ = 0,
                    C = i.config.plotOptions.heatmap.shadeIntensity,
                    E = 0;
                  E < m[y].length;
                  E++
                ) {
                  var I = this.helpers.getShadeColor(
                      i.config.chart.type,
                      y,
                      E,
                      this.negRange,
                    ),
                    H = I.color,
                    Y = I.colorProps;
                  i.config.fill.type === "image" &&
                    (H = new Ce(this.ctx).fillPath({
                      seriesNumber: y,
                      dataPointIndex: E,
                      opacity: i.globals.hasNegs
                        ? Y.percent < 0
                          ? 1 - (1 + Y.percent / 100)
                          : C + Y.percent / 100
                        : Y.percent / 100,
                      patternID: O.randomId(),
                      width: i.config.fill.image.width
                        ? i.config.fill.image.width
                        : l,
                      height: i.config.fill.image.height
                        ? i.config.fill.image.height
                        : u,
                    }));
                  var g = this.rectRadius,
                    w = o.drawRect(_, d, l, u, g);
                  if (
                    (w.attr({ cx: _, cy: d }),
                    w.node.classList.add("apexcharts-heatmap-rect"),
                    x.add(w),
                    w.attr({
                      fill: H,
                      i: y,
                      index: y,
                      j: E,
                      val: m[y][E],
                      "stroke-width": this.strokeWidth,
                      stroke: i.config.plotOptions.heatmap.useFillColorAsStroke
                        ? H
                        : i.globals.stroke.colors[0],
                      color: H,
                    }),
                    this.helpers.addListeners(w),
                    i.config.chart.animations.enabled && !i.globals.dataChanged)
                  ) {
                    var A = 1;
                    i.globals.resized || (A = i.config.chart.animations.speed),
                      this.animateHeatMap(w, _, d, l, u, A);
                  }
                  if (i.globals.dataChanged) {
                    var D = 1;
                    if (this.dynamicAnim.enabled && i.globals.shouldAnimate) {
                      D = this.dynamicAnim.speed;
                      var W =
                        i.globals.previousPaths[y] &&
                        i.globals.previousPaths[y][E] &&
                        i.globals.previousPaths[y][E].color;
                      W || (W = "rgba(255, 255, 255, 0)"),
                        this.animateHeatColor(
                          w,
                          O.isColorHex(W) ? W : O.rgb2hex(W),
                          O.isColorHex(H) ? H : O.rgb2hex(H),
                          D,
                        );
                    }
                  }
                  var V = (0, i.config.dataLabels.formatter)(
                      i.globals.series[y][E],
                      {
                        value: i.globals.series[y][E],
                        seriesIndex: y,
                        dataPointIndex: E,
                        w: i,
                      },
                    ),
                    K = this.helpers.calculateDataLabels({
                      text: V,
                      x: _ + l / 2,
                      y: d + u / 2,
                      i: y,
                      j: E,
                      colorProps: Y,
                      series: m,
                    });
                  K !== null && x.add(K), (_ += l);
                }
                (d += u), s.add(x);
              }
              var Z = i.globals.yAxisScale[0].result.slice();
              return (
                i.config.yaxis[0].reversed ? Z.unshift("") : Z.push(""),
                (i.globals.yAxisScale[0].result = Z),
                s
              );
            },
          },
          {
            key: "animateHeatMap",
            value: function (n, i, o, s, l, u) {
              var d = new X(this.ctx);
              d.animateRect(
                n,
                { x: i + s / 2, y: o + l / 2, width: 0, height: 0 },
                { x: i, y: o, width: s, height: l },
                u,
                function () {
                  d.animationCompleted(n);
                },
              );
            },
          },
          {
            key: "animateHeatColor",
            value: function (n, i, o, s) {
              n.attr({ fill: i }).animate(s).attr({ fill: o });
            },
          },
        ]),
        T
      );
    })(),
    Re = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "drawYAxisTexts",
            value: function (n, i, o, s) {
              var l = this.w,
                u = l.config.yaxis[0],
                d = l.globals.yLabelFormatters[0];
              return new B(this.ctx).drawText({
                x: n + u.labels.offsetX,
                y: i + u.labels.offsetY,
                text: d(s, o),
                textAnchor: "middle",
                fontSize: u.labels.style.fontSize,
                fontFamily: u.labels.style.fontFamily,
                foreColor: Array.isArray(u.labels.style.colors)
                  ? u.labels.style.colors[o]
                  : u.labels.style.colors,
              });
            },
          },
        ]),
        T
      );
    })(),
    Me = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
        var i = this.w;
        (this.chartType = this.w.config.chart.type),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled),
          (this.animBeginArr = [0]),
          (this.animDur = 0),
          (this.donutDataLabels = this.w.config.plotOptions.pie.donut.labels),
          (this.lineColorArr =
            i.globals.stroke.colors !== void 0
              ? i.globals.stroke.colors
              : i.globals.colors),
          (this.defaultSize = Math.min(
            i.globals.gridWidth,
            i.globals.gridHeight,
          )),
          (this.centerY = this.defaultSize / 2),
          (this.centerX = i.globals.gridWidth / 2),
          i.config.chart.type === "radialBar"
            ? (this.fullAngle = 360)
            : (this.fullAngle = Math.abs(
                i.config.plotOptions.pie.endAngle -
                  i.config.plotOptions.pie.startAngle,
              )),
          (this.initialAngle =
            i.config.plotOptions.pie.startAngle % this.fullAngle),
          (i.globals.radialSize =
            this.defaultSize / 2.05 -
            i.config.stroke.width -
            (i.config.chart.sparkline.enabled
              ? 0
              : i.config.chart.dropShadow.blur)),
          (this.donutSize =
            (i.globals.radialSize *
              parseInt(i.config.plotOptions.pie.donut.size, 10)) /
            100),
          (this.maxY = 0),
          (this.sliceLabels = []),
          (this.sliceSizes = []),
          (this.prevSectorAngleArr = []);
      }
      return (
        v(T, [
          {
            key: "draw",
            value: function (n) {
              var i = this,
                o = this.w,
                s = new B(this.ctx);
              if (
                ((this.ret = s.group({ class: "apexcharts-pie" })),
                o.globals.noData)
              )
                return this.ret;
              for (var l = 0, u = 0; u < n.length; u++) l += O.negToZero(n[u]);
              var d = [],
                f = s.group();
              l === 0 && (l = 1e-5),
                n.forEach(function (W) {
                  i.maxY = Math.max(i.maxY, W);
                }),
                o.config.yaxis[0].max && (this.maxY = o.config.yaxis[0].max),
                o.config.grid.position === "back" &&
                  this.chartType === "polarArea" &&
                  this.drawPolarElements(this.ret);
              for (var m = 0; m < n.length; m++) {
                var y = (this.fullAngle * O.negToZero(n[m])) / l;
                d.push(y),
                  this.chartType === "polarArea"
                    ? ((d[m] = this.fullAngle / n.length),
                      this.sliceSizes.push(
                        (o.globals.radialSize * n[m]) / this.maxY,
                      ))
                    : this.sliceSizes.push(o.globals.radialSize);
              }
              if (o.globals.dataChanged) {
                for (
                  var x, S = 0, _ = 0;
                  _ < o.globals.previousPaths.length;
                  _++
                )
                  S += O.negToZero(o.globals.previousPaths[_]);
                for (var C = 0; C < o.globals.previousPaths.length; C++)
                  (x =
                    (this.fullAngle * O.negToZero(o.globals.previousPaths[C])) /
                    S),
                    this.prevSectorAngleArr.push(x);
              }
              this.donutSize < 0 && (this.donutSize = 0);
              var E = o.config.plotOptions.pie.customScale,
                I = o.globals.gridWidth / 2,
                H = o.globals.gridHeight / 2,
                Y = I - (o.globals.gridWidth / 2) * E,
                g = H - (o.globals.gridHeight / 2) * E;
              if (this.chartType === "donut") {
                var w = s.drawCircle(this.donutSize);
                w.attr({
                  cx: this.centerX,
                  cy: this.centerY,
                  fill: o.config.plotOptions.pie.donut.background
                    ? o.config.plotOptions.pie.donut.background
                    : "transparent",
                }),
                  f.add(w);
              }
              var A = this.drawArcs(d, n);
              if (
                (this.sliceLabels.forEach(function (W) {
                  A.add(W);
                }),
                f.attr({
                  transform: "translate("
                    .concat(Y, ", ")
                    .concat(g, ") scale(")
                    .concat(E, ")"),
                }),
                f.add(A),
                this.ret.add(f),
                this.donutDataLabels.show)
              ) {
                var D = this.renderInnerDataLabels(this.donutDataLabels, {
                  hollowSize: this.donutSize,
                  centerX: this.centerX,
                  centerY: this.centerY,
                  opacity: this.donutDataLabels.show,
                  translateX: Y,
                  translateY: g,
                });
                this.ret.add(D);
              }
              return (
                o.config.grid.position === "front" &&
                  this.chartType === "polarArea" &&
                  this.drawPolarElements(this.ret),
                this.ret
              );
            },
          },
          {
            key: "drawArcs",
            value: function (n, i) {
              var o = this.w,
                s = new N(this.ctx),
                l = new B(this.ctx),
                u = new Ce(this.ctx),
                d = l.group({ class: "apexcharts-slices" }),
                f = this.initialAngle,
                m = this.initialAngle,
                y = this.initialAngle,
                x = this.initialAngle;
              this.strokeWidth = o.config.stroke.show
                ? o.config.stroke.width
                : 0;
              for (var S = 0; S < n.length; S++) {
                var _ = l.group({
                  class: "apexcharts-series apexcharts-pie-series",
                  seriesName: O.escapeString(o.globals.seriesNames[S]),
                  rel: S + 1,
                  "data:realIndex": S,
                });
                d.add(_),
                  (m = x),
                  (y = (f = y) + n[S]),
                  (x = m + this.prevSectorAngleArr[S]);
                var C = y < f ? this.fullAngle + y - f : y - f,
                  E = u.fillPath({
                    seriesNumber: S,
                    size: this.sliceSizes[S],
                    value: i[S],
                  }),
                  I = this.getChangedPath(m, x),
                  H = l.drawPath({
                    d: I,
                    stroke: Array.isArray(this.lineColorArr)
                      ? this.lineColorArr[S]
                      : this.lineColorArr,
                    strokeWidth: 0,
                    fill: E,
                    fillOpacity: o.config.fill.opacity,
                    classes: "apexcharts-pie-area apexcharts-"
                      .concat(this.chartType.toLowerCase(), "-slice-")
                      .concat(S),
                  });
                if (
                  (H.attr({ index: 0, j: S }),
                  s.setSelectionFilter(H, 0, S),
                  o.config.chart.dropShadow.enabled)
                ) {
                  var Y = o.config.chart.dropShadow;
                  s.dropShadow(H, Y, S);
                }
                this.addListeners(H, this.donutDataLabels),
                  B.setAttrs(H.node, {
                    "data:angle": C,
                    "data:startAngle": f,
                    "data:strokeWidth": this.strokeWidth,
                    "data:value": i[S],
                  });
                var g = { x: 0, y: 0 };
                this.chartType === "pie" || this.chartType === "polarArea"
                  ? (g = O.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      o.globals.radialSize / 1.25 +
                        o.config.plotOptions.pie.dataLabels.offset,
                      (f + C / 2) % this.fullAngle,
                    ))
                  : this.chartType === "donut" &&
                    (g = O.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      (o.globals.radialSize + this.donutSize) / 2 +
                        o.config.plotOptions.pie.dataLabels.offset,
                      (f + C / 2) % this.fullAngle,
                    )),
                  _.add(H);
                var w = 0;
                if (
                  (!this.initialAnim ||
                  o.globals.resized ||
                  o.globals.dataChanged
                    ? this.animBeginArr.push(0)
                    : ((w =
                        (C / this.fullAngle) *
                        o.config.chart.animations.speed) === 0 && (w = 1),
                      (this.animDur = w + this.animDur),
                      this.animBeginArr.push(this.animDur)),
                  this.dynamicAnim && o.globals.dataChanged
                    ? this.animatePaths(H, {
                        size: this.sliceSizes[S],
                        endAngle: y,
                        startAngle: f,
                        prevStartAngle: m,
                        prevEndAngle: x,
                        animateStartingPos: !0,
                        i: S,
                        animBeginArr: this.animBeginArr,
                        shouldSetPrevPaths: !0,
                        dur: o.config.chart.animations.dynamicAnimation.speed,
                      })
                    : this.animatePaths(H, {
                        size: this.sliceSizes[S],
                        endAngle: y,
                        startAngle: f,
                        i: S,
                        totalItems: n.length - 1,
                        animBeginArr: this.animBeginArr,
                        dur: w,
                      }),
                  o.config.plotOptions.pie.expandOnClick &&
                    this.chartType !== "polarArea" &&
                    H.click(this.pieClicked.bind(this, S)),
                  o.globals.selectedDataPoints[0] !== void 0 &&
                    o.globals.selectedDataPoints[0].indexOf(S) > -1 &&
                    this.pieClicked(S),
                  o.config.dataLabels.enabled)
                ) {
                  var A = g.x,
                    D = g.y,
                    W = (100 * C) / this.fullAngle + "%";
                  if (
                    C !== 0 &&
                    o.config.plotOptions.pie.dataLabels.minAngleToShowLabel <
                      n[S]
                  ) {
                    var V = o.config.dataLabels.formatter;
                    V !== void 0 &&
                      (W = V(o.globals.seriesPercent[S][0], {
                        seriesIndex: S,
                        w: o,
                      }));
                    var K = o.globals.dataLabels.style.colors[S],
                      Z = l.group({ class: "apexcharts-datalabels" }),
                      re = l.drawText({
                        x: A,
                        y: D,
                        text: W,
                        textAnchor: "middle",
                        fontSize: o.config.dataLabels.style.fontSize,
                        fontFamily: o.config.dataLabels.style.fontFamily,
                        fontWeight: o.config.dataLabels.style.fontWeight,
                        foreColor: K,
                      });
                    if ((Z.add(re), o.config.dataLabels.dropShadow.enabled)) {
                      var ce = o.config.dataLabels.dropShadow;
                      s.dropShadow(re, ce);
                    }
                    re.node.classList.add("apexcharts-pie-label"),
                      o.config.chart.animations.animate &&
                        o.globals.resized === !1 &&
                        (re.node.classList.add("apexcharts-pie-label-delay"),
                        (re.node.style.animationDelay =
                          o.config.chart.animations.speed / 940 + "s")),
                      this.sliceLabels.push(Z);
                  }
                }
              }
              return d;
            },
          },
          {
            key: "addListeners",
            value: function (n, i) {
              var o = new B(this.ctx);
              n.node.addEventListener(
                "mouseenter",
                o.pathMouseEnter.bind(this, n),
              ),
                n.node.addEventListener(
                  "mouseleave",
                  o.pathMouseLeave.bind(this, n),
                ),
                n.node.addEventListener(
                  "mouseleave",
                  this.revertDataLabelsInner.bind(this, n.node, i),
                ),
                n.node.addEventListener(
                  "mousedown",
                  o.pathMouseDown.bind(this, n),
                ),
                this.donutDataLabels.total.showAlways ||
                  (n.node.addEventListener(
                    "mouseenter",
                    this.printDataLabelsInner.bind(this, n.node, i),
                  ),
                  n.node.addEventListener(
                    "mousedown",
                    this.printDataLabelsInner.bind(this, n.node, i),
                  ));
            },
          },
          {
            key: "animatePaths",
            value: function (n, i) {
              var o = this.w,
                s =
                  i.endAngle < i.startAngle
                    ? this.fullAngle + i.endAngle - i.startAngle
                    : i.endAngle - i.startAngle,
                l = s,
                u = i.startAngle,
                d = i.startAngle;
              i.prevStartAngle !== void 0 &&
                i.prevEndAngle !== void 0 &&
                ((u = i.prevEndAngle),
                (l =
                  i.prevEndAngle < i.prevStartAngle
                    ? this.fullAngle + i.prevEndAngle - i.prevStartAngle
                    : i.prevEndAngle - i.prevStartAngle)),
                i.i === o.config.series.length - 1 &&
                  (s + d > this.fullAngle
                    ? (i.endAngle = i.endAngle - (s + d))
                    : s + d < this.fullAngle &&
                      (i.endAngle = i.endAngle + (this.fullAngle - (s + d)))),
                s === this.fullAngle && (s = this.fullAngle - 0.01),
                this.animateArc(n, u, d, s, l, i);
            },
          },
          {
            key: "animateArc",
            value: function (n, i, o, s, l, u) {
              var d,
                f = this,
                m = this.w,
                y = new X(this.ctx),
                x = u.size;
              (isNaN(i) || isNaN(l)) && ((i = o), (l = s), (u.dur = 0));
              var S = s,
                _ = o,
                C = i < o ? this.fullAngle + i - o : i - o;
              m.globals.dataChanged &&
                u.shouldSetPrevPaths &&
                u.prevEndAngle &&
                ((d = f.getPiePath({
                  me: f,
                  startAngle: u.prevStartAngle,
                  angle:
                    u.prevEndAngle < u.prevStartAngle
                      ? this.fullAngle + u.prevEndAngle - u.prevStartAngle
                      : u.prevEndAngle - u.prevStartAngle,
                  size: x,
                })),
                n.attr({ d })),
                u.dur !== 0
                  ? n
                      .animate(u.dur, m.globals.easing, u.animBeginArr[u.i])
                      .afterAll(function () {
                        (f.chartType !== "pie" &&
                          f.chartType !== "donut" &&
                          f.chartType !== "polarArea") ||
                          this.animate(
                            m.config.chart.animations.dynamicAnimation.speed,
                          ).attr({ "stroke-width": f.strokeWidth }),
                          u.i === m.config.series.length - 1 &&
                            y.animationCompleted(n);
                      })
                      .during(function (E) {
                        (S = C + (s - C) * E),
                          u.animateStartingPos &&
                            ((S = l + (s - l) * E),
                            (_ = i - l + (o - (i - l)) * E)),
                          (d = f.getPiePath({
                            me: f,
                            startAngle: _,
                            angle: S,
                            size: x,
                          })),
                          n.node.setAttribute("data:pathOrig", d),
                          n.attr({ d });
                      })
                  : ((d = f.getPiePath({
                      me: f,
                      startAngle: _,
                      angle: s,
                      size: x,
                    })),
                    u.isTrack || (m.globals.animationEnded = !0),
                    n.node.setAttribute("data:pathOrig", d),
                    n.attr({ d, "stroke-width": f.strokeWidth }));
            },
          },
          {
            key: "pieClicked",
            value: function (n) {
              var i,
                o = this.w,
                s = this,
                l =
                  s.sliceSizes[n] +
                  (o.config.plotOptions.pie.expandOnClick ? 4 : 0),
                u = o.globals.dom.Paper.select(
                  ".apexcharts-"
                    .concat(s.chartType.toLowerCase(), "-slice-")
                    .concat(n),
                ).members[0];
              if (u.attr("data:pieClicked") !== "true") {
                var d = o.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-pie-area",
                );
                Array.prototype.forEach.call(d, function (x) {
                  x.setAttribute("data:pieClicked", "false");
                  var S = x.getAttribute("data:pathOrig");
                  S && x.setAttribute("d", S);
                }),
                  u.attr("data:pieClicked", "true");
                var f = parseInt(u.attr("data:startAngle"), 10),
                  m = parseInt(u.attr("data:angle"), 10);
                (i = s.getPiePath({ me: s, startAngle: f, angle: m, size: l })),
                  m !== 360 && u.plot(i);
              } else {
                u.attr({ "data:pieClicked": "false" }),
                  this.revertDataLabelsInner(u.node, this.donutDataLabels);
                var y = u.attr("data:pathOrig");
                u.attr({ d: y });
              }
            },
          },
          {
            key: "getChangedPath",
            value: function (n, i) {
              var o = "";
              return (
                this.dynamicAnim &&
                  this.w.globals.dataChanged &&
                  (o = this.getPiePath({
                    me: this,
                    startAngle: n,
                    angle: i - n,
                    size: this.size,
                  })),
                o
              );
            },
          },
          {
            key: "getPiePath",
            value: function (n) {
              var i = n.me,
                o = n.startAngle,
                s = n.angle,
                l = n.size,
                u = o,
                d = (Math.PI * (u - 90)) / 180,
                f = s + o;
              Math.ceil(f) >=
                this.fullAngle +
                  (this.w.config.plotOptions.pie.startAngle % this.fullAngle) &&
                (f =
                  this.fullAngle +
                  (this.w.config.plotOptions.pie.startAngle % this.fullAngle) -
                  0.01),
                Math.ceil(f) > this.fullAngle && (f -= this.fullAngle);
              var m = (Math.PI * (f - 90)) / 180,
                y = i.centerX + l * Math.cos(d),
                x = i.centerY + l * Math.sin(d),
                S = i.centerX + l * Math.cos(m),
                _ = i.centerY + l * Math.sin(m),
                C = O.polarToCartesian(i.centerX, i.centerY, i.donutSize, f),
                E = O.polarToCartesian(i.centerX, i.centerY, i.donutSize, u),
                I = s > 180 ? 1 : 0,
                H = ["M", y, x, "A", l, l, 0, I, 1, S, _];
              return i.chartType === "donut"
                ? []
                    .concat(H, [
                      "L",
                      C.x,
                      C.y,
                      "A",
                      i.donutSize,
                      i.donutSize,
                      0,
                      I,
                      0,
                      E.x,
                      E.y,
                      "L",
                      y,
                      x,
                      "z",
                    ])
                    .join(" ")
                : i.chartType === "pie" || i.chartType === "polarArea"
                ? [].concat(H, ["L", i.centerX, i.centerY, "L", y, x]).join(" ")
                : [].concat(H).join(" ");
            },
          },
          {
            key: "drawPolarElements",
            value: function (n) {
              var i = this.w,
                o = new vt(this.ctx),
                s = new B(this.ctx),
                l = new Re(this.ctx),
                u = s.group(),
                d = s.group(),
                f = o.niceScale(
                  0,
                  Math.ceil(this.maxY),
                  i.config.yaxis[0].tickAmount,
                  0,
                  !0,
                ),
                m = f.result.reverse(),
                y = f.result.length;
              this.maxY = f.niceMax;
              for (
                var x = i.globals.radialSize, S = x / (y - 1), _ = 0;
                _ < y - 1;
                _++
              ) {
                var C = s.drawCircle(x);
                if (
                  (C.attr({
                    cx: this.centerX,
                    cy: this.centerY,
                    fill: "none",
                    "stroke-width":
                      i.config.plotOptions.polarArea.rings.strokeWidth,
                    stroke: i.config.plotOptions.polarArea.rings.strokeColor,
                  }),
                  i.config.yaxis[0].show)
                ) {
                  var E = l.drawYAxisTexts(
                    this.centerX,
                    this.centerY -
                      x +
                      parseInt(i.config.yaxis[0].labels.style.fontSize, 10) / 2,
                    _,
                    m[_],
                  );
                  d.add(E);
                }
                u.add(C), (x -= S);
              }
              this.drawSpokes(n), n.add(u), n.add(d);
            },
          },
          {
            key: "renderInnerDataLabels",
            value: function (n, i) {
              var o = this.w,
                s = new B(this.ctx),
                l = s.group({
                  class: "apexcharts-datalabels-group",
                  transform: "translate("
                    .concat(i.translateX ? i.translateX : 0, ", ")
                    .concat(i.translateY ? i.translateY : 0, ") scale(")
                    .concat(o.config.plotOptions.pie.customScale, ")"),
                }),
                u = n.total.show;
              l.node.style.opacity = i.opacity;
              var d,
                f,
                m = i.centerX,
                y = i.centerY;
              d = n.name.color === void 0 ? o.globals.colors[0] : n.name.color;
              var x = n.name.fontSize,
                S = n.name.fontFamily,
                _ = n.name.fontWeight;
              f =
                n.value.color === void 0
                  ? o.config.chart.foreColor
                  : n.value.color;
              var C = n.value.formatter,
                E = "",
                I = "";
              if (
                (u
                  ? ((d = n.total.color),
                    (x = n.total.fontSize),
                    (S = n.total.fontFamily),
                    (_ = n.total.fontWeight),
                    (I = n.total.label),
                    (E = n.total.formatter(o)))
                  : o.globals.series.length === 1 &&
                    ((E = C(o.globals.series[0], o)),
                    (I = o.globals.seriesNames[0])),
                I && (I = n.name.formatter(I, n.total.show, o)),
                n.name.show)
              ) {
                var H = s.drawText({
                  x: m,
                  y: y + parseFloat(n.name.offsetY),
                  text: I,
                  textAnchor: "middle",
                  foreColor: d,
                  fontSize: x,
                  fontWeight: _,
                  fontFamily: S,
                });
                H.node.classList.add("apexcharts-datalabel-label"), l.add(H);
              }
              if (n.value.show) {
                var Y = n.name.show
                    ? parseFloat(n.value.offsetY) + 16
                    : n.value.offsetY,
                  g = s.drawText({
                    x: m,
                    y: y + Y,
                    text: E,
                    textAnchor: "middle",
                    foreColor: f,
                    fontWeight: n.value.fontWeight,
                    fontSize: n.value.fontSize,
                    fontFamily: n.value.fontFamily,
                  });
                g.node.classList.add("apexcharts-datalabel-value"), l.add(g);
              }
              return l;
            },
          },
          {
            key: "printInnerLabels",
            value: function (n, i, o, s) {
              var l,
                u = this.w;
              s
                ? (l =
                    n.name.color === void 0
                      ? u.globals.colors[
                          parseInt(s.parentNode.getAttribute("rel"), 10) - 1
                        ]
                      : n.name.color)
                : u.globals.series.length > 1 &&
                  n.total.show &&
                  (l = n.total.color);
              var d = u.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabel-label",
                ),
                f = u.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabel-value",
                );
              (o = (0, n.value.formatter)(o, u)),
                s ||
                  typeof n.total.formatter != "function" ||
                  (o = n.total.formatter(u));
              var m = i === n.total.label;
              (i = n.name.formatter(i, m, u)),
                d !== null && (d.textContent = i),
                f !== null && (f.textContent = o),
                d !== null && (d.style.fill = l);
            },
          },
          {
            key: "printDataLabelsInner",
            value: function (n, i) {
              var o = this.w,
                s = n.getAttribute("data:value"),
                l =
                  o.globals.seriesNames[
                    parseInt(n.parentNode.getAttribute("rel"), 10) - 1
                  ];
              o.globals.series.length > 1 && this.printInnerLabels(i, l, s, n);
              var u = o.globals.dom.baseEl.querySelector(
                ".apexcharts-datalabels-group",
              );
              u !== null && (u.style.opacity = 1);
            },
          },
          {
            key: "drawSpokes",
            value: function (n) {
              var i = this,
                o = this.w,
                s = new B(this.ctx),
                l = o.config.plotOptions.polarArea.spokes;
              if (l.strokeWidth !== 0) {
                for (
                  var u = [], d = 360 / o.globals.series.length, f = 0;
                  f < o.globals.series.length;
                  f++
                )
                  u.push(
                    O.polarToCartesian(
                      this.centerX,
                      this.centerY,
                      o.globals.radialSize,
                      o.config.plotOptions.pie.startAngle + d * f,
                    ),
                  );
                u.forEach(function (m, y) {
                  var x = s.drawLine(
                    m.x,
                    m.y,
                    i.centerX,
                    i.centerY,
                    Array.isArray(l.connectorColors)
                      ? l.connectorColors[y]
                      : l.connectorColors,
                  );
                  n.add(x);
                });
              }
            },
          },
          {
            key: "revertDataLabelsInner",
            value: function (n, i, o) {
              var s = this,
                l = this.w,
                u = l.globals.dom.baseEl.querySelector(
                  ".apexcharts-datalabels-group",
                ),
                d = !1,
                f = l.globals.dom.baseEl.getElementsByClassName(
                  "apexcharts-pie-area",
                ),
                m = function (S) {
                  var _ = S.makeSliceOut,
                    C = S.printLabel;
                  Array.prototype.forEach.call(f, function (E) {
                    E.getAttribute("data:pieClicked") === "true" &&
                      (_ && (d = !0), C && s.printDataLabelsInner(E, i));
                  });
                };
              if (
                (m({ makeSliceOut: !0, printLabel: !1 }),
                i.total.show && l.globals.series.length > 1)
              )
                d && !i.total.showAlways
                  ? m({ makeSliceOut: !1, printLabel: !0 })
                  : this.printInnerLabels(
                      i,
                      i.total.label,
                      i.total.formatter(l),
                    );
              else if ((m({ makeSliceOut: !1, printLabel: !0 }), !d))
                if (
                  l.globals.selectedDataPoints.length &&
                  l.globals.series.length > 1
                )
                  if (l.globals.selectedDataPoints[0].length > 0) {
                    var y = l.globals.selectedDataPoints[0],
                      x = l.globals.dom.baseEl.querySelector(
                        ".apexcharts-"
                          .concat(this.chartType.toLowerCase(), "-slice-")
                          .concat(y),
                      );
                    this.printDataLabelsInner(x, i);
                  } else
                    u &&
                      l.globals.selectedDataPoints.length &&
                      l.globals.selectedDataPoints[0].length === 0 &&
                      (u.style.opacity = 0);
                else u && l.globals.series.length > 1 && (u.style.opacity = 0);
            },
          },
        ]),
        T
      );
    })(),
    Le = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.chartType = this.w.config.chart.type),
          (this.initialAnim = this.w.config.chart.animations.enabled),
          (this.dynamicAnim =
            this.initialAnim &&
            this.w.config.chart.animations.dynamicAnimation.enabled),
          (this.animDur = 0);
        var i = this.w;
        (this.graphics = new B(this.ctx)),
          (this.lineColorArr =
            i.globals.stroke.colors !== void 0
              ? i.globals.stroke.colors
              : i.globals.colors),
          (this.defaultSize =
            i.globals.svgHeight < i.globals.svgWidth
              ? i.globals.gridHeight + 1.5 * i.globals.goldenPadding
              : i.globals.gridWidth),
          (this.isLog = i.config.yaxis[0].logarithmic),
          (this.coreUtils = new U(this.ctx)),
          (this.maxValue = this.isLog
            ? this.coreUtils.getLogVal(i.globals.maxY, 0)
            : i.globals.maxY),
          (this.minValue = this.isLog
            ? this.coreUtils.getLogVal(this.w.globals.minY, 0)
            : i.globals.minY),
          (this.polygons = i.config.plotOptions.radar.polygons),
          (this.strokeWidth = i.config.stroke.show ? i.config.stroke.width : 0),
          (this.size =
            this.defaultSize / 2.1 -
            this.strokeWidth -
            i.config.chart.dropShadow.blur),
          i.config.xaxis.labels.show &&
            (this.size = this.size - i.globals.xAxisLabelsWidth / 1.75),
          i.config.plotOptions.radar.size !== void 0 &&
            (this.size = i.config.plotOptions.radar.size),
          (this.dataRadiusOfPercent = []),
          (this.dataRadius = []),
          (this.angleArr = []),
          (this.yaxisLabelsTextsPos = []);
      }
      return (
        v(T, [
          {
            key: "draw",
            value: function (n) {
              var i = this,
                o = this.w,
                s = new Ce(this.ctx),
                l = [],
                u = new Qe(this.ctx);
              n.length &&
                (this.dataPointsLen = n[o.globals.maxValsInArrayIndex].length),
                (this.disAngle = (2 * Math.PI) / this.dataPointsLen);
              var d = o.globals.gridWidth / 2,
                f = o.globals.gridHeight / 2,
                m = d + o.config.plotOptions.radar.offsetX,
                y = f + o.config.plotOptions.radar.offsetY,
                x = this.graphics.group({
                  class: "apexcharts-radar-series apexcharts-plot-series",
                  transform: "translate("
                    .concat(m || 0, ", ")
                    .concat(y || 0, ")"),
                }),
                S = [],
                _ = null,
                C = null;
              if (
                ((this.yaxisLabels = this.graphics.group({
                  class: "apexcharts-yaxis",
                })),
                n.forEach(function (I, H) {
                  var Y = I.length === o.globals.dataPoints,
                    g = i.graphics.group().attr({
                      class: "apexcharts-series",
                      "data:longestSeries": Y,
                      seriesName: O.escapeString(o.globals.seriesNames[H]),
                      rel: H + 1,
                      "data:realIndex": H,
                    });
                  (i.dataRadiusOfPercent[H] = []),
                    (i.dataRadius[H] = []),
                    (i.angleArr[H] = []),
                    I.forEach(function (se, xe) {
                      var be = Math.abs(i.maxValue - i.minValue);
                      (se += Math.abs(i.minValue)),
                        i.isLog && (se = i.coreUtils.getLogVal(se, 0)),
                        (i.dataRadiusOfPercent[H][xe] = se / be),
                        (i.dataRadius[H][xe] =
                          i.dataRadiusOfPercent[H][xe] * i.size),
                        (i.angleArr[H][xe] = xe * i.disAngle);
                    }),
                    (S = i.getDataPointsPos(i.dataRadius[H], i.angleArr[H]));
                  var w = i.createPaths(S, { x: 0, y: 0 });
                  (_ = i.graphics.group({
                    class:
                      "apexcharts-series-markers-wrap apexcharts-element-hidden",
                  })),
                    (C = i.graphics.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": H,
                    })),
                    o.globals.delayedElements.push({ el: _.node, index: H });
                  var A = {
                      i: H,
                      realIndex: H,
                      animationDelay: H,
                      initialSpeed: o.config.chart.animations.speed,
                      dataChangeSpeed:
                        o.config.chart.animations.dynamicAnimation.speed,
                      className: "apexcharts-radar",
                      shouldClipToGrid: !1,
                      bindEventsOnPaths: !1,
                      stroke: o.globals.stroke.colors[H],
                      strokeLineCap: o.config.stroke.lineCap,
                    },
                    D = null;
                  o.globals.previousPaths.length > 0 &&
                    (D = i.getPreviousPath(H));
                  for (var W = 0; W < w.linePathsTo.length; W++) {
                    var V = i.graphics.renderPaths(
                      a(
                        a({}, A),
                        {},
                        {
                          pathFrom: D === null ? w.linePathsFrom[W] : D,
                          pathTo: w.linePathsTo[W],
                          strokeWidth: Array.isArray(i.strokeWidth)
                            ? i.strokeWidth[H]
                            : i.strokeWidth,
                          fill: "none",
                          drawShadow: !1,
                        },
                      ),
                    );
                    g.add(V);
                    var K = s.fillPath({ seriesNumber: H }),
                      Z = i.graphics.renderPaths(
                        a(
                          a({}, A),
                          {},
                          {
                            pathFrom: D === null ? w.areaPathsFrom[W] : D,
                            pathTo: w.areaPathsTo[W],
                            strokeWidth: 0,
                            fill: K,
                            drawShadow: !1,
                          },
                        ),
                      );
                    if (o.config.chart.dropShadow.enabled) {
                      var re = new N(i.ctx),
                        ce = o.config.chart.dropShadow;
                      re.dropShadow(
                        Z,
                        Object.assign({}, ce, { noUserSpaceOnUse: !0 }),
                        H,
                      );
                    }
                    g.add(Z);
                  }
                  I.forEach(function (se, xe) {
                    var be = new ze(i.ctx).getMarkerConfig({
                        cssClass: "apexcharts-marker",
                        seriesIndex: H,
                        dataPointIndex: xe,
                      }),
                      Ie = i.graphics.drawMarker(S[xe].x, S[xe].y, be);
                    Ie.attr("rel", xe),
                      Ie.attr("j", xe),
                      Ie.attr("index", H),
                      Ie.node.setAttribute("default-marker-size", be.pSize);
                    var Fe = i.graphics.group({
                      class: "apexcharts-series-markers",
                    });
                    Fe && Fe.add(Ie), _.add(Fe), g.add(_);
                    var We = o.config.dataLabels;
                    if (We.enabled) {
                      var lt = We.formatter(o.globals.series[H][xe], {
                        seriesIndex: H,
                        dataPointIndex: xe,
                        w: o,
                      });
                      u.plotDataLabelsText({
                        x: S[xe].x,
                        y: S[xe].y,
                        text: lt,
                        textAnchor: "middle",
                        i: H,
                        j: H,
                        parent: C,
                        offsetCorrection: !1,
                        dataLabelsConfig: a({}, We),
                      });
                    }
                    g.add(C);
                  }),
                    l.push(g);
                }),
                this.drawPolygons({ parent: x }),
                o.config.xaxis.labels.show)
              ) {
                var E = this.drawXAxisTexts();
                x.add(E);
              }
              return (
                l.forEach(function (I) {
                  x.add(I);
                }),
                x.add(this.yaxisLabels),
                x
              );
            },
          },
          {
            key: "drawPolygons",
            value: function (n) {
              for (
                var i = this,
                  o = this.w,
                  s = n.parent,
                  l = new Re(this.ctx),
                  u = o.globals.yAxisScale[0].result.reverse(),
                  d = u.length,
                  f = [],
                  m = this.size / (d - 1),
                  y = 0;
                y < d;
                y++
              )
                f[y] = m * y;
              f.reverse();
              var x = [],
                S = [];
              f.forEach(function (_, C) {
                var E = O.getPolygonPos(_, i.dataPointsLen),
                  I = "";
                E.forEach(function (H, Y) {
                  if (C === 0) {
                    var g = i.graphics.drawLine(
                      H.x,
                      H.y,
                      0,
                      0,
                      Array.isArray(i.polygons.connectorColors)
                        ? i.polygons.connectorColors[Y]
                        : i.polygons.connectorColors,
                    );
                    S.push(g);
                  }
                  Y === 0 && i.yaxisLabelsTextsPos.push({ x: H.x, y: H.y }),
                    (I += H.x + "," + H.y + " ");
                }),
                  x.push(I);
              }),
                x.forEach(function (_, C) {
                  var E = i.polygons.strokeColors,
                    I = i.polygons.strokeWidth,
                    H = i.graphics.drawPolygon(
                      _,
                      Array.isArray(E) ? E[C] : E,
                      Array.isArray(I) ? I[C] : I,
                      o.globals.radarPolygons.fill.colors[C],
                    );
                  s.add(H);
                }),
                S.forEach(function (_) {
                  s.add(_);
                }),
                o.config.yaxis[0].show &&
                  this.yaxisLabelsTextsPos.forEach(function (_, C) {
                    var E = l.drawYAxisTexts(_.x, _.y, C, u[C]);
                    i.yaxisLabels.add(E);
                  });
            },
          },
          {
            key: "drawXAxisTexts",
            value: function () {
              var n = this,
                i = this.w,
                o = i.config.xaxis.labels,
                s = this.graphics.group({ class: "apexcharts-xaxis" }),
                l = O.getPolygonPos(this.size, this.dataPointsLen);
              return (
                i.globals.labels.forEach(function (u, d) {
                  var f = i.config.xaxis.labels.formatter,
                    m = new Qe(n.ctx);
                  if (l[d]) {
                    var y = n.getTextPos(l[d], n.size),
                      x = f(u, { seriesIndex: -1, dataPointIndex: d, w: i });
                    m.plotDataLabelsText({
                      x: y.newX,
                      y: y.newY,
                      text: x,
                      textAnchor: y.textAnchor,
                      i: d,
                      j: d,
                      parent: s,
                      color:
                        Array.isArray(o.style.colors) && o.style.colors[d]
                          ? o.style.colors[d]
                          : "#a8a8a8",
                      dataLabelsConfig: a(
                        {
                          textAnchor: y.textAnchor,
                          dropShadow: { enabled: !1 },
                        },
                        o,
                      ),
                      offsetCorrection: !1,
                    });
                  }
                }),
                s
              );
            },
          },
          {
            key: "createPaths",
            value: function (n, i) {
              var o = this,
                s = [],
                l = [],
                u = [],
                d = [];
              if (n.length) {
                (l = [this.graphics.move(i.x, i.y)]),
                  (d = [this.graphics.move(i.x, i.y)]);
                var f = this.graphics.move(n[0].x, n[0].y),
                  m = this.graphics.move(n[0].x, n[0].y);
                n.forEach(function (y, x) {
                  (f += o.graphics.line(y.x, y.y)),
                    (m += o.graphics.line(y.x, y.y)),
                    x === n.length - 1 && ((f += "Z"), (m += "Z"));
                }),
                  s.push(f),
                  u.push(m);
              }
              return {
                linePathsFrom: l,
                linePathsTo: s,
                areaPathsFrom: d,
                areaPathsTo: u,
              };
            },
          },
          {
            key: "getTextPos",
            value: function (n, i) {
              var o = "middle",
                s = n.x,
                l = n.y;
              return (
                Math.abs(n.x) >= 10
                  ? n.x > 0
                    ? ((o = "start"), (s += 10))
                    : n.x < 0 && ((o = "end"), (s -= 10))
                  : (o = "middle"),
                Math.abs(n.y) >= i - 10 &&
                  (n.y < 0 ? (l -= 10) : n.y > 0 && (l += 10)),
                { textAnchor: o, newX: s, newY: l }
              );
            },
          },
          {
            key: "getPreviousPath",
            value: function (n) {
              for (
                var i = this.w, o = null, s = 0;
                s < i.globals.previousPaths.length;
                s++
              ) {
                var l = i.globals.previousPaths[s];
                l.paths.length > 0 &&
                  parseInt(l.realIndex, 10) === parseInt(n, 10) &&
                  i.globals.previousPaths[s].paths[0] !== void 0 &&
                  (o = i.globals.previousPaths[s].paths[0].d);
              }
              return o;
            },
          },
          {
            key: "getDataPointsPos",
            value: function (n, i) {
              var o =
                arguments.length > 2 && arguments[2] !== void 0
                  ? arguments[2]
                  : this.dataPointsLen;
              (n = n || []), (i = i || []);
              for (var s = [], l = 0; l < o; l++) {
                var u = {};
                (u.x = n[l] * Math.sin(i[l])),
                  (u.y = -n[l] * Math.cos(i[l])),
                  s.push(u);
              }
              return s;
            },
          },
        ]),
        T
      );
    })(),
    Ae = (function (T) {
      P(i, Me);
      var n = z(i);
      function i(o) {
        var s;
        h(this, i),
          ((s = n.call(this, o)).ctx = o),
          (s.w = o.w),
          (s.animBeginArr = [0]),
          (s.animDur = 0);
        var l = s.w;
        return (
          (s.startAngle = l.config.plotOptions.radialBar.startAngle),
          (s.endAngle = l.config.plotOptions.radialBar.endAngle),
          (s.totalAngle = Math.abs(
            l.config.plotOptions.radialBar.endAngle -
              l.config.plotOptions.radialBar.startAngle,
          )),
          (s.trackStartAngle = l.config.plotOptions.radialBar.track.startAngle),
          (s.trackEndAngle = l.config.plotOptions.radialBar.track.endAngle),
          (s.donutDataLabels = s.w.config.plotOptions.radialBar.dataLabels),
          (s.radialDataLabels = s.donutDataLabels),
          s.trackStartAngle || (s.trackStartAngle = s.startAngle),
          s.trackEndAngle || (s.trackEndAngle = s.endAngle),
          s.endAngle === 360 && (s.endAngle = 359.99),
          (s.margin = parseInt(
            l.config.plotOptions.radialBar.track.margin,
            10,
          )),
          s
        );
      }
      return (
        v(i, [
          {
            key: "draw",
            value: function (o) {
              var s = this.w,
                l = new B(this.ctx),
                u = l.group({ class: "apexcharts-radialbar" });
              if (s.globals.noData) return u;
              var d = l.group(),
                f = this.defaultSize / 2,
                m = s.globals.gridWidth / 2,
                y = this.defaultSize / 2.05;
              s.config.chart.sparkline.enabled ||
                (y =
                  y - s.config.stroke.width - s.config.chart.dropShadow.blur);
              var x = s.globals.fill.colors;
              if (s.config.plotOptions.radialBar.track.show) {
                var S = this.drawTracks({
                  size: y,
                  centerX: m,
                  centerY: f,
                  colorArr: x,
                  series: o,
                });
                d.add(S);
              }
              var _ = this.drawArcs({
                  size: y,
                  centerX: m,
                  centerY: f,
                  colorArr: x,
                  series: o,
                }),
                C = 360;
              s.config.plotOptions.radialBar.startAngle < 0 &&
                (C = this.totalAngle);
              var E = (360 - C) / 360;
              if (
                ((s.globals.radialSize = y - y * E),
                this.radialDataLabels.value.show)
              ) {
                var I = Math.max(
                  this.radialDataLabels.value.offsetY,
                  this.radialDataLabels.name.offsetY,
                );
                s.globals.radialSize += I * E;
              }
              return (
                d.add(_.g),
                s.config.plotOptions.radialBar.hollow.position === "front" &&
                  (_.g.add(_.elHollow), _.dataLabels && _.g.add(_.dataLabels)),
                u.add(d),
                u
              );
            },
          },
          {
            key: "drawTracks",
            value: function (o) {
              var s = this.w,
                l = new B(this.ctx),
                u = l.group({ class: "apexcharts-tracks" }),
                d = new N(this.ctx),
                f = new Ce(this.ctx),
                m = this.getStrokeWidth(o);
              o.size = o.size - m / 2;
              for (var y = 0; y < o.series.length; y++) {
                var x = l.group({
                  class: "apexcharts-radialbar-track apexcharts-track",
                });
                u.add(x),
                  x.attr({ rel: y + 1 }),
                  (o.size = o.size - m - this.margin);
                var S = s.config.plotOptions.radialBar.track,
                  _ = f.fillPath({
                    seriesNumber: 0,
                    size: o.size,
                    fillColors: Array.isArray(S.background)
                      ? S.background[y]
                      : S.background,
                    solid: !0,
                  }),
                  C = this.trackStartAngle,
                  E = this.trackEndAngle;
                Math.abs(E) + Math.abs(C) >= 360 &&
                  (E = 360 - Math.abs(this.startAngle) - 0.1);
                var I = l.drawPath({
                  d: "",
                  stroke: _,
                  strokeWidth: (m * parseInt(S.strokeWidth, 10)) / 100,
                  fill: "none",
                  strokeOpacity: S.opacity,
                  classes: "apexcharts-radialbar-area",
                });
                if (S.dropShadow.enabled) {
                  var H = S.dropShadow;
                  d.dropShadow(I, H);
                }
                x.add(I),
                  I.attr("id", "apexcharts-radialbarTrack-" + y),
                  this.animatePaths(I, {
                    centerX: o.centerX,
                    centerY: o.centerY,
                    endAngle: E,
                    startAngle: C,
                    size: o.size,
                    i: y,
                    totalItems: 2,
                    animBeginArr: 0,
                    dur: 0,
                    isTrack: !0,
                    easing: s.globals.easing,
                  });
              }
              return u;
            },
          },
          {
            key: "drawArcs",
            value: function (o) {
              var s = this.w,
                l = new B(this.ctx),
                u = new Ce(this.ctx),
                d = new N(this.ctx),
                f = l.group(),
                m = this.getStrokeWidth(o);
              o.size = o.size - m / 2;
              var y = s.config.plotOptions.radialBar.hollow.background,
                x =
                  o.size -
                  m * o.series.length -
                  this.margin * o.series.length -
                  (m *
                    parseInt(
                      s.config.plotOptions.radialBar.track.strokeWidth,
                      10,
                    )) /
                    100 /
                    2,
                S = x - s.config.plotOptions.radialBar.hollow.margin;
              s.config.plotOptions.radialBar.hollow.image !== void 0 &&
                (y = this.drawHollowImage(o, f, x, y));
              var _ = this.drawHollow({
                size: S,
                centerX: o.centerX,
                centerY: o.centerY,
                fill: y || "transparent",
              });
              if (s.config.plotOptions.radialBar.hollow.dropShadow.enabled) {
                var C = s.config.plotOptions.radialBar.hollow.dropShadow;
                d.dropShadow(_, C);
              }
              var E = 1;
              !this.radialDataLabels.total.show &&
                s.globals.series.length > 1 &&
                (E = 0);
              var I = null;
              this.radialDataLabels.show &&
                (I = this.renderInnerDataLabels(this.radialDataLabels, {
                  hollowSize: x,
                  centerX: o.centerX,
                  centerY: o.centerY,
                  opacity: E,
                })),
                s.config.plotOptions.radialBar.hollow.position === "back" &&
                  (f.add(_), I && f.add(I));
              var H = !1;
              s.config.plotOptions.radialBar.inverseOrder && (H = !0);
              for (
                var Y = H ? o.series.length - 1 : 0;
                H ? Y >= 0 : Y < o.series.length;
                H ? Y-- : Y++
              ) {
                var g = l.group({
                  class: "apexcharts-series apexcharts-radial-series",
                  seriesName: O.escapeString(s.globals.seriesNames[Y]),
                });
                f.add(g),
                  g.attr({ rel: Y + 1, "data:realIndex": Y }),
                  this.ctx.series.addCollapsedClassToSeries(g, Y),
                  (o.size = o.size - m - this.margin);
                var w = u.fillPath({
                    seriesNumber: Y,
                    size: o.size,
                    value: o.series[Y],
                  }),
                  A = this.startAngle,
                  D = void 0,
                  W = O.negToZero(o.series[Y] > 100 ? 100 : o.series[Y]) / 100,
                  V = Math.round(this.totalAngle * W) + this.startAngle,
                  K = void 0;
                s.globals.dataChanged &&
                  ((D = this.startAngle),
                  (K =
                    Math.round(
                      (this.totalAngle *
                        O.negToZero(s.globals.previousPaths[Y])) /
                        100,
                    ) + D)),
                  Math.abs(V) + Math.abs(A) >= 360 && (V -= 0.01),
                  Math.abs(K) + Math.abs(D) >= 360 && (K -= 0.01);
                var Z = V - A,
                  re = Array.isArray(s.config.stroke.dashArray)
                    ? s.config.stroke.dashArray[Y]
                    : s.config.stroke.dashArray,
                  ce = l.drawPath({
                    d: "",
                    stroke: w,
                    strokeWidth: m,
                    fill: "none",
                    fillOpacity: s.config.fill.opacity,
                    classes:
                      "apexcharts-radialbar-area apexcharts-radialbar-slice-" +
                      Y,
                    strokeDashArray: re,
                  });
                if (
                  (B.setAttrs(ce.node, {
                    "data:angle": Z,
                    "data:value": o.series[Y],
                  }),
                  s.config.chart.dropShadow.enabled)
                ) {
                  var se = s.config.chart.dropShadow;
                  d.dropShadow(ce, se, Y);
                }
                d.setSelectionFilter(ce, 0, Y),
                  this.addListeners(ce, this.radialDataLabels),
                  g.add(ce),
                  ce.attr({ index: 0, j: Y });
                var xe = 0;
                !this.initialAnim ||
                  s.globals.resized ||
                  s.globals.dataChanged ||
                  (xe = s.config.chart.animations.speed),
                  s.globals.dataChanged &&
                    (xe = s.config.chart.animations.dynamicAnimation.speed),
                  (this.animDur = xe / (1.2 * o.series.length) + this.animDur),
                  this.animBeginArr.push(this.animDur),
                  this.animatePaths(ce, {
                    centerX: o.centerX,
                    centerY: o.centerY,
                    endAngle: V,
                    startAngle: A,
                    prevEndAngle: K,
                    prevStartAngle: D,
                    size: o.size,
                    i: Y,
                    totalItems: 2,
                    animBeginArr: this.animBeginArr,
                    dur: xe,
                    shouldSetPrevPaths: !0,
                    easing: s.globals.easing,
                  });
              }
              return { g: f, elHollow: _, dataLabels: I };
            },
          },
          {
            key: "drawHollow",
            value: function (o) {
              var s = new B(this.ctx).drawCircle(2 * o.size);
              return (
                s.attr({
                  class: "apexcharts-radialbar-hollow",
                  cx: o.centerX,
                  cy: o.centerY,
                  r: o.size,
                  fill: o.fill,
                }),
                s
              );
            },
          },
          {
            key: "drawHollowImage",
            value: function (o, s, l, u) {
              var d = this.w,
                f = new Ce(this.ctx),
                m = O.randomId(),
                y = d.config.plotOptions.radialBar.hollow.image;
              if (d.config.plotOptions.radialBar.hollow.imageClipped)
                f.clippedImgArea({
                  width: l,
                  height: l,
                  image: y,
                  patternID: "pattern".concat(d.globals.cuid).concat(m),
                }),
                  (u = "url(#pattern".concat(d.globals.cuid).concat(m, ")"));
              else {
                var x = d.config.plotOptions.radialBar.hollow.imageWidth,
                  S = d.config.plotOptions.radialBar.hollow.imageHeight;
                if (x === void 0 && S === void 0) {
                  var _ = d.globals.dom.Paper.image(y).loaded(function (E) {
                    this.move(
                      o.centerX -
                        E.width / 2 +
                        d.config.plotOptions.radialBar.hollow.imageOffsetX,
                      o.centerY -
                        E.height / 2 +
                        d.config.plotOptions.radialBar.hollow.imageOffsetY,
                    );
                  });
                  s.add(_);
                } else {
                  var C = d.globals.dom.Paper.image(y).loaded(function (E) {
                    this.move(
                      o.centerX -
                        x / 2 +
                        d.config.plotOptions.radialBar.hollow.imageOffsetX,
                      o.centerY -
                        S / 2 +
                        d.config.plotOptions.radialBar.hollow.imageOffsetY,
                    ),
                      this.size(x, S);
                  });
                  s.add(C);
                }
              }
              return u;
            },
          },
          {
            key: "getStrokeWidth",
            value: function (o) {
              var s = this.w;
              return (
                (o.size *
                  (100 -
                    parseInt(s.config.plotOptions.radialBar.hollow.size, 10))) /
                  100 /
                  (o.series.length + 1) -
                this.margin
              );
            },
          },
        ]),
        i
      );
    })(),
    qe = (function (T) {
      P(i, J);
      var n = z(i);
      function i() {
        return h(this, i), n.apply(this, arguments);
      }
      return (
        v(i, [
          {
            key: "draw",
            value: function (o, s) {
              var l = this.w,
                u = new B(this.ctx);
              (this.rangeBarOptions = this.w.config.plotOptions.rangeBar),
                (this.series = o),
                (this.seriesRangeStart = l.globals.seriesRangeStart),
                (this.seriesRangeEnd = l.globals.seriesRangeEnd),
                this.barHelpers.initVariables(o);
              for (
                var d = u.group({
                    class: "apexcharts-rangebar-series apexcharts-plot-series",
                  }),
                  f = 0;
                f < o.length;
                f++
              ) {
                var m,
                  y,
                  x,
                  S,
                  _ = void 0,
                  C = void 0,
                  E = l.globals.comboCharts ? s[f] : f,
                  I = u.group({
                    class: "apexcharts-series",
                    seriesName: O.escapeString(l.globals.seriesNames[E]),
                    rel: f + 1,
                    "data:realIndex": E,
                  });
                this.ctx.series.addCollapsedClassToSeries(I, E),
                  o[f].length > 0 && (this.visibleI = this.visibleI + 1);
                var H = 0,
                  Y = 0;
                this.yRatio.length > 1 && (this.yaxisIndex = E);
                var g = this.barHelpers.initialPositions();
                (C = g.y),
                  (S = g.zeroW),
                  (_ = g.x),
                  (Y = g.barWidth),
                  (H = g.barHeight),
                  (m = g.xDivision),
                  (y = g.yDivision),
                  (x = g.zeroH);
                for (
                  var w = u.group({
                      class: "apexcharts-datalabels",
                      "data:realIndex": E,
                    }),
                    A = u.group({ class: "apexcharts-rangebar-goals-markers" }),
                    D = 0;
                  D < l.globals.dataPoints;
                  D++
                ) {
                  var W,
                    V = this.barHelpers.getStrokeWidth(f, D, E),
                    K = this.seriesRangeStart[f][D],
                    Z = this.seriesRangeEnd[f][D],
                    re = null,
                    ce = null,
                    se = null,
                    xe = { x: _, y: C, strokeWidth: V, elSeries: I },
                    be = this.seriesLen;
                  if (
                    (l.config.plotOptions.bar.rangeBarGroupRows && (be = 1),
                    l.config.series[f].data[D] === void 0)
                  )
                    break;
                  if (this.isHorizontal) {
                    se = C + H * this.visibleI;
                    var Ie = (y - H * be) / 2;
                    if (l.config.series[f].data[D].x) {
                      var Fe = this.detectOverlappingBars({
                        i: f,
                        j: D,
                        barYPosition: se,
                        srty: Ie,
                        barHeight: H,
                        yDivision: y,
                        initPositions: g,
                      });
                      (H = Fe.barHeight), (se = Fe.barYPosition);
                    }
                    Y = (re = this.drawRangeBarPaths(
                      a(
                        {
                          indexes: { i: f, j: D, realIndex: E },
                          barHeight: H,
                          barYPosition: se,
                          zeroW: S,
                          yDivision: y,
                          y1: K,
                          y2: Z,
                        },
                        xe,
                      ),
                    )).barWidth;
                  } else {
                    l.globals.isXNumeric &&
                      (_ =
                        (l.globals.seriesX[f][D] - l.globals.minX) /
                          this.xRatio -
                        Y / 2),
                      (ce = _ + Y * this.visibleI);
                    var We = (m - Y * be) / 2;
                    if (l.config.series[f].data[D].x) {
                      var lt = this.detectOverlappingBars({
                        i: f,
                        j: D,
                        barXPosition: ce,
                        srtx: We,
                        barWidth: Y,
                        xDivision: m,
                        initPositions: g,
                      });
                      (Y = lt.barWidth), (ce = lt.barXPosition);
                    }
                    H = (re = this.drawRangeColumnPaths(
                      a(
                        {
                          indexes: { i: f, j: D, realIndex: E },
                          barWidth: Y,
                          barXPosition: ce,
                          zeroH: x,
                          xDivision: m,
                        },
                        xe,
                      ),
                    )).barHeight;
                  }
                  var et = this.barHelpers.drawGoalLine({
                    barXPosition: re.barXPosition,
                    barYPosition: se,
                    goalX: re.goalX,
                    goalY: re.goalY,
                    barHeight: H,
                    barWidth: Y,
                  });
                  et && A.add(et), (C = re.y), (_ = re.x);
                  var ft = this.barHelpers.getPathFillColor(o, f, D, E),
                    Tr = l.globals.stroke.colors[E];
                  this.renderSeries(
                    (b(
                      (W = {
                        realIndex: E,
                        pathFill: ft,
                        lineFill: Tr,
                        j: D,
                        i: f,
                        x: _,
                        y: C,
                        y1: K,
                        y2: Z,
                        pathFrom: re.pathFrom,
                        pathTo: re.pathTo,
                        strokeWidth: V,
                        elSeries: I,
                        series: o,
                        barHeight: H,
                        barWidth: Y,
                        barXPosition: ce,
                        barYPosition: se,
                      }),
                      "barWidth",
                      Y,
                    ),
                    b(W, "elDataLabelsWrap", w),
                    b(W, "elGoalsMarkers", A),
                    b(W, "visibleSeries", this.visibleI),
                    b(W, "type", "rangebar"),
                    W),
                  );
                }
                d.add(I);
              }
              return d;
            },
          },
          {
            key: "detectOverlappingBars",
            value: function (o) {
              var s = o.i,
                l = o.j,
                u = o.barYPosition,
                d = o.barXPosition,
                f = o.srty,
                m = o.srtx,
                y = o.barHeight,
                x = o.barWidth,
                S = o.yDivision,
                _ = o.xDivision,
                C = o.initPositions,
                E = this.w,
                I = [],
                H = E.config.series[s].data[l].rangeName,
                Y = E.config.series[s].data[l].x,
                g = Array.isArray(Y) ? Y.join(" ") : Y,
                w = E.globals.labels
                  .map(function (D) {
                    return Array.isArray(D) ? D.join(" ") : D;
                  })
                  .indexOf(g),
                A = E.globals.seriesRange[s].findIndex(function (D) {
                  return D.x === g && D.overlaps.length > 0;
                });
              return (
                this.isHorizontal
                  ? ((u = E.config.plotOptions.bar.rangeBarGroupRows
                      ? f + S * w
                      : f + y * this.visibleI + S * w),
                    A > -1 &&
                      !E.config.plotOptions.bar.rangeBarOverlap &&
                      (I = E.globals.seriesRange[s][A].overlaps).indexOf(H) >
                        -1 &&
                      (u =
                        (y = C.barHeight / I.length) * this.visibleI +
                        (S * (100 - parseInt(this.barOptions.barHeight, 10))) /
                          100 /
                          2 +
                        y * (this.visibleI + I.indexOf(H)) +
                        S * w))
                  : (w > -1 &&
                      (d = E.config.plotOptions.bar.rangeBarGroupRows
                        ? m + _ * w
                        : m + x * this.visibleI + _ * w),
                    A > -1 &&
                      !E.config.plotOptions.bar.rangeBarOverlap &&
                      (I = E.globals.seriesRange[s][A].overlaps).indexOf(H) >
                        -1 &&
                      (d =
                        (x = C.barWidth / I.length) * this.visibleI +
                        (_ * (100 - parseInt(this.barOptions.barWidth, 10))) /
                          100 /
                          2 +
                        x * (this.visibleI + I.indexOf(H)) +
                        _ * w)),
                { barYPosition: u, barXPosition: d, barHeight: y, barWidth: x }
              );
            },
          },
          {
            key: "drawRangeColumnPaths",
            value: function (o) {
              var s = o.indexes,
                l = o.x,
                u = o.xDivision,
                d = o.barWidth,
                f = o.barXPosition,
                m = o.zeroH,
                y = this.w,
                x = s.i,
                S = s.j,
                _ = this.yRatio[this.yaxisIndex],
                C = s.realIndex,
                E = this.getRangeValue(C, S),
                I = Math.min(E.start, E.end),
                H = Math.max(E.start, E.end);
              this.series[x][S] === void 0 || this.series[x][S] === null
                ? (I = m)
                : ((I = m - I / _), (H = m - H / _));
              var Y = Math.abs(H - I),
                g = this.barHelpers.getColumnPaths({
                  barXPosition: f,
                  barWidth: d,
                  y1: I,
                  y2: H,
                  strokeWidth: this.strokeWidth,
                  series: this.seriesRangeEnd,
                  realIndex: s.realIndex,
                  i: C,
                  j: S,
                  w: y,
                });
              if (y.globals.isXNumeric) {
                var w = this.getBarXForNumericXAxis({
                  x: l,
                  j: S,
                  realIndex: C,
                  barWidth: d,
                });
                (l = w.x), (f = w.barXPosition);
              } else l += u;
              return {
                pathTo: g.pathTo,
                pathFrom: g.pathFrom,
                barHeight: Y,
                x: l,
                y: H,
                goalY: this.barHelpers.getGoalValues("y", null, m, x, S),
                barXPosition: f,
              };
            },
          },
          {
            key: "drawRangeBarPaths",
            value: function (o) {
              var s = o.indexes,
                l = o.y,
                u = o.y1,
                d = o.y2,
                f = o.yDivision,
                m = o.barHeight,
                y = o.barYPosition,
                x = o.zeroW,
                S = this.w,
                _ = x + u / this.invertedYRatio,
                C = x + d / this.invertedYRatio,
                E = Math.abs(C - _),
                I = this.barHelpers.getBarpaths({
                  barYPosition: y,
                  barHeight: m,
                  x1: _,
                  x2: C,
                  strokeWidth: this.strokeWidth,
                  series: this.seriesRangeEnd,
                  i: s.realIndex,
                  realIndex: s.realIndex,
                  j: s.j,
                  w: S,
                });
              return (
                S.globals.isXNumeric || (l += f),
                {
                  pathTo: I.pathTo,
                  pathFrom: I.pathFrom,
                  barWidth: E,
                  x: C,
                  goalX: this.barHelpers.getGoalValues(
                    "x",
                    x,
                    null,
                    s.realIndex,
                    s.j,
                  ),
                  y: l,
                }
              );
            },
          },
          {
            key: "getRangeValue",
            value: function (o, s) {
              var l = this.w;
              return {
                start: l.globals.seriesRangeStart[o][s],
                end: l.globals.seriesRangeEnd[o][s],
              };
            },
          },
        ]),
        i
      );
    })(),
    it = (function () {
      function T(n) {
        h(this, T), (this.w = n.w), (this.lineCtx = n);
      }
      return (
        v(T, [
          {
            key: "sameValueSeriesFix",
            value: function (n, i) {
              var o = this.w;
              if (
                (o.config.fill.type === "gradient" ||
                  o.config.fill.type[n] === "gradient") &&
                new U(this.lineCtx.ctx, o).seriesHaveSameValues(n)
              ) {
                var s = i[n].slice();
                (s[s.length - 1] = s[s.length - 1] + 1e-6), (i[n] = s);
              }
              return i;
            },
          },
          {
            key: "calculatePoints",
            value: function (n) {
              var i = n.series,
                o = n.realIndex,
                s = n.x,
                l = n.y,
                u = n.i,
                d = n.j,
                f = n.prevY,
                m = this.w,
                y = [],
                x = [];
              if (d === 0) {
                var S =
                  this.lineCtx.categoryAxisCorrection +
                  m.config.markers.offsetX;
                m.globals.isXNumeric &&
                  (S =
                    (m.globals.seriesX[o][0] - m.globals.minX) /
                      this.lineCtx.xRatio +
                    m.config.markers.offsetX),
                  y.push(S),
                  x.push(
                    O.isNumber(i[u][0]) ? f + m.config.markers.offsetY : null,
                  ),
                  y.push(s + m.config.markers.offsetX),
                  x.push(
                    O.isNumber(i[u][d + 1])
                      ? l + m.config.markers.offsetY
                      : null,
                  );
              } else
                y.push(s + m.config.markers.offsetX),
                  x.push(
                    O.isNumber(i[u][d + 1])
                      ? l + m.config.markers.offsetY
                      : null,
                  );
              return { x: y, y: x };
            },
          },
          {
            key: "checkPreviousPaths",
            value: function (n) {
              for (
                var i = n.pathFromLine,
                  o = n.pathFromArea,
                  s = n.realIndex,
                  l = this.w,
                  u = 0;
                u < l.globals.previousPaths.length;
                u++
              ) {
                var d = l.globals.previousPaths[u];
                (d.type === "line" || d.type === "area") &&
                  d.paths.length > 0 &&
                  parseInt(d.realIndex, 10) === parseInt(s, 10) &&
                  (d.type === "line"
                    ? ((this.lineCtx.appendPathFrom = !1),
                      (i = l.globals.previousPaths[u].paths[0].d))
                    : d.type === "area" &&
                      ((this.lineCtx.appendPathFrom = !1),
                      (o = l.globals.previousPaths[u].paths[0].d),
                      l.config.stroke.show &&
                        l.globals.previousPaths[u].paths[1] &&
                        (i = l.globals.previousPaths[u].paths[1].d)));
              }
              return { pathFromLine: i, pathFromArea: o };
            },
          },
          {
            key: "determineFirstPrevY",
            value: function (n) {
              var i,
                o = n.i,
                s = n.series,
                l = n.prevY,
                u = n.lineYPosition,
                d = this.w;
              if (
                ((i = s[o]) === null || i === void 0 ? void 0 : i[0]) !== void 0
              )
                l =
                  (u =
                    d.config.chart.stacked && o > 0
                      ? this.lineCtx.prevSeriesY[o - 1][0]
                      : this.lineCtx.zeroY) -
                  s[o][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex] +
                  2 *
                    (this.lineCtx.isReversed
                      ? s[o][0] / this.lineCtx.yRatio[this.lineCtx.yaxisIndex]
                      : 0);
              else if (d.config.chart.stacked && o > 0 && s[o][0] === void 0) {
                for (var f = o - 1; f >= 0; f--)
                  if (s[f][0] !== null && s[f][0] !== void 0) {
                    l = u = this.lineCtx.prevSeriesY[f][0];
                    break;
                  }
              }
              return { prevY: l, lineYPosition: u };
            },
          },
        ]),
        T
      );
    })(),
    je = function (T) {
      for (
        var n,
          i,
          o,
          s,
          l = (function (y) {
            for (
              var x = [],
                S = y[0],
                _ = y[1],
                C = (x[0] = Er(S, _)),
                E = 1,
                I = y.length - 1;
              E < I;
              E++
            )
              (S = _), (_ = y[E + 1]), (x[E] = 0.5 * (C + (C = Er(S, _))));
            return (x[E] = C), x;
          })(T),
          u = T.length - 1,
          d = [],
          f = 0;
        f < u;
        f++
      )
        (o = Er(T[f], T[f + 1])),
          Math.abs(o) < 1e-6
            ? (l[f] = l[f + 1] = 0)
            : (s = (n = l[f] / o) * n + (i = l[f + 1] / o) * i) > 9 &&
              ((s = (3 * o) / Math.sqrt(s)),
              (l[f] = s * n),
              (l[f + 1] = s * i));
      for (var m = 0; m <= u; m++)
        (s =
          (T[Math.min(u, m + 1)][0] - T[Math.max(0, m - 1)][0]) /
          (6 * (1 + l[m] * l[m]))),
          d.push([s || 0, l[m] * s || 0]);
      return d;
    },
    Ve = function (T) {
      for (var n = "", i = 0; i < T.length; i++) {
        var o = T[i],
          s = T[i - 1],
          l = o.length,
          u = s == null ? void 0 : s.length;
        i > 1 && Math.abs(o[l - 2] - s[u - 2]) < 30
          ? ((n += "Q".concat(o[0], ", ").concat(o[1])),
            (n += ", ".concat(o[2], ", ").concat(o[3])))
          : l > 4
          ? ((n += "C".concat(o[0], ", ").concat(o[1])),
            (n += ", ".concat(o[2], ", ").concat(o[3])),
            (n += ", ".concat(o[4], ", ").concat(o[5])))
          : l > 2 &&
            ((n += "S".concat(o[0], ", ").concat(o[1])),
            (n += ", ".concat(o[2], ", ").concat(o[3])));
      }
      return n;
    },
    ht = function (T) {
      var n = je(T),
        i = T[1],
        o = T[0],
        s = [],
        l = n[1],
        u = n[0];
      s.push(o, [
        o[0] + u[0],
        o[1] + u[1],
        i[0] - l[0],
        i[1] - l[1],
        i[0],
        i[1],
      ]);
      for (var d = 2, f = n.length; d < f; d++) {
        var m = T[d],
          y = n[d];
        s.push([m[0] - y[0], m[1] - y[1], m[0], m[1]]);
      }
      return s;
    };
  function Er(T, n) {
    return (n[1] - T[1]) / (n[0] - T[0]);
  }
  var Rr = (function () {
    function T(n, i, o) {
      h(this, T),
        (this.ctx = n),
        (this.w = n.w),
        (this.xyRatios = i),
        (this.pointsChart =
          !(
            this.w.config.chart.type !== "bubble" &&
            this.w.config.chart.type !== "scatter"
          ) || o),
        (this.scatter = new $e(this.ctx)),
        (this.noNegatives = this.w.globals.minX === Number.MAX_VALUE),
        (this.lineHelpers = new it(this)),
        (this.markers = new ze(this.ctx)),
        (this.prevSeriesY = []),
        (this.categoryAxisCorrection = 0),
        (this.yaxisIndex = 0);
    }
    return (
      v(T, [
        {
          key: "draw",
          value: function (n, i, o, s) {
            var l,
              u = this.w,
              d = new B(this.ctx),
              f = u.globals.comboCharts ? i : u.config.chart.type,
              m = d.group({
                class: "apexcharts-".concat(
                  f,
                  "-series apexcharts-plot-series",
                ),
              }),
              y = new U(this.ctx, u);
            (this.yRatio = this.xyRatios.yRatio),
              (this.zRatio = this.xyRatios.zRatio),
              (this.xRatio = this.xyRatios.xRatio),
              (this.baseLineY = this.xyRatios.baseLineY),
              (n = y.getLogSeries(n)),
              (this.yRatio = y.getLogYRatios(this.yRatio));
            for (var x = [], S = 0; S < n.length; S++) {
              n = this.lineHelpers.sameValueSeriesFix(S, n);
              var _ = u.globals.comboCharts ? o[S] : S;
              this._initSerieVariables(n, S, _);
              var C = [],
                E = [],
                I = [],
                H = u.globals.padHorizontal + this.categoryAxisCorrection;
              this.ctx.series.addCollapsedClassToSeries(this.elSeries, _),
                u.globals.isXNumeric &&
                  u.globals.seriesX.length > 0 &&
                  (H =
                    (u.globals.seriesX[_][0] - u.globals.minX) / this.xRatio),
                I.push(H);
              var Y = H,
                g = this.zeroY,
                w = this.zeroY;
              (g = this.lineHelpers.determineFirstPrevY({
                i: S,
                series: n,
                prevY: g,
                lineYPosition: 0,
              }).prevY),
                u.config.stroke.curve === "smooth" && n[S][0] === null
                  ? C.push(null)
                  : C.push(g),
                f === "rangeArea" &&
                  ((w = this.lineHelpers.determineFirstPrevY({
                    i: S,
                    series: s,
                    prevY: w,
                    lineYPosition: 0,
                  }).prevY),
                  E.push(w));
              var A = {
                  type: f,
                  series: n,
                  realIndex: _,
                  i: S,
                  x: H,
                  y: 1,
                  pathsFrom: this._calculatePathsFrom({
                    type: f,
                    series: n,
                    i: S,
                    realIndex: _,
                    prevX: Y,
                    prevY: g,
                    prevY2: w,
                  }),
                  linePaths: [],
                  areaPaths: [],
                  seriesIndex: o,
                  lineYPosition: 0,
                  xArrj: I,
                  yArrj: C,
                  y2Arrj: E,
                  seriesRangeEnd: s,
                },
                D = this._iterateOverDataPoints(
                  a(
                    a({}, A),
                    {},
                    {
                      iterations: f === "rangeArea" ? n[S].length - 1 : void 0,
                      isRangeStart: !0,
                    },
                  ),
                );
              if (f === "rangeArea") {
                var W = this._calculatePathsFrom({
                    series: s,
                    i: S,
                    realIndex: _,
                    prevX: Y,
                    prevY: w,
                  }),
                  V = this._iterateOverDataPoints(
                    a(
                      a({}, A),
                      {},
                      {
                        series: s,
                        pathsFrom: W,
                        iterations: s[S].length - 1,
                        isRangeStart: !1,
                      },
                    ),
                  );
                (D.linePaths[0] = V.linePath + D.linePath),
                  (D.pathFromLine = V.pathFromLine + D.pathFromLine);
              }
              this._handlePaths({ type: f, realIndex: _, i: S, paths: D }),
                this.elSeries.add(this.elPointsMain),
                this.elSeries.add(this.elDataLabelsWrap),
                x.push(this.elSeries);
            }
            if (
              (((l = u.config.series[0]) === null || l === void 0
                ? void 0
                : l.zIndex) !== void 0 &&
                x.sort(function (re, ce) {
                  return (
                    Number(re.node.getAttribute("zIndex")) -
                    Number(ce.node.getAttribute("zIndex"))
                  );
                }),
              u.config.chart.stacked)
            )
              for (var K = x.length; K > 0; K--) m.add(x[K - 1]);
            else for (var Z = 0; Z < x.length; Z++) m.add(x[Z]);
            return m;
          },
        },
        {
          key: "_initSerieVariables",
          value: function (n, i, o) {
            var s = this.w,
              l = new B(this.ctx);
            (this.xDivision =
              s.globals.gridWidth /
              (s.globals.dataPoints -
                (s.config.xaxis.tickPlacement === "on" ? 1 : 0))),
              (this.strokeWidth = Array.isArray(s.config.stroke.width)
                ? s.config.stroke.width[o]
                : s.config.stroke.width),
              this.yRatio.length > 1 && (this.yaxisIndex = o),
              (this.isReversed =
                s.config.yaxis[this.yaxisIndex] &&
                s.config.yaxis[this.yaxisIndex].reversed),
              (this.zeroY =
                s.globals.gridHeight -
                this.baseLineY[this.yaxisIndex] -
                (this.isReversed ? s.globals.gridHeight : 0) +
                (this.isReversed ? 2 * this.baseLineY[this.yaxisIndex] : 0)),
              (this.areaBottomY = this.zeroY),
              (this.zeroY > s.globals.gridHeight ||
                s.config.plotOptions.area.fillTo === "end") &&
                (this.areaBottomY = s.globals.gridHeight),
              (this.categoryAxisCorrection = this.xDivision / 2),
              (this.elSeries = l.group({
                class: "apexcharts-series",
                zIndex:
                  s.config.series[o].zIndex !== void 0
                    ? s.config.series[o].zIndex
                    : o,
                seriesName: O.escapeString(s.globals.seriesNames[o]),
              })),
              (this.elPointsMain = l.group({
                class: "apexcharts-series-markers-wrap",
                "data:realIndex": o,
              })),
              (this.elDataLabelsWrap = l.group({
                class: "apexcharts-datalabels",
                "data:realIndex": o,
              }));
            var u = n[i].length === s.globals.dataPoints;
            this.elSeries.attr({
              "data:longestSeries": u,
              rel: i + 1,
              "data:realIndex": o,
            }),
              (this.appendPathFrom = !0);
          },
        },
        {
          key: "_calculatePathsFrom",
          value: function (n) {
            var i,
              o,
              s,
              l,
              u = n.type,
              d = n.series,
              f = n.i,
              m = n.realIndex,
              y = n.prevX,
              x = n.prevY,
              S = n.prevY2,
              _ = this.w,
              C = new B(this.ctx);
            if (d[f][0] === null) {
              for (var E = 0; E < d[f].length; E++)
                if (d[f][E] !== null) {
                  (y = this.xDivision * E),
                    (x = this.zeroY - d[f][E] / this.yRatio[this.yaxisIndex]),
                    (i = C.move(y, x)),
                    (o = C.move(y, this.areaBottomY));
                  break;
                }
            } else
              (i = C.move(y, x)),
                u === "rangeArea" && (i = C.move(y, S) + C.line(y, x)),
                (o = C.move(y, this.areaBottomY) + C.line(y, x));
            if (
              ((s = C.move(-1, this.zeroY) + C.line(-1, this.zeroY)),
              (l = C.move(-1, this.zeroY) + C.line(-1, this.zeroY)),
              _.globals.previousPaths.length > 0)
            ) {
              var I = this.lineHelpers.checkPreviousPaths({
                pathFromLine: s,
                pathFromArea: l,
                realIndex: m,
              });
              (s = I.pathFromLine), (l = I.pathFromArea);
            }
            return {
              prevX: y,
              prevY: x,
              linePath: i,
              areaPath: o,
              pathFromLine: s,
              pathFromArea: l,
            };
          },
        },
        {
          key: "_handlePaths",
          value: function (n) {
            var i = n.type,
              o = n.realIndex,
              s = n.i,
              l = n.paths,
              u = this.w,
              d = new B(this.ctx),
              f = new Ce(this.ctx);
            this.prevSeriesY.push(l.yArrj),
              (u.globals.seriesXvalues[o] = l.xArrj),
              (u.globals.seriesYvalues[o] = l.yArrj);
            var m = u.config.forecastDataPoints;
            if (m.count > 0 && i !== "rangeArea") {
              var y =
                  u.globals.seriesXvalues[o][
                    u.globals.seriesXvalues[o].length - m.count - 1
                  ],
                x = d.drawRect(
                  y,
                  0,
                  u.globals.gridWidth,
                  u.globals.gridHeight,
                  0,
                );
              u.globals.dom.elForecastMask.appendChild(x.node);
              var S = d.drawRect(0, 0, y, u.globals.gridHeight, 0);
              u.globals.dom.elNonForecastMask.appendChild(S.node);
            }
            this.pointsChart ||
              u.globals.delayedElements.push({
                el: this.elPointsMain.node,
                index: o,
              });
            var _ = {
              i: s,
              realIndex: o,
              animationDelay: s,
              initialSpeed: u.config.chart.animations.speed,
              dataChangeSpeed: u.config.chart.animations.dynamicAnimation.speed,
              className: "apexcharts-".concat(i),
            };
            if (i === "area")
              for (
                var C = f.fillPath({ seriesNumber: o }), E = 0;
                E < l.areaPaths.length;
                E++
              ) {
                var I = d.renderPaths(
                  a(
                    a({}, _),
                    {},
                    {
                      pathFrom: l.pathFromArea,
                      pathTo: l.areaPaths[E],
                      stroke: "none",
                      strokeWidth: 0,
                      strokeLineCap: null,
                      fill: C,
                    },
                  ),
                );
                this.elSeries.add(I);
              }
            if (u.config.stroke.show && !this.pointsChart) {
              var H = null;
              if (i === "line") H = f.fillPath({ seriesNumber: o, i: s });
              else if (u.config.stroke.fill.type === "solid")
                H = u.globals.stroke.colors[o];
              else {
                var Y = u.config.fill;
                (u.config.fill = u.config.stroke.fill),
                  (H = f.fillPath({ seriesNumber: o, i: s })),
                  (u.config.fill = Y);
              }
              for (var g = 0; g < l.linePaths.length; g++) {
                var w = H;
                i === "rangeArea" && (w = f.fillPath({ seriesNumber: o }));
                var A = a(
                    a({}, _),
                    {},
                    {
                      pathFrom: l.pathFromLine,
                      pathTo: l.linePaths[g],
                      stroke: H,
                      strokeWidth: this.strokeWidth,
                      strokeLineCap: u.config.stroke.lineCap,
                      fill: i === "rangeArea" ? w : "none",
                    },
                  ),
                  D = d.renderPaths(A);
                if (
                  (this.elSeries.add(D),
                  D.attr("fill-rule", "evenodd"),
                  m.count > 0 && i !== "rangeArea")
                ) {
                  var W = d.renderPaths(A);
                  W.node.setAttribute("stroke-dasharray", m.dashArray),
                    m.strokeWidth &&
                      W.node.setAttribute("stroke-width", m.strokeWidth),
                    this.elSeries.add(W),
                    W.attr(
                      "clip-path",
                      "url(#forecastMask".concat(u.globals.cuid, ")"),
                    ),
                    D.attr(
                      "clip-path",
                      "url(#nonForecastMask".concat(u.globals.cuid, ")"),
                    );
                }
              }
            }
          },
        },
        {
          key: "_iterateOverDataPoints",
          value: function (n) {
            var i = this,
              o = n.type,
              s = n.series,
              l = n.iterations,
              u = n.realIndex,
              d = n.i,
              f = n.x,
              m = n.y,
              y = n.pathsFrom,
              x = n.linePaths,
              S = n.areaPaths,
              _ = n.seriesIndex,
              C = n.lineYPosition,
              E = n.xArrj,
              I = n.yArrj,
              H = n.y2Arrj,
              Y = n.isRangeStart,
              g = n.seriesRangeEnd,
              w = this.w,
              A = new B(this.ctx),
              D = this.yRatio,
              W = y.prevY,
              V = y.linePath,
              K = y.areaPath,
              Z = y.pathFromLine,
              re = y.pathFromArea,
              ce = O.isNumber(w.globals.minYArr[u])
                ? w.globals.minYArr[u]
                : w.globals.minY;
            l ||
              (l =
                w.globals.dataPoints > 1
                  ? w.globals.dataPoints - 1
                  : w.globals.dataPoints);
            for (
              var se = function (et, ft) {
                  return (
                    ft -
                    et / D[i.yaxisIndex] +
                    2 * (i.isReversed ? et / D[i.yaxisIndex] : 0)
                  );
                },
                xe = m,
                be = 0;
              be < l;
              be++
            ) {
              var Ie = s[d][be + 1] === void 0 || s[d][be + 1] === null;
              if (w.globals.isXNumeric) {
                var Fe = w.globals.seriesX[u][be + 1];
                w.globals.seriesX[u][be + 1] === void 0 &&
                  (Fe = w.globals.seriesX[u][l - 1]),
                  (f = (Fe - w.globals.minX) / this.xRatio);
              } else f += this.xDivision;
              w.config.chart.stacked
                ? d > 0 &&
                  w.globals.collapsedSeries.length < w.config.series.length - 1
                  ? (C =
                      this.prevSeriesY[
                        (function (et) {
                          for (
                            var ft = et, Tr = 0;
                            Tr < w.globals.series.length;
                            Tr++
                          )
                            if (
                              w.globals.collapsedSeriesIndices.indexOf(et) > -1
                            ) {
                              ft--;
                              break;
                            }
                          return ft >= 0 ? ft : 0;
                        })(d - 1)
                      ][be + 1])
                  : (C = this.zeroY)
                : (C = this.zeroY),
                Ie
                  ? (m = se(ce, C))
                  : ((m = se(s[d][be + 1], C)),
                    o === "rangeArea" && (xe = se(g[d][be + 1], C))),
                E.push(f),
                Ie && w.config.stroke.curve === "smooth"
                  ? I.push(null)
                  : I.push(m),
                H.push(xe);
              var We = this.lineHelpers.calculatePoints({
                  series: s,
                  x: f,
                  y: m,
                  realIndex: u,
                  i: d,
                  j: be,
                  prevY: W,
                }),
                lt = this._createPaths({
                  type: o,
                  series: s,
                  i: d,
                  realIndex: u,
                  j: be,
                  x: f,
                  y: m,
                  y2: xe,
                  xArrj: E,
                  yArrj: I,
                  y2Arrj: H,
                  linePath: V,
                  areaPath: K,
                  linePaths: x,
                  areaPaths: S,
                  seriesIndex: _,
                  isRangeStart: Y,
                });
              (S = lt.areaPaths),
                (x = lt.linePaths),
                (K = lt.areaPath),
                (V = lt.linePath),
                !this.appendPathFrom ||
                  (w.config.stroke.curve === "smooth" && o === "rangeArea") ||
                  ((Z += A.line(f, this.zeroY)), (re += A.line(f, this.zeroY))),
                this.handleNullDataPoints(s, We, d, be, u),
                this._handleMarkersAndLabels({
                  type: o,
                  pointsPos: We,
                  i: d,
                  j: be,
                  realIndex: u,
                  isRangeStart: Y,
                });
            }
            return {
              yArrj: I,
              xArrj: E,
              pathFromArea: re,
              areaPaths: S,
              pathFromLine: Z,
              linePaths: x,
              linePath: V,
              areaPath: K,
            };
          },
        },
        {
          key: "_handleMarkersAndLabels",
          value: function (n) {
            var i = n.type,
              o = n.pointsPos,
              s = n.isRangeStart,
              l = n.i,
              u = n.j,
              d = n.realIndex,
              f = this.w,
              m = new Qe(this.ctx);
            if (this.pointsChart)
              this.scatter.draw(this.elSeries, u, {
                realIndex: d,
                pointsPos: o,
                zRatio: this.zRatio,
                elParent: this.elPointsMain,
              });
            else {
              f.globals.series[l].length > 1 &&
                this.elPointsMain.node.classList.add(
                  "apexcharts-element-hidden",
                );
              var y = this.markers.plotChartMarkers(o, d, u + 1);
              y !== null && this.elPointsMain.add(y);
            }
            var x = m.drawDataLabel({
              type: i,
              isRangeStart: s,
              pos: o,
              i: d,
              j: u + 1,
            });
            x !== null && this.elDataLabelsWrap.add(x);
          },
        },
        {
          key: "_createPaths",
          value: function (n) {
            var i = n.type,
              o = n.series,
              s = n.i,
              l = n.realIndex,
              u = n.j,
              d = n.x,
              f = n.y,
              m = n.xArrj,
              y = n.yArrj,
              x = n.y2,
              S = n.y2Arrj,
              _ = n.linePath,
              C = n.areaPath,
              E = n.linePaths,
              I = n.areaPaths,
              H = n.seriesIndex,
              Y = n.isRangeStart,
              g = this.w,
              w = new B(this.ctx),
              A = g.config.stroke.curve,
              D = this.areaBottomY;
            if (
              (Array.isArray(g.config.stroke.curve) &&
                (A = Array.isArray(H)
                  ? g.config.stroke.curve[H[s]]
                  : g.config.stroke.curve[s]),
              i === "rangeArea" &&
                (g.globals.hasNullValues ||
                  g.config.forecastDataPoints.count > 0) &&
                A === "smooth" &&
                (A = "straight"),
              A === "smooth")
            ) {
              var W =
                  i === "rangeArea"
                    ? m.length === g.globals.dataPoints
                    : u === o[s].length - 2,
                V = m
                  .map(function (be, Ie) {
                    return [m[Ie], y[Ie]];
                  })
                  .filter(function (be) {
                    return be[1] !== null;
                  });
              if (W && V.length > 1) {
                var K = ht(V);
                if (
                  ((_ += Ve(K)),
                  o[s][0] === null ? (C = _) : (C += Ve(K)),
                  i === "rangeArea" && Y)
                ) {
                  _ += w.line(m[m.length - 1], S[S.length - 1]);
                  var Z = m.slice().reverse(),
                    re = S.slice().reverse(),
                    ce = Z.map(function (be, Ie) {
                      return [Z[Ie], re[Ie]];
                    }),
                    se = ht(ce);
                  C = _ += Ve(se);
                } else
                  C +=
                    w.line(V[V.length - 1][0], D) +
                    w.line(V[0][0], D) +
                    w.move(V[0][0], V[0][1]) +
                    "z";
                E.push(_), I.push(C);
              }
            } else {
              if (o[s][u + 1] === null) {
                _ += w.move(d, f);
                var xe = g.globals.isXNumeric
                  ? (g.globals.seriesX[l][u] - g.globals.minX) / this.xRatio
                  : d - this.xDivision;
                C = C + w.line(xe, D) + w.move(d, f) + "z";
              }
              o[s][u] === null && ((_ += w.move(d, f)), (C += w.move(d, D))),
                A === "stepline"
                  ? ((_ = _ + w.line(d, null, "H") + w.line(null, f, "V")),
                    (C = C + w.line(d, null, "H") + w.line(null, f, "V")))
                  : A === "straight" &&
                    ((_ += w.line(d, f)), (C += w.line(d, f))),
                u === o[s].length - 2 &&
                  ((C = C + w.line(d, D) + w.move(d, f) + "z"),
                  i === "rangeArea" && Y
                    ? (_ = _ + w.line(d, x) + w.move(d, x) + "z")
                    : (E.push(_), I.push(C)));
            }
            return { linePaths: E, areaPaths: I, linePath: _, areaPath: C };
          },
        },
        {
          key: "handleNullDataPoints",
          value: function (n, i, o, s, l) {
            var u = this.w;
            if (
              (n[o][s] === null && u.config.markers.showNullDataPoints) ||
              n[o].length === 1
            ) {
              var d = this.markers.plotChartMarkers(
                i,
                l,
                s + 1,
                this.strokeWidth - u.config.markers.strokeWidth / 2,
                !0,
              );
              d !== null && this.elPointsMain.add(d);
            }
          },
        },
      ]),
      T
    );
  })();
  (window.TreemapSquared = {}),
    (window.TreemapSquared.generate = (function () {
      function T(d, f, m, y) {
        (this.xoffset = d),
          (this.yoffset = f),
          (this.height = y),
          (this.width = m),
          (this.shortestEdge = function () {
            return Math.min(this.height, this.width);
          }),
          (this.getCoordinates = function (x) {
            var S,
              _ = [],
              C = this.xoffset,
              E = this.yoffset,
              I = l(x) / this.height,
              H = l(x) / this.width;
            if (this.width >= this.height)
              for (S = 0; S < x.length; S++)
                _.push([C, E, C + I, E + x[S] / I]), (E += x[S] / I);
            else
              for (S = 0; S < x.length; S++)
                _.push([C, E, C + x[S] / H, E + H]), (C += x[S] / H);
            return _;
          }),
          (this.cutArea = function (x) {
            var S;
            if (this.width >= this.height) {
              var _ = x / this.height,
                C = this.width - _;
              S = new T(this.xoffset + _, this.yoffset, C, this.height);
            } else {
              var E = x / this.width,
                I = this.height - E;
              S = new T(this.xoffset, this.yoffset + E, this.width, I);
            }
            return S;
          });
      }
      function n(d, f, m, y, x) {
        (y = y === void 0 ? 0 : y), (x = x === void 0 ? 0 : x);
        var S = i(
          (function (_, C) {
            var E,
              I = [],
              H = C / l(_);
            for (E = 0; E < _.length; E++) I[E] = _[E] * H;
            return I;
          })(d, f * m),
          [],
          new T(y, x, f, m),
          [],
        );
        return (function (_) {
          var C,
            E,
            I = [];
          for (C = 0; C < _.length; C++)
            for (E = 0; E < _[C].length; E++) I.push(_[C][E]);
          return I;
        })(S);
      }
      function i(d, f, m, y) {
        var x, S, _;
        if (d.length !== 0)
          return (
            (x = m.shortestEdge()),
            (function (C, E, I) {
              var H;
              if (C.length === 0) return !0;
              (H = C.slice()).push(E);
              var Y = o(C, I),
                g = o(H, I);
              return Y >= g;
            })(f, (S = d[0]), x)
              ? (f.push(S), i(d.slice(1), f, m, y))
              : ((_ = m.cutArea(l(f), y)),
                y.push(m.getCoordinates(f)),
                i(d, [], _, y)),
            y
          );
        y.push(m.getCoordinates(f));
      }
      function o(d, f) {
        var m = Math.min.apply(Math, d),
          y = Math.max.apply(Math, d),
          x = l(d);
        return Math.max(
          (Math.pow(f, 2) * y) / Math.pow(x, 2),
          Math.pow(x, 2) / (Math.pow(f, 2) * m),
        );
      }
      function s(d) {
        return d && d.constructor === Array;
      }
      function l(d) {
        var f,
          m = 0;
        for (f = 0; f < d.length; f++) m += d[f];
        return m;
      }
      function u(d) {
        var f,
          m = 0;
        if (s(d[0])) for (f = 0; f < d.length; f++) m += u(d[f]);
        else m = l(d);
        return m;
      }
      return function d(f, m, y, x, S) {
        (x = x === void 0 ? 0 : x), (S = S === void 0 ? 0 : S);
        var _,
          C,
          E = [],
          I = [];
        if (s(f[0])) {
          for (C = 0; C < f.length; C++) E[C] = u(f[C]);
          for (_ = n(E, m, y, x, S), C = 0; C < f.length; C++)
            I.push(
              d(f[C], _[C][2] - _[C][0], _[C][3] - _[C][1], _[C][0], _[C][1]),
            );
        } else I = n(f, m, y, x, S);
        return I;
      };
    })());
  var lr,
    $n,
    Lr = (function () {
      function T(n, i) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.strokeWidth = this.w.config.stroke.width),
          (this.helpers = new we(n)),
          (this.dynamicAnim = this.w.config.chart.animations.dynamicAnimation),
          (this.labels = []);
      }
      return (
        v(T, [
          {
            key: "draw",
            value: function (n) {
              var i = this,
                o = this.w,
                s = new B(this.ctx),
                l = new Ce(this.ctx),
                u = s.group({ class: "apexcharts-treemap" });
              if (o.globals.noData) return u;
              var d = [];
              return (
                n.forEach(function (f) {
                  var m = f.map(function (y) {
                    return Math.abs(y);
                  });
                  d.push(m);
                }),
                (this.negRange = this.helpers.checkColorRange()),
                o.config.series.forEach(function (f, m) {
                  f.data.forEach(function (y) {
                    Array.isArray(i.labels[m]) || (i.labels[m] = []),
                      i.labels[m].push(y.x);
                  });
                }),
                window.TreemapSquared.generate(
                  d,
                  o.globals.gridWidth,
                  o.globals.gridHeight,
                ).forEach(function (f, m) {
                  var y = s.group({
                    class: "apexcharts-series apexcharts-treemap-series",
                    seriesName: O.escapeString(o.globals.seriesNames[m]),
                    rel: m + 1,
                    "data:realIndex": m,
                  });
                  if (o.config.chart.dropShadow.enabled) {
                    var x = o.config.chart.dropShadow;
                    new N(i.ctx).dropShadow(u, x, m);
                  }
                  var S = s.group({ class: "apexcharts-data-labels" });
                  f.forEach(function (_, C) {
                    var E = _[0],
                      I = _[1],
                      H = _[2],
                      Y = _[3],
                      g = s.drawRect(
                        E,
                        I,
                        H - E,
                        Y - I,
                        0,
                        "#fff",
                        1,
                        i.strokeWidth,
                        o.config.plotOptions.treemap.useFillColorAsStroke
                          ? A
                          : o.globals.stroke.colors[m],
                      );
                    g.attr({
                      cx: E,
                      cy: I,
                      index: m,
                      i: m,
                      j: C,
                      width: H - E,
                      height: Y - I,
                    });
                    var w = i.helpers.getShadeColor(
                        o.config.chart.type,
                        m,
                        C,
                        i.negRange,
                      ),
                      A = w.color;
                    o.config.series[m].data[C] !== void 0 &&
                      o.config.series[m].data[C].fillColor &&
                      (A = o.config.series[m].data[C].fillColor);
                    var D = l.fillPath({
                      color: A,
                      seriesNumber: m,
                      dataPointIndex: C,
                    });
                    g.node.classList.add("apexcharts-treemap-rect"),
                      g.attr({ fill: D }),
                      i.helpers.addListeners(g);
                    var W = {
                        x: E + (H - E) / 2,
                        y: I + (Y - I) / 2,
                        width: 0,
                        height: 0,
                      },
                      V = { x: E, y: I, width: H - E, height: Y - I };
                    if (
                      o.config.chart.animations.enabled &&
                      !o.globals.dataChanged
                    ) {
                      var K = 1;
                      o.globals.resized ||
                        (K = o.config.chart.animations.speed),
                        i.animateTreemap(g, W, V, K);
                    }
                    if (o.globals.dataChanged) {
                      var Z = 1;
                      i.dynamicAnim.enabled &&
                        o.globals.shouldAnimate &&
                        ((Z = i.dynamicAnim.speed),
                        o.globals.previousPaths[m] &&
                          o.globals.previousPaths[m][C] &&
                          o.globals.previousPaths[m][C].rect &&
                          (W = o.globals.previousPaths[m][C].rect),
                        i.animateTreemap(g, W, V, Z));
                    }
                    var re = i.getFontSize(_),
                      ce = o.config.dataLabels.formatter(i.labels[m][C], {
                        value: o.globals.series[m][C],
                        seriesIndex: m,
                        dataPointIndex: C,
                        w: o,
                      });
                    o.config.plotOptions.treemap.dataLabels.format ===
                      "truncate" &&
                      ((re = parseInt(o.config.dataLabels.style.fontSize, 10)),
                      (ce = i.truncateLabels(ce, re, E, I, H, Y)));
                    var se = i.helpers.calculateDataLabels({
                      text: ce,
                      x: (E + H) / 2,
                      y: (I + Y) / 2 + i.strokeWidth / 2 + re / 3,
                      i: m,
                      j: C,
                      colorProps: w,
                      fontSize: re,
                      series: n,
                    });
                    o.config.dataLabels.enabled &&
                      se &&
                      i.rotateToFitLabel(se, re, ce, E, I, H, Y),
                      y.add(g),
                      se !== null && y.add(se);
                  }),
                    y.add(S),
                    u.add(y);
                }),
                u
              );
            },
          },
          {
            key: "getFontSize",
            value: function (n) {
              var i = this.w,
                o,
                s,
                l,
                u,
                d =
                  (function f(m) {
                    var y,
                      x = 0;
                    if (Array.isArray(m[0]))
                      for (y = 0; y < m.length; y++) x += f(m[y]);
                    else for (y = 0; y < m.length; y++) x += m[y].length;
                    return x;
                  })(this.labels) /
                  (function f(m) {
                    var y,
                      x = 0;
                    if (Array.isArray(m[0]))
                      for (y = 0; y < m.length; y++) x += f(m[y]);
                    else for (y = 0; y < m.length; y++) x += 1;
                    return x;
                  })(this.labels);
              return (
                (o = n[2] - n[0]),
                (s = n[3] - n[1]),
                (l = o * s),
                (u = Math.pow(l, 0.5)),
                Math.min(
                  u / d,
                  parseInt(i.config.dataLabels.style.fontSize, 10),
                )
              );
            },
          },
          {
            key: "rotateToFitLabel",
            value: function (n, i, o, s, l, u, d) {
              var f = new B(this.ctx),
                m = f.getTextRects(o, i);
              if (
                m.width + this.w.config.stroke.width + 5 > u - s &&
                m.width <= d - l
              ) {
                var y = f.rotateAroundCenter(n.node);
                n.node.setAttribute(
                  "transform",
                  "rotate(-90 "
                    .concat(y.x, " ")
                    .concat(y.y, ") translate(")
                    .concat(m.height / 3, ")"),
                );
              }
            },
          },
          {
            key: "truncateLabels",
            value: function (n, i, o, s, l, u) {
              var d = new B(this.ctx),
                f =
                  d.getTextRects(n, i).width + this.w.config.stroke.width + 5 >
                    l - o && u - s > l - o
                    ? u - s
                    : l - o,
                m = d.getTextBasedOnMaxWidth({
                  text: n,
                  maxWidth: f,
                  fontSize: i,
                });
              return n.length !== m.length && f / i < 5 ? "" : m;
            },
          },
          {
            key: "animateTreemap",
            value: function (n, i, o, s) {
              var l = new X(this.ctx);
              l.animateRect(
                n,
                { x: i.x, y: i.y, width: i.width, height: i.height },
                { x: o.x, y: o.y, width: o.width, height: o.height },
                s,
                function () {
                  l.animationCompleted(n);
                },
              );
            },
          },
        ]),
        T
      );
    })(),
    Ur = 86400,
    Ki = (function () {
      function T(n) {
        h(this, T),
          (this.ctx = n),
          (this.w = n.w),
          (this.timeScaleArray = []),
          (this.utc = this.w.config.xaxis.labels.datetimeUTC);
      }
      return (
        v(T, [
          {
            key: "calculateTimeScaleTicks",
            value: function (n, i) {
              var o = this,
                s = this.w;
              if (s.globals.allSeriesCollapsed)
                return (
                  (s.globals.labels = []), (s.globals.timescaleLabels = []), []
                );
              var l = new ue(this.ctx),
                u = (i - n) / 864e5;
              this.determineInterval(u),
                (s.globals.disableZoomIn = !1),
                (s.globals.disableZoomOut = !1),
                u < 0.00011574074074074075
                  ? (s.globals.disableZoomIn = !0)
                  : u > 5e4 && (s.globals.disableZoomOut = !0);
              var d = l.getTimeUnitsfromTimestamp(n, i, this.utc),
                f = s.globals.gridWidth / u,
                m = f / 24,
                y = m / 60,
                x = y / 60,
                S = Math.floor(24 * u),
                _ = Math.floor(1440 * u),
                C = Math.floor(u * Ur),
                E = Math.floor(u),
                I = Math.floor(u / 30),
                H = Math.floor(u / 365),
                Y = {
                  minMillisecond: d.minMillisecond,
                  minSecond: d.minSecond,
                  minMinute: d.minMinute,
                  minHour: d.minHour,
                  minDate: d.minDate,
                  minMonth: d.minMonth,
                  minYear: d.minYear,
                },
                g = {
                  firstVal: Y,
                  currentMillisecond: Y.minMillisecond,
                  currentSecond: Y.minSecond,
                  currentMinute: Y.minMinute,
                  currentHour: Y.minHour,
                  currentMonthDate: Y.minDate,
                  currentDate: Y.minDate,
                  currentMonth: Y.minMonth,
                  currentYear: Y.minYear,
                  daysWidthOnXAxis: f,
                  hoursWidthOnXAxis: m,
                  minutesWidthOnXAxis: y,
                  secondsWidthOnXAxis: x,
                  numberOfSeconds: C,
                  numberOfMinutes: _,
                  numberOfHours: S,
                  numberOfDays: E,
                  numberOfMonths: I,
                  numberOfYears: H,
                };
              switch (this.tickInterval) {
                case "years":
                  this.generateYearScale(g);
                  break;
                case "months":
                case "half_year":
                  this.generateMonthScale(g);
                  break;
                case "months_days":
                case "months_fortnight":
                case "days":
                case "week_days":
                  this.generateDayScale(g);
                  break;
                case "hours":
                  this.generateHourScale(g);
                  break;
                case "minutes_fives":
                case "minutes":
                  this.generateMinuteScale(g);
                  break;
                case "seconds_tens":
                case "seconds_fives":
                case "seconds":
                  this.generateSecondScale(g);
              }
              var w = this.timeScaleArray.map(function (A) {
                var D = {
                  position: A.position,
                  unit: A.unit,
                  year: A.year,
                  day: A.day ? A.day : 1,
                  hour: A.hour ? A.hour : 0,
                  month: A.month + 1,
                };
                return A.unit === "month"
                  ? a(a({}, D), {}, { day: 1, value: A.value + 1 })
                  : A.unit === "day" || A.unit === "hour"
                  ? a(a({}, D), {}, { value: A.value })
                  : A.unit === "minute"
                  ? a(a({}, D), {}, { value: A.value, minute: A.value })
                  : A.unit === "second"
                  ? a(
                      a({}, D),
                      {},
                      { value: A.value, minute: A.minute, second: A.second },
                    )
                  : A;
              });
              return w.filter(function (A) {
                var D = 1,
                  W = Math.ceil(s.globals.gridWidth / 120),
                  V = A.value;
                s.config.xaxis.tickAmount !== void 0 &&
                  (W = s.config.xaxis.tickAmount),
                  w.length > W && (D = Math.floor(w.length / W));
                var K = !1,
                  Z = !1;
                switch (o.tickInterval) {
                  case "years":
                    A.unit === "year" && (K = !0);
                    break;
                  case "half_year":
                    (D = 7), A.unit === "year" && (K = !0);
                    break;
                  case "months":
                    (D = 1), A.unit === "year" && (K = !0);
                    break;
                  case "months_fortnight":
                    (D = 15),
                      (A.unit !== "year" && A.unit !== "month") || (K = !0),
                      V === 30 && (Z = !0);
                    break;
                  case "months_days":
                    (D = 10),
                      A.unit === "month" && (K = !0),
                      V === 30 && (Z = !0);
                    break;
                  case "week_days":
                    (D = 8), A.unit === "month" && (K = !0);
                    break;
                  case "days":
                    (D = 1), A.unit === "month" && (K = !0);
                    break;
                  case "hours":
                    A.unit === "day" && (K = !0);
                    break;
                  case "minutes_fives":
                  case "seconds_fives":
                    V % 5 != 0 && (Z = !0);
                    break;
                  case "seconds_tens":
                    V % 10 != 0 && (Z = !0);
                }
                if (
                  o.tickInterval === "hours" ||
                  o.tickInterval === "minutes_fives" ||
                  o.tickInterval === "seconds_tens" ||
                  o.tickInterval === "seconds_fives"
                ) {
                  if (!Z) return !0;
                } else if ((V % D == 0 || K) && !Z) return !0;
              });
            },
          },
          {
            key: "recalcDimensionsBasedOnFormat",
            value: function (n, i) {
              var o = this.w,
                s = this.formatDates(n),
                l = this.removeOverlappingTS(s);
              (o.globals.timescaleLabels = l.slice()),
                new sr(this.ctx).plotCoords();
            },
          },
          {
            key: "determineInterval",
            value: function (n) {
              var i = 24 * n,
                o = 60 * i;
              switch (!0) {
                case n / 365 > 5:
                  this.tickInterval = "years";
                  break;
                case n > 800:
                  this.tickInterval = "half_year";
                  break;
                case n > 180:
                  this.tickInterval = "months";
                  break;
                case n > 90:
                  this.tickInterval = "months_fortnight";
                  break;
                case n > 60:
                  this.tickInterval = "months_days";
                  break;
                case n > 30:
                  this.tickInterval = "week_days";
                  break;
                case n > 2:
                  this.tickInterval = "days";
                  break;
                case i > 2.4:
                  this.tickInterval = "hours";
                  break;
                case o > 15:
                  this.tickInterval = "minutes_fives";
                  break;
                case o > 5:
                  this.tickInterval = "minutes";
                  break;
                case o > 1:
                  this.tickInterval = "seconds_tens";
                  break;
                case 60 * o > 20:
                  this.tickInterval = "seconds_fives";
                  break;
                default:
                  this.tickInterval = "seconds";
              }
            },
          },
          {
            key: "generateYearScale",
            value: function (n) {
              var i = n.firstVal,
                o = n.currentMonth,
                s = n.currentYear,
                l = n.daysWidthOnXAxis,
                u = n.numberOfYears,
                d = i.minYear,
                f = 0,
                m = new ue(this.ctx),
                y = "year";
              if (i.minDate > 1 || i.minMonth > 0) {
                var x = m.determineRemainingDaysOfYear(
                  i.minYear,
                  i.minMonth,
                  i.minDate,
                );
                (f = (m.determineDaysOfYear(i.minYear) - x + 1) * l),
                  (d = i.minYear + 1),
                  this.timeScaleArray.push({
                    position: f,
                    value: d,
                    unit: y,
                    year: d,
                    month: O.monthMod(o + 1),
                  });
              } else
                i.minDate === 1 &&
                  i.minMonth === 0 &&
                  this.timeScaleArray.push({
                    position: f,
                    value: d,
                    unit: y,
                    year: s,
                    month: O.monthMod(o + 1),
                  });
              for (var S = d, _ = f, C = 0; C < u; C++)
                S++,
                  (_ = m.determineDaysOfYear(S - 1) * l + _),
                  this.timeScaleArray.push({
                    position: _,
                    value: S,
                    unit: y,
                    year: S,
                    month: 1,
                  });
            },
          },
          {
            key: "generateMonthScale",
            value: function (n) {
              var i = n.firstVal,
                o = n.currentMonthDate,
                s = n.currentMonth,
                l = n.currentYear,
                u = n.daysWidthOnXAxis,
                d = n.numberOfMonths,
                f = s,
                m = 0,
                y = new ue(this.ctx),
                x = "month",
                S = 0;
              if (i.minDate > 1) {
                (m = (y.determineDaysOfMonths(s + 1, i.minYear) - o + 1) * u),
                  (f = O.monthMod(s + 1));
                var _ = l + S,
                  C = O.monthMod(f),
                  E = f;
                f === 0 && ((x = "year"), (E = _), (C = 1), (_ += S += 1)),
                  this.timeScaleArray.push({
                    position: m,
                    value: E,
                    unit: x,
                    year: _,
                    month: C,
                  });
              } else
                this.timeScaleArray.push({
                  position: m,
                  value: f,
                  unit: x,
                  year: l,
                  month: O.monthMod(s),
                });
              for (var I = f + 1, H = m, Y = 0, g = 1; Y < d; Y++, g++) {
                (I = O.monthMod(I)) === 0
                  ? ((x = "year"), (S += 1))
                  : (x = "month");
                var w = this._getYear(l, I, S);
                H = y.determineDaysOfMonths(I, w) * u + H;
                var A = I === 0 ? w : I;
                this.timeScaleArray.push({
                  position: H,
                  value: A,
                  unit: x,
                  year: w,
                  month: I === 0 ? 1 : I,
                }),
                  I++;
              }
            },
          },
          {
            key: "generateDayScale",
            value: function (n) {
              var i = n.firstVal,
                o = n.currentMonth,
                s = n.currentYear,
                l = n.hoursWidthOnXAxis,
                u = n.numberOfDays,
                d = new ue(this.ctx),
                f = "day",
                m = i.minDate + 1,
                y = m,
                x = function (g, w, A) {
                  return (
                    g > d.determineDaysOfMonths(w + 1, A) &&
                      ((y = 1), (f = "month"), (_ = w += 1)),
                    w
                  );
                },
                S = (24 - i.minHour) * l,
                _ = m,
                C = x(y, o, s);
              i.minHour === 0 && i.minDate === 1
                ? ((S = 0),
                  (_ = O.monthMod(i.minMonth)),
                  (f = "month"),
                  (y = i.minDate))
                : i.minDate !== 1 &&
                  i.minHour === 0 &&
                  i.minMinute === 0 &&
                  ((S = 0), (m = i.minDate), (_ = m), (C = x((y = m), o, s))),
                this.timeScaleArray.push({
                  position: S,
                  value: _,
                  unit: f,
                  year: this._getYear(s, C, 0),
                  month: O.monthMod(C),
                  day: y,
                });
              for (var E = S, I = 0; I < u; I++) {
                (f = "day"), (C = x((y += 1), C, this._getYear(s, C, 0)));
                var H = this._getYear(s, C, 0);
                E = 24 * l + E;
                var Y = y === 1 ? O.monthMod(C) : y;
                this.timeScaleArray.push({
                  position: E,
                  value: Y,
                  unit: f,
                  year: H,
                  month: O.monthMod(C),
                  day: Y,
                });
              }
            },
          },
          {
            key: "generateHourScale",
            value: function (n) {
              var i = n.firstVal,
                o = n.currentDate,
                s = n.currentMonth,
                l = n.currentYear,
                u = n.minutesWidthOnXAxis,
                d = n.numberOfHours,
                f = new ue(this.ctx),
                m = "hour",
                y = function (D, W) {
                  return (
                    D > f.determineDaysOfMonths(W + 1, l) &&
                      ((I = 1), (W += 1)),
                    { month: W, date: I }
                  );
                },
                x = function (D, W) {
                  return D > f.determineDaysOfMonths(W + 1, l) ? (W += 1) : W;
                },
                S = 60 - (i.minMinute + i.minSecond / 60),
                _ = S * u,
                C = i.minHour + 1,
                E = C;
              S === 60 && ((_ = 0), (E = (C = i.minHour) + 1));
              var I = o;
              E >= 24 && ((E = 0), (I += 1), (m = "day"));
              var H = y(I, s).month;
              (H = x(I, H)),
                this.timeScaleArray.push({
                  position: _,
                  value: C,
                  unit: m,
                  day: I,
                  hour: E,
                  year: l,
                  month: O.monthMod(H),
                }),
                E++;
              for (var Y = _, g = 0; g < d; g++) {
                (m = "hour"),
                  E >= 24 &&
                    ((E = 0),
                    (m = "day"),
                    (H = y((I += 1), H).month),
                    (H = x(I, H)));
                var w = this._getYear(l, H, 0);
                Y = 60 * u + Y;
                var A = E === 0 ? I : E;
                this.timeScaleArray.push({
                  position: Y,
                  value: A,
                  unit: m,
                  hour: E,
                  day: I,
                  year: w,
                  month: O.monthMod(H),
                }),
                  E++;
              }
            },
          },
          {
            key: "generateMinuteScale",
            value: function (n) {
              for (
                var i = n.currentMillisecond,
                  o = n.currentSecond,
                  s = n.currentMinute,
                  l = n.currentHour,
                  u = n.currentDate,
                  d = n.currentMonth,
                  f = n.currentYear,
                  m = n.minutesWidthOnXAxis,
                  y = n.secondsWidthOnXAxis,
                  x = n.numberOfMinutes,
                  S = s + 1,
                  _ = u,
                  C = d,
                  E = f,
                  I = l,
                  H = (60 - o - i / 1e3) * y,
                  Y = 0;
                Y < x;
                Y++
              )
                S >= 60 && ((S = 0), (I += 1) === 24 && (I = 0)),
                  this.timeScaleArray.push({
                    position: H,
                    value: S,
                    unit: "minute",
                    hour: I,
                    minute: S,
                    day: _,
                    year: this._getYear(E, C, 0),
                    month: O.monthMod(C),
                  }),
                  (H += m),
                  S++;
            },
          },
          {
            key: "generateSecondScale",
            value: function (n) {
              for (
                var i = n.currentMillisecond,
                  o = n.currentSecond,
                  s = n.currentMinute,
                  l = n.currentHour,
                  u = n.currentDate,
                  d = n.currentMonth,
                  f = n.currentYear,
                  m = n.secondsWidthOnXAxis,
                  y = n.numberOfSeconds,
                  x = o + 1,
                  S = s,
                  _ = u,
                  C = d,
                  E = f,
                  I = l,
                  H = ((1e3 - i) / 1e3) * m,
                  Y = 0;
                Y < y;
                Y++
              )
                x >= 60 &&
                  ((x = 0), ++S >= 60 && ((S = 0), ++I === 24 && (I = 0))),
                  this.timeScaleArray.push({
                    position: H,
                    value: x,
                    unit: "second",
                    hour: I,
                    minute: S,
                    second: x,
                    day: _,
                    year: this._getYear(E, C, 0),
                    month: O.monthMod(C),
                  }),
                  (H += m),
                  x++;
            },
          },
          {
            key: "createRawDateString",
            value: function (n, i) {
              var o = n.year;
              return (
                n.month === 0 && (n.month = 1),
                (o += "-" + ("0" + n.month.toString()).slice(-2)),
                n.unit === "day"
                  ? (o += n.unit === "day" ? "-" + ("0" + i).slice(-2) : "-01")
                  : (o += "-" + ("0" + (n.day ? n.day : "1")).slice(-2)),
                n.unit === "hour"
                  ? (o += n.unit === "hour" ? "T" + ("0" + i).slice(-2) : "T00")
                  : (o += "T" + ("0" + (n.hour ? n.hour : "0")).slice(-2)),
                n.unit === "minute"
                  ? (o += ":" + ("0" + i).slice(-2))
                  : (o += ":" + (n.minute ? ("0" + n.minute).slice(-2) : "00")),
                n.unit === "second"
                  ? (o += ":" + ("0" + i).slice(-2))
                  : (o += ":00"),
                this.utc && (o += ".000Z"),
                o
              );
            },
          },
          {
            key: "formatDates",
            value: function (n) {
              var i = this,
                o = this.w;
              return n.map(function (s) {
                var l = s.value.toString(),
                  u = new ue(i.ctx),
                  d = i.createRawDateString(s, l),
                  f = u.getDate(u.parseDate(d));
                if (
                  (i.utc || (f = u.getDate(u.parseDateWithTimezone(d))),
                  o.config.xaxis.labels.format === void 0)
                ) {
                  var m = "dd MMM",
                    y = o.config.xaxis.labels.datetimeFormatter;
                  s.unit === "year" && (m = y.year),
                    s.unit === "month" && (m = y.month),
                    s.unit === "day" && (m = y.day),
                    s.unit === "hour" && (m = y.hour),
                    s.unit === "minute" && (m = y.minute),
                    s.unit === "second" && (m = y.second),
                    (l = u.formatDate(f, m));
                } else l = u.formatDate(f, o.config.xaxis.labels.format);
                return {
                  dateString: d,
                  position: s.position,
                  value: l,
                  unit: s.unit,
                  year: s.year,
                  month: s.month,
                };
              });
            },
          },
          {
            key: "removeOverlappingTS",
            value: function (n) {
              var i,
                o = this,
                s = new B(this.ctx),
                l = !1;
              n.length > 0 &&
                n[0].value &&
                n.every(function (f) {
                  return f.value.length === n[0].value.length;
                }) &&
                ((l = !0), (i = s.getTextRects(n[0].value).width));
              var u = 0,
                d = n.map(function (f, m) {
                  if (m > 0 && o.w.config.xaxis.labels.hideOverlappingLabels) {
                    var y = l ? i : s.getTextRects(n[u].value).width,
                      x = n[u].position;
                    return f.position > x + y + 10 ? ((u = m), f) : null;
                  }
                  return f;
                });
              return (d = d.filter(function (f) {
                return f !== null;
              }));
            },
          },
          {
            key: "_getYear",
            value: function (n, i, o) {
              return n + Math.floor(i / 12) + o;
            },
          },
        ]),
        T
      );
    })(),
    ro = (function () {
      function T(n, i) {
        h(this, T), (this.ctx = i), (this.w = i.w), (this.el = n);
      }
      return (
        v(T, [
          {
            key: "setupElements",
            value: function () {
              var n = this.w.globals,
                i = this.w.config,
                o = i.chart.type;
              (n.axisCharts =
                [
                  "line",
                  "area",
                  "bar",
                  "rangeBar",
                  "rangeArea",
                  "candlestick",
                  "boxPlot",
                  "scatter",
                  "bubble",
                  "radar",
                  "heatmap",
                  "treemap",
                ].indexOf(o) > -1),
                (n.xyCharts =
                  [
                    "line",
                    "area",
                    "bar",
                    "rangeBar",
                    "rangeArea",
                    "candlestick",
                    "boxPlot",
                    "scatter",
                    "bubble",
                  ].indexOf(o) > -1),
                (n.isBarHorizontal =
                  (i.chart.type === "bar" ||
                    i.chart.type === "rangeBar" ||
                    i.chart.type === "boxPlot") &&
                  i.plotOptions.bar.horizontal),
                (n.chartClass = ".apexcharts" + n.chartID),
                (n.dom.baseEl = this.el),
                (n.dom.elWrap = document.createElement("div")),
                B.setAttrs(n.dom.elWrap, {
                  id: n.chartClass.substring(1),
                  class: "apexcharts-canvas " + n.chartClass.substring(1),
                }),
                this.el.appendChild(n.dom.elWrap),
                (n.dom.Paper = new window.SVG.Doc(n.dom.elWrap)),
                n.dom.Paper.attr({
                  class: "apexcharts-svg",
                  "xmlns:data": "ApexChartsNS",
                  transform: "translate("
                    .concat(i.chart.offsetX, ", ")
                    .concat(i.chart.offsetY, ")"),
                }),
                (n.dom.Paper.node.style.background =
                  i.theme.mode !== "dark" || i.chart.background
                    ? i.chart.background
                    : "rgba(0, 0, 0, 0.8)"),
                this.setSVGDimensions(),
                (n.dom.elLegendForeign = document.createElementNS(
                  n.SVGNS,
                  "foreignObject",
                )),
                B.setAttrs(n.dom.elLegendForeign, {
                  x: 0,
                  y: 0,
                  width: n.svgWidth,
                  height: n.svgHeight,
                }),
                (n.dom.elLegendWrap = document.createElement("div")),
                n.dom.elLegendWrap.classList.add("apexcharts-legend"),
                n.dom.elLegendWrap.setAttribute(
                  "xmlns",
                  "http://www.w3.org/1999/xhtml",
                ),
                n.dom.elLegendForeign.appendChild(n.dom.elLegendWrap),
                n.dom.Paper.node.appendChild(n.dom.elLegendForeign),
                (n.dom.elGraphical = n.dom.Paper.group().attr({
                  class: "apexcharts-inner apexcharts-graphical",
                })),
                (n.dom.elDefs = n.dom.Paper.defs()),
                n.dom.Paper.add(n.dom.elGraphical),
                n.dom.elGraphical.add(n.dom.elDefs);
            },
          },
          {
            key: "plotChartType",
            value: function (n, i) {
              var o = this.w,
                s = o.config,
                l = o.globals,
                u = { series: [], i: [] },
                d = { series: [], i: [] },
                f = { series: [], i: [] },
                m = { series: [], i: [] },
                y = { series: [], i: [] },
                x = { series: [], i: [] },
                S = { series: [], i: [] },
                _ = { series: [], i: [] },
                C = { series: [], seriesRangeEnd: [], i: [] };
              l.series.map(function (W, V) {
                var K = 0;
                n[V].type !== void 0
                  ? (n[V].type === "column" || n[V].type === "bar"
                      ? (l.series.length > 1 &&
                          s.plotOptions.bar.horizontal &&
                          console.warn(
                            "Horizontal bars are not supported in a mixed/combo chart. Please turn off `plotOptions.bar.horizontal`",
                          ),
                        y.series.push(W),
                        y.i.push(V),
                        K++,
                        (o.globals.columnSeries = y.series))
                      : n[V].type === "area"
                      ? (d.series.push(W), d.i.push(V), K++)
                      : n[V].type === "line"
                      ? (u.series.push(W), u.i.push(V), K++)
                      : n[V].type === "scatter"
                      ? (f.series.push(W), f.i.push(V))
                      : n[V].type === "bubble"
                      ? (m.series.push(W), m.i.push(V), K++)
                      : n[V].type === "candlestick"
                      ? (x.series.push(W), x.i.push(V), K++)
                      : n[V].type === "boxPlot"
                      ? (S.series.push(W), S.i.push(V), K++)
                      : n[V].type === "rangeBar"
                      ? (_.series.push(W), _.i.push(V), K++)
                      : n[V].type === "rangeArea"
                      ? (C.series.push(l.seriesRangeStart[V]),
                        C.seriesRangeEnd.push(l.seriesRangeEnd[V]),
                        C.i.push(V),
                        K++)
                      : console.warn(
                          "You have specified an unrecognized chart type. Available types for this property are line/area/column/bar/scatter/bubble/candlestick/boxPlot/rangeBar/rangeArea",
                        ),
                    K > 1 && (l.comboCharts = !0))
                  : (u.series.push(W), u.i.push(V));
              });
              var E = new Rr(this.ctx, i),
                I = new de(this.ctx, i);
              this.ctx.pie = new Me(this.ctx);
              var H = new Ae(this.ctx);
              this.ctx.rangeBar = new qe(this.ctx, i);
              var Y = new Le(this.ctx),
                g = [];
              if (l.comboCharts) {
                if (
                  (d.series.length > 0 && g.push(E.draw(d.series, "area", d.i)),
                  y.series.length > 0)
                )
                  if (o.config.chart.stacked) {
                    var w = new ie(this.ctx, i);
                    g.push(w.draw(y.series, y.i));
                  } else
                    (this.ctx.bar = new J(this.ctx, i)),
                      g.push(this.ctx.bar.draw(y.series, y.i));
                if (
                  (C.series.length > 0 &&
                    g.push(
                      E.draw(C.series, "rangeArea", C.i, C.seriesRangeEnd),
                    ),
                  u.series.length > 0 && g.push(E.draw(u.series, "line", u.i)),
                  x.series.length > 0 &&
                    g.push(I.draw(x.series, "candlestick", x.i)),
                  S.series.length > 0 &&
                    g.push(I.draw(S.series, "boxPlot", S.i)),
                  _.series.length > 0 &&
                    g.push(this.ctx.rangeBar.draw(_.series, _.i)),
                  f.series.length > 0)
                ) {
                  var A = new Rr(this.ctx, i, !0);
                  g.push(A.draw(f.series, "scatter", f.i));
                }
                if (m.series.length > 0) {
                  var D = new Rr(this.ctx, i, !0);
                  g.push(D.draw(m.series, "bubble", m.i));
                }
              } else
                switch (s.chart.type) {
                  case "line":
                    g = E.draw(l.series, "line");
                    break;
                  case "area":
                    g = E.draw(l.series, "area");
                    break;
                  case "bar":
                    s.chart.stacked
                      ? (g = new ie(this.ctx, i).draw(l.series))
                      : ((this.ctx.bar = new J(this.ctx, i)),
                        (g = this.ctx.bar.draw(l.series)));
                    break;
                  case "candlestick":
                    g = new de(this.ctx, i).draw(l.series, "candlestick");
                    break;
                  case "boxPlot":
                    g = new de(this.ctx, i).draw(l.series, s.chart.type);
                    break;
                  case "rangeBar":
                    g = this.ctx.rangeBar.draw(l.series);
                    break;
                  case "rangeArea":
                    g = E.draw(
                      l.seriesRangeStart,
                      "rangeArea",
                      void 0,
                      l.seriesRangeEnd,
                    );
                    break;
                  case "heatmap":
                    g = new Ee(this.ctx, i).draw(l.series);
                    break;
                  case "treemap":
                    g = new Lr(this.ctx, i).draw(l.series);
                    break;
                  case "pie":
                  case "donut":
                  case "polarArea":
                    g = this.ctx.pie.draw(l.series);
                    break;
                  case "radialBar":
                    g = H.draw(l.series);
                    break;
                  case "radar":
                    g = Y.draw(l.series);
                    break;
                  default:
                    g = E.draw(l.series);
                }
              return g;
            },
          },
          {
            key: "setSVGDimensions",
            value: function () {
              var n = this.w.globals,
                i = this.w.config;
              (n.svgWidth = i.chart.width), (n.svgHeight = i.chart.height);
              var o = O.getDimensions(this.el),
                s = i.chart.width
                  .toString()
                  .split(/[0-9]+/g)
                  .pop();
              s === "%"
                ? O.isNumber(o[0]) &&
                  (o[0].width === 0 &&
                    (o = O.getDimensions(this.el.parentNode)),
                  (n.svgWidth = (o[0] * parseInt(i.chart.width, 10)) / 100))
                : (s !== "px" && s !== "") ||
                  (n.svgWidth = parseInt(i.chart.width, 10));
              var l = i.chart.height
                .toString()
                .split(/[0-9]+/g)
                .pop();
              if (n.svgHeight !== "auto" && n.svgHeight !== "")
                if (l === "%") {
                  var u = O.getDimensions(this.el.parentNode);
                  n.svgHeight = (u[1] * parseInt(i.chart.height, 10)) / 100;
                } else n.svgHeight = parseInt(i.chart.height, 10);
              else
                n.axisCharts
                  ? (n.svgHeight = n.svgWidth / 1.61)
                  : (n.svgHeight = n.svgWidth / 1.2);
              if (
                (n.svgWidth < 0 && (n.svgWidth = 0),
                n.svgHeight < 0 && (n.svgHeight = 0),
                B.setAttrs(n.dom.Paper.node, {
                  width: n.svgWidth,
                  height: n.svgHeight,
                }),
                l !== "%")
              ) {
                var d = i.chart.sparkline.enabled
                  ? 0
                  : n.axisCharts
                  ? i.chart.parentHeightOffset
                  : 0;
                n.dom.Paper.node.parentNode.parentNode.style.minHeight =
                  n.svgHeight + d + "px";
              }
              (n.dom.elWrap.style.width = n.svgWidth + "px"),
                (n.dom.elWrap.style.height = n.svgHeight + "px");
            },
          },
          {
            key: "shiftGraphPosition",
            value: function () {
              var n = this.w.globals,
                i = n.translateY,
                o = { transform: "translate(" + n.translateX + ", " + i + ")" };
              B.setAttrs(n.dom.elGraphical.node, o);
            },
          },
          {
            key: "resizeNonAxisCharts",
            value: function () {
              var n = this.w,
                i = n.globals,
                o = 0,
                s = n.config.chart.sparkline.enabled ? 1 : 15;
              (s += n.config.grid.padding.bottom),
                (n.config.legend.position !== "top" &&
                  n.config.legend.position !== "bottom") ||
                  !n.config.legend.show ||
                  n.config.legend.floating ||
                  (o =
                    new Ka(this.ctx).legendHelpers.getLegendBBox().clwh + 10);
              var l = n.globals.dom.baseEl.querySelector(
                  ".apexcharts-radialbar, .apexcharts-pie",
                ),
                u = 2.05 * n.globals.radialSize;
              if (
                l &&
                !n.config.chart.sparkline.enabled &&
                n.config.plotOptions.radialBar.startAngle !== 0
              ) {
                var d = O.getBoundingClientRect(l);
                u = d.bottom;
                var f = d.bottom - d.top;
                u = Math.max(2.05 * n.globals.radialSize, f);
              }
              var m = u + i.translateY + o + s;
              i.dom.elLegendForeign &&
                i.dom.elLegendForeign.setAttribute("height", m),
                (n.config.chart.height &&
                  String(n.config.chart.height).indexOf("%") > 0) ||
                  ((i.dom.elWrap.style.height = m + "px"),
                  B.setAttrs(i.dom.Paper.node, { height: m }),
                  (i.dom.Paper.node.parentNode.parentNode.style.minHeight =
                    m + "px"));
            },
          },
          {
            key: "coreCalculations",
            value: function () {
              new Pt(this.ctx).init();
            },
          },
          {
            key: "resetGlobals",
            value: function () {
              var n = this,
                i = function () {
                  return n.w.config.series.map(function (l) {
                    return [];
                  });
                },
                o = new Se(),
                s = this.w.globals;
              o.initGlobalVars(s),
                (s.seriesXvalues = i()),
                (s.seriesYvalues = i());
            },
          },
          {
            key: "isMultipleY",
            value: function () {
              if (
                this.w.config.yaxis.constructor === Array &&
                this.w.config.yaxis.length > 1
              )
                return (this.w.globals.isMultipleYAxis = !0), !0;
            },
          },
          {
            key: "xySettings",
            value: function () {
              var n = null,
                i = this.w;
              if (i.globals.axisCharts) {
                if (
                  (i.config.xaxis.crosshairs.position === "back" &&
                    new Jt(this.ctx).drawXCrosshairs(),
                  i.config.yaxis[0].crosshairs.position === "back" &&
                    new Jt(this.ctx).drawYCrosshairs(),
                  i.config.xaxis.type === "datetime" &&
                    i.config.xaxis.labels.formatter === void 0)
                ) {
                  this.ctx.timeScale = new Ki(this.ctx);
                  var o = [];
                  isFinite(i.globals.minX) &&
                  isFinite(i.globals.maxX) &&
                  !i.globals.isBarHorizontal
                    ? (o = this.ctx.timeScale.calculateTimeScaleTicks(
                        i.globals.minX,
                        i.globals.maxX,
                      ))
                    : i.globals.isBarHorizontal &&
                      (o = this.ctx.timeScale.calculateTimeScaleTicks(
                        i.globals.minY,
                        i.globals.maxY,
                      )),
                    this.ctx.timeScale.recalcDimensionsBasedOnFormat(o);
                }
                n = new U(this.ctx).getCalculatedRatios();
              }
              return n;
            },
          },
          {
            key: "updateSourceChart",
            value: function (n) {
              (this.ctx.w.globals.selection = void 0),
                this.ctx.updateHelpers._updateOptions(
                  {
                    chart: {
                      selection: {
                        xaxis: { min: n.w.globals.minX, max: n.w.globals.maxX },
                      },
                    },
                  },
                  !1,
                  !1,
                );
            },
          },
          {
            key: "setupBrushHandler",
            value: function () {
              var n = this,
                i = this.w;
              if (
                i.config.chart.brush.enabled &&
                typeof i.config.chart.events.selection != "function"
              ) {
                var o = Array.isArray(i.config.chart.brush.targets) || [
                  i.config.chart.brush.target,
                ];
                o.forEach(function (s) {
                  var l = ApexCharts.getChartByID(s);
                  (l.w.globals.brushSource = n.ctx),
                    typeof l.w.config.chart.events.zoomed != "function" &&
                      (l.w.config.chart.events.zoomed = function () {
                        n.updateSourceChart(l);
                      }),
                    typeof l.w.config.chart.events.scrolled != "function" &&
                      (l.w.config.chart.events.scrolled = function () {
                        n.updateSourceChart(l);
                      });
                }),
                  (i.config.chart.events.selection = function (s, l) {
                    o.forEach(function (u) {
                      var d = ApexCharts.getChartByID(u),
                        f = O.clone(i.config.yaxis);
                      if (
                        i.config.chart.brush.autoScaleYaxis &&
                        d.w.globals.series.length === 1
                      ) {
                        var m = new vt(d);
                        f = m.autoScaleY(d, f, l);
                      }
                      var y = d.w.config.yaxis.reduce(function (x, S, _) {
                        return [].concat(F(x), [
                          a(
                            a({}, d.w.config.yaxis[_]),
                            {},
                            { min: f[0].min, max: f[0].max },
                          ),
                        ]);
                      }, []);
                      d.ctx.updateHelpers._updateOptions(
                        {
                          xaxis: { min: l.xaxis.min, max: l.xaxis.max },
                          yaxis: y,
                        },
                        !1,
                        !1,
                        !1,
                        !1,
                      );
                    });
                  });
              }
            },
          },
        ]),
        T
      );
    })(),
    no = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "_updateOptions",
            value: function (n) {
              var i = this,
                o =
                  arguments.length > 1 &&
                  arguments[1] !== void 0 &&
                  arguments[1],
                s =
                  !(arguments.length > 2 && arguments[2] !== void 0) ||
                  arguments[2],
                l =
                  !(arguments.length > 3 && arguments[3] !== void 0) ||
                  arguments[3],
                u =
                  arguments.length > 4 &&
                  arguments[4] !== void 0 &&
                  arguments[4];
              return new Promise(function (d) {
                var f = [i.ctx];
                l && (f = i.ctx.getSyncedCharts()),
                  i.ctx.w.globals.isExecCalled &&
                    ((f = [i.ctx]), (i.ctx.w.globals.isExecCalled = !1)),
                  f.forEach(function (m, y) {
                    var x = m.w;
                    if (
                      ((x.globals.shouldAnimate = s),
                      o ||
                        ((x.globals.resized = !0),
                        (x.globals.dataChanged = !0),
                        s && m.series.getPreviousPaths()),
                      n &&
                        c(n) === "object" &&
                        ((m.config = new pe(n)),
                        (n = U.extendArrayProps(m.config, n, x)),
                        m.w.globals.chartID !== i.ctx.w.globals.chartID &&
                          delete n.series,
                        (x.config = O.extend(x.config, n)),
                        u &&
                          ((x.globals.lastXAxis = n.xaxis
                            ? O.clone(n.xaxis)
                            : []),
                          (x.globals.lastYAxis = n.yaxis
                            ? O.clone(n.yaxis)
                            : []),
                          (x.globals.initialConfig = O.extend({}, x.config)),
                          (x.globals.initialSeries = O.clone(x.config.series)),
                          n.series)))
                    ) {
                      for (
                        var S = 0;
                        S < x.globals.collapsedSeriesIndices.length;
                        S++
                      ) {
                        var _ =
                          x.config.series[x.globals.collapsedSeriesIndices[S]];
                        x.globals.collapsedSeries[S].data = x.globals.axisCharts
                          ? _.data.slice()
                          : _;
                      }
                      for (
                        var C = 0;
                        C < x.globals.ancillaryCollapsedSeriesIndices.length;
                        C++
                      ) {
                        var E =
                          x.config.series[
                            x.globals.ancillaryCollapsedSeriesIndices[C]
                          ];
                        x.globals.ancillaryCollapsedSeries[C].data = x.globals
                          .axisCharts
                          ? E.data.slice()
                          : E;
                      }
                      m.series.emptyCollapsedSeries(x.config.series);
                    }
                    return m.update(n).then(function () {
                      y === f.length - 1 && d(m);
                    });
                  });
              });
            },
          },
          {
            key: "_updateSeries",
            value: function (n, i) {
              var o = this,
                s =
                  arguments.length > 2 &&
                  arguments[2] !== void 0 &&
                  arguments[2];
              return new Promise(function (l) {
                var u,
                  d = o.w;
                return (
                  (d.globals.shouldAnimate = i),
                  (d.globals.dataChanged = !0),
                  i && o.ctx.series.getPreviousPaths(),
                  d.globals.axisCharts
                    ? ((u = n.map(function (f, m) {
                        return o._extendSeries(f, m);
                      })).length === 0 && (u = [{ data: [] }]),
                      (d.config.series = u))
                    : (d.config.series = n.slice()),
                  s &&
                    ((d.globals.initialConfig.series = O.clone(
                      d.config.series,
                    )),
                    (d.globals.initialSeries = O.clone(d.config.series))),
                  o.ctx.update().then(function () {
                    l(o.ctx);
                  })
                );
              });
            },
          },
          {
            key: "_extendSeries",
            value: function (n, i) {
              var o = this.w,
                s = o.config.series[i];
              return a(
                a({}, o.config.series[i]),
                {},
                {
                  name: n.name ? n.name : s == null ? void 0 : s.name,
                  color: n.color ? n.color : s == null ? void 0 : s.color,
                  type: n.type ? n.type : s == null ? void 0 : s.type,
                  group: n.group ? n.group : s == null ? void 0 : s.group,
                  data: n.data ? n.data : s == null ? void 0 : s.data,
                  zIndex: n.zIndex !== void 0 ? n.zIndex : i,
                },
              );
            },
          },
          {
            key: "toggleDataPointSelection",
            value: function (n, i) {
              var o = this.w,
                s = null,
                l = ".apexcharts-series[data\\:realIndex='".concat(n, "']");
              return (
                o.globals.axisCharts
                  ? (s = o.globals.dom.Paper.select(
                      ""
                        .concat(l, " path[j='")
                        .concat(i, "'], ")
                        .concat(l, " circle[j='")
                        .concat(i, "'], ")
                        .concat(l, " rect[j='")
                        .concat(i, "']"),
                    ).members[0])
                  : i === void 0 &&
                    ((s = o.globals.dom.Paper.select(
                      "".concat(l, " path[j='").concat(n, "']"),
                    ).members[0]),
                    (o.config.chart.type !== "pie" &&
                      o.config.chart.type !== "polarArea" &&
                      o.config.chart.type !== "donut") ||
                      this.ctx.pie.pieClicked(n)),
                s
                  ? (new B(this.ctx).pathMouseDown(s, null),
                    s.node ? s.node : null)
                  : (console.warn(
                      "toggleDataPointSelection: Element not found",
                    ),
                    null)
              );
            },
          },
          {
            key: "forceXAxisUpdate",
            value: function (n) {
              var i = this.w;
              if (
                (["min", "max"].forEach(function (s) {
                  n.xaxis[s] !== void 0 &&
                    ((i.config.xaxis[s] = n.xaxis[s]),
                    (i.globals.lastXAxis[s] = n.xaxis[s]));
                }),
                n.xaxis.categories &&
                  n.xaxis.categories.length &&
                  (i.config.xaxis.categories = n.xaxis.categories),
                i.config.xaxis.convertedCatToNumeric)
              ) {
                var o = new te(n);
                n = o.convertCatToNumericXaxis(n, this.ctx);
              }
              return n;
            },
          },
          {
            key: "forceYAxisUpdate",
            value: function (n) {
              return (
                n.chart &&
                  n.chart.stacked &&
                  n.chart.stackType === "100%" &&
                  (Array.isArray(n.yaxis)
                    ? n.yaxis.forEach(function (i, o) {
                        (n.yaxis[o].min = 0), (n.yaxis[o].max = 100);
                      })
                    : ((n.yaxis.min = 0), (n.yaxis.max = 100))),
                n
              );
            },
          },
          {
            key: "revertDefaultAxisMinMax",
            value: function (n) {
              var i = this,
                o = this.w,
                s = o.globals.lastXAxis,
                l = o.globals.lastYAxis;
              n && n.xaxis && (s = n.xaxis),
                n && n.yaxis && (l = n.yaxis),
                (o.config.xaxis.min = s.min),
                (o.config.xaxis.max = s.max);
              var u = function (d) {
                l[d] !== void 0 &&
                  ((o.config.yaxis[d].min = l[d].min),
                  (o.config.yaxis[d].max = l[d].max));
              };
              o.config.yaxis.map(function (d, f) {
                o.globals.zoomed || l[f] !== void 0
                  ? u(f)
                  : i.ctx.opts.yaxis[f] !== void 0 &&
                    ((d.min = i.ctx.opts.yaxis[f].min),
                    (d.max = i.ctx.opts.yaxis[f].max));
              });
            },
          },
        ]),
        T
      );
    })();
  (lr = typeof window < "u" ? window : void 0),
    ($n = function (T, n) {
      var i = ((this !== void 0 ? this : T).SVG = function (g) {
        if (i.supported)
          return (g = new i.Doc(g)), i.parser.draw || i.prepare(), g;
      });
      if (
        ((i.ns = "http://www.w3.org/2000/svg"),
        (i.xmlns = "http://www.w3.org/2000/xmlns/"),
        (i.xlink = "http://www.w3.org/1999/xlink"),
        (i.svgjs = "http://svgjs.dev"),
        (i.supported = !0),
        !i.supported)
      )
        return !1;
      (i.did = 1e3),
        (i.eid = function (g) {
          return "Svgjs" + y(g) + i.did++;
        }),
        (i.create = function (g) {
          var w = n.createElementNS(this.ns, g);
          return w.setAttribute("id", this.eid(g)), w;
        }),
        (i.extend = function () {
          var g, w;
          w = (g = [].slice.call(arguments)).pop();
          for (var A = g.length - 1; A >= 0; A--)
            if (g[A]) for (var D in w) g[A].prototype[D] = w[D];
          i.Set && i.Set.inherit && i.Set.inherit();
        }),
        (i.invent = function (g) {
          var w =
            typeof g.create == "function"
              ? g.create
              : function () {
                  this.constructor.call(this, i.create(g.create));
                };
          return (
            g.inherit && (w.prototype = new g.inherit()),
            g.extend && i.extend(w, g.extend),
            g.construct && i.extend(g.parent || i.Container, g.construct),
            w
          );
        }),
        (i.adopt = function (g) {
          return g
            ? g.instance
              ? g.instance
              : (((w =
                  g.nodeName == "svg"
                    ? g.parentNode instanceof T.SVGElement
                      ? new i.Nested()
                      : new i.Doc()
                    : g.nodeName == "linearGradient"
                    ? new i.Gradient("linear")
                    : g.nodeName == "radialGradient"
                    ? new i.Gradient("radial")
                    : i[y(g.nodeName)]
                    ? new i[y(g.nodeName)]()
                    : new i.Element(g)).type = g.nodeName),
                (w.node = g),
                (g.instance = w),
                w instanceof i.Doc && w.namespace().defs(),
                w.setData(JSON.parse(g.getAttribute("svgjs:data")) || {}),
                w)
            : null;
          var w;
        }),
        (i.prepare = function () {
          var g = n.getElementsByTagName("body")[0],
            w = (g ? new i.Doc(g) : i.adopt(n.documentElement).nested()).size(
              2,
              0,
            );
          i.parser = {
            body: g || n.documentElement,
            draw: w.style(
              "opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden",
            ).node,
            poly: w.polyline().node,
            path: w.path().node,
            native: i.create("svg"),
          };
        }),
        (i.parser = { native: i.create("svg") }),
        n.addEventListener(
          "DOMContentLoaded",
          function () {
            i.parser.draw || i.prepare();
          },
          !1,
        ),
        (i.regex = {
          numberAndUnit: /^([+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?)([a-z%]*)$/i,
          hex: /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i,
          rgb: /rgb\((\d+),(\d+),(\d+)\)/,
          reference: /#([a-z0-9\-_]+)/i,
          transforms: /\)\s*,?\s*/,
          whitespace: /\s/g,
          isHex: /^#[a-f0-9]{3,6}$/i,
          isRgb: /^rgb\(/,
          isCss: /[^:]+:[^;]+;?/,
          isBlank: /^(\s+)?$/,
          isNumber: /^[+-]?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,
          isPercent: /^-?[\d\.]+%$/,
          isImage: /\.(jpg|jpeg|png|gif|svg)(\?[^=]+.*)?/i,
          delimiter: /[\s,]+/,
          hyphen: /([^e])\-/gi,
          pathLetters: /[MLHVCSQTAZ]/gi,
          isPathLetter: /[MLHVCSQTAZ]/i,
          numbersWithDots:
            /((\d?\.\d+(?:e[+-]?\d+)?)((?:\.\d+(?:e[+-]?\d+)?)+))+/gi,
          dots: /\./g,
        }),
        (i.utils = {
          map: function (g, w) {
            for (var A = g.length, D = [], W = 0; W < A; W++) D.push(w(g[W]));
            return D;
          },
          filter: function (g, w) {
            for (var A = g.length, D = [], W = 0; W < A; W++)
              w(g[W]) && D.push(g[W]);
            return D;
          },
          filterSVGElements: function (g) {
            return this.filter(g, function (w) {
              return w instanceof T.SVGElement;
            });
          },
        }),
        (i.defaults = {
          attrs: {
            "fill-opacity": 1,
            "stroke-opacity": 1,
            "stroke-width": 0,
            "stroke-linejoin": "miter",
            "stroke-linecap": "butt",
            fill: "#000000",
            stroke: "#000000",
            opacity: 1,
            x: 0,
            y: 0,
            cx: 0,
            cy: 0,
            width: 0,
            height: 0,
            r: 0,
            rx: 0,
            ry: 0,
            offset: 0,
            "stop-opacity": 1,
            "stop-color": "#000000",
            "font-size": 16,
            "font-family": "Helvetica, Arial, sans-serif",
            "text-anchor": "start",
          },
        }),
        (i.Color = function (g) {
          var w, A;
          (this.r = 0),
            (this.g = 0),
            (this.b = 0),
            g &&
              (typeof g == "string"
                ? i.regex.isRgb.test(g)
                  ? ((w = i.regex.rgb.exec(g.replace(i.regex.whitespace, ""))),
                    (this.r = parseInt(w[1])),
                    (this.g = parseInt(w[2])),
                    (this.b = parseInt(w[3])))
                  : i.regex.isHex.test(g) &&
                    ((w = i.regex.hex.exec(
                      (A = g).length == 4
                        ? [
                            "#",
                            A.substring(1, 2),
                            A.substring(1, 2),
                            A.substring(2, 3),
                            A.substring(2, 3),
                            A.substring(3, 4),
                            A.substring(3, 4),
                          ].join("")
                        : A,
                    )),
                    (this.r = parseInt(w[1], 16)),
                    (this.g = parseInt(w[2], 16)),
                    (this.b = parseInt(w[3], 16)))
                : c(g) === "object" &&
                  ((this.r = g.r), (this.g = g.g), (this.b = g.b)));
        }),
        i.extend(i.Color, {
          toString: function () {
            return this.toHex();
          },
          toHex: function () {
            return "#" + x(this.r) + x(this.g) + x(this.b);
          },
          toRgb: function () {
            return "rgb(" + [this.r, this.g, this.b].join() + ")";
          },
          brightness: function () {
            return (
              (this.r / 255) * 0.3 +
              (this.g / 255) * 0.59 +
              (this.b / 255) * 0.11
            );
          },
          morph: function (g) {
            return (this.destination = new i.Color(g)), this;
          },
          at: function (g) {
            return this.destination
              ? ((g = g < 0 ? 0 : g > 1 ? 1 : g),
                new i.Color({
                  r: ~~(this.r + (this.destination.r - this.r) * g),
                  g: ~~(this.g + (this.destination.g - this.g) * g),
                  b: ~~(this.b + (this.destination.b - this.b) * g),
                }))
              : this;
          },
        }),
        (i.Color.test = function (g) {
          return (g += ""), i.regex.isHex.test(g) || i.regex.isRgb.test(g);
        }),
        (i.Color.isRgb = function (g) {
          return (
            g &&
            typeof g.r == "number" &&
            typeof g.g == "number" &&
            typeof g.b == "number"
          );
        }),
        (i.Color.isColor = function (g) {
          return i.Color.isRgb(g) || i.Color.test(g);
        }),
        (i.Array = function (g, w) {
          (g = (g || []).valueOf()).length == 0 && w && (g = w.valueOf()),
            (this.value = this.parse(g));
        }),
        i.extend(i.Array, {
          toString: function () {
            return this.value.join(" ");
          },
          valueOf: function () {
            return this.value;
          },
          parse: function (g) {
            return (g = g.valueOf()), Array.isArray(g) ? g : this.split(g);
          },
        }),
        (i.PointArray = function (g, w) {
          i.Array.call(this, g, w || [[0, 0]]);
        }),
        (i.PointArray.prototype = new i.Array()),
        (i.PointArray.prototype.constructor = i.PointArray);
      for (
        var o = {
            M: function (g, w, A) {
              return (w.x = A.x = g[0]), (w.y = A.y = g[1]), ["M", w.x, w.y];
            },
            L: function (g, w) {
              return (w.x = g[0]), (w.y = g[1]), ["L", g[0], g[1]];
            },
            H: function (g, w) {
              return (w.x = g[0]), ["H", g[0]];
            },
            V: function (g, w) {
              return (w.y = g[0]), ["V", g[0]];
            },
            C: function (g, w) {
              return (
                (w.x = g[4]),
                (w.y = g[5]),
                ["C", g[0], g[1], g[2], g[3], g[4], g[5]]
              );
            },
            Q: function (g, w) {
              return (w.x = g[2]), (w.y = g[3]), ["Q", g[0], g[1], g[2], g[3]];
            },
            S: function (g, w) {
              return (w.x = g[2]), (w.y = g[3]), ["S", g[0], g[1], g[2], g[3]];
            },
            Z: function (g, w, A) {
              return (w.x = A.x), (w.y = A.y), ["Z"];
            },
          },
          s = "mlhvqtcsaz".split(""),
          l = 0,
          u = s.length;
        l < u;
        ++l
      )
        o[s[l]] = (function (g) {
          return function (w, A, D) {
            if (g == "H") w[0] = w[0] + A.x;
            else if (g == "V") w[0] = w[0] + A.y;
            else if (g == "A") (w[5] = w[5] + A.x), (w[6] = w[6] + A.y);
            else
              for (var W = 0, V = w.length; W < V; ++W)
                w[W] = w[W] + (W % 2 ? A.y : A.x);
            if (o && typeof o[g] == "function") return o[g](w, A, D);
          };
        })(s[l].toUpperCase());
      (i.PathArray = function (g, w) {
        i.Array.call(this, g, w || [["M", 0, 0]]);
      }),
        (i.PathArray.prototype = new i.Array()),
        (i.PathArray.prototype.constructor = i.PathArray),
        i.extend(i.PathArray, {
          toString: function () {
            return (function (g) {
              for (var w = 0, A = g.length, D = ""; w < A; w++)
                (D += g[w][0]),
                  g[w][1] != null &&
                    ((D += g[w][1]),
                    g[w][2] != null &&
                      ((D += " "),
                      (D += g[w][2]),
                      g[w][3] != null &&
                        ((D += " "),
                        (D += g[w][3]),
                        (D += " "),
                        (D += g[w][4]),
                        g[w][5] != null &&
                          ((D += " "),
                          (D += g[w][5]),
                          (D += " "),
                          (D += g[w][6]),
                          g[w][7] != null && ((D += " "), (D += g[w][7]))))));
              return D + " ";
            })(this.value);
          },
          move: function (g, w) {
            var A = this.bbox();
            return A.x, A.y, this;
          },
          at: function (g) {
            if (!this.destination) return this;
            for (
              var w = this.value,
                A = this.destination.value,
                D = [],
                W = new i.PathArray(),
                V = 0,
                K = w.length;
              V < K;
              V++
            ) {
              D[V] = [w[V][0]];
              for (var Z = 1, re = w[V].length; Z < re; Z++)
                D[V][Z] = w[V][Z] + (A[V][Z] - w[V][Z]) * g;
              D[V][0] === "A" &&
                ((D[V][4] = +(D[V][4] != 0)), (D[V][5] = +(D[V][5] != 0)));
            }
            return (W.value = D), W;
          },
          parse: function (g) {
            if (g instanceof i.PathArray) return g.valueOf();
            var w,
              A = {
                M: 2,
                L: 2,
                H: 1,
                V: 1,
                C: 6,
                S: 4,
                Q: 4,
                T: 2,
                A: 7,
                Z: 0,
              };
            g =
              typeof g == "string"
                ? g
                    .replace(i.regex.numbersWithDots, f)
                    .replace(i.regex.pathLetters, " $& ")
                    .replace(i.regex.hyphen, "$1 -")
                    .trim()
                    .split(i.regex.delimiter)
                : g.reduce(function (re, ce) {
                    return [].concat.call(re, ce);
                  }, []);
            var D = [],
              W = new i.Point(),
              V = new i.Point(),
              K = 0,
              Z = g.length;
            do
              i.regex.isPathLetter.test(g[K])
                ? ((w = g[K]), ++K)
                : w == "M"
                ? (w = "L")
                : w == "m" && (w = "l"),
                D.push(
                  o[w].call(
                    null,
                    g.slice(K, (K += A[w.toUpperCase()])).map(parseFloat),
                    W,
                    V,
                  ),
                );
            while (Z > K);
            return D;
          },
          bbox: function () {
            return (
              i.parser.draw || i.prepare(),
              i.parser.path.setAttribute("d", this.toString()),
              i.parser.path.getBBox()
            );
          },
        }),
        (i.Number = i.invent({
          create: function (g, w) {
            (this.value = 0),
              (this.unit = w || ""),
              typeof g == "number"
                ? (this.value = isNaN(g)
                    ? 0
                    : isFinite(g)
                    ? g
                    : g < 0
                    ? -34e37
                    : 34e37)
                : typeof g == "string"
                ? (w = g.match(i.regex.numberAndUnit)) &&
                  ((this.value = parseFloat(w[1])),
                  w[5] == "%"
                    ? (this.value /= 100)
                    : w[5] == "s" && (this.value *= 1e3),
                  (this.unit = w[5]))
                : g instanceof i.Number &&
                  ((this.value = g.valueOf()), (this.unit = g.unit));
          },
          extend: {
            toString: function () {
              return (
                (this.unit == "%"
                  ? ~~(1e8 * this.value) / 1e6
                  : this.unit == "s"
                  ? this.value / 1e3
                  : this.value) + this.unit
              );
            },
            toJSON: function () {
              return this.toString();
            },
            valueOf: function () {
              return this.value;
            },
            plus: function (g) {
              return (
                (g = new i.Number(g)),
                new i.Number(this + g, this.unit || g.unit)
              );
            },
            minus: function (g) {
              return (
                (g = new i.Number(g)),
                new i.Number(this - g, this.unit || g.unit)
              );
            },
            times: function (g) {
              return (
                (g = new i.Number(g)),
                new i.Number(this * g, this.unit || g.unit)
              );
            },
            divide: function (g) {
              return (
                (g = new i.Number(g)),
                new i.Number(this / g, this.unit || g.unit)
              );
            },
            to: function (g) {
              var w = new i.Number(this);
              return typeof g == "string" && (w.unit = g), w;
            },
            morph: function (g) {
              return (
                (this.destination = new i.Number(g)),
                g.relative && (this.destination.value += this.value),
                this
              );
            },
            at: function (g) {
              return this.destination
                ? new i.Number(this.destination).minus(this).times(g).plus(this)
                : this;
            },
          },
        })),
        (i.Element = i.invent({
          create: function (g) {
            (this._stroke = i.defaults.attrs.stroke),
              (this._event = null),
              (this.dom = {}),
              (this.node = g) &&
                ((this.type = g.nodeName),
                (this.node.instance = this),
                (this._stroke = g.getAttribute("stroke") || this._stroke));
          },
          extend: {
            x: function (g) {
              return this.attr("x", g);
            },
            y: function (g) {
              return this.attr("y", g);
            },
            cx: function (g) {
              return g == null
                ? this.x() + this.width() / 2
                : this.x(g - this.width() / 2);
            },
            cy: function (g) {
              return g == null
                ? this.y() + this.height() / 2
                : this.y(g - this.height() / 2);
            },
            move: function (g, w) {
              return this.x(g).y(w);
            },
            center: function (g, w) {
              return this.cx(g).cy(w);
            },
            width: function (g) {
              return this.attr("width", g);
            },
            height: function (g) {
              return this.attr("height", g);
            },
            size: function (g, w) {
              var A = S(this, g, w);
              return this.width(new i.Number(A.width)).height(
                new i.Number(A.height),
              );
            },
            clone: function (g) {
              this.writeDataToDom();
              var w = E(this.node.cloneNode(!0));
              return g ? g.add(w) : this.after(w), w;
            },
            remove: function () {
              return this.parent() && this.parent().removeElement(this), this;
            },
            replace: function (g) {
              return this.after(g).remove(), g;
            },
            addTo: function (g) {
              return g.put(this);
            },
            putIn: function (g) {
              return g.add(this);
            },
            id: function (g) {
              return this.attr("id", g);
            },
            show: function () {
              return this.style("display", "");
            },
            hide: function () {
              return this.style("display", "none");
            },
            visible: function () {
              return this.style("display") != "none";
            },
            toString: function () {
              return this.attr("id");
            },
            classes: function () {
              var g = this.attr("class");
              return g == null ? [] : g.trim().split(i.regex.delimiter);
            },
            hasClass: function (g) {
              return this.classes().indexOf(g) != -1;
            },
            addClass: function (g) {
              if (!this.hasClass(g)) {
                var w = this.classes();
                w.push(g), this.attr("class", w.join(" "));
              }
              return this;
            },
            removeClass: function (g) {
              return (
                this.hasClass(g) &&
                  this.attr(
                    "class",
                    this.classes()
                      .filter(function (w) {
                        return w != g;
                      })
                      .join(" "),
                  ),
                this
              );
            },
            toggleClass: function (g) {
              return this.hasClass(g) ? this.removeClass(g) : this.addClass(g);
            },
            reference: function (g) {
              return i.get(this.attr(g));
            },
            parent: function (g) {
              var w = this;
              if (!w.node.parentNode) return null;
              if (((w = i.adopt(w.node.parentNode)), !g)) return w;
              for (; w && w.node instanceof T.SVGElement; ) {
                if (typeof g == "string" ? w.matches(g) : w instanceof g)
                  return w;
                if (
                  !w.node.parentNode ||
                  w.node.parentNode.nodeName == "#document"
                )
                  return null;
                w = i.adopt(w.node.parentNode);
              }
            },
            doc: function () {
              return this instanceof i.Doc ? this : this.parent(i.Doc);
            },
            parents: function (g) {
              var w = [],
                A = this;
              do {
                if (!(A = A.parent(g)) || !A.node) break;
                w.push(A);
              } while (A.parent);
              return w;
            },
            matches: function (g) {
              return (function (w, A) {
                return (
                  w.matches ||
                  w.matchesSelector ||
                  w.msMatchesSelector ||
                  w.mozMatchesSelector ||
                  w.webkitMatchesSelector ||
                  w.oMatchesSelector
                ).call(w, A);
              })(this.node, g);
            },
            native: function () {
              return this.node;
            },
            svg: function (g) {
              var w = n.createElement("svg");
              if (!(g && this instanceof i.Parent))
                return (
                  w.appendChild((g = n.createElement("svg"))),
                  this.writeDataToDom(),
                  g.appendChild(this.node.cloneNode(!0)),
                  w.innerHTML.replace(/^<svg>/, "").replace(/<\/svg>$/, "")
                );
              w.innerHTML =
                "<svg>" +
                g
                  .replace(/\n/, "")
                  .replace(/<([\w:-]+)([^<]+?)\/>/g, "<$1$2></$1>") +
                "</svg>";
              for (var A = 0, D = w.firstChild.childNodes.length; A < D; A++)
                this.node.appendChild(w.firstChild.firstChild);
              return this;
            },
            writeDataToDom: function () {
              return (
                (this.each || this.lines) &&
                  (this.each ? this : this.lines()).each(function () {
                    this.writeDataToDom();
                  }),
                this.node.removeAttribute("svgjs:data"),
                Object.keys(this.dom).length &&
                  this.node.setAttribute(
                    "svgjs:data",
                    JSON.stringify(this.dom),
                  ),
                this
              );
            },
            setData: function (g) {
              return (this.dom = g), this;
            },
            is: function (g) {
              return (function (w, A) {
                return w instanceof A;
              })(this, g);
            },
          },
        })),
        (i.easing = {
          "-": function (g) {
            return g;
          },
          "<>": function (g) {
            return -Math.cos(g * Math.PI) / 2 + 0.5;
          },
          ">": function (g) {
            return Math.sin((g * Math.PI) / 2);
          },
          "<": function (g) {
            return 1 - Math.cos((g * Math.PI) / 2);
          },
        }),
        (i.morph = function (g) {
          return function (w, A) {
            return new i.MorphObj(w, A).at(g);
          };
        }),
        (i.Situation = i.invent({
          create: function (g) {
            (this.init = !1),
              (this.reversed = !1),
              (this.reversing = !1),
              (this.duration = new i.Number(g.duration).valueOf()),
              (this.delay = new i.Number(g.delay).valueOf()),
              (this.start = +new Date() + this.delay),
              (this.finish = this.start + this.duration),
              (this.ease = g.ease),
              (this.loop = 0),
              (this.loops = !1),
              (this.animations = {}),
              (this.attrs = {}),
              (this.styles = {}),
              (this.transforms = []),
              (this.once = {});
          },
        })),
        (i.FX = i.invent({
          create: function (g) {
            (this._target = g),
              (this.situations = []),
              (this.active = !1),
              (this.situation = null),
              (this.paused = !1),
              (this.lastPos = 0),
              (this.pos = 0),
              (this.absPos = 0),
              (this._speed = 1);
          },
          extend: {
            animate: function (g, w, A) {
              c(g) === "object" &&
                ((w = g.ease), (A = g.delay), (g = g.duration));
              var D = new i.Situation({
                duration: g || 1e3,
                delay: A || 0,
                ease: i.easing[w || "-"] || w,
              });
              return this.queue(D), this;
            },
            target: function (g) {
              return g && g instanceof i.Element
                ? ((this._target = g), this)
                : this._target;
            },
            timeToAbsPos: function (g) {
              return (
                (g - this.situation.start) /
                (this.situation.duration / this._speed)
              );
            },
            absPosToTime: function (g) {
              return (
                (this.situation.duration / this._speed) * g +
                this.situation.start
              );
            },
            startAnimFrame: function () {
              this.stopAnimFrame(),
                (this.animationFrame = T.requestAnimationFrame(
                  function () {
                    this.step();
                  }.bind(this),
                ));
            },
            stopAnimFrame: function () {
              T.cancelAnimationFrame(this.animationFrame);
            },
            start: function () {
              return (
                !this.active &&
                  this.situation &&
                  ((this.active = !0), this.startCurrent()),
                this
              );
            },
            startCurrent: function () {
              return (
                (this.situation.start =
                  +new Date() + this.situation.delay / this._speed),
                (this.situation.finish =
                  this.situation.start + this.situation.duration / this._speed),
                this.initAnimations().step()
              );
            },
            queue: function (g) {
              return (
                (typeof g == "function" || g instanceof i.Situation) &&
                  this.situations.push(g),
                this.situation || (this.situation = this.situations.shift()),
                this
              );
            },
            dequeue: function () {
              return (
                this.stop(),
                (this.situation = this.situations.shift()),
                this.situation &&
                  (this.situation instanceof i.Situation
                    ? this.start()
                    : this.situation.call(this)),
                this
              );
            },
            initAnimations: function () {
              var g,
                w = this.situation;
              if (w.init) return this;
              for (var A in w.animations) {
                (g = this.target()[A]()),
                  Array.isArray(g) || (g = [g]),
                  Array.isArray(w.animations[A]) ||
                    (w.animations[A] = [w.animations[A]]);
                for (var D = g.length; D--; )
                  w.animations[A][D] instanceof i.Number &&
                    (g[D] = new i.Number(g[D])),
                    (w.animations[A][D] = g[D].morph(w.animations[A][D]));
              }
              for (var A in w.attrs)
                w.attrs[A] = new i.MorphObj(this.target().attr(A), w.attrs[A]);
              for (var A in w.styles)
                w.styles[A] = new i.MorphObj(
                  this.target().style(A),
                  w.styles[A],
                );
              return (
                (w.initialTransformation = this.target().matrixify()),
                (w.init = !0),
                this
              );
            },
            clearQueue: function () {
              return (this.situations = []), this;
            },
            clearCurrent: function () {
              return (this.situation = null), this;
            },
            stop: function (g, w) {
              var A = this.active;
              return (
                (this.active = !1),
                w && this.clearQueue(),
                g &&
                  this.situation &&
                  (!A && this.startCurrent(), this.atEnd()),
                this.stopAnimFrame(),
                this.clearCurrent()
              );
            },
            after: function (g) {
              var w = this.last();
              return (
                this.target().on("finished.fx", function A(D) {
                  D.detail.situation == w &&
                    (g.call(this, w), this.off("finished.fx", A));
                }),
                this._callStart()
              );
            },
            during: function (g) {
              var w = this.last(),
                A = function (D) {
                  D.detail.situation == w &&
                    g.call(
                      this,
                      D.detail.pos,
                      i.morph(D.detail.pos),
                      D.detail.eased,
                      w,
                    );
                };
              return (
                this.target().off("during.fx", A).on("during.fx", A),
                this.after(function () {
                  this.off("during.fx", A);
                }),
                this._callStart()
              );
            },
            afterAll: function (g) {
              var w = function A(D) {
                g.call(this), this.off("allfinished.fx", A);
              };
              return (
                this.target().off("allfinished.fx", w).on("allfinished.fx", w),
                this._callStart()
              );
            },
            last: function () {
              return this.situations.length
                ? this.situations[this.situations.length - 1]
                : this.situation;
            },
            add: function (g, w, A) {
              return (this.last()[A || "animations"][g] = w), this._callStart();
            },
            step: function (g) {
              var w, A, D;
              g || (this.absPos = this.timeToAbsPos(+new Date())),
                this.situation.loops !== !1
                  ? ((w = Math.max(this.absPos, 0)),
                    (A = Math.floor(w)),
                    this.situation.loops === !0 || A < this.situation.loops
                      ? ((this.pos = w - A),
                        (D = this.situation.loop),
                        (this.situation.loop = A))
                      : ((this.absPos = this.situation.loops),
                        (this.pos = 1),
                        (D = this.situation.loop - 1),
                        (this.situation.loop = this.situation.loops)),
                    this.situation.reversing &&
                      (this.situation.reversed =
                        this.situation.reversed !=
                        !!((this.situation.loop - D) % 2)))
                  : ((this.absPos = Math.min(this.absPos, 1)),
                    (this.pos = this.absPos)),
                this.pos < 0 && (this.pos = 0),
                this.situation.reversed && (this.pos = 1 - this.pos);
              var W = this.situation.ease(this.pos);
              for (var V in this.situation.once)
                V > this.lastPos &&
                  V <= W &&
                  (this.situation.once[V].call(this.target(), this.pos, W),
                  delete this.situation.once[V]);
              return (
                this.active &&
                  this.target().fire("during", {
                    pos: this.pos,
                    eased: W,
                    fx: this,
                    situation: this.situation,
                  }),
                this.situation
                  ? (this.eachAt(),
                    (this.pos == 1 && !this.situation.reversed) ||
                    (this.situation.reversed && this.pos == 0)
                      ? (this.stopAnimFrame(),
                        this.target().fire("finished", {
                          fx: this,
                          situation: this.situation,
                        }),
                        this.situations.length ||
                          (this.target().fire("allfinished"),
                          this.situations.length ||
                            (this.target().off(".fx"), (this.active = !1))),
                        this.active ? this.dequeue() : this.clearCurrent())
                      : !this.paused && this.active && this.startAnimFrame(),
                    (this.lastPos = W),
                    this)
                  : this
              );
            },
            eachAt: function () {
              var g,
                w = this,
                A = this.target(),
                D = this.situation;
              for (var W in D.animations)
                (g = [].concat(D.animations[W]).map(function (Z) {
                  return typeof Z != "string" && Z.at
                    ? Z.at(D.ease(w.pos), w.pos)
                    : Z;
                })),
                  A[W].apply(A, g);
              for (var W in D.attrs)
                (g = [W].concat(D.attrs[W]).map(function (re) {
                  return typeof re != "string" && re.at
                    ? re.at(D.ease(w.pos), w.pos)
                    : re;
                })),
                  A.attr.apply(A, g);
              for (var W in D.styles)
                (g = [W].concat(D.styles[W]).map(function (re) {
                  return typeof re != "string" && re.at
                    ? re.at(D.ease(w.pos), w.pos)
                    : re;
                })),
                  A.style.apply(A, g);
              if (D.transforms.length) {
                (g = D.initialTransformation), (W = 0);
                for (var V = D.transforms.length; W < V; W++) {
                  var K = D.transforms[W];
                  K instanceof i.Matrix
                    ? (g = K.relative
                        ? g.multiply(
                            new i.Matrix().morph(K).at(D.ease(this.pos)),
                          )
                        : g.morph(K).at(D.ease(this.pos)))
                    : (K.relative || K.undo(g.extract()),
                      (g = g.multiply(K.at(D.ease(this.pos)))));
                }
                A.matrix(g);
              }
              return this;
            },
            once: function (g, w, A) {
              var D = this.last();
              return A || (g = D.ease(g)), (D.once[g] = w), this;
            },
            _callStart: function () {
              return (
                setTimeout(
                  function () {
                    this.start();
                  }.bind(this),
                  0,
                ),
                this
              );
            },
          },
          parent: i.Element,
          construct: {
            animate: function (g, w, A) {
              return (this.fx || (this.fx = new i.FX(this))).animate(g, w, A);
            },
            delay: function (g) {
              return (this.fx || (this.fx = new i.FX(this))).delay(g);
            },
            stop: function (g, w) {
              return this.fx && this.fx.stop(g, w), this;
            },
            finish: function () {
              return this.fx && this.fx.finish(), this;
            },
          },
        })),
        (i.MorphObj = i.invent({
          create: function (g, w) {
            return i.Color.isColor(w)
              ? new i.Color(g).morph(w)
              : i.regex.delimiter.test(g)
              ? i.regex.pathLetters.test(g)
                ? new i.PathArray(g).morph(w)
                : new i.Array(g).morph(w)
              : i.regex.numberAndUnit.test(w)
              ? new i.Number(g).morph(w)
              : ((this.value = g), void (this.destination = w));
          },
          extend: {
            at: function (g, w) {
              return w < 1 ? this.value : this.destination;
            },
            valueOf: function () {
              return this.value;
            },
          },
        })),
        i.extend(i.FX, {
          attr: function (g, w, A) {
            if (c(g) === "object") for (var D in g) this.attr(D, g[D]);
            else this.add(g, w, "attrs");
            return this;
          },
          plot: function (g, w, A, D) {
            return arguments.length == 4
              ? this.plot([g, w, A, D])
              : this.add("plot", new (this.target().morphArray)(g));
          },
        }),
        (i.Box = i.invent({
          create: function (g, w, A, D) {
            if (!(c(g) !== "object" || g instanceof i.Element))
              return i.Box.call(
                this,
                g.left != null ? g.left : g.x,
                g.top != null ? g.top : g.y,
                g.width,
                g.height,
              );
            var W;
            arguments.length == 4 &&
              ((this.x = g), (this.y = w), (this.width = A), (this.height = D)),
              (W = this).x == null &&
                ((W.x = 0), (W.y = 0), (W.width = 0), (W.height = 0)),
              (W.w = W.width),
              (W.h = W.height),
              (W.x2 = W.x + W.width),
              (W.y2 = W.y + W.height),
              (W.cx = W.x + W.width / 2),
              (W.cy = W.y + W.height / 2);
          },
        })),
        (i.BBox = i.invent({
          create: function (g) {
            if (
              (i.Box.apply(this, [].slice.call(arguments)),
              g instanceof i.Element)
            ) {
              var w;
              try {
                if (!n.documentElement.contains) {
                  for (var A = g.node; A.parentNode; ) A = A.parentNode;
                  if (A != n) throw new Error("Element not in the dom");
                }
                w = g.node.getBBox();
              } catch {
                if (g instanceof i.Shape) {
                  i.parser.draw || i.prepare();
                  var D = g.clone(i.parser.draw.instance).show();
                  D &&
                    D.node &&
                    typeof D.node.getBBox == "function" &&
                    (w = D.node.getBBox()),
                    D && typeof D.remove == "function" && D.remove();
                } else
                  w = {
                    x: g.node.clientLeft,
                    y: g.node.clientTop,
                    width: g.node.clientWidth,
                    height: g.node.clientHeight,
                  };
              }
              i.Box.call(this, w);
            }
          },
          inherit: i.Box,
          parent: i.Element,
          construct: {
            bbox: function () {
              return new i.BBox(this);
            },
          },
        })),
        (i.BBox.prototype.constructor = i.BBox),
        (i.Matrix = i.invent({
          create: function (g) {
            var w = C([1, 0, 0, 1, 0, 0]);
            g =
              g === null
                ? w
                : g instanceof i.Element
                ? g.matrixify()
                : typeof g == "string"
                ? C(g.split(i.regex.delimiter).map(parseFloat))
                : arguments.length == 6
                ? C([].slice.call(arguments))
                : Array.isArray(g)
                ? C(g)
                : g && c(g) === "object"
                ? g
                : w;
            for (var A = H.length - 1; A >= 0; --A)
              this[H[A]] = g[H[A]] != null ? g[H[A]] : w[H[A]];
          },
          extend: {
            extract: function () {
              var g = _(this, 0, 1);
              _(this, 1, 0);
              var w = (180 / Math.PI) * Math.atan2(g.y, g.x) - 90;
              return {
                x: this.e,
                y: this.f,
                transformedX:
                  (this.e * Math.cos((w * Math.PI) / 180) +
                    this.f * Math.sin((w * Math.PI) / 180)) /
                  Math.sqrt(this.a * this.a + this.b * this.b),
                transformedY:
                  (this.f * Math.cos((w * Math.PI) / 180) +
                    this.e * Math.sin((-w * Math.PI) / 180)) /
                  Math.sqrt(this.c * this.c + this.d * this.d),
                rotation: w,
                a: this.a,
                b: this.b,
                c: this.c,
                d: this.d,
                e: this.e,
                f: this.f,
                matrix: new i.Matrix(this),
              };
            },
            clone: function () {
              return new i.Matrix(this);
            },
            morph: function (g) {
              return (this.destination = new i.Matrix(g)), this;
            },
            multiply: function (g) {
              return new i.Matrix(
                this.native().multiply(
                  (function (w) {
                    return w instanceof i.Matrix || (w = new i.Matrix(w)), w;
                  })(g).native(),
                ),
              );
            },
            inverse: function () {
              return new i.Matrix(this.native().inverse());
            },
            translate: function (g, w) {
              return new i.Matrix(this.native().translate(g || 0, w || 0));
            },
            native: function () {
              for (
                var g = i.parser.native.createSVGMatrix(), w = H.length - 1;
                w >= 0;
                w--
              )
                g[H[w]] = this[H[w]];
              return g;
            },
            toString: function () {
              return (
                "matrix(" +
                I(this.a) +
                "," +
                I(this.b) +
                "," +
                I(this.c) +
                "," +
                I(this.d) +
                "," +
                I(this.e) +
                "," +
                I(this.f) +
                ")"
              );
            },
          },
          parent: i.Element,
          construct: {
            ctm: function () {
              return new i.Matrix(this.node.getCTM());
            },
            screenCTM: function () {
              if (this instanceof i.Nested) {
                var g = this.rect(1, 1),
                  w = g.node.getScreenCTM();
                return g.remove(), new i.Matrix(w);
              }
              return new i.Matrix(this.node.getScreenCTM());
            },
          },
        })),
        (i.Point = i.invent({
          create: function (g, w) {
            var A;
            (A = Array.isArray(g)
              ? { x: g[0], y: g[1] }
              : c(g) === "object"
              ? { x: g.x, y: g.y }
              : g != null
              ? { x: g, y: w ?? g }
              : { x: 0, y: 0 }),
              (this.x = A.x),
              (this.y = A.y);
          },
          extend: {
            clone: function () {
              return new i.Point(this);
            },
            morph: function (g, w) {
              return (this.destination = new i.Point(g, w)), this;
            },
          },
        })),
        i.extend(i.Element, {
          point: function (g, w) {
            return new i.Point(g, w).transform(this.screenCTM().inverse());
          },
        }),
        i.extend(i.Element, {
          attr: function (g, w, A) {
            if (g == null) {
              for (
                g = {}, A = (w = this.node.attributes).length - 1;
                A >= 0;
                A--
              )
                g[w[A].nodeName] = i.regex.isNumber.test(w[A].nodeValue)
                  ? parseFloat(w[A].nodeValue)
                  : w[A].nodeValue;
              return g;
            }
            if (c(g) === "object") for (var D in g) this.attr(D, g[D]);
            else if (w === null) this.node.removeAttribute(g);
            else {
              if (w == null)
                return (w = this.node.getAttribute(g)) == null
                  ? i.defaults.attrs[g]
                  : i.regex.isNumber.test(w)
                  ? parseFloat(w)
                  : w;
              g == "stroke-width"
                ? this.attr("stroke", parseFloat(w) > 0 ? this._stroke : null)
                : g == "stroke" && (this._stroke = w),
                (g != "fill" && g != "stroke") ||
                  (i.regex.isImage.test(w) &&
                    (w = this.doc().defs().image(w, 0, 0)),
                  w instanceof i.Image &&
                    (w = this.doc()
                      .defs()
                      .pattern(0, 0, function () {
                        this.add(w);
                      }))),
                typeof w == "number"
                  ? (w = new i.Number(w))
                  : i.Color.isColor(w)
                  ? (w = new i.Color(w))
                  : Array.isArray(w) && (w = new i.Array(w)),
                g == "leading"
                  ? this.leading && this.leading(w)
                  : typeof A == "string"
                  ? this.node.setAttributeNS(A, g, w.toString())
                  : this.node.setAttribute(g, w.toString()),
                !this.rebuild ||
                  (g != "font-size" && g != "x") ||
                  this.rebuild(g, w);
            }
            return this;
          },
        }),
        i.extend(i.Element, {
          transform: function (g, w) {
            var A;
            return c(g) !== "object"
              ? ((A = new i.Matrix(this).extract()),
                typeof g == "string" ? A[g] : A)
              : ((A = new i.Matrix(this)),
                (w = !!w || !!g.relative),
                g.a != null &&
                  (A = w ? A.multiply(new i.Matrix(g)) : new i.Matrix(g)),
                this.attr("transform", A));
          },
        }),
        i.extend(i.Element, {
          untransform: function () {
            return this.attr("transform", null);
          },
          matrixify: function () {
            return (this.attr("transform") || "")
              .split(i.regex.transforms)
              .slice(0, -1)
              .map(function (g) {
                var w = g.trim().split("(");
                return [
                  w[0],
                  w[1].split(i.regex.delimiter).map(function (A) {
                    return parseFloat(A);
                  }),
                ];
              })
              .reduce(function (g, w) {
                return w[0] == "matrix"
                  ? g.multiply(C(w[1]))
                  : g[w[0]].apply(g, w[1]);
              }, new i.Matrix());
          },
          toParent: function (g) {
            if (this == g) return this;
            var w = this.screenCTM(),
              A = g.screenCTM().inverse();
            return this.addTo(g).untransform().transform(A.multiply(w)), this;
          },
          toDoc: function () {
            return this.toParent(this.doc());
          },
        }),
        (i.Transformation = i.invent({
          create: function (g, w) {
            if (arguments.length > 1 && typeof w != "boolean")
              return this.constructor.call(this, [].slice.call(arguments));
            if (Array.isArray(g))
              for (var A = 0, D = this.arguments.length; A < D; ++A)
                this[this.arguments[A]] = g[A];
            else if (g && c(g) === "object")
              for (A = 0, D = this.arguments.length; A < D; ++A)
                this[this.arguments[A]] = g[this.arguments[A]];
            (this.inversed = !1), w === !0 && (this.inversed = !0);
          },
        })),
        (i.Translate = i.invent({
          parent: i.Matrix,
          inherit: i.Transformation,
          create: function (g, w) {
            this.constructor.apply(this, [].slice.call(arguments));
          },
          extend: {
            arguments: ["transformedX", "transformedY"],
            method: "translate",
          },
        })),
        i.extend(i.Element, {
          style: function (g, w) {
            if (arguments.length == 0) return this.node.style.cssText || "";
            if (arguments.length < 2)
              if (c(g) === "object") for (var A in g) this.style(A, g[A]);
              else {
                if (!i.regex.isCss.test(g)) return this.node.style[m(g)];
                for (
                  g = g
                    .split(/\s*;\s*/)
                    .filter(function (D) {
                      return !!D;
                    })
                    .map(function (D) {
                      return D.split(/\s*:\s*/);
                    });
                  (w = g.pop());

                )
                  this.style(w[0], w[1]);
              }
            else
              this.node.style[m(g)] =
                w === null || i.regex.isBlank.test(w) ? "" : w;
            return this;
          },
        }),
        (i.Parent = i.invent({
          create: function (g) {
            this.constructor.call(this, g);
          },
          inherit: i.Element,
          extend: {
            children: function () {
              return i.utils.map(
                i.utils.filterSVGElements(this.node.childNodes),
                function (g) {
                  return i.adopt(g);
                },
              );
            },
            add: function (g, w) {
              return (
                w == null
                  ? this.node.appendChild(g.node)
                  : g.node != this.node.childNodes[w] &&
                    this.node.insertBefore(g.node, this.node.childNodes[w]),
                this
              );
            },
            put: function (g, w) {
              return this.add(g, w), g;
            },
            has: function (g) {
              return this.index(g) >= 0;
            },
            index: function (g) {
              return [].slice.call(this.node.childNodes).indexOf(g.node);
            },
            get: function (g) {
              return i.adopt(this.node.childNodes[g]);
            },
            first: function () {
              return this.get(0);
            },
            last: function () {
              return this.get(this.node.childNodes.length - 1);
            },
            each: function (g, w) {
              for (var A = this.children(), D = 0, W = A.length; D < W; D++)
                A[D] instanceof i.Element && g.apply(A[D], [D, A]),
                  w && A[D] instanceof i.Container && A[D].each(g, w);
              return this;
            },
            removeElement: function (g) {
              return this.node.removeChild(g.node), this;
            },
            clear: function () {
              for (; this.node.hasChildNodes(); )
                this.node.removeChild(this.node.lastChild);
              return delete this._defs, this;
            },
            defs: function () {
              return this.doc().defs();
            },
          },
        })),
        i.extend(i.Parent, {
          ungroup: function (g, w) {
            return (
              w === 0 ||
                this instanceof i.Defs ||
                this.node == i.parser.draw ||
                ((g =
                  g || (this instanceof i.Doc ? this : this.parent(i.Parent))),
                (w = w || 1 / 0),
                this.each(function () {
                  return this instanceof i.Defs
                    ? this
                    : this instanceof i.Parent
                    ? this.ungroup(g, w - 1)
                    : this.toParent(g);
                }),
                this.node.firstChild || this.remove()),
              this
            );
          },
          flatten: function (g, w) {
            return this.ungroup(g, w);
          },
        }),
        (i.Container = i.invent({
          create: function (g) {
            this.constructor.call(this, g);
          },
          inherit: i.Parent,
        })),
        (i.ViewBox = i.invent({ parent: i.Container, construct: {} })),
        [
          "click",
          "dblclick",
          "mousedown",
          "mouseup",
          "mouseover",
          "mouseout",
          "mousemove",
          "touchstart",
          "touchmove",
          "touchleave",
          "touchend",
          "touchcancel",
        ].forEach(function (g) {
          i.Element.prototype[g] = function (w) {
            return i.on(this.node, g, w), this;
          };
        }),
        (i.listeners = []),
        (i.handlerMap = []),
        (i.listenerId = 0),
        (i.on = function (g, w, A, D, W) {
          var V = A.bind(D || g.instance || g),
            K = (i.handlerMap.indexOf(g) + 1 || i.handlerMap.push(g)) - 1,
            Z = w.split(".")[0],
            re = w.split(".")[1] || "*";
          (i.listeners[K] = i.listeners[K] || {}),
            (i.listeners[K][Z] = i.listeners[K][Z] || {}),
            (i.listeners[K][Z][re] = i.listeners[K][Z][re] || {}),
            A._svgjsListenerId || (A._svgjsListenerId = ++i.listenerId),
            (i.listeners[K][Z][re][A._svgjsListenerId] = V),
            g.addEventListener(Z, V, W || { passive: !0 });
        }),
        (i.off = function (g, w, A) {
          var D = i.handlerMap.indexOf(g),
            W = w && w.split(".")[0],
            V = w && w.split(".")[1],
            K = "";
          if (D != -1)
            if (A) {
              if ((typeof A == "function" && (A = A._svgjsListenerId), !A))
                return;
              i.listeners[D][W] &&
                i.listeners[D][W][V || "*"] &&
                (g.removeEventListener(W, i.listeners[D][W][V || "*"][A], !1),
                delete i.listeners[D][W][V || "*"][A]);
            } else if (V && W) {
              if (i.listeners[D][W] && i.listeners[D][W][V]) {
                for (var Z in i.listeners[D][W][V])
                  i.off(g, [W, V].join("."), Z);
                delete i.listeners[D][W][V];
              }
            } else if (V)
              for (var re in i.listeners[D])
                for (var K in i.listeners[D][re])
                  V === K && i.off(g, [re, V].join("."));
            else if (W) {
              if (i.listeners[D][W]) {
                for (var K in i.listeners[D][W]) i.off(g, [W, K].join("."));
                delete i.listeners[D][W];
              }
            } else {
              for (var re in i.listeners[D]) i.off(g, re);
              delete i.listeners[D], delete i.handlerMap[D];
            }
        }),
        i.extend(i.Element, {
          on: function (g, w, A, D) {
            return i.on(this.node, g, w, A, D), this;
          },
          off: function (g, w) {
            return i.off(this.node, g, w), this;
          },
          fire: function (g, w) {
            return (
              g instanceof T.Event
                ? this.node.dispatchEvent(g)
                : this.node.dispatchEvent(
                    (g = new i.CustomEvent(g, { detail: w, cancelable: !0 })),
                  ),
              (this._event = g),
              this
            );
          },
          event: function () {
            return this._event;
          },
        }),
        (i.Defs = i.invent({ create: "defs", inherit: i.Container })),
        (i.G = i.invent({
          create: "g",
          inherit: i.Container,
          extend: {
            x: function (g) {
              return g == null
                ? this.transform("x")
                : this.transform({ x: g - this.x() }, !0);
            },
          },
          construct: {
            group: function () {
              return this.put(new i.G());
            },
          },
        })),
        (i.Doc = i.invent({
          create: function (g) {
            g &&
              ((g = typeof g == "string" ? n.getElementById(g) : g).nodeName ==
              "svg"
                ? this.constructor.call(this, g)
                : (this.constructor.call(this, i.create("svg")),
                  g.appendChild(this.node),
                  this.size("100%", "100%")),
              this.namespace().defs());
          },
          inherit: i.Container,
          extend: {
            namespace: function () {
              return this.attr({ xmlns: i.ns, version: "1.1" })
                .attr("xmlns:xlink", i.xlink, i.xmlns)
                .attr("xmlns:svgjs", i.svgjs, i.xmlns);
            },
            defs: function () {
              var g;
              return (
                this._defs ||
                  ((g = this.node.getElementsByTagName("defs")[0])
                    ? (this._defs = i.adopt(g))
                    : (this._defs = new i.Defs()),
                  this.node.appendChild(this._defs.node)),
                this._defs
              );
            },
            parent: function () {
              return this.node.parentNode &&
                this.node.parentNode.nodeName != "#document"
                ? this.node.parentNode
                : null;
            },
            remove: function () {
              return (
                this.parent() && this.parent().removeChild(this.node), this
              );
            },
            clear: function () {
              for (; this.node.hasChildNodes(); )
                this.node.removeChild(this.node.lastChild);
              return (
                delete this._defs,
                i.parser.draw &&
                  !i.parser.draw.parentNode &&
                  this.node.appendChild(i.parser.draw),
                this
              );
            },
            clone: function (g) {
              this.writeDataToDom();
              var w = this.node,
                A = E(w.cloneNode(!0));
              return (
                g
                  ? (g.node || g).appendChild(A.node)
                  : w.parentNode.insertBefore(A.node, w.nextSibling),
                A
              );
            },
          },
        })),
        i.extend(i.Element, {}),
        (i.Gradient = i.invent({
          create: function (g) {
            this.constructor.call(this, i.create(g + "Gradient")),
              (this.type = g);
          },
          inherit: i.Container,
          extend: {
            at: function (g, w, A) {
              return this.put(new i.Stop()).update(g, w, A);
            },
            update: function (g) {
              return (
                this.clear(), typeof g == "function" && g.call(this, this), this
              );
            },
            fill: function () {
              return "url(#" + this.id() + ")";
            },
            toString: function () {
              return this.fill();
            },
            attr: function (g, w, A) {
              return (
                g == "transform" && (g = "gradientTransform"),
                i.Container.prototype.attr.call(this, g, w, A)
              );
            },
          },
          construct: {
            gradient: function (g, w) {
              return this.defs().gradient(g, w);
            },
          },
        })),
        i.extend(i.Gradient, i.FX, {
          from: function (g, w) {
            return (this._target || this).type == "radial"
              ? this.attr({ fx: new i.Number(g), fy: new i.Number(w) })
              : this.attr({ x1: new i.Number(g), y1: new i.Number(w) });
          },
          to: function (g, w) {
            return (this._target || this).type == "radial"
              ? this.attr({ cx: new i.Number(g), cy: new i.Number(w) })
              : this.attr({ x2: new i.Number(g), y2: new i.Number(w) });
          },
        }),
        i.extend(i.Defs, {
          gradient: function (g, w) {
            return this.put(new i.Gradient(g)).update(w);
          },
        }),
        (i.Stop = i.invent({
          create: "stop",
          inherit: i.Element,
          extend: {
            update: function (g) {
              return (
                (typeof g == "number" || g instanceof i.Number) &&
                  (g = {
                    offset: arguments[0],
                    color: arguments[1],
                    opacity: arguments[2],
                  }),
                g.opacity != null && this.attr("stop-opacity", g.opacity),
                g.color != null && this.attr("stop-color", g.color),
                g.offset != null && this.attr("offset", new i.Number(g.offset)),
                this
              );
            },
          },
        })),
        (i.Pattern = i.invent({
          create: "pattern",
          inherit: i.Container,
          extend: {
            fill: function () {
              return "url(#" + this.id() + ")";
            },
            update: function (g) {
              return (
                this.clear(), typeof g == "function" && g.call(this, this), this
              );
            },
            toString: function () {
              return this.fill();
            },
            attr: function (g, w, A) {
              return (
                g == "transform" && (g = "patternTransform"),
                i.Container.prototype.attr.call(this, g, w, A)
              );
            },
          },
          construct: {
            pattern: function (g, w, A) {
              return this.defs().pattern(g, w, A);
            },
          },
        })),
        i.extend(i.Defs, {
          pattern: function (g, w, A) {
            return this.put(new i.Pattern()).update(A).attr({
              x: 0,
              y: 0,
              width: g,
              height: w,
              patternUnits: "userSpaceOnUse",
            });
          },
        }),
        (i.Shape = i.invent({
          create: function (g) {
            this.constructor.call(this, g);
          },
          inherit: i.Element,
        })),
        (i.Symbol = i.invent({
          create: "symbol",
          inherit: i.Container,
          construct: {
            symbol: function () {
              return this.put(new i.Symbol());
            },
          },
        })),
        (i.Use = i.invent({
          create: "use",
          inherit: i.Shape,
          extend: {
            element: function (g, w) {
              return this.attr("href", (w || "") + "#" + g, i.xlink);
            },
          },
          construct: {
            use: function (g, w) {
              return this.put(new i.Use()).element(g, w);
            },
          },
        })),
        (i.Rect = i.invent({
          create: "rect",
          inherit: i.Shape,
          construct: {
            rect: function (g, w) {
              return this.put(new i.Rect()).size(g, w);
            },
          },
        })),
        (i.Circle = i.invent({
          create: "circle",
          inherit: i.Shape,
          construct: {
            circle: function (g) {
              return this.put(new i.Circle())
                .rx(new i.Number(g).divide(2))
                .move(0, 0);
            },
          },
        })),
        i.extend(i.Circle, i.FX, {
          rx: function (g) {
            return this.attr("r", g);
          },
          ry: function (g) {
            return this.rx(g);
          },
        }),
        (i.Ellipse = i.invent({
          create: "ellipse",
          inherit: i.Shape,
          construct: {
            ellipse: function (g, w) {
              return this.put(new i.Ellipse()).size(g, w).move(0, 0);
            },
          },
        })),
        i.extend(i.Ellipse, i.Rect, i.FX, {
          rx: function (g) {
            return this.attr("rx", g);
          },
          ry: function (g) {
            return this.attr("ry", g);
          },
        }),
        i.extend(i.Circle, i.Ellipse, {
          x: function (g) {
            return g == null ? this.cx() - this.rx() : this.cx(g + this.rx());
          },
          y: function (g) {
            return g == null ? this.cy() - this.ry() : this.cy(g + this.ry());
          },
          cx: function (g) {
            return g == null ? this.attr("cx") : this.attr("cx", g);
          },
          cy: function (g) {
            return g == null ? this.attr("cy") : this.attr("cy", g);
          },
          width: function (g) {
            return g == null
              ? 2 * this.rx()
              : this.rx(new i.Number(g).divide(2));
          },
          height: function (g) {
            return g == null
              ? 2 * this.ry()
              : this.ry(new i.Number(g).divide(2));
          },
          size: function (g, w) {
            var A = S(this, g, w);
            return this.rx(new i.Number(A.width).divide(2)).ry(
              new i.Number(A.height).divide(2),
            );
          },
        }),
        (i.Line = i.invent({
          create: "line",
          inherit: i.Shape,
          extend: {
            array: function () {
              return new i.PointArray([
                [this.attr("x1"), this.attr("y1")],
                [this.attr("x2"), this.attr("y2")],
              ]);
            },
            plot: function (g, w, A, D) {
              return g == null
                ? this.array()
                : ((g =
                    w !== void 0
                      ? { x1: g, y1: w, x2: A, y2: D }
                      : new i.PointArray(g).toLine()),
                  this.attr(g));
            },
            move: function (g, w) {
              return this.attr(this.array().move(g, w).toLine());
            },
            size: function (g, w) {
              var A = S(this, g, w);
              return this.attr(this.array().size(A.width, A.height).toLine());
            },
          },
          construct: {
            line: function (g, w, A, D) {
              return i.Line.prototype.plot.apply(
                this.put(new i.Line()),
                g != null ? [g, w, A, D] : [0, 0, 0, 0],
              );
            },
          },
        })),
        (i.Polyline = i.invent({
          create: "polyline",
          inherit: i.Shape,
          construct: {
            polyline: function (g) {
              return this.put(new i.Polyline()).plot(g || new i.PointArray());
            },
          },
        })),
        (i.Polygon = i.invent({
          create: "polygon",
          inherit: i.Shape,
          construct: {
            polygon: function (g) {
              return this.put(new i.Polygon()).plot(g || new i.PointArray());
            },
          },
        })),
        i.extend(i.Polyline, i.Polygon, {
          array: function () {
            return (
              this._array ||
              (this._array = new i.PointArray(this.attr("points")))
            );
          },
          plot: function (g) {
            return g == null
              ? this.array()
              : this.clear().attr(
                  "points",
                  typeof g == "string"
                    ? g
                    : (this._array = new i.PointArray(g)),
                );
          },
          clear: function () {
            return delete this._array, this;
          },
          move: function (g, w) {
            return this.attr("points", this.array().move(g, w));
          },
          size: function (g, w) {
            var A = S(this, g, w);
            return this.attr("points", this.array().size(A.width, A.height));
          },
        }),
        i.extend(i.Line, i.Polyline, i.Polygon, {
          morphArray: i.PointArray,
          x: function (g) {
            return g == null ? this.bbox().x : this.move(g, this.bbox().y);
          },
          y: function (g) {
            return g == null ? this.bbox().y : this.move(this.bbox().x, g);
          },
          width: function (g) {
            var w = this.bbox();
            return g == null ? w.width : this.size(g, w.height);
          },
          height: function (g) {
            var w = this.bbox();
            return g == null ? w.height : this.size(w.width, g);
          },
        }),
        (i.Path = i.invent({
          create: "path",
          inherit: i.Shape,
          extend: {
            morphArray: i.PathArray,
            array: function () {
              return (
                this._array || (this._array = new i.PathArray(this.attr("d")))
              );
            },
            plot: function (g) {
              return g == null
                ? this.array()
                : this.clear().attr(
                    "d",
                    typeof g == "string"
                      ? g
                      : (this._array = new i.PathArray(g)),
                  );
            },
            clear: function () {
              return delete this._array, this;
            },
          },
          construct: {
            path: function (g) {
              return this.put(new i.Path()).plot(g || new i.PathArray());
            },
          },
        })),
        (i.Image = i.invent({
          create: "image",
          inherit: i.Shape,
          extend: {
            load: function (g) {
              if (!g) return this;
              var w = this,
                A = new T.Image();
              return (
                i.on(A, "load", function () {
                  i.off(A);
                  var D = w.parent(i.Pattern);
                  D !== null &&
                    (w.width() == 0 &&
                      w.height() == 0 &&
                      w.size(A.width, A.height),
                    D &&
                      D.width() == 0 &&
                      D.height() == 0 &&
                      D.size(w.width(), w.height()),
                    typeof w._loaded == "function" &&
                      w._loaded.call(w, {
                        width: A.width,
                        height: A.height,
                        ratio: A.width / A.height,
                        url: g,
                      }));
                }),
                i.on(A, "error", function (D) {
                  i.off(A),
                    typeof w._error == "function" && w._error.call(w, D);
                }),
                this.attr("href", (A.src = this.src = g), i.xlink)
              );
            },
            loaded: function (g) {
              return (this._loaded = g), this;
            },
            error: function (g) {
              return (this._error = g), this;
            },
          },
          construct: {
            image: function (g, w, A) {
              return this.put(new i.Image())
                .load(g)
                .size(w || 0, A || w || 0);
            },
          },
        })),
        (i.Text = i.invent({
          create: function () {
            this.constructor.call(this, i.create("text")),
              (this.dom.leading = new i.Number(1.3)),
              (this._rebuild = !0),
              (this._build = !1),
              this.attr("font-family", i.defaults.attrs["font-family"]);
          },
          inherit: i.Shape,
          extend: {
            x: function (g) {
              return g == null ? this.attr("x") : this.attr("x", g);
            },
            text: function (g) {
              if (g === void 0) {
                g = "";
                for (
                  var w = this.node.childNodes, A = 0, D = w.length;
                  A < D;
                  ++A
                )
                  A != 0 &&
                    w[A].nodeType != 3 &&
                    i.adopt(w[A]).dom.newLined == 1 &&
                    (g += `
`),
                    (g += w[A].textContent);
                return g;
              }
              if ((this.clear().build(!0), typeof g == "function"))
                g.call(this, this);
              else {
                A = 0;
                for (
                  var W = (g = g.split(`
`)).length;
                  A < W;
                  A++
                )
                  this.tspan(g[A]).newLine();
              }
              return this.build(!1).rebuild();
            },
            size: function (g) {
              return this.attr("font-size", g).rebuild();
            },
            leading: function (g) {
              return g == null
                ? this.dom.leading
                : ((this.dom.leading = new i.Number(g)), this.rebuild());
            },
            lines: function () {
              var g = ((this.textPath && this.textPath()) || this).node,
                w = i.utils.map(
                  i.utils.filterSVGElements(g.childNodes),
                  function (A) {
                    return i.adopt(A);
                  },
                );
              return new i.Set(w);
            },
            rebuild: function (g) {
              if (
                (typeof g == "boolean" && (this._rebuild = g), this._rebuild)
              ) {
                var w = this,
                  A = 0,
                  D = this.dom.leading * new i.Number(this.attr("font-size"));
                this.lines().each(function () {
                  this.dom.newLined &&
                    (w.textPath() || this.attr("x", w.attr("x")),
                    this.text() ==
                    `
`
                      ? (A += D)
                      : (this.attr("dy", D + A), (A = 0)));
                }),
                  this.fire("rebuild");
              }
              return this;
            },
            build: function (g) {
              return (this._build = !!g), this;
            },
            setData: function (g) {
              return (
                (this.dom = g),
                (this.dom.leading = new i.Number(g.leading || 1.3)),
                this
              );
            },
          },
          construct: {
            text: function (g) {
              return this.put(new i.Text()).text(g);
            },
            plain: function (g) {
              return this.put(new i.Text()).plain(g);
            },
          },
        })),
        (i.Tspan = i.invent({
          create: "tspan",
          inherit: i.Shape,
          extend: {
            text: function (g) {
              return g == null
                ? this.node.textContent +
                    (this.dom.newLined
                      ? `
`
                      : "")
                : (typeof g == "function" ? g.call(this, this) : this.plain(g),
                  this);
            },
            dx: function (g) {
              return this.attr("dx", g);
            },
            dy: function (g) {
              return this.attr("dy", g);
            },
            newLine: function () {
              var g = this.parent(i.Text);
              return (
                (this.dom.newLined = !0),
                this.dy(g.dom.leading * g.attr("font-size")).attr("x", g.x())
              );
            },
          },
        })),
        i.extend(i.Text, i.Tspan, {
          plain: function (g) {
            return (
              this._build === !1 && this.clear(),
              this.node.appendChild(n.createTextNode(g)),
              this
            );
          },
          tspan: function (g) {
            var w = ((this.textPath && this.textPath()) || this).node,
              A = new i.Tspan();
            return (
              this._build === !1 && this.clear(),
              w.appendChild(A.node),
              A.text(g)
            );
          },
          clear: function () {
            for (
              var g = ((this.textPath && this.textPath()) || this).node;
              g.hasChildNodes();

            )
              g.removeChild(g.lastChild);
            return this;
          },
          length: function () {
            return this.node.getComputedTextLength();
          },
        }),
        (i.TextPath = i.invent({
          create: "textPath",
          inherit: i.Parent,
          parent: i.Text,
          construct: {
            morphArray: i.PathArray,
            array: function () {
              var g = this.track();
              return g ? g.array() : null;
            },
            plot: function (g) {
              var w = this.track(),
                A = null;
              return w && (A = w.plot(g)), g == null ? A : this;
            },
            track: function () {
              var g = this.textPath();
              if (g) return g.reference("href");
            },
            textPath: function () {
              if (
                this.node.firstChild &&
                this.node.firstChild.nodeName == "textPath"
              )
                return i.adopt(this.node.firstChild);
            },
          },
        })),
        (i.Nested = i.invent({
          create: function () {
            this.constructor.call(this, i.create("svg")),
              this.style("overflow", "visible");
          },
          inherit: i.Container,
          construct: {
            nested: function () {
              return this.put(new i.Nested());
            },
          },
        }));
      var d = {
        stroke: [
          "color",
          "width",
          "opacity",
          "linecap",
          "linejoin",
          "miterlimit",
          "dasharray",
          "dashoffset",
        ],
        fill: ["color", "opacity", "rule"],
        prefix: function (g, w) {
          return w == "color" ? g : g + "-" + w;
        },
      };
      function f(g, w, A, D) {
        return A + D.replace(i.regex.dots, " .");
      }
      function m(g) {
        return g.toLowerCase().replace(/-(.)/g, function (w, A) {
          return A.toUpperCase();
        });
      }
      function y(g) {
        return g.charAt(0).toUpperCase() + g.slice(1);
      }
      function x(g) {
        var w = g.toString(16);
        return w.length == 1 ? "0" + w : w;
      }
      function S(g, w, A) {
        if (w == null || A == null) {
          var D = g.bbox();
          w == null
            ? (w = (D.width / D.height) * A)
            : A == null && (A = (D.height / D.width) * w);
        }
        return { width: w, height: A };
      }
      function _(g, w, A) {
        return { x: w * g.a + A * g.c + 0, y: w * g.b + A * g.d + 0 };
      }
      function C(g) {
        return { a: g[0], b: g[1], c: g[2], d: g[3], e: g[4], f: g[5] };
      }
      function E(g) {
        for (var w = g.childNodes.length - 1; w >= 0; w--)
          g.childNodes[w] instanceof T.SVGElement && E(g.childNodes[w]);
        return i.adopt(g).id(i.eid(g.nodeName));
      }
      function I(g) {
        return Math.abs(g) > 1e-37 ? g : 0;
      }
      ["fill", "stroke"].forEach(function (g) {
        var w = {};
        (w[g] = function (A) {
          if (A === void 0) return this;
          if (
            typeof A == "string" ||
            i.Color.isRgb(A) ||
            (A && typeof A.fill == "function")
          )
            this.attr(g, A);
          else
            for (var D = d[g].length - 1; D >= 0; D--)
              A[d[g][D]] != null && this.attr(d.prefix(g, d[g][D]), A[d[g][D]]);
          return this;
        }),
          i.extend(i.Element, i.FX, w);
      }),
        i.extend(i.Element, i.FX, {
          translate: function (g, w) {
            return this.transform({ x: g, y: w });
          },
          matrix: function (g) {
            return this.attr(
              "transform",
              new i.Matrix(
                arguments.length == 6 ? [].slice.call(arguments) : g,
              ),
            );
          },
          opacity: function (g) {
            return this.attr("opacity", g);
          },
          dx: function (g) {
            return this.x(
              new i.Number(g).plus(this instanceof i.FX ? 0 : this.x()),
              !0,
            );
          },
          dy: function (g) {
            return this.y(
              new i.Number(g).plus(this instanceof i.FX ? 0 : this.y()),
              !0,
            );
          },
        }),
        i.extend(i.Path, {
          length: function () {
            return this.node.getTotalLength();
          },
          pointAt: function (g) {
            return this.node.getPointAtLength(g);
          },
        }),
        (i.Set = i.invent({
          create: function (g) {
            Array.isArray(g) ? (this.members = g) : this.clear();
          },
          extend: {
            add: function () {
              for (
                var g = [].slice.call(arguments), w = 0, A = g.length;
                w < A;
                w++
              )
                this.members.push(g[w]);
              return this;
            },
            remove: function (g) {
              var w = this.index(g);
              return w > -1 && this.members.splice(w, 1), this;
            },
            each: function (g) {
              for (var w = 0, A = this.members.length; w < A; w++)
                g.apply(this.members[w], [w, this.members]);
              return this;
            },
            clear: function () {
              return (this.members = []), this;
            },
            length: function () {
              return this.members.length;
            },
            has: function (g) {
              return this.index(g) >= 0;
            },
            index: function (g) {
              return this.members.indexOf(g);
            },
            get: function (g) {
              return this.members[g];
            },
            first: function () {
              return this.get(0);
            },
            last: function () {
              return this.get(this.members.length - 1);
            },
            valueOf: function () {
              return this.members;
            },
          },
          construct: {
            set: function (g) {
              return new i.Set(g);
            },
          },
        })),
        (i.FX.Set = i.invent({
          create: function (g) {
            this.set = g;
          },
        })),
        (i.Set.inherit = function () {
          var g = [];
          for (var w in i.Shape.prototype)
            typeof i.Shape.prototype[w] == "function" &&
              typeof i.Set.prototype[w] != "function" &&
              g.push(w);
          for (var w in (g.forEach(function (D) {
            i.Set.prototype[D] = function () {
              for (var W = 0, V = this.members.length; W < V; W++)
                this.members[W] &&
                  typeof this.members[W][D] == "function" &&
                  this.members[W][D].apply(this.members[W], arguments);
              return D == "animate"
                ? this.fx || (this.fx = new i.FX.Set(this))
                : this;
            };
          }),
          (g = []),
          i.FX.prototype))
            typeof i.FX.prototype[w] == "function" &&
              typeof i.FX.Set.prototype[w] != "function" &&
              g.push(w);
          g.forEach(function (A) {
            i.FX.Set.prototype[A] = function () {
              for (var D = 0, W = this.set.members.length; D < W; D++)
                this.set.members[D].fx[A].apply(
                  this.set.members[D].fx,
                  arguments,
                );
              return this;
            };
          });
        }),
        i.extend(i.Element, {}),
        i.extend(i.Element, {
          remember: function (g, w) {
            if (c(arguments[0]) === "object")
              for (var A in g) this.remember(A, g[A]);
            else {
              if (arguments.length == 1) return this.memory()[g];
              this.memory()[g] = w;
            }
            return this;
          },
          forget: function () {
            if (arguments.length == 0) this._memory = {};
            else
              for (var g = arguments.length - 1; g >= 0; g--)
                delete this.memory()[arguments[g]];
            return this;
          },
          memory: function () {
            return this._memory || (this._memory = {});
          },
        }),
        (i.get = function (g) {
          var w = n.getElementById(
            (function (A) {
              var D = (A || "").toString().match(i.regex.reference);
              if (D) return D[1];
            })(g) || g,
          );
          return i.adopt(w);
        }),
        (i.select = function (g, w) {
          return new i.Set(
            i.utils.map((w || n).querySelectorAll(g), function (A) {
              return i.adopt(A);
            }),
          );
        }),
        i.extend(i.Parent, {
          select: function (g) {
            return i.select(g, this.node);
          },
        });
      var H = "abcdef".split("");
      if (typeof T.CustomEvent != "function") {
        var Y = function (g, w) {
          w = w || { bubbles: !1, cancelable: !1, detail: void 0 };
          var A = n.createEvent("CustomEvent");
          return A.initCustomEvent(g, w.bubbles, w.cancelable, w.detail), A;
        };
        (Y.prototype = T.Event.prototype), (i.CustomEvent = Y);
      } else i.CustomEvent = T.CustomEvent;
      return i;
    }),
    c(t) === "object"
      ? (e.exports = lr.document
          ? $n(lr, lr.document)
          : function (T) {
              return $n(T, T.document);
            })
      : (lr.SVG = $n(lr, lr.document)),
    function () {
      (SVG.Filter = SVG.invent({
        create: "filter",
        inherit: SVG.Parent,
        extend: {
          source: "SourceGraphic",
          sourceAlpha: "SourceAlpha",
          background: "BackgroundImage",
          backgroundAlpha: "BackgroundAlpha",
          fill: "FillPaint",
          stroke: "StrokePaint",
          autoSetIn: !0,
          put: function (u, d) {
            return (
              this.add(u, d),
              !u.attr("in") && this.autoSetIn && u.attr("in", this.source),
              u.attr("result") || u.attr("result", u),
              u
            );
          },
          blend: function (u, d, f) {
            return this.put(new SVG.BlendEffect(u, d, f));
          },
          colorMatrix: function (u, d) {
            return this.put(new SVG.ColorMatrixEffect(u, d));
          },
          convolveMatrix: function (u) {
            return this.put(new SVG.ConvolveMatrixEffect(u));
          },
          componentTransfer: function (u) {
            return this.put(new SVG.ComponentTransferEffect(u));
          },
          composite: function (u, d, f) {
            return this.put(new SVG.CompositeEffect(u, d, f));
          },
          flood: function (u, d) {
            return this.put(new SVG.FloodEffect(u, d));
          },
          offset: function (u, d) {
            return this.put(new SVG.OffsetEffect(u, d));
          },
          image: function (u) {
            return this.put(new SVG.ImageEffect(u));
          },
          merge: function () {
            var u = [void 0];
            for (var d in arguments) u.push(arguments[d]);
            return this.put(
              new (SVG.MergeEffect.bind.apply(SVG.MergeEffect, u))(),
            );
          },
          gaussianBlur: function (u, d) {
            return this.put(new SVG.GaussianBlurEffect(u, d));
          },
          morphology: function (u, d) {
            return this.put(new SVG.MorphologyEffect(u, d));
          },
          diffuseLighting: function (u, d, f) {
            return this.put(new SVG.DiffuseLightingEffect(u, d, f));
          },
          displacementMap: function (u, d, f, m, y) {
            return this.put(new SVG.DisplacementMapEffect(u, d, f, m, y));
          },
          specularLighting: function (u, d, f, m) {
            return this.put(new SVG.SpecularLightingEffect(u, d, f, m));
          },
          tile: function () {
            return this.put(new SVG.TileEffect());
          },
          turbulence: function (u, d, f, m, y) {
            return this.put(new SVG.TurbulenceEffect(u, d, f, m, y));
          },
          toString: function () {
            return "url(#" + this.attr("id") + ")";
          },
        },
      })),
        SVG.extend(SVG.Defs, {
          filter: function (u) {
            var d = this.put(new SVG.Filter());
            return typeof u == "function" && u.call(d, d), d;
          },
        }),
        SVG.extend(SVG.Container, {
          filter: function (u) {
            return this.defs().filter(u);
          },
        }),
        SVG.extend(SVG.Element, SVG.G, SVG.Nested, {
          filter: function (u) {
            return (
              (this.filterer =
                u instanceof SVG.Element ? u : this.doc().filter(u)),
              this.doc() &&
                this.filterer.doc() !== this.doc() &&
                this.doc().defs().add(this.filterer),
              this.attr("filter", this.filterer),
              this.filterer
            );
          },
          unfilter: function (u) {
            return (
              this.filterer && u === !0 && this.filterer.remove(),
              delete this.filterer,
              this.attr("filter", null)
            );
          },
        }),
        (SVG.Effect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Element,
          extend: {
            in: function (u) {
              return u == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in") + '"]')
                      .get(0)) ||
                    this.attr("in")
                : this.attr("in", u);
            },
            result: function (u) {
              return u == null ? this.attr("result") : this.attr("result", u);
            },
            toString: function () {
              return this.result();
            },
          },
        })),
        (SVG.ParentEffect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Parent,
          extend: {
            in: function (u) {
              return u == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in") + '"]')
                      .get(0)) ||
                    this.attr("in")
                : this.attr("in", u);
            },
            result: function (u) {
              return u == null ? this.attr("result") : this.attr("result", u);
            },
            toString: function () {
              return this.result();
            },
          },
        }));
      var T = {
        blend: function (u, d) {
          return this.parent() && this.parent().blend(this, u, d);
        },
        colorMatrix: function (u, d) {
          return this.parent() && this.parent().colorMatrix(u, d).in(this);
        },
        convolveMatrix: function (u) {
          return this.parent() && this.parent().convolveMatrix(u).in(this);
        },
        componentTransfer: function (u) {
          return this.parent() && this.parent().componentTransfer(u).in(this);
        },
        composite: function (u, d) {
          return this.parent() && this.parent().composite(this, u, d);
        },
        flood: function (u, d) {
          return this.parent() && this.parent().flood(u, d);
        },
        offset: function (u, d) {
          return this.parent() && this.parent().offset(u, d).in(this);
        },
        image: function (u) {
          return this.parent() && this.parent().image(u);
        },
        merge: function () {
          return (
            this.parent() &&
            this.parent().merge.apply(this.parent(), [this].concat(arguments))
          );
        },
        gaussianBlur: function (u, d) {
          return this.parent() && this.parent().gaussianBlur(u, d).in(this);
        },
        morphology: function (u, d) {
          return this.parent() && this.parent().morphology(u, d).in(this);
        },
        diffuseLighting: function (u, d, f) {
          return (
            this.parent() && this.parent().diffuseLighting(u, d, f).in(this)
          );
        },
        displacementMap: function (u, d, f, m) {
          return (
            this.parent() && this.parent().displacementMap(this, u, d, f, m)
          );
        },
        specularLighting: function (u, d, f, m) {
          return (
            this.parent() && this.parent().specularLighting(u, d, f, m).in(this)
          );
        },
        tile: function () {
          return this.parent() && this.parent().tile().in(this);
        },
        turbulence: function (u, d, f, m, y) {
          return (
            this.parent() && this.parent().turbulence(u, d, f, m, y).in(this)
          );
        },
      };
      SVG.extend(SVG.Effect, T),
        SVG.extend(SVG.ParentEffect, T),
        (SVG.ChildEffect = SVG.invent({
          create: function () {
            this.constructor.call(this);
          },
          inherit: SVG.Element,
          extend: {
            in: function (u) {
              this.attr("in", u);
            },
          },
        }));
      var n = {
          blend: function (u, d, f) {
            this.attr({ in: u, in2: d, mode: f || "normal" });
          },
          colorMatrix: function (u, d) {
            u == "matrix" && (d = s(d)),
              this.attr({ type: u, values: d === void 0 ? null : d });
          },
          convolveMatrix: function (u) {
            (u = s(u)),
              this.attr({
                order: Math.sqrt(u.split(" ").length),
                kernelMatrix: u,
              });
          },
          composite: function (u, d, f) {
            this.attr({ in: u, in2: d, operator: f });
          },
          flood: function (u, d) {
            this.attr("flood-color", u),
              d != null && this.attr("flood-opacity", d);
          },
          offset: function (u, d) {
            this.attr({ dx: u, dy: d });
          },
          image: function (u) {
            this.attr("href", u, SVG.xlink);
          },
          displacementMap: function (u, d, f, m, y) {
            this.attr({
              in: u,
              in2: d,
              scale: f,
              xChannelSelector: m,
              yChannelSelector: y,
            });
          },
          gaussianBlur: function (u, d) {
            u != null || d != null
              ? this.attr(
                  "stdDeviation",
                  (function (f) {
                    if (!Array.isArray(f)) return f;
                    for (var m = 0, y = f.length, x = []; m < y; m++)
                      x.push(f[m]);
                    return x.join(" ");
                  })(Array.prototype.slice.call(arguments)),
                )
              : this.attr("stdDeviation", "0 0");
          },
          morphology: function (u, d) {
            this.attr({ operator: u, radius: d });
          },
          tile: function () {},
          turbulence: function (u, d, f, m, y) {
            this.attr({
              numOctaves: d,
              seed: f,
              stitchTiles: m,
              baseFrequency: u,
              type: y,
            });
          },
        },
        i = {
          merge: function () {
            var u;
            if (arguments[0] instanceof SVG.Set) {
              var d = this;
              arguments[0].each(function (m) {
                this instanceof SVG.MergeNode
                  ? d.put(this)
                  : (this instanceof SVG.Effect ||
                      this instanceof SVG.ParentEffect) &&
                    d.put(new SVG.MergeNode(this));
              });
            } else {
              u = Array.isArray(arguments[0]) ? arguments[0] : arguments;
              for (var f = 0; f < u.length; f++)
                u[f] instanceof SVG.MergeNode
                  ? this.put(u[f])
                  : this.put(new SVG.MergeNode(u[f]));
            }
          },
          componentTransfer: function (u) {
            if (
              ((this.rgb = new SVG.Set()),
              ["r", "g", "b", "a"].forEach(
                function (f) {
                  (this[f] = new SVG["Func" + f.toUpperCase()]("identity")),
                    this.rgb.add(this[f]),
                    this.node.appendChild(this[f].node);
                }.bind(this),
              ),
              u)
            )
              for (var d in (u.rgb &&
                (["r", "g", "b"].forEach(
                  function (f) {
                    this[f].attr(u.rgb);
                  }.bind(this),
                ),
                delete u.rgb),
              u))
                this[d].attr(u[d]);
          },
          diffuseLighting: function (u, d, f) {
            this.attr({
              surfaceScale: u,
              diffuseConstant: d,
              kernelUnitLength: f,
            });
          },
          specularLighting: function (u, d, f, m) {
            this.attr({
              surfaceScale: u,
              diffuseConstant: d,
              specularExponent: f,
              kernelUnitLength: m,
            });
          },
        },
        o = {
          distantLight: function (u, d) {
            this.attr({ azimuth: u, elevation: d });
          },
          pointLight: function (u, d, f) {
            this.attr({ x: u, y: d, z: f });
          },
          spotLight: function (u, d, f, m, y, x) {
            this.attr({
              x: u,
              y: d,
              z: f,
              pointsAtX: m,
              pointsAtY: y,
              pointsAtZ: x,
            });
          },
          mergeNode: function (u) {
            this.attr("in", u);
          },
        };
      function s(u) {
        return (
          Array.isArray(u) && (u = new SVG.Array(u)),
          u
            .toString()
            .replace(/^\s+/, "")
            .replace(/\s+$/, "")
            .replace(/\s+/g, " ")
        );
      }
      function l() {
        var u = function () {};
        for (var d in (typeof arguments[arguments.length - 1] == "function" &&
          ((u = arguments[arguments.length - 1]),
          Array.prototype.splice.call(arguments, arguments.length - 1, 1)),
        arguments))
          for (var f in arguments[d]) u(arguments[d][f], f, arguments[d]);
      }
      ["r", "g", "b", "a"].forEach(function (u) {
        o["Func" + u.toUpperCase()] = function (d) {
          switch ((this.attr("type", d), d)) {
            case "table":
              this.attr("tableValues", arguments[1]);
              break;
            case "linear":
              this.attr("slope", arguments[1]),
                this.attr("intercept", arguments[2]);
              break;
            case "gamma":
              this.attr("amplitude", arguments[1]),
                this.attr("exponent", arguments[2]),
                this.attr("offset", arguments[2]);
          }
        };
      }),
        l(n, function (u, d) {
          var f = d.charAt(0).toUpperCase() + d.slice(1);
          SVG[f + "Effect"] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + f)),
                u.apply(this, arguments),
                this.result(this.attr("id") + "Out");
            },
            inherit: SVG.Effect,
            extend: {},
          });
        }),
        l(i, function (u, d) {
          var f = d.charAt(0).toUpperCase() + d.slice(1);
          SVG[f + "Effect"] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + f)),
                u.apply(this, arguments),
                this.result(this.attr("id") + "Out");
            },
            inherit: SVG.ParentEffect,
            extend: {},
          });
        }),
        l(o, function (u, d) {
          var f = d.charAt(0).toUpperCase() + d.slice(1);
          SVG[f] = SVG.invent({
            create: function () {
              this.constructor.call(this, SVG.create("fe" + f)),
                u.apply(this, arguments);
            },
            inherit: SVG.ChildEffect,
            extend: {},
          });
        }),
        SVG.extend(SVG.MergeEffect, {
          in: function (u) {
            return (
              u instanceof SVG.MergeNode
                ? this.add(u, 0)
                : this.add(new SVG.MergeNode(u), 0),
              this
            );
          },
        }),
        SVG.extend(
          SVG.CompositeEffect,
          SVG.BlendEffect,
          SVG.DisplacementMapEffect,
          {
            in2: function (u) {
              return u == null
                ? (this.parent() &&
                    this.parent()
                      .select('[result="' + this.attr("in2") + '"]')
                      .get(0)) ||
                    this.attr("in2")
                : this.attr("in2", u);
            },
          },
        ),
        (SVG.filter = {
          sepiatone: [
            0.343, 0.669, 0.119, 0, 0, 0.249, 0.626, 0.13, 0, 0, 0.172, 0.334,
            0.111, 0, 0, 0, 0, 0, 1, 0,
          ],
        });
    }.call(void 0),
    (function () {
      function T(l, u, d, f, m, y, x) {
        for (
          var S = l.slice(u, d || x),
            _ = f.slice(m, y || x),
            C = 0,
            E = { pos: [0, 0], start: [0, 0] },
            I = { pos: [0, 0], start: [0, 0] };
          (S[C] = n.call(E, S[C])),
            (_[C] = n.call(I, _[C])),
            S[C][0] != _[C][0] ||
            S[C][0] == "M" ||
            (S[C][0] == "A" && (S[C][4] != _[C][4] || S[C][5] != _[C][5]))
              ? (Array.prototype.splice.apply(
                  S,
                  [C, 1].concat(o.call(E, S[C])),
                ),
                Array.prototype.splice.apply(_, [C, 1].concat(o.call(I, _[C]))))
              : ((S[C] = i.call(E, S[C])), (_[C] = i.call(I, _[C]))),
            !(++C == S.length && C == _.length);

        )
          C == S.length &&
            S.push([
              "C",
              E.pos[0],
              E.pos[1],
              E.pos[0],
              E.pos[1],
              E.pos[0],
              E.pos[1],
            ]),
            C == _.length &&
              _.push([
                "C",
                I.pos[0],
                I.pos[1],
                I.pos[0],
                I.pos[1],
                I.pos[0],
                I.pos[1],
              ]);
        return { start: S, dest: _ };
      }
      function n(l) {
        switch (l[0]) {
          case "z":
          case "Z":
            (l[0] = "L"), (l[1] = this.start[0]), (l[2] = this.start[1]);
            break;
          case "H":
            (l[0] = "L"), (l[2] = this.pos[1]);
            break;
          case "V":
            (l[0] = "L"), (l[2] = l[1]), (l[1] = this.pos[0]);
            break;
          case "T":
            (l[0] = "Q"),
              (l[3] = l[1]),
              (l[4] = l[2]),
              (l[1] = this.reflection[1]),
              (l[2] = this.reflection[0]);
            break;
          case "S":
            (l[0] = "C"),
              (l[6] = l[4]),
              (l[5] = l[3]),
              (l[4] = l[2]),
              (l[3] = l[1]),
              (l[2] = this.reflection[1]),
              (l[1] = this.reflection[0]);
        }
        return l;
      }
      function i(l) {
        var u = l.length;
        return (
          (this.pos = [l[u - 2], l[u - 1]]),
          "SCQT".indexOf(l[0]) != -1 &&
            (this.reflection = [
              2 * this.pos[0] - l[u - 4],
              2 * this.pos[1] - l[u - 3],
            ]),
          l
        );
      }
      function o(l) {
        var u = [l];
        switch (l[0]) {
          case "M":
            return (this.pos = this.start = [l[1], l[2]]), u;
          case "L":
            (l[5] = l[3] = l[1]),
              (l[6] = l[4] = l[2]),
              (l[1] = this.pos[0]),
              (l[2] = this.pos[1]);
            break;
          case "Q":
            (l[6] = l[4]),
              (l[5] = l[3]),
              (l[4] = (1 * l[4]) / 3 + (2 * l[2]) / 3),
              (l[3] = (1 * l[3]) / 3 + (2 * l[1]) / 3),
              (l[2] = (1 * this.pos[1]) / 3 + (2 * l[2]) / 3),
              (l[1] = (1 * this.pos[0]) / 3 + (2 * l[1]) / 3);
            break;
          case "A":
            (u = (function (d, f) {
              var m,
                y,
                x,
                S,
                _,
                C,
                E,
                I,
                H,
                Y,
                g,
                w,
                A,
                D,
                W,
                V,
                K,
                Z,
                re,
                ce,
                se,
                xe,
                be,
                Ie,
                Fe,
                We,
                lt = Math.abs(f[1]),
                et = Math.abs(f[2]),
                ft = f[3] % 360,
                Tr = f[4],
                mi = f[5],
                Bd = f[6],
                Yd = f[7],
                er = new SVG.Point(d),
                $t = new SVG.Point(Bd, Yd),
                dm = [];
              if (lt === 0 || et === 0 || (er.x === $t.x && er.y === $t.y))
                return [["C", er.x, er.y, $t.x, $t.y, $t.x, $t.y]];
              for (
                m = new SVG.Point(
                  (er.x - $t.x) / 2,
                  (er.y - $t.y) / 2,
                ).transform(new SVG.Matrix().rotate(ft)),
                  (y = (m.x * m.x) / (lt * lt) + (m.y * m.y) / (et * et)) > 1 &&
                    ((lt *= y = Math.sqrt(y)), (et *= y)),
                  x = new SVG.Matrix()
                    .rotate(ft)
                    .scale(1 / lt, 1 / et)
                    .rotate(-ft),
                  er = er.transform(x),
                  $t = $t.transform(x),
                  S = [$t.x - er.x, $t.y - er.y],
                  C = S[0] * S[0] + S[1] * S[1],
                  _ = Math.sqrt(C),
                  S[0] /= _,
                  S[1] /= _,
                  E = C < 4 ? Math.sqrt(1 - C / 4) : 0,
                  Tr === mi && (E *= -1),
                  I = new SVG.Point(
                    ($t.x + er.x) / 2 + E * -S[1],
                    ($t.y + er.y) / 2 + E * S[0],
                  ),
                  H = new SVG.Point(er.x - I.x, er.y - I.y),
                  Y = new SVG.Point($t.x - I.x, $t.y - I.y),
                  g = Math.acos(H.x / Math.sqrt(H.x * H.x + H.y * H.y)),
                  H.y < 0 && (g *= -1),
                  w = Math.acos(Y.x / Math.sqrt(Y.x * Y.x + Y.y * Y.y)),
                  Y.y < 0 && (w *= -1),
                  mi && g > w && (w += 2 * Math.PI),
                  !mi && g < w && (w -= 2 * Math.PI),
                  D = Math.ceil((2 * Math.abs(g - w)) / Math.PI),
                  V = [],
                  K = g,
                  A = (w - g) / D,
                  W = (4 * Math.tan(A / 4)) / 3,
                  se = 0;
                se <= D;
                se++
              )
                (re = Math.cos(K)),
                  (Z = Math.sin(K)),
                  (ce = new SVG.Point(I.x + re, I.y + Z)),
                  (V[se] = [
                    new SVG.Point(ce.x + W * Z, ce.y - W * re),
                    ce,
                    new SVG.Point(ce.x - W * Z, ce.y + W * re),
                  ]),
                  (K += A);
              for (
                V[0][0] = V[0][1].clone(),
                  V[V.length - 1][2] = V[V.length - 1][1].clone(),
                  x = new SVG.Matrix().rotate(ft).scale(lt, et).rotate(-ft),
                  se = 0,
                  xe = V.length;
                se < xe;
                se++
              )
                (V[se][0] = V[se][0].transform(x)),
                  (V[se][1] = V[se][1].transform(x)),
                  (V[se][2] = V[se][2].transform(x));
              for (se = 1, xe = V.length; se < xe; se++)
                (be = (ce = V[se - 1][2]).x),
                  (Ie = ce.y),
                  (Fe = (ce = V[se][0]).x),
                  (We = ce.y),
                  (Bd = (ce = V[se][1]).x),
                  (Yd = ce.y),
                  dm.push(["C", be, Ie, Fe, We, Bd, Yd]);
              return dm;
            })(this.pos, l)),
              (l = u[0]);
        }
        return (
          (l[0] = "C"),
          (this.pos = [l[5], l[6]]),
          (this.reflection = [2 * l[5] - l[3], 2 * l[6] - l[4]]),
          u
        );
      }
      function s(l, u) {
        if (u === !1) return !1;
        for (var d = u, f = l.length; d < f; ++d) if (l[d][0] == "M") return d;
        return !1;
      }
      SVG.extend(SVG.PathArray, {
        morph: function (l) {
          for (
            var u = this.value, d = this.parse(l), f = 0, m = 0, y = !1, x = !1;
            f !== !1 || m !== !1;

          ) {
            var S;
            (y = s(u, f !== !1 && f + 1)),
              (x = s(d, m !== !1 && m + 1)),
              f === !1 &&
                (f =
                  (S = new SVG.PathArray(_.start).bbox()).height == 0 ||
                  S.width == 0
                    ? u.push(u[0]) - 1
                    : u.push(["M", S.x + S.width / 2, S.y + S.height / 2]) - 1),
              m === !1 &&
                (m =
                  (S = new SVG.PathArray(_.dest).bbox()).height == 0 ||
                  S.width == 0
                    ? d.push(d[0]) - 1
                    : d.push(["M", S.x + S.width / 2, S.y + S.height / 2]) - 1);
            var _ = T(u, f, y, d, m, x);
            (u = u.slice(0, f).concat(_.start, y === !1 ? [] : u.slice(y))),
              (d = d.slice(0, m).concat(_.dest, x === !1 ? [] : d.slice(x))),
              (f = y !== !1 && f + _.start.length),
              (m = x !== !1 && m + _.dest.length);
          }
          return (
            (this.value = u),
            (this.destination = new SVG.PathArray()),
            (this.destination.value = d),
            this
          );
        },
      });
    })(),
    function () {
      function T(n) {
        n.remember("_draggable", this), (this.el = n);
      }
      (T.prototype.init = function (n, i) {
        var o = this;
        (this.constraint = n),
          (this.value = i),
          this.el.on("mousedown.drag", function (s) {
            o.start(s);
          }),
          this.el.on("touchstart.drag", function (s) {
            o.start(s);
          });
      }),
        (T.prototype.transformPoint = function (n, i) {
          var o =
            ((n = n || window.event).changedTouches && n.changedTouches[0]) ||
            n;
          return (
            (this.p.x = o.clientX - (i || 0)),
            (this.p.y = o.clientY),
            this.p.matrixTransform(this.m)
          );
        }),
        (T.prototype.getBBox = function () {
          var n = this.el.bbox();
          return (
            this.el instanceof SVG.Nested && (n = this.el.rbox()),
            (this.el instanceof SVG.G ||
              this.el instanceof SVG.Use ||
              this.el instanceof SVG.Nested) &&
              ((n.x = this.el.x()), (n.y = this.el.y())),
            n
          );
        }),
        (T.prototype.start = function (n) {
          if (
            (n.type != "click" &&
              n.type != "mousedown" &&
              n.type != "mousemove") ||
            (n.which || n.buttons) == 1
          ) {
            var i = this;
            if (
              (this.el.fire("beforedrag", { event: n, handler: this }),
              !this.el.event().defaultPrevented)
            ) {
              n.preventDefault(),
                n.stopPropagation(),
                (this.parent =
                  this.parent ||
                  this.el.parent(SVG.Nested) ||
                  this.el.parent(SVG.Doc)),
                (this.p = this.parent.node.createSVGPoint()),
                (this.m = this.el.node.getScreenCTM().inverse());
              var o,
                s = this.getBBox();
              if (this.el instanceof SVG.Text)
                switch (
                  ((o = this.el.node.getComputedTextLength()),
                  this.el.attr("text-anchor"))
                ) {
                  case "middle":
                    o /= 2;
                    break;
                  case "start":
                    o = 0;
                }
              (this.startPoints = {
                point: this.transformPoint(n, o),
                box: s,
                transform: this.el.transform(),
              }),
                SVG.on(window, "mousemove.drag", function (l) {
                  i.drag(l);
                }),
                SVG.on(window, "touchmove.drag", function (l) {
                  i.drag(l);
                }),
                SVG.on(window, "mouseup.drag", function (l) {
                  i.end(l);
                }),
                SVG.on(window, "touchend.drag", function (l) {
                  i.end(l);
                }),
                this.el.fire("dragstart", {
                  event: n,
                  p: this.startPoints.point,
                  m: this.m,
                  handler: this,
                });
            }
          }
        }),
        (T.prototype.drag = function (n) {
          var i = this.getBBox(),
            o = this.transformPoint(n),
            s = this.startPoints.box.x + o.x - this.startPoints.point.x,
            l = this.startPoints.box.y + o.y - this.startPoints.point.y,
            u = this.constraint,
            d = o.x - this.startPoints.point.x,
            f = o.y - this.startPoints.point.y;
          if (
            (this.el.fire("dragmove", {
              event: n,
              p: o,
              m: this.m,
              handler: this,
            }),
            this.el.event().defaultPrevented)
          )
            return o;
          if (typeof u == "function") {
            var m = u.call(this.el, s, l, this.m);
            typeof m == "boolean" && (m = { x: m, y: m }),
              m.x === !0 ? this.el.x(s) : m.x !== !1 && this.el.x(m.x),
              m.y === !0 ? this.el.y(l) : m.y !== !1 && this.el.y(m.y);
          } else
            typeof u == "object" &&
              (u.minX != null && s < u.minX
                ? (d = (s = u.minX) - this.startPoints.box.x)
                : u.maxX != null &&
                  s > u.maxX - i.width &&
                  (d = (s = u.maxX - i.width) - this.startPoints.box.x),
              u.minY != null && l < u.minY
                ? (f = (l = u.minY) - this.startPoints.box.y)
                : u.maxY != null &&
                  l > u.maxY - i.height &&
                  (f = (l = u.maxY - i.height) - this.startPoints.box.y),
              u.snapToGrid != null &&
                ((s -= s % u.snapToGrid),
                (l -= l % u.snapToGrid),
                (d -= d % u.snapToGrid),
                (f -= f % u.snapToGrid)),
              this.el instanceof SVG.G
                ? this.el
                    .matrix(this.startPoints.transform)
                    .transform({ x: d, y: f }, !0)
                : this.el.move(s, l));
          return o;
        }),
        (T.prototype.end = function (n) {
          var i = this.drag(n);
          this.el.fire("dragend", { event: n, p: i, m: this.m, handler: this }),
            SVG.off(window, "mousemove.drag"),
            SVG.off(window, "touchmove.drag"),
            SVG.off(window, "mouseup.drag"),
            SVG.off(window, "touchend.drag");
        }),
        SVG.extend(SVG.Element, {
          draggable: function (n, i) {
            (typeof n != "function" && typeof n != "object") ||
              ((i = n), (n = !0));
            var o = this.remember("_draggable") || new T(this);
            return (
              (n = n === void 0 || n)
                ? o.init(i || {}, n)
                : (this.off("mousedown.drag"), this.off("touchstart.drag")),
              this
            );
          },
        });
    }.call(void 0),
    (function () {
      function T(n) {
        (this.el = n),
          n.remember("_selectHandler", this),
          (this.pointSelection = { isSelected: !1 }),
          (this.rectSelection = { isSelected: !1 }),
          (this.pointsList = {
            lt: [0, 0],
            rt: ["width", 0],
            rb: ["width", "height"],
            lb: [0, "height"],
            t: ["width", 0],
            r: ["width", "height"],
            b: ["width", "height"],
            l: [0, "height"],
          }),
          (this.pointCoord = function (i, o, s) {
            var l = typeof i != "string" ? i : o[i];
            return s ? l / 2 : l;
          }),
          (this.pointCoords = function (i, o) {
            var s = this.pointsList[i];
            return {
              x: this.pointCoord(s[0], o, i === "t" || i === "b"),
              y: this.pointCoord(s[1], o, i === "r" || i === "l"),
            };
          });
      }
      (T.prototype.init = function (n, i) {
        var o = this.el.bbox();
        this.options = {};
        var s = this.el.selectize.defaults.points;
        for (var l in this.el.selectize.defaults)
          (this.options[l] = this.el.selectize.defaults[l]),
            i[l] !== void 0 && (this.options[l] = i[l]);
        var u = ["points", "pointsExclude"];
        for (var l in u) {
          var d = this.options[u[l]];
          typeof d == "string"
            ? (d = d.length > 0 ? d.split(/\s*,\s*/i) : [])
            : typeof d == "boolean" && u[l] === "points" && (d = d ? s : []),
            (this.options[u[l]] = d);
        }
        (this.options.points = [s, this.options.points].reduce(function (f, m) {
          return f.filter(function (y) {
            return m.indexOf(y) > -1;
          });
        })),
          (this.options.points = [
            this.options.points,
            this.options.pointsExclude,
          ].reduce(function (f, m) {
            return f.filter(function (y) {
              return m.indexOf(y) < 0;
            });
          })),
          (this.parent = this.el.parent()),
          (this.nested = this.nested || this.parent.group()),
          this.nested.matrix(new SVG.Matrix(this.el).translate(o.x, o.y)),
          this.options.deepSelect &&
          ["line", "polyline", "polygon"].indexOf(this.el.type) !== -1
            ? this.selectPoints(n)
            : this.selectRect(n),
          this.observe(),
          this.cleanup();
      }),
        (T.prototype.selectPoints = function (n) {
          return (
            (this.pointSelection.isSelected = n),
            this.pointSelection.set ||
              ((this.pointSelection.set = this.parent.set()),
              this.drawPoints()),
            this
          );
        }),
        (T.prototype.getPointArray = function () {
          var n = this.el.bbox();
          return this.el
            .array()
            .valueOf()
            .map(function (i) {
              return [i[0] - n.x, i[1] - n.y];
            });
        }),
        (T.prototype.drawPoints = function () {
          for (
            var n = this, i = this.getPointArray(), o = 0, s = i.length;
            o < s;
            ++o
          ) {
            var l = (function (d) {
                return function (f) {
                  (f = f || window.event).preventDefault
                    ? f.preventDefault()
                    : (f.returnValue = !1),
                    f.stopPropagation();
                  var m = f.pageX || f.touches[0].pageX,
                    y = f.pageY || f.touches[0].pageY;
                  n.el.fire("point", { x: m, y, i: d, event: f });
                };
              })(o),
              u = this.drawPoint(i[o][0], i[o][1])
                .addClass(this.options.classPoints)
                .addClass(this.options.classPoints + "_point")
                .on("touchstart", l)
                .on("mousedown", l);
            this.pointSelection.set.add(u);
          }
        }),
        (T.prototype.drawPoint = function (n, i) {
          var o = this.options.pointType;
          switch (o) {
            case "circle":
              return this.drawCircle(n, i);
            case "rect":
              return this.drawRect(n, i);
            default:
              if (typeof o == "function") return o.call(this, n, i);
              throw new Error("Unknown " + o + " point type!");
          }
        }),
        (T.prototype.drawCircle = function (n, i) {
          return this.nested.circle(this.options.pointSize).center(n, i);
        }),
        (T.prototype.drawRect = function (n, i) {
          return this.nested
            .rect(this.options.pointSize, this.options.pointSize)
            .center(n, i);
        }),
        (T.prototype.updatePointSelection = function () {
          var n = this.getPointArray();
          this.pointSelection.set.each(function (i) {
            (this.cx() === n[i][0] && this.cy() === n[i][1]) ||
              this.center(n[i][0], n[i][1]);
          });
        }),
        (T.prototype.updateRectSelection = function () {
          var n = this,
            i = this.el.bbox();
          if (
            (this.rectSelection.set
              .get(0)
              .attr({ width: i.width, height: i.height }),
            this.options.points.length &&
              this.options.points.map(function (s, l) {
                var u = n.pointCoords(s, i);
                n.rectSelection.set.get(l + 1).center(u.x, u.y);
              }),
            this.options.rotationPoint)
          ) {
            var o = this.rectSelection.set.length();
            this.rectSelection.set.get(o - 1).center(i.width / 2, 20);
          }
        }),
        (T.prototype.selectRect = function (n) {
          var i = this,
            o = this.el.bbox();
          function s(d) {
            return function (f) {
              (f = f || window.event).preventDefault
                ? f.preventDefault()
                : (f.returnValue = !1),
                f.stopPropagation();
              var m = f.pageX || f.touches[0].pageX,
                y = f.pageY || f.touches[0].pageY;
              i.el.fire(d, { x: m, y, event: f });
            };
          }
          if (
            ((this.rectSelection.isSelected = n),
            (this.rectSelection.set =
              this.rectSelection.set || this.parent.set()),
            this.rectSelection.set.get(0) ||
              this.rectSelection.set.add(
                this.nested
                  .rect(o.width, o.height)
                  .addClass(this.options.classRect),
              ),
            this.options.points.length &&
              this.rectSelection.set.length() < 2 &&
              (this.options.points.map(function (d, f) {
                var m = i.pointCoords(d, o),
                  y = i
                    .drawPoint(m.x, m.y)
                    .attr("class", i.options.classPoints + "_" + d)
                    .on("mousedown", s(d))
                    .on("touchstart", s(d));
                i.rectSelection.set.add(y);
              }),
              this.rectSelection.set.each(function () {
                this.addClass(i.options.classPoints);
              })),
            this.options.rotationPoint &&
              ((this.options.points && !this.rectSelection.set.get(9)) ||
                (!this.options.points && !this.rectSelection.set.get(1))))
          ) {
            var l = function (d) {
                (d = d || window.event).preventDefault
                  ? d.preventDefault()
                  : (d.returnValue = !1),
                  d.stopPropagation();
                var f = d.pageX || d.touches[0].pageX,
                  m = d.pageY || d.touches[0].pageY;
                i.el.fire("rot", { x: f, y: m, event: d });
              },
              u = this.drawPoint(o.width / 2, 20)
                .attr("class", this.options.classPoints + "_rot")
                .on("touchstart", l)
                .on("mousedown", l);
            this.rectSelection.set.add(u);
          }
        }),
        (T.prototype.handler = function () {
          var n = this.el.bbox();
          this.nested.matrix(new SVG.Matrix(this.el).translate(n.x, n.y)),
            this.rectSelection.isSelected && this.updateRectSelection(),
            this.pointSelection.isSelected && this.updatePointSelection();
        }),
        (T.prototype.observe = function () {
          var n = this;
          if (MutationObserver)
            if (this.rectSelection.isSelected || this.pointSelection.isSelected)
              (this.observerInst =
                this.observerInst ||
                new MutationObserver(function () {
                  n.handler();
                })),
                this.observerInst.observe(this.el.node, { attributes: !0 });
            else
              try {
                this.observerInst.disconnect(), delete this.observerInst;
              } catch {}
          else
            this.el.off("DOMAttrModified.select"),
              (this.rectSelection.isSelected ||
                this.pointSelection.isSelected) &&
                this.el.on("DOMAttrModified.select", function () {
                  n.handler();
                });
        }),
        (T.prototype.cleanup = function () {
          !this.rectSelection.isSelected &&
            this.rectSelection.set &&
            (this.rectSelection.set.each(function () {
              this.remove();
            }),
            this.rectSelection.set.clear(),
            delete this.rectSelection.set),
            !this.pointSelection.isSelected &&
              this.pointSelection.set &&
              (this.pointSelection.set.each(function () {
                this.remove();
              }),
              this.pointSelection.set.clear(),
              delete this.pointSelection.set),
            this.pointSelection.isSelected ||
              this.rectSelection.isSelected ||
              (this.nested.remove(), delete this.nested);
        }),
        SVG.extend(SVG.Element, {
          selectize: function (n, i) {
            return (
              typeof n == "object" && ((i = n), (n = !0)),
              (this.remember("_selectHandler") || new T(this)).init(
                n === void 0 || n,
                i || {},
              ),
              this
            );
          },
        }),
        (SVG.Element.prototype.selectize.defaults = {
          points: ["lt", "rt", "rb", "lb", "t", "r", "b", "l"],
          pointsExclude: [],
          classRect: "svg_select_boundingRect",
          classPoints: "svg_select_points",
          pointSize: 7,
          rotationPoint: !0,
          deepSelect: !1,
          pointType: "circle",
        });
    })(),
    (function () {
      (function () {
        function T(n) {
          n.remember("_resizeHandler", this),
            (this.el = n),
            (this.parameters = {}),
            (this.lastUpdateCall = null),
            (this.p = n.doc().node.createSVGPoint());
        }
        (T.prototype.transformPoint = function (n, i, o) {
          return (
            (this.p.x = n - (this.offset.x - window.pageXOffset)),
            (this.p.y = i - (this.offset.y - window.pageYOffset)),
            this.p.matrixTransform(o || this.m)
          );
        }),
          (T.prototype._extractPosition = function (n) {
            return {
              x: n.clientX != null ? n.clientX : n.touches[0].clientX,
              y: n.clientY != null ? n.clientY : n.touches[0].clientY,
            };
          }),
          (T.prototype.init = function (n) {
            var i = this;
            if ((this.stop(), n !== "stop")) {
              for (var o in ((this.options = {}), this.el.resize.defaults))
                (this.options[o] = this.el.resize.defaults[o]),
                  n[o] !== void 0 && (this.options[o] = n[o]);
              this.el.on("lt.resize", function (s) {
                i.resize(s || window.event);
              }),
                this.el.on("rt.resize", function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on("rb.resize", function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on("lb.resize", function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on("t.resize", function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on("r.resize", function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on("b.resize", function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on("l.resize", function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on("rot.resize", function (s) {
                  i.resize(s || window.event);
                }),
                this.el.on("point.resize", function (s) {
                  i.resize(s || window.event);
                }),
                this.update();
            }
          }),
          (T.prototype.stop = function () {
            return (
              this.el.off("lt.resize"),
              this.el.off("rt.resize"),
              this.el.off("rb.resize"),
              this.el.off("lb.resize"),
              this.el.off("t.resize"),
              this.el.off("r.resize"),
              this.el.off("b.resize"),
              this.el.off("l.resize"),
              this.el.off("rot.resize"),
              this.el.off("point.resize"),
              this
            );
          }),
          (T.prototype.resize = function (n) {
            var i = this;
            (this.m = this.el.node.getScreenCTM().inverse()),
              (this.offset = { x: window.pageXOffset, y: window.pageYOffset });
            var o = this._extractPosition(n.detail.event);
            if (
              ((this.parameters = {
                type: this.el.type,
                p: this.transformPoint(o.x, o.y),
                x: n.detail.x,
                y: n.detail.y,
                box: this.el.bbox(),
                rotation: this.el.transform().rotation,
              }),
              this.el.type === "text" &&
                (this.parameters.fontSize = this.el.attr()["font-size"]),
              n.detail.i !== void 0)
            ) {
              var s = this.el.array().valueOf();
              (this.parameters.i = n.detail.i),
                (this.parameters.pointCoords = [
                  s[n.detail.i][0],
                  s[n.detail.i][1],
                ]);
            }
            switch (n.type) {
              case "lt":
                this.calc = function (l, u) {
                  var d = this.snapToGrid(l, u);
                  if (
                    this.parameters.box.width - d[0] > 0 &&
                    this.parameters.box.height - d[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x + d[0],
                          this.parameters.box.y,
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize - d[0],
                        )
                      );
                    (d = this.checkAspectRatio(d)),
                      this.el
                        .move(
                          this.parameters.box.x + d[0],
                          this.parameters.box.y + d[1],
                        )
                        .size(
                          this.parameters.box.width - d[0],
                          this.parameters.box.height - d[1],
                        );
                  }
                };
                break;
              case "rt":
                this.calc = function (l, u) {
                  var d = this.snapToGrid(l, u, 2);
                  if (
                    this.parameters.box.width + d[0] > 0 &&
                    this.parameters.box.height - d[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x - d[0],
                          this.parameters.box.y,
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize + d[0],
                        )
                      );
                    (d = this.checkAspectRatio(d, !0)),
                      this.el
                        .move(
                          this.parameters.box.x,
                          this.parameters.box.y + d[1],
                        )
                        .size(
                          this.parameters.box.width + d[0],
                          this.parameters.box.height - d[1],
                        );
                  }
                };
                break;
              case "rb":
                this.calc = function (l, u) {
                  var d = this.snapToGrid(l, u, 0);
                  if (
                    this.parameters.box.width + d[0] > 0 &&
                    this.parameters.box.height + d[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x - d[0],
                          this.parameters.box.y,
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize + d[0],
                        )
                      );
                    (d = this.checkAspectRatio(d)),
                      this.el
                        .move(this.parameters.box.x, this.parameters.box.y)
                        .size(
                          this.parameters.box.width + d[0],
                          this.parameters.box.height + d[1],
                        );
                  }
                };
                break;
              case "lb":
                this.calc = function (l, u) {
                  var d = this.snapToGrid(l, u, 1);
                  if (
                    this.parameters.box.width - d[0] > 0 &&
                    this.parameters.box.height + d[1] > 0
                  ) {
                    if (this.parameters.type === "text")
                      return (
                        this.el.move(
                          this.parameters.box.x + d[0],
                          this.parameters.box.y,
                        ),
                        void this.el.attr(
                          "font-size",
                          this.parameters.fontSize - d[0],
                        )
                      );
                    (d = this.checkAspectRatio(d, !0)),
                      this.el
                        .move(
                          this.parameters.box.x + d[0],
                          this.parameters.box.y,
                        )
                        .size(
                          this.parameters.box.width - d[0],
                          this.parameters.box.height + d[1],
                        );
                  }
                };
                break;
              case "t":
                this.calc = function (l, u) {
                  var d = this.snapToGrid(l, u, 2);
                  if (this.parameters.box.height - d[1] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y + d[1])
                      .height(this.parameters.box.height - d[1]);
                  }
                };
                break;
              case "r":
                this.calc = function (l, u) {
                  var d = this.snapToGrid(l, u, 0);
                  if (this.parameters.box.width + d[0] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y)
                      .width(this.parameters.box.width + d[0]);
                  }
                };
                break;
              case "b":
                this.calc = function (l, u) {
                  var d = this.snapToGrid(l, u, 0);
                  if (this.parameters.box.height + d[1] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x, this.parameters.box.y)
                      .height(this.parameters.box.height + d[1]);
                  }
                };
                break;
              case "l":
                this.calc = function (l, u) {
                  var d = this.snapToGrid(l, u, 1);
                  if (this.parameters.box.width - d[0] > 0) {
                    if (this.parameters.type === "text") return;
                    this.el
                      .move(this.parameters.box.x + d[0], this.parameters.box.y)
                      .width(this.parameters.box.width - d[0]);
                  }
                };
                break;
              case "rot":
                this.calc = function (l, u) {
                  var d = l + this.parameters.p.x,
                    f = u + this.parameters.p.y,
                    m = Math.atan2(
                      this.parameters.p.y -
                        this.parameters.box.y -
                        this.parameters.box.height / 2,
                      this.parameters.p.x -
                        this.parameters.box.x -
                        this.parameters.box.width / 2,
                    ),
                    y = Math.atan2(
                      f -
                        this.parameters.box.y -
                        this.parameters.box.height / 2,
                      d - this.parameters.box.x - this.parameters.box.width / 2,
                    ),
                    x =
                      this.parameters.rotation +
                      (180 * (y - m)) / Math.PI +
                      this.options.snapToAngle / 2;
                  this.el
                    .center(this.parameters.box.cx, this.parameters.box.cy)
                    .rotate(
                      x - (x % this.options.snapToAngle),
                      this.parameters.box.cx,
                      this.parameters.box.cy,
                    );
                };
                break;
              case "point":
                this.calc = function (l, u) {
                  var d = this.snapToGrid(
                      l,
                      u,
                      this.parameters.pointCoords[0],
                      this.parameters.pointCoords[1],
                    ),
                    f = this.el.array().valueOf();
                  (f[this.parameters.i][0] =
                    this.parameters.pointCoords[0] + d[0]),
                    (f[this.parameters.i][1] =
                      this.parameters.pointCoords[1] + d[1]),
                    this.el.plot(f);
                };
            }
            this.el.fire("resizestart", {
              dx: this.parameters.x,
              dy: this.parameters.y,
              event: n,
            }),
              SVG.on(window, "touchmove.resize", function (l) {
                i.update(l || window.event);
              }),
              SVG.on(window, "touchend.resize", function () {
                i.done();
              }),
              SVG.on(window, "mousemove.resize", function (l) {
                i.update(l || window.event);
              }),
              SVG.on(window, "mouseup.resize", function () {
                i.done();
              });
          }),
          (T.prototype.update = function (n) {
            if (n) {
              var i = this._extractPosition(n),
                o = this.transformPoint(i.x, i.y),
                s = o.x - this.parameters.p.x,
                l = o.y - this.parameters.p.y;
              (this.lastUpdateCall = [s, l]),
                this.calc(s, l),
                this.el.fire("resizing", { dx: s, dy: l, event: n });
            } else
              this.lastUpdateCall &&
                this.calc(this.lastUpdateCall[0], this.lastUpdateCall[1]);
          }),
          (T.prototype.done = function () {
            (this.lastUpdateCall = null),
              SVG.off(window, "mousemove.resize"),
              SVG.off(window, "mouseup.resize"),
              SVG.off(window, "touchmove.resize"),
              SVG.off(window, "touchend.resize"),
              this.el.fire("resizedone");
          }),
          (T.prototype.snapToGrid = function (n, i, o, s) {
            var l;
            return (
              s !== void 0
                ? (l = [
                    (o + n) % this.options.snapToGrid,
                    (s + i) % this.options.snapToGrid,
                  ])
                : ((o = o ?? 3),
                  (l = [
                    (this.parameters.box.x +
                      n +
                      (1 & o ? 0 : this.parameters.box.width)) %
                      this.options.snapToGrid,
                    (this.parameters.box.y +
                      i +
                      (2 & o ? 0 : this.parameters.box.height)) %
                      this.options.snapToGrid,
                  ])),
              n < 0 && (l[0] -= this.options.snapToGrid),
              i < 0 && (l[1] -= this.options.snapToGrid),
              (n -=
                Math.abs(l[0]) < this.options.snapToGrid / 2
                  ? l[0]
                  : l[0] -
                    (n < 0
                      ? -this.options.snapToGrid
                      : this.options.snapToGrid)),
              (i -=
                Math.abs(l[1]) < this.options.snapToGrid / 2
                  ? l[1]
                  : l[1] -
                    (i < 0
                      ? -this.options.snapToGrid
                      : this.options.snapToGrid)),
              this.constraintToBox(n, i, o, s)
            );
          }),
          (T.prototype.constraintToBox = function (n, i, o, s) {
            var l,
              u,
              d = this.options.constraint || {};
            return (
              s !== void 0
                ? ((l = o), (u = s))
                : ((l =
                    this.parameters.box.x +
                    (1 & o ? 0 : this.parameters.box.width)),
                  (u =
                    this.parameters.box.y +
                    (2 & o ? 0 : this.parameters.box.height))),
              d.minX !== void 0 && l + n < d.minX && (n = d.minX - l),
              d.maxX !== void 0 && l + n > d.maxX && (n = d.maxX - l),
              d.minY !== void 0 && u + i < d.minY && (i = d.minY - u),
              d.maxY !== void 0 && u + i > d.maxY && (i = d.maxY - u),
              [n, i]
            );
          }),
          (T.prototype.checkAspectRatio = function (n, i) {
            if (!this.options.saveAspectRatio) return n;
            var o = n.slice(),
              s = this.parameters.box.width / this.parameters.box.height,
              l = this.parameters.box.width + n[0],
              u = this.parameters.box.height - n[1],
              d = l / u;
            return (
              d < s
                ? ((o[1] = l / s - this.parameters.box.height),
                  i && (o[1] = -o[1]))
                : d > s &&
                  ((o[0] = this.parameters.box.width - u * s),
                  i && (o[0] = -o[0])),
              o
            );
          }),
          SVG.extend(SVG.Element, {
            resize: function (n) {
              return (
                (this.remember("_resizeHandler") || new T(this)).init(n || {}),
                this
              );
            },
          }),
          (SVG.Element.prototype.resize.defaults = {
            snapToAngle: 0.1,
            snapToGrid: 1,
            constraint: {},
            saveAspectRatio: !1,
          });
      }).call(this);
    })(),
    window.Apex === void 0 && (window.Apex = {});
  var Qi = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "initModules",
            value: function () {
              (this.ctx.publicMethods = [
                "updateOptions",
                "updateSeries",
                "appendData",
                "appendSeries",
                "isSeriesHidden",
                "toggleSeries",
                "showSeries",
                "hideSeries",
                "setLocale",
                "resetSeries",
                "zoomX",
                "toggleDataPointSelection",
                "dataURI",
                "exportToCSV",
                "addXaxisAnnotation",
                "addYaxisAnnotation",
                "addPointAnnotation",
                "clearAnnotations",
                "removeAnnotation",
                "paper",
                "destroy",
              ]),
                (this.ctx.eventList = [
                  "click",
                  "mousedown",
                  "mousemove",
                  "mouseleave",
                  "touchstart",
                  "touchmove",
                  "touchleave",
                  "mouseup",
                  "touchend",
                ]),
                (this.ctx.animations = new X(this.ctx)),
                (this.ctx.axes = new dn(this.ctx)),
                (this.ctx.core = new ro(this.ctx.el, this.ctx)),
                (this.ctx.config = new pe({})),
                (this.ctx.data = new Ue(this.ctx)),
                (this.ctx.grid = new Bt(this.ctx)),
                (this.ctx.graphics = new B(this.ctx)),
                (this.ctx.coreUtils = new U(this.ctx)),
                (this.ctx.crosshairs = new Jt(this.ctx)),
                (this.ctx.events = new Mn(this.ctx)),
                (this.ctx.exports = new Xe(this.ctx)),
                (this.ctx.localization = new Qt(this.ctx)),
                (this.ctx.options = new me()),
                (this.ctx.responsive = new Lt(this.ctx)),
                (this.ctx.series = new Be(this.ctx)),
                (this.ctx.theme = new nt(this.ctx)),
                (this.ctx.formatters = new oe(this.ctx)),
                (this.ctx.titleSubtitle = new hn(this.ctx)),
                (this.ctx.legend = new Ka(this.ctx)),
                (this.ctx.toolbar = new Qa(this.ctx)),
                (this.ctx.tooltip = new ks(this.ctx)),
                (this.ctx.dimensions = new sr(this.ctx)),
                (this.ctx.updateHelpers = new no(this.ctx)),
                (this.ctx.zoomPanSelection = new jd(this.ctx)),
                (this.ctx.w.globals.tooltip = new ks(this.ctx));
            },
          },
        ]),
        T
      );
    })(),
    Ge = (function () {
      function T(n) {
        h(this, T), (this.ctx = n), (this.w = n.w);
      }
      return (
        v(T, [
          {
            key: "clear",
            value: function (n) {
              var i = n.isUpdating;
              this.ctx.zoomPanSelection && this.ctx.zoomPanSelection.destroy(),
                this.ctx.toolbar && this.ctx.toolbar.destroy(),
                (this.ctx.animations = null),
                (this.ctx.axes = null),
                (this.ctx.annotations = null),
                (this.ctx.core = null),
                (this.ctx.data = null),
                (this.ctx.grid = null),
                (this.ctx.series = null),
                (this.ctx.responsive = null),
                (this.ctx.theme = null),
                (this.ctx.formatters = null),
                (this.ctx.titleSubtitle = null),
                (this.ctx.legend = null),
                (this.ctx.dimensions = null),
                (this.ctx.options = null),
                (this.ctx.crosshairs = null),
                (this.ctx.zoomPanSelection = null),
                (this.ctx.updateHelpers = null),
                (this.ctx.toolbar = null),
                (this.ctx.localization = null),
                (this.ctx.w.globals.tooltip = null),
                this.clearDomElements({ isUpdating: i });
            },
          },
          {
            key: "killSVG",
            value: function (n) {
              n.each(function (i, o) {
                this.removeClass("*"), this.off(), this.stop();
              }, !0),
                n.ungroup(),
                n.clear();
            },
          },
          {
            key: "clearDomElements",
            value: function (n) {
              var i = this,
                o = n.isUpdating,
                s = this.w.globals.dom.Paper.node;
              s.parentNode &&
                s.parentNode.parentNode &&
                !o &&
                (s.parentNode.parentNode.style.minHeight = "unset");
              var l = this.w.globals.dom.baseEl;
              l &&
                this.ctx.eventList.forEach(function (d) {
                  l.removeEventListener(d, i.ctx.events.documentEvent);
                });
              var u = this.w.globals.dom;
              if (this.ctx.el !== null)
                for (; this.ctx.el.firstChild; )
                  this.ctx.el.removeChild(this.ctx.el.firstChild);
              this.killSVG(u.Paper),
                u.Paper.remove(),
                (u.elWrap = null),
                (u.elGraphical = null),
                (u.elLegendWrap = null),
                (u.elLegendForeign = null),
                (u.baseEl = null),
                (u.elGridRect = null),
                (u.elGridRectMask = null),
                (u.elGridRectMarkerMask = null),
                (u.elForecastMask = null),
                (u.elNonForecastMask = null),
                (u.elDefs = null);
            },
          },
        ]),
        T
      );
    })(),
    Yt = new WeakMap(),
    qr = (function () {
      function T(n, i) {
        h(this, T),
          (this.opts = i),
          (this.ctx = this),
          (this.w = new ke(i).init()),
          (this.el = n),
          (this.w.globals.cuid = O.randomId()),
          (this.w.globals.chartID = this.w.config.chart.id
            ? O.escapeString(this.w.config.chart.id)
            : this.w.globals.cuid),
          new Qi(this).initModules(),
          (this.create = O.bind(this.create, this)),
          (this.windowResizeHandler = this._windowResizeHandler.bind(this)),
          (this.parentResizeHandler = this._parentResizeCallback.bind(this));
      }
      return (
        v(
          T,
          [
            {
              key: "render",
              value: function () {
                var n = this;
                return new Promise(function (i, o) {
                  if (n.el !== null) {
                    Apex._chartInstances === void 0 &&
                      (Apex._chartInstances = []),
                      n.w.config.chart.id &&
                        Apex._chartInstances.push({
                          id: n.w.globals.chartID,
                          group: n.w.config.chart.group,
                          chart: n,
                        }),
                      n.setLocale(n.w.config.chart.defaultLocale);
                    var s = n.w.config.chart.events.beforeMount;
                    if (
                      (typeof s == "function" && s(n, n.w),
                      n.events.fireEvent("beforeMount", [n, n.w]),
                      window.addEventListener("resize", n.windowResizeHandler),
                      (function (y, x) {
                        var S = !1;
                        if (y.nodeType !== Node.DOCUMENT_FRAGMENT_NODE) {
                          var _ = y.getBoundingClientRect();
                          (y.style.display !== "none" && _.width !== 0) ||
                            (S = !0);
                        }
                        var C = new ResizeObserver(function (E) {
                          S && x.call(y, E), (S = !0);
                        });
                        y.nodeType === Node.DOCUMENT_FRAGMENT_NODE
                          ? Array.from(y.children).forEach(function (E) {
                              return C.observe(E);
                            })
                          : C.observe(y),
                          Yt.set(x, C);
                      })(n.el.parentNode, n.parentResizeHandler),
                      !n.css)
                    ) {
                      var l = n.el.getRootNode && n.el.getRootNode(),
                        u = O.is("ShadowRoot", l),
                        d = n.el.ownerDocument,
                        f = d.getElementById("apexcharts-css");
                      (!u && f) ||
                        ((n.css = document.createElement("style")),
                        (n.css.id = "apexcharts-css"),
                        (n.css.textContent = `@keyframes opaque {
  0% {
      opacity: 0
  }

  to {
      opacity: 1
  }
}

@keyframes resizeanim {
  0%,to {
      opacity: 0
  }
}

.apexcharts-canvas {
  position: relative;
  user-select: none
}

.apexcharts-canvas ::-webkit-scrollbar {
  -webkit-appearance: none;
  width: 6px
}

.apexcharts-canvas ::-webkit-scrollbar-thumb {
  border-radius: 4px;
  background-color: rgba(0,0,0,.5);
  box-shadow: 0 0 1px rgba(255,255,255,.5);
  -webkit-box-shadow: 0 0 1px rgba(255,255,255,.5)
}

.apexcharts-inner {
  position: relative
}

.apexcharts-text tspan {
  font-family: inherit
}

.legend-mouseover-inactive {
  transition: .15s ease all;
  opacity: .2
}

.apexcharts-legend-text {
  padding-left: 15px;
  margin-left: -15px;
}

.apexcharts-series-collapsed {
  opacity: 0
}

.apexcharts-tooltip {
  border-radius: 5px;
  box-shadow: 2px 2px 6px -4px #999;
  cursor: default;
  font-size: 14px;
  left: 62px;
  opacity: 0;
  pointer-events: none;
  position: absolute;
  top: 20px;
  display: flex;
  flex-direction: column;
  overflow: hidden;
  white-space: nowrap;
  z-index: 12;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-tooltip.apexcharts-theme-light {
  border: 1px solid #e3e3e3;
  background: rgba(255,255,255,.96)
}

.apexcharts-tooltip.apexcharts-theme-dark {
  color: #fff;
  background: rgba(30,30,30,.8)
}

.apexcharts-tooltip * {
  font-family: inherit
}

.apexcharts-tooltip-title {
  padding: 6px;
  font-size: 15px;
  margin-bottom: 4px
}

.apexcharts-tooltip.apexcharts-theme-light .apexcharts-tooltip-title {
  background: #eceff1;
  border-bottom: 1px solid #ddd
}

.apexcharts-tooltip.apexcharts-theme-dark .apexcharts-tooltip-title {
  background: rgba(0,0,0,.7);
  border-bottom: 1px solid #333
}

.apexcharts-tooltip-text-goals-value,.apexcharts-tooltip-text-y-value,.apexcharts-tooltip-text-z-value {
  display: inline-block;
  margin-left: 5px;
  font-weight: 600
}

.apexcharts-tooltip-text-goals-label:empty,.apexcharts-tooltip-text-goals-value:empty,.apexcharts-tooltip-text-y-label:empty,.apexcharts-tooltip-text-y-value:empty,.apexcharts-tooltip-text-z-value:empty,.apexcharts-tooltip-title:empty {
  display: none
}

.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  padding: 6px 0 5px
}

.apexcharts-tooltip-goals-group,.apexcharts-tooltip-text-goals-label,.apexcharts-tooltip-text-goals-value {
  display: flex
}

.apexcharts-tooltip-text-goals-label:not(:empty),.apexcharts-tooltip-text-goals-value:not(:empty) {
  margin-top: -6px
}

.apexcharts-tooltip-marker {
  width: 12px;
  height: 12px;
  position: relative;
  top: 0;
  margin-right: 10px;
  border-radius: 50%
}

.apexcharts-tooltip-series-group {
  padding: 0 10px;
  display: none;
  text-align: left;
  justify-content: left;
  align-items: center
}

.apexcharts-tooltip-series-group.apexcharts-active .apexcharts-tooltip-marker {
  opacity: 1
}

.apexcharts-tooltip-series-group.apexcharts-active,.apexcharts-tooltip-series-group:last-child {
  padding-bottom: 4px
}

.apexcharts-tooltip-series-group-hidden {
  opacity: 0;
  height: 0;
  line-height: 0;
  padding: 0!important
}

.apexcharts-tooltip-y-group {
  padding: 6px 0 5px
}

.apexcharts-custom-tooltip,.apexcharts-tooltip-box {
  padding: 4px 8px
}

.apexcharts-tooltip-boxPlot {
  display: flex;
  flex-direction: column-reverse
}

.apexcharts-tooltip-box>div {
  margin: 4px 0
}

.apexcharts-tooltip-box span.value {
  font-weight: 700
}

.apexcharts-tooltip-rangebar {
  padding: 5px 8px
}

.apexcharts-tooltip-rangebar .category {
  font-weight: 600;
  color: #777
}

.apexcharts-tooltip-rangebar .series-name {
  font-weight: 700;
  display: block;
  margin-bottom: 5px
}

.apexcharts-xaxistooltip,.apexcharts-yaxistooltip {
  opacity: 0;
  pointer-events: none;
  color: #373d3f;
  font-size: 13px;
  text-align: center;
  border-radius: 2px;
  position: absolute;
  z-index: 10;
  background: #eceff1;
  border: 1px solid #90a4ae
}

.apexcharts-xaxistooltip {
  padding: 9px 10px;
  transition: .15s ease all
}

.apexcharts-xaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-xaxistooltip:after,.apexcharts-xaxistooltip:before {
  left: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-xaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-left: -6px
}

.apexcharts-xaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-left: -7px
}

.apexcharts-xaxistooltip-bottom:after,.apexcharts-xaxistooltip-bottom:before {
  bottom: 100%
}

.apexcharts-xaxistooltip-top:after,.apexcharts-xaxistooltip-top:before {
  top: 100%
}

.apexcharts-xaxistooltip-bottom:after {
  border-bottom-color: #eceff1
}

.apexcharts-xaxistooltip-bottom:before {
  border-bottom-color: #90a4ae
}

.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-bottom.apexcharts-theme-dark:before {
  border-bottom-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip-top:after {
  border-top-color: #eceff1
}

.apexcharts-xaxistooltip-top:before {
  border-top-color: #90a4ae
}

.apexcharts-xaxistooltip-top.apexcharts-theme-dark:after,.apexcharts-xaxistooltip-top.apexcharts-theme-dark:before {
  border-top-color: rgba(0,0,0,.5)
}

.apexcharts-xaxistooltip.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-yaxistooltip {
  padding: 4px 10px
}

.apexcharts-yaxistooltip.apexcharts-theme-dark {
  background: rgba(0,0,0,.7);
  border: 1px solid rgba(0,0,0,.5);
  color: #fff
}

.apexcharts-yaxistooltip:after,.apexcharts-yaxistooltip:before {
  top: 50%;
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  pointer-events: none
}

.apexcharts-yaxistooltip:after {
  border-color: transparent;
  border-width: 6px;
  margin-top: -6px
}

.apexcharts-yaxistooltip:before {
  border-color: transparent;
  border-width: 7px;
  margin-top: -7px
}

.apexcharts-yaxistooltip-left:after,.apexcharts-yaxistooltip-left:before {
  left: 100%
}

.apexcharts-yaxistooltip-right:after,.apexcharts-yaxistooltip-right:before {
  right: 100%
}

.apexcharts-yaxistooltip-left:after {
  border-left-color: #eceff1
}

.apexcharts-yaxistooltip-left:before {
  border-left-color: #90a4ae
}

.apexcharts-yaxistooltip-left.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-left.apexcharts-theme-dark:before {
  border-left-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip-right:after {
  border-right-color: #eceff1
}

.apexcharts-yaxistooltip-right:before {
  border-right-color: #90a4ae
}

.apexcharts-yaxistooltip-right.apexcharts-theme-dark:after,.apexcharts-yaxistooltip-right.apexcharts-theme-dark:before {
  border-right-color: rgba(0,0,0,.5)
}

.apexcharts-yaxistooltip.apexcharts-active {
  opacity: 1
}

.apexcharts-yaxistooltip-hidden {
  display: none
}

.apexcharts-xcrosshairs,.apexcharts-ycrosshairs {
  pointer-events: none;
  opacity: 0;
  transition: .15s ease all
}

.apexcharts-xcrosshairs.apexcharts-active,.apexcharts-ycrosshairs.apexcharts-active {
  opacity: 1;
  transition: .15s ease all
}

.apexcharts-ycrosshairs-hidden {
  opacity: 0
}

.apexcharts-selection-rect {
  cursor: move
}

.svg_select_boundingRect,.svg_select_points_rot {
  pointer-events: none;
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_boundingRect,.apexcharts-selection-rect+g .svg_select_points_rot {
  opacity: 0;
  visibility: hidden
}

.apexcharts-selection-rect+g .svg_select_points_l,.apexcharts-selection-rect+g .svg_select_points_r {
  cursor: ew-resize;
  opacity: 1;
  visibility: visible
}

.svg_select_points {
  fill: #efefef;
  stroke: #333;
  rx: 2
}

.apexcharts-svg.apexcharts-zoomable.hovering-zoom {
  cursor: crosshair
}

.apexcharts-svg.apexcharts-zoomable.hovering-pan {
  cursor: move
}

.apexcharts-menu-icon,.apexcharts-pan-icon,.apexcharts-reset-icon,.apexcharts-selection-icon,.apexcharts-toolbar-custom-icon,.apexcharts-zoom-icon,.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  cursor: pointer;
  width: 20px;
  height: 20px;
  line-height: 24px;
  color: #6e8192;
  text-align: center
}

.apexcharts-menu-icon svg,.apexcharts-reset-icon svg,.apexcharts-zoom-icon svg,.apexcharts-zoomin-icon svg,.apexcharts-zoomout-icon svg {
  fill: #6e8192
}

.apexcharts-selection-icon svg {
  fill: #444;
  transform: scale(.76)
}

.apexcharts-theme-dark .apexcharts-menu-icon svg,.apexcharts-theme-dark .apexcharts-pan-icon svg,.apexcharts-theme-dark .apexcharts-reset-icon svg,.apexcharts-theme-dark .apexcharts-selection-icon svg,.apexcharts-theme-dark .apexcharts-toolbar-custom-icon svg,.apexcharts-theme-dark .apexcharts-zoom-icon svg,.apexcharts-theme-dark .apexcharts-zoomin-icon svg,.apexcharts-theme-dark .apexcharts-zoomout-icon svg {
  fill: #f3f4f5
}

.apexcharts-canvas .apexcharts-reset-zoom-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-selection-icon.apexcharts-selected svg,.apexcharts-canvas .apexcharts-zoom-icon.apexcharts-selected svg {
  fill: #008ffb
}

.apexcharts-theme-light .apexcharts-menu-icon:hover svg,.apexcharts-theme-light .apexcharts-reset-icon:hover svg,.apexcharts-theme-light .apexcharts-selection-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoom-icon:not(.apexcharts-selected):hover svg,.apexcharts-theme-light .apexcharts-zoomin-icon:hover svg,.apexcharts-theme-light .apexcharts-zoomout-icon:hover svg {
  fill: #333
}

.apexcharts-menu-icon,.apexcharts-selection-icon {
  position: relative
}

.apexcharts-reset-icon {
  margin-left: 5px
}

.apexcharts-menu-icon,.apexcharts-reset-icon,.apexcharts-zoom-icon {
  transform: scale(.85)
}

.apexcharts-zoomin-icon,.apexcharts-zoomout-icon {
  transform: scale(.7)
}

.apexcharts-zoomout-icon {
  margin-right: 3px
}

.apexcharts-pan-icon {
  transform: scale(.62);
  position: relative;
  left: 1px;
  top: 0
}

.apexcharts-pan-icon svg {
  fill: #fff;
  stroke: #6e8192;
  stroke-width: 2
}

.apexcharts-pan-icon.apexcharts-selected svg {
  stroke: #008ffb
}

.apexcharts-pan-icon:not(.apexcharts-selected):hover svg {
  stroke: #333
}

.apexcharts-toolbar {
  position: absolute;
  z-index: 11;
  max-width: 176px;
  text-align: right;
  border-radius: 3px;
  padding: 0 6px 2px;
  display: flex;
  justify-content: space-between;
  align-items: center
}

.apexcharts-menu {
  background: #fff;
  position: absolute;
  top: 100%;
  border: 1px solid #ddd;
  border-radius: 3px;
  padding: 3px;
  right: 10px;
  opacity: 0;
  min-width: 110px;
  transition: .15s ease all;
  pointer-events: none
}

.apexcharts-menu.apexcharts-menu-open {
  opacity: 1;
  pointer-events: all;
  transition: .15s ease all
}

.apexcharts-menu-item {
  padding: 6px 7px;
  font-size: 12px;
  cursor: pointer
}

.apexcharts-theme-light .apexcharts-menu-item:hover {
  background: #eee
}

.apexcharts-theme-dark .apexcharts-menu {
  background: rgba(0,0,0,.7);
  color: #fff
}

@media screen and (min-width:768px) {
  .apexcharts-canvas:hover .apexcharts-toolbar {
      opacity: 1
  }
}

.apexcharts-canvas .apexcharts-element-hidden,.apexcharts-datalabel.apexcharts-element-hidden,.apexcharts-hide .apexcharts-series-points {
  opacity: 0
}

.apexcharts-hidden-element-shown {
  opacity: 1;
  transition: 0.25s ease all;
}
.apexcharts-datalabel,.apexcharts-datalabel-label,.apexcharts-datalabel-value,.apexcharts-datalabels,.apexcharts-pie-label {
  cursor: default;
  pointer-events: none
}

.apexcharts-pie-label-delay {
  opacity: 0;
  animation-name: opaque;
  animation-duration: .3s;
  animation-fill-mode: forwards;
  animation-timing-function: ease
}

.apexcharts-annotation-rect,.apexcharts-area-series .apexcharts-area,.apexcharts-area-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-gridline,.apexcharts-line,.apexcharts-line-series .apexcharts-series-markers .apexcharts-marker.no-pointer-events,.apexcharts-point-annotation-label,.apexcharts-radar-series path,.apexcharts-radar-series polygon,.apexcharts-toolbar svg,.apexcharts-tooltip .apexcharts-marker,.apexcharts-xaxis-annotation-label,.apexcharts-yaxis-annotation-label,.apexcharts-zoom-rect {
  pointer-events: none
}

.apexcharts-marker {
  transition: .15s ease all
}

.resize-triggers {
  animation: 1ms resizeanim;
  visibility: hidden;
  opacity: 0;
  height: 100%;
  width: 100%;
  overflow: hidden
}

.contract-trigger:before,.resize-triggers,.resize-triggers>div {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  left: 0
}

.resize-triggers>div {
  height: 100%;
  width: 100%;
  background: #eee;
  overflow: auto
}

.contract-trigger:before {
  overflow: hidden;
  width: 200%;
  height: 200%
}

.apexcharts-bar-goals-markers{
  pointer-events: none
}

.apexcharts-bar-shadows{
  pointer-events: none
}

.apexcharts-rangebar-goals-markers{
  pointer-events: none
}`),
                        u ? l.prepend(n.css) : d.head.appendChild(n.css));
                    }
                    var m = n.create(n.w.config.series, {});
                    if (!m) return i(n);
                    n.mount(m)
                      .then(function () {
                        typeof n.w.config.chart.events.mounted == "function" &&
                          n.w.config.chart.events.mounted(n, n.w),
                          n.events.fireEvent("mounted", [n, n.w]),
                          i(m);
                      })
                      .catch(function (y) {
                        o(y);
                      });
                  } else o(new Error("Element not found"));
                });
              },
            },
            {
              key: "create",
              value: function (n, i) {
                var o = this.w;
                new Qi(this).initModules();
                var s = this.w.globals;
                if (
                  ((s.noData = !1),
                  (s.animationEnded = !1),
                  this.responsive.checkResponsiveConfig(i),
                  o.config.xaxis.convertedCatToNumeric &&
                    new te(o.config).convertCatToNumericXaxis(
                      o.config,
                      this.ctx,
                    ),
                  this.el === null ||
                    (this.core.setupElements(),
                    o.config.chart.type === "treemap" &&
                      ((o.config.grid.show = !1),
                      (o.config.yaxis[0].show = !1)),
                    s.svgWidth === 0))
                )
                  return (s.animationEnded = !0), null;
                var l = U.checkComboSeries(n);
                (s.comboCharts = l.comboCharts),
                  (s.comboBarCount = l.comboBarCount);
                var u = n.every(function (y) {
                  return y.data && y.data.length === 0;
                });
                (n.length === 0 || u) && this.series.handleNoData(),
                  this.events.setupEventHandlers(),
                  this.data.parseData(n),
                  this.theme.init(),
                  new ze(this).setGlobalMarkerSize(),
                  this.formatters.setLabelFormatters(),
                  this.titleSubtitle.draw(),
                  (s.noData &&
                    s.collapsedSeries.length !== s.series.length &&
                    !o.config.legend.showForSingleSeries) ||
                    this.legend.init(),
                  this.series.hasAllSeriesEqualX(),
                  s.axisCharts &&
                    (this.core.coreCalculations(),
                    o.config.xaxis.type !== "category" &&
                      this.formatters.setLabelFormatters(),
                    (this.ctx.toolbar.minX = o.globals.minX),
                    (this.ctx.toolbar.maxX = o.globals.maxX)),
                  this.formatters.heatmapLabelFormatters(),
                  new U(this).getLargestMarkerSize(),
                  this.dimensions.plotCoords();
                var d = this.core.xySettings();
                this.grid.createGridMask();
                var f = this.core.plotChartType(n, d),
                  m = new Qe(this);
                return (
                  m.bringForward(),
                  o.config.dataLabels.background.enabled &&
                    m.dataLabelsBackground(),
                  this.core.shiftGraphPosition(),
                  {
                    elGraph: f,
                    xyRatios: d,
                    dimensions: {
                      plot: {
                        left: o.globals.translateX,
                        top: o.globals.translateY,
                        width: o.globals.gridWidth,
                        height: o.globals.gridHeight,
                      },
                    },
                  }
                );
              },
            },
            {
              key: "mount",
              value: function () {
                var n = this,
                  i =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : null,
                  o = this,
                  s = o.w;
                return new Promise(function (l, u) {
                  if (o.el === null)
                    return u(
                      new Error(
                        "Not enough data to display or target element not found",
                      ),
                    );
                  (i === null || s.globals.allSeriesCollapsed) &&
                    o.series.handleNoData(),
                    (o.grid = new Bt(o));
                  var d,
                    f,
                    m = o.grid.drawGrid();
                  if (
                    ((o.annotations = new fe(o)),
                    o.annotations.drawImageAnnos(),
                    o.annotations.drawTextAnnos(),
                    s.config.grid.position === "back" &&
                      (m && s.globals.dom.elGraphical.add(m.el),
                      m != null &&
                        (d = m.elGridBorders) !== null &&
                        d !== void 0 &&
                        d.node &&
                        s.globals.dom.elGraphical.add(m.elGridBorders)),
                    Array.isArray(i.elGraph))
                  )
                    for (var y = 0; y < i.elGraph.length; y++)
                      s.globals.dom.elGraphical.add(i.elGraph[y]);
                  else s.globals.dom.elGraphical.add(i.elGraph);
                  s.config.grid.position === "front" &&
                    (m && s.globals.dom.elGraphical.add(m.el),
                    m != null &&
                      (f = m.elGridBorders) !== null &&
                      f !== void 0 &&
                      f.node &&
                      s.globals.dom.elGraphical.add(m.elGridBorders)),
                    s.config.xaxis.crosshairs.position === "front" &&
                      o.crosshairs.drawXCrosshairs(),
                    s.config.yaxis[0].crosshairs.position === "front" &&
                      o.crosshairs.drawYCrosshairs(),
                    s.config.chart.type !== "treemap" &&
                      o.axes.drawAxis(s.config.chart.type, m);
                  var x = new St(n.ctx, m),
                    S = new Rt(n.ctx, m);
                  if (
                    (m !== null &&
                      (x.xAxisLabelCorrections(m.xAxisTickWidth),
                      S.setYAxisTextAlignments(),
                      s.config.yaxis.map(function (C, E) {
                        s.globals.ignoreYAxisIndexes.indexOf(E) === -1 &&
                          S.yAxisTitleRotate(E, C.opposite);
                      })),
                    o.annotations.drawAxesAnnotations(),
                    !s.globals.noData)
                  ) {
                    if (
                      (s.config.tooltip.enabled &&
                        !s.globals.noData &&
                        o.w.globals.tooltip.drawTooltip(i.xyRatios),
                      s.globals.axisCharts &&
                        (s.globals.isXNumeric ||
                          s.config.xaxis.convertedCatToNumeric ||
                          s.globals.isRangeBar))
                    )
                      (s.config.chart.zoom.enabled ||
                        (s.config.chart.selection &&
                          s.config.chart.selection.enabled) ||
                        (s.config.chart.pan && s.config.chart.pan.enabled)) &&
                        o.zoomPanSelection.init({ xyRatios: i.xyRatios });
                    else {
                      var _ = s.config.chart.toolbar.tools;
                      [
                        "zoom",
                        "zoomin",
                        "zoomout",
                        "selection",
                        "pan",
                        "reset",
                      ].forEach(function (C) {
                        _[C] = !1;
                      });
                    }
                    s.config.chart.toolbar.show &&
                      !s.globals.allSeriesCollapsed &&
                      o.toolbar.createToolbar();
                  }
                  s.globals.memory.methodsToExec.length > 0 &&
                    s.globals.memory.methodsToExec.forEach(function (C) {
                      C.method(C.params, !1, C.context);
                    }),
                    s.globals.axisCharts ||
                      s.globals.noData ||
                      o.core.resizeNonAxisCharts(),
                    l(o);
                });
              },
            },
            {
              key: "destroy",
              value: function () {
                var n, i;
                window.removeEventListener("resize", this.windowResizeHandler),
                  this.el.parentNode,
                  (n = this.parentResizeHandler),
                  (i = Yt.get(n)) && (i.disconnect(), Yt.delete(n));
                var o = this.w.config.chart.id;
                o &&
                  Apex._chartInstances.forEach(function (s, l) {
                    s.id === O.escapeString(o) &&
                      Apex._chartInstances.splice(l, 1);
                  }),
                  new Ge(this.ctx).clear({ isUpdating: !1 });
              },
            },
            {
              key: "updateOptions",
              value: function (n) {
                var i = this,
                  o =
                    arguments.length > 1 &&
                    arguments[1] !== void 0 &&
                    arguments[1],
                  s =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  l =
                    !(arguments.length > 3 && arguments[3] !== void 0) ||
                    arguments[3],
                  u =
                    !(arguments.length > 4 && arguments[4] !== void 0) ||
                    arguments[4],
                  d = this.w;
                return (
                  (d.globals.selection = void 0),
                  n.series &&
                    (this.series.resetSeries(!1, !0, !1),
                    n.series.length &&
                      n.series[0].data &&
                      (n.series = n.series.map(function (f, m) {
                        return i.updateHelpers._extendSeries(f, m);
                      })),
                    this.updateHelpers.revertDefaultAxisMinMax()),
                  n.xaxis && (n = this.updateHelpers.forceXAxisUpdate(n)),
                  n.yaxis && (n = this.updateHelpers.forceYAxisUpdate(n)),
                  d.globals.collapsedSeriesIndices.length > 0 &&
                    this.series.clearPreviousPaths(),
                  n.theme && (n = this.theme.updateThemeOptions(n)),
                  this.updateHelpers._updateOptions(n, o, s, l, u)
                );
              },
            },
            {
              key: "updateSeries",
              value: function () {
                var n =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : [],
                  i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  o =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2];
                return (
                  this.series.resetSeries(!1),
                  this.updateHelpers.revertDefaultAxisMinMax(),
                  this.updateHelpers._updateSeries(n, i, o)
                );
              },
            },
            {
              key: "appendSeries",
              value: function (n) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  o =
                    !(arguments.length > 2 && arguments[2] !== void 0) ||
                    arguments[2],
                  s = this.w.config.series.slice();
                return (
                  s.push(n),
                  this.series.resetSeries(!1),
                  this.updateHelpers.revertDefaultAxisMinMax(),
                  this.updateHelpers._updateSeries(s, i, o)
                );
              },
            },
            {
              key: "appendData",
              value: function (n) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  o = this;
                (o.w.globals.dataChanged = !0), o.series.getPreviousPaths();
                for (
                  var s = o.w.config.series.slice(), l = 0;
                  l < s.length;
                  l++
                )
                  if (n[l] !== null && n[l] !== void 0)
                    for (var u = 0; u < n[l].data.length; u++)
                      s[l].data.push(n[l].data[u]);
                return (
                  (o.w.config.series = s),
                  i && (o.w.globals.initialSeries = O.clone(o.w.config.series)),
                  this.update()
                );
              },
            },
            {
              key: "update",
              value: function (n) {
                var i = this;
                return new Promise(function (o, s) {
                  new Ge(i.ctx).clear({ isUpdating: !0 });
                  var l = i.create(i.w.config.series, n);
                  if (!l) return o(i);
                  i.mount(l)
                    .then(function () {
                      typeof i.w.config.chart.events.updated == "function" &&
                        i.w.config.chart.events.updated(i, i.w),
                        i.events.fireEvent("updated", [i, i.w]),
                        (i.w.globals.isDirty = !0),
                        o(i);
                    })
                    .catch(function (u) {
                      s(u);
                    });
                });
              },
            },
            {
              key: "getSyncedCharts",
              value: function () {
                var n = this.getGroupedCharts(),
                  i = [this];
                return (
                  n.length &&
                    ((i = []),
                    n.forEach(function (o) {
                      i.push(o);
                    })),
                  i
                );
              },
            },
            {
              key: "getGroupedCharts",
              value: function () {
                var n = this;
                return Apex._chartInstances
                  .filter(function (i) {
                    if (i.group) return !0;
                  })
                  .map(function (i) {
                    return n.w.config.chart.group === i.group ? i.chart : n;
                  });
              },
            },
            {
              key: "toggleSeries",
              value: function (n) {
                return this.series.toggleSeries(n);
              },
            },
            {
              key: "highlightSeriesOnLegendHover",
              value: function (n, i) {
                return this.series.toggleSeriesOnHover(n, i);
              },
            },
            {
              key: "showSeries",
              value: function (n) {
                this.series.showSeries(n);
              },
            },
            {
              key: "hideSeries",
              value: function (n) {
                this.series.hideSeries(n);
              },
            },
            {
              key: "isSeriesHidden",
              value: function (n) {
                this.series.isSeriesHidden(n);
              },
            },
            {
              key: "resetSeries",
              value: function () {
                var n =
                    !(arguments.length > 0 && arguments[0] !== void 0) ||
                    arguments[0],
                  i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1];
                this.series.resetSeries(n, i);
              },
            },
            {
              key: "addEventListener",
              value: function (n, i) {
                this.events.addEventListener(n, i);
              },
            },
            {
              key: "removeEventListener",
              value: function (n, i) {
                this.events.removeEventListener(n, i);
              },
            },
            {
              key: "addXaxisAnnotation",
              value: function (n) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  o =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  s = this;
                o && (s = o), s.annotations.addXaxisAnnotationExternal(n, i, s);
              },
            },
            {
              key: "addYaxisAnnotation",
              value: function (n) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  o =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  s = this;
                o && (s = o), s.annotations.addYaxisAnnotationExternal(n, i, s);
              },
            },
            {
              key: "addPointAnnotation",
              value: function (n) {
                var i =
                    !(arguments.length > 1 && arguments[1] !== void 0) ||
                    arguments[1],
                  o =
                    arguments.length > 2 && arguments[2] !== void 0
                      ? arguments[2]
                      : void 0,
                  s = this;
                o && (s = o), s.annotations.addPointAnnotationExternal(n, i, s);
              },
            },
            {
              key: "clearAnnotations",
              value: function () {
                var n =
                    arguments.length > 0 && arguments[0] !== void 0
                      ? arguments[0]
                      : void 0,
                  i = this;
                n && (i = n), i.annotations.clearAnnotations(i);
              },
            },
            {
              key: "removeAnnotation",
              value: function (n) {
                var i =
                    arguments.length > 1 && arguments[1] !== void 0
                      ? arguments[1]
                      : void 0,
                  o = this;
                i && (o = i), o.annotations.removeAnnotation(o, n);
              },
            },
            {
              key: "getChartArea",
              value: function () {
                return this.w.globals.dom.baseEl.querySelector(
                  ".apexcharts-inner",
                );
              },
            },
            {
              key: "getSeriesTotalXRange",
              value: function (n, i) {
                return this.coreUtils.getSeriesTotalsXRange(n, i);
              },
            },
            {
              key: "getHighestValueInSeries",
              value: function () {
                var n =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0;
                return new Pt(this.ctx).getMinYMaxY(n).highestY;
              },
            },
            {
              key: "getLowestValueInSeries",
              value: function () {
                var n =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : 0;
                return new Pt(this.ctx).getMinYMaxY(n).lowestY;
              },
            },
            {
              key: "getSeriesTotal",
              value: function () {
                return this.w.globals.seriesTotals;
              },
            },
            {
              key: "toggleDataPointSelection",
              value: function (n, i) {
                return this.updateHelpers.toggleDataPointSelection(n, i);
              },
            },
            {
              key: "zoomX",
              value: function (n, i) {
                this.ctx.toolbar.zoomUpdateOptions(n, i);
              },
            },
            {
              key: "setLocale",
              value: function (n) {
                this.localization.setCurrentLocaleValues(n);
              },
            },
            {
              key: "dataURI",
              value: function (n) {
                return new Xe(this.ctx).dataURI(n);
              },
            },
            {
              key: "exportToCSV",
              value: function () {
                var n =
                  arguments.length > 0 && arguments[0] !== void 0
                    ? arguments[0]
                    : {};
                return new Xe(this.ctx).exportToCSV(n);
              },
            },
            {
              key: "paper",
              value: function () {
                return this.w.globals.dom.Paper;
              },
            },
            {
              key: "_parentResizeCallback",
              value: function () {
                this.w.globals.animationEnded &&
                  this.w.config.chart.redrawOnParentResize &&
                  this._windowResize();
              },
            },
            {
              key: "_windowResize",
              value: function () {
                var n = this;
                clearTimeout(this.w.globals.resizeTimer),
                  (this.w.globals.resizeTimer = window.setTimeout(function () {
                    (n.w.globals.resized = !0),
                      (n.w.globals.dataChanged = !1),
                      n.ctx.update();
                  }, 150));
              },
            },
            {
              key: "_windowResizeHandler",
              value: function () {
                var n = this.w.config.chart.redrawOnWindowResize;
                typeof n == "function" && (n = n()), n && this._windowResize();
              },
            },
          ],
          [
            {
              key: "getChartByID",
              value: function (n) {
                var i = O.escapeString(n);
                if (Apex._chartInstances) {
                  var o = Apex._chartInstances.filter(function (s) {
                    return s.id === i;
                  })[0];
                  return o && o.chart;
                }
              },
            },
            {
              key: "initOnLoad",
              value: function () {
                for (
                  var n = document.querySelectorAll("[data-apexcharts]"), i = 0;
                  i < n.length;
                  i++
                )
                  new T(
                    n[i],
                    JSON.parse(n[i].getAttribute("data-options")),
                  ).render();
              },
            },
            {
              key: "exec",
              value: function (n, i) {
                var o = this.getChartByID(n);
                if (o) {
                  o.w.globals.isExecCalled = !0;
                  var s = null;
                  if (o.publicMethods.indexOf(i) !== -1) {
                    for (
                      var l = arguments.length,
                        u = new Array(l > 2 ? l - 2 : 0),
                        d = 2;
                      d < l;
                      d++
                    )
                      u[d - 2] = arguments[d];
                    s = o[i].apply(o, u);
                  }
                  return s;
                }
              },
            },
            {
              key: "merge",
              value: function (n, i) {
                return O.extend(n, i);
              },
            },
          ],
        ),
        T
      );
    })();
  e.exports = qr;
})(lp, lp.exports);
var y4 = lp.exports,
  Gk;
Object.defineProperty(Vk, "__esModule", { value: !0 });
var x4 =
    typeof Symbol == "function" && typeof Symbol.iterator == "symbol"
      ? function (e) {
          return typeof e;
        }
      : function (e) {
          return e &&
            typeof Symbol == "function" &&
            e.constructor === Symbol &&
            e !== Symbol.prototype
            ? "symbol"
            : typeof e;
        },
  b4 =
    Object.assign ||
    function (e) {
      for (var t = 1; t < arguments.length; t++) {
        var r,
          a = arguments[t];
        for (r in a)
          Object.prototype.hasOwnProperty.call(a, r) && (e[r] = a[r]);
      }
      return e;
    },
  w4 = (function () {
    function e(t, r) {
      for (var a = 0; a < r.length; a++) {
        var c = r[a];
        (c.enumerable = c.enumerable || !1),
          (c.configurable = !0),
          "value" in c && (c.writable = !0),
          Object.defineProperty(t, c.key, c);
      }
    }
    return function (t, r, a) {
      return r && e(t.prototype, r), a && e(t, a), t;
    };
  })(),
  S4 = y4,
  Uk = um(S4),
  qk = j,
  So = um(qk),
  P4 = Bk,
  pn = um(P4);
function um(e) {
  return e && e.__esModule ? e : { default: e };
}
function _4(e, t, r) {
  return (
    t in e
      ? Object.defineProperty(e, t, {
          value: r,
          enumerable: !0,
          configurable: !0,
          writable: !0,
        })
      : (e[t] = r),
    e
  );
}
function C4(e, t) {
  var r,
    a = {};
  for (r in e)
    0 <= t.indexOf(r) ||
      (Object.prototype.hasOwnProperty.call(e, r) && (a[r] = e[r]));
  return a;
}
function O4(e, t) {
  if (!(e instanceof t))
    throw new TypeError("Cannot call a class as a function");
}
function k4(e, t) {
  if (e) return !t || (typeof t != "object" && typeof t != "function") ? e : t;
  throw new ReferenceError(
    "this hasn't been initialised - super() hasn't been called",
  );
}
function A4(e, t) {
  if (typeof t != "function" && t !== null)
    throw new TypeError(
      "Super expression must either be null or a function, not " + typeof t,
    );
  (e.prototype = Object.create(t && t.prototype, {
    constructor: { value: e, enumerable: !1, writable: !0, configurable: !0 },
  })),
    t &&
      (Object.setPrototypeOf ? Object.setPrototypeOf(e, t) : (e.__proto__ = t));
}
window.ApexCharts = Uk.default;
var Q0 = (function () {
  function e(t) {
    O4(this, e);
    var r = k4(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t));
    return (
      So.default.createRef
        ? (r.chartRef = So.default.createRef())
        : (r.setRef = function (a) {
            return (r.chartRef = a);
          }),
      (r.chart = null),
      r
    );
  }
  return (
    A4(e, qk.Component),
    w4(e, [
      {
        key: "render",
        value: function () {
          var t = C4(this.props, []);
          return So.default.createElement(
            "div",
            b4({ ref: So.default.createRef ? this.chartRef : this.setRef }, t),
          );
        },
      },
      {
        key: "componentDidMount",
        value: function () {
          var t = So.default.createRef ? this.chartRef.current : this.chartRef;
          (this.chart = new Uk.default(t, this.getConfig())),
            this.chart.render();
        },
      },
      {
        key: "getConfig",
        value: function () {
          var h = this.props,
            t = h.type,
            r = h.height,
            a = h.width,
            c = h.series,
            h = h.options;
          return this.extend(h, {
            chart: { type: t, height: r, width: a },
            series: c,
          });
        },
      },
      {
        key: "isObject",
        value: function (t) {
          return (
            t &&
            (t === void 0 ? "undefined" : x4(t)) === "object" &&
            !Array.isArray(t) &&
            t != null
          );
        },
      },
      {
        key: "extend",
        value: function (t, r) {
          var a = this,
            c =
              (typeof Object.assign != "function" &&
                (Object.assign = function (h) {
                  if (h == null)
                    throw new TypeError(
                      "Cannot convert undefined or null to object",
                    );
                  for (var p = Object(h), v = 1; v < arguments.length; v++) {
                    var b = arguments[v];
                    if (b != null)
                      for (var P in b) b.hasOwnProperty(P) && (p[P] = b[P]);
                  }
                  return p;
                }),
              Object.assign({}, t));
          return (
            this.isObject(t) &&
              this.isObject(r) &&
              Object.keys(r).forEach(function (h) {
                a.isObject(r[h]) && h in t
                  ? (c[h] = a.extend(t[h], r[h]))
                  : Object.assign(c, _4({}, h, r[h]));
              }),
            c
          );
        },
      },
      {
        key: "componentDidUpdate",
        value: function (t) {
          if (!this.chart) return null;
          var c = this.props,
            v = c.options,
            r = c.series,
            a = c.height,
            c = c.width,
            h = JSON.stringify(t.options),
            p = JSON.stringify(t.series),
            v = JSON.stringify(v),
            b = JSON.stringify(r);
          (h === v && p === b && a === t.height && c === t.width) ||
            (p !== b && h === v && a === t.height && c === t.width
              ? this.chart.updateSeries(r)
              : this.chart.updateOptions(this.getConfig()));
        },
      },
      {
        key: "componentWillUnmount",
        value: function () {
          this.chart &&
            typeof this.chart.destroy == "function" &&
            this.chart.destroy();
        },
      },
    ]),
    e
  );
})();
((Gk = Vk.default = Q0).propTypes = {
  type: pn.default.string.isRequired,
  width: pn.default.oneOfType([pn.default.string, pn.default.number]),
  height: pn.default.oneOfType([pn.default.string, pn.default.number]),
  series: pn.default.array.isRequired,
  options: pn.default.object.isRequired,
}),
  (Q0.defaultProps = { type: "line", width: "100%", height: "auto" });
const E4 = ({ chartType: e, xAxisCategories: t, xAxisData: r }) => {
    const a = {
      options: { chart: { id: e }, xaxis: { categories: t } },
      series: [{ type: e, name: "series-1", data: r }],
    };
    return Oe.jsx("div", {
      className: "app",
      children: Oe.jsx("div", {
        className: "row",
        children: Oe.jsx("div", {
          className: "mixed-chart",
          children: Oe.jsx(
            Gk,
            { options: a.options, series: a.series, width: "500" },
            e,
          ),
        }),
      }),
    });
  },
  R4 = () => {
    const a = ["area", "bar", "line"],
      [c, h] = j.useState(a[0]),
      [p, v] = j.useState(2023),
      [b, P] = j.useState(2024),
      k = ["a", "b", "c"],
      R = [1, 2, 6],
      L = (O) => {
        h(O);
      },
      z = (O) => {
        (O = parseInt(O)), O >= 2023 && O !== p && v(O);
      },
      M = (O) => {
        (O = parseInt(O)), O >= 2023 && O !== b && P(O);
      },
      F = Array.from({ length: 2030 - 2023 + 1 }, (O, X) =>
        (2023 + X).toString(),
      ),
      G = ({ options: O, search: X }) => {
        const N = X.toLowerCase().trim().split(" ");
        return O.filter((B) => {
          const U = B.label.toLowerCase().trim().split(" ");
          return N.every((Q) => U.some((ee) => ee.includes(Q)));
        });
      },
      $ = (O, X) => {
        const N = Array(X - O + 1)
          .fill(O)
          .map((B, U) => B + U);
        console.log(N);
      };
    return (
      j.useEffect(() => {
        $(p, b);
      }, [p, b]),
      Oe.jsxs(as, {
        children: [
          Oe.jsx(ka, {
            data: a,
            value: c,
            onChange: (O) => L(O),
            placeholder: "Select a chart type",
            style: { marginBottom: "25px" },
          }),
          Oe.jsxs(as.Section, {
            inheritPadding: !0,
            children: [
              Oe.jsxs(Oi, {
                style: { display: "flex", marginBottom: "25px" },
                children: [
                  Oe.jsx(ka, {
                    label: "Første år",
                    placeholder: "Velg år",
                    defaultValue: (2023).toString(),
                    data: F,
                    filter: G,
                    searchable: !0,
                    onChange: (O) => z(O),
                  }),
                  Oe.jsx(ka, {
                    label: "Siste år",
                    placeholder: "Velg år",
                    defaultValue: (2024).toString(),
                    data: F,
                    filter: G,
                    searchable: !0,
                    onChange: (O) => M(O),
                  }),
                ],
              }),
              Oe.jsx(E4, { chartType: c, xAxisCategories: k, xAxisData: R }),
              Oe.jsx(em, { pb: "sm" }),
              Oe.jsxs(Oi, {
                justify: "space-between",
                children: [
                  Oe.jsxs(Oi, {
                    children: [
                      Oe.jsx(Ti, {
                        c: "red",
                        fw: "bold",
                        fs: "italic",
                        size: "xs",
                        children: "New",
                      }),
                      Oe.jsx(Ti, { size: "xs", children: "Publisert: DATO" }),
                      Oe.jsxs(Ti, {
                        size: "xs",
                        children: [
                          "Hentet fra:",
                          " ",
                          Oe.jsxs($g, {
                            href: "google.no",
                            target: "_blank",
                            children: [" ", "// URL"],
                          }),
                        ],
                      }),
                    ],
                  }),
                  Oe.jsxs(Oi, {
                    gap: 4,
                    children: [
                      Oe.jsx(Ii, {
                        label: "Copy",
                        children: Oe.jsx(Oa, {
                          variant: "transparent",
                          children: Oe.jsx(h4, {}),
                        }),
                      }),
                      Oe.jsx(Ii, {
                        label: "Save",
                        children: Oe.jsx(Oa, {
                          variant: "transparent",
                          children: Oe.jsx(d4, {}),
                        }),
                      }),
                      Oe.jsx(Ii, {
                        label: "Export",
                        children: Oe.jsx(Oa, {
                          variant: "transparent",
                          children: Oe.jsx(f4, {}),
                        }),
                      }),
                    ],
                  }),
                ],
              }),
            ],
          }),
        ],
      })
    );
  },
  L4 = () =>
    Oe.jsxs(Oe.Fragment, {
      children: [Oe.jsx("p", { children: "Graphs" }), Oe.jsx(R4, {})],
    }),
  T4 = {
    colors: {
      blue: [
        "#e5e9f3",
        "#cbd3e6",
        "#b1beda",
        "#99a9cd",
        "#8094c0",
        "#697fb3",
        "#526ba6",
        "#3d5698",
        "#28428b",
        "#152c7d",
      ],
      green: [
        "#e6fefc",
        "#d6f9f6",
        "#adf1ec",
        "#81eae1",
        "#5fe3d9",
        "#4ae0d3",
        "#3dded1",
        "#2dc4b9",
        "#1bafa4",
        "#00988e",
      ],
      teal: [
        "#ecf9f8",
        "#c5edea",
        "#9ee1dc",
        "#77d5ce",
        "#84d9d3",
        "#36afa7",
        "#2a8882",
        "#1e615d",
        "#123a38",
        "#061313",
      ],
    },
    primaryColor: "blue",
    primaryShade: 9,
    fontFamily: "Plus Jakarta Sans Variable",
    headings: {
      sizes: { h1: { fontWeight: "500" }, h2: { fontWeight: "500" } },
    },
    components: {
      Select: ka.extend({
        defaultProps: { size: "xs" },
        styles: {
          input: {
            borderRadius: "var(--mantine-radius-lg)",
            boxShadow: "var(--mantine-shadow-md)",
            border: "none",
            color: "var(--mantine-color-blue-9)",
          },
          option: { color: "var(--mantine-color-blue-9)" },
          dropdown: {
            borderRadius: "var(--mantine-radius-lg)",
            boxShadow: "var(--mantine-shadow-md)",
            border: "none",
          },
        },
      }),
      Paper: ps.extend({
        defaultProps: { radius: "lg", shadow: "md", withBorder: !0 },
      }),
      Switch: Id.extend({ styles: { labelWrapper: { flexGrow: 1 } } }),
      Modal: un.extend({
        defaultProps: { size: "xl", centered: !0 },
        styles: {
          title: {
            fontSize: "var(--mantine-font-size-xl)",
            fontWeight: "bold",
          },
        },
      }),
    },
  },
  I4 = FY([
    {
      path: "/",
      element: Oe.jsx(m4, {}),
      children: [
        { path: "", element: Oe.jsx(LY, { to: "dashboard", replace: !0 }) },
        { path: "dashboard", element: Oe.jsx(v4, {}) },
        { path: "graphs", element: Oe.jsx(L4, {}) },
      ],
    },
  ]),
  N4 = new S3(),
  M4 = () =>
    Oe.jsx(C3, {
      client: N4,
      children: Oe.jsx(DS, {
        theme: T4,
        children: Oe.jsx(VY, {
          router: I4,
          fallbackElement: Oe.jsx(Oe.Fragment, { children: "Loading..." }),
        }),
      }),
    });
Vh.createRoot(document.getElementById("root")).render(
  Oe.jsx(q.StrictMode, { children: Oe.jsx(M4, {}) }),
);
